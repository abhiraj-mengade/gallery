"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-three";
exports.ids = ["vendor-chunks/@react-three"];
exports.modules = {

/***/ "(ssr)/./node_modules/@react-three/drei/index.cjs.js":
/*!*****************************************************!*\
  !*** ./node_modules/@react-three/drei/index.cjs.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value:!0}));var e=__webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\"),t=__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),r=__webpack_require__(/*! react-dom/client */ \"(ssr)/./node_modules/next/dist/compiled/react-dom/client.js\"),n=__webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\"),a=__webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js\"),o=__webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.js\"),i=__webpack_require__(/*! react-merge-refs */ \"(ssr)/./node_modules/react-merge-refs/dist/index.js\"),s=__webpack_require__(/*! maath */ \"(ssr)/./node_modules/maath/dist/maath.cjs.js\"),l=__webpack_require__(/*! @react-spring/three */ \"(ssr)/./node_modules/@react-spring/three/dist/react-spring-three.cjs.js\"),c=__webpack_require__(/*! @use-gesture/react */ \"(ssr)/./node_modules/@use-gesture/react/dist/use-gesture-react.cjs.js\"),u=__webpack_require__(/*! zustand/middleware */ \"(ssr)/./node_modules/zustand/esm/middleware.js\"),d=__webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/index.cjs\"),m=__webpack_require__(/*! zustand/shallow */ \"(ssr)/./node_modules/zustand/esm/shallow.js\"),f=__webpack_require__(/*! troika-three-text */ \"(ssr)/./node_modules/troika-three-text/dist/troika-three-text.umd.js\"),p=__webpack_require__(/*! suspend-react */ \"(ssr)/./node_modules/suspend-react/index.cjs.js\"),h=__webpack_require__(/*! meshline */ \"(ssr)/./node_modules/meshline/dist/index.cjs\"),y=__webpack_require__(/*! lodash.pick */ \"(ssr)/./node_modules/lodash.pick/index.js\"),x=__webpack_require__(/*! lodash.omit */ \"(ssr)/./node_modules/lodash.omit/index.js\"),v=__webpack_require__(/*! camera-controls */ \"(ssr)/./node_modules/camera-controls/dist/camera-controls.js\"),g=__webpack_require__(/*! @mediapipe/tasks-vision */ \"(ssr)/./node_modules/@mediapipe/tasks-vision/vision_bundle.cjs\"),z=__webpack_require__(/*! stats.js */ \"(ssr)/./node_modules/stats.js/build/stats.min.js\"),w=__webpack_require__(/*! stats-gl */ \"(ssr)/./node_modules/stats-gl/dist/main.cjs\"),b=__webpack_require__(/*! detect-gpu */ \"(ssr)/./node_modules/detect-gpu/dist/detect-gpu.umd.js\"),E=__webpack_require__(/*! three-mesh-bvh */ \"(ssr)/./node_modules/three-mesh-bvh/build/index.umd.cjs\"),M=__webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/index.js\"),S=__webpack_require__(/*! react-composer */ \"(ssr)/./node_modules/react-composer/lib/index.js\"),C=__webpack_require__(/*! lodash.clamp */ \"(ssr)/./node_modules/lodash.clamp/index.js\");function P(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}function T(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if(\"default\"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var R=P(e),k=T(t),F=T(r),D=T(n),L=P(o),A=P(i),_=P(m),O=P(y),N=P(x),B=P(v),I=P(z),U=P(w),V=P(S),j=P(C);const W=new n.Vector3,G=new n.Vector3,H=new n.Vector3;function $(e,t,r){const n=W.setFromMatrixPosition(e.matrixWorld);n.project(t);const a=r.width/2,o=r.height/2;return[n.x*a+a,-n.y*o+o]}const q=e=>Math.abs(e)<1e-10?0:e;function X(e,t,r=\"\"){let n=\"matrix3d(\";for(let r=0;16!==r;r++)n+=q(t[r]*e.elements[r])+(15!==r?\",\":\")\");return r+n}const Y=(e=>t=>X(t,e))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),K=(e=>(e,t)=>{return X(e,[1/(r=t),1/r,1/r,1,-1/r,-1/r,-1/r,-1,1/r,1/r,1/r,1,1,1,1,1],\"translate(-50%,-50%)\");var r})();const Q=k.forwardRef((({children:e,eps:t=.001,style:r,className:o,prepend:i,center:s,fullscreen:l,portal:c,distanceFactor:u,sprite:d=!1,transform:m=!1,occlude:f,onOcclude:p,castShadow:h,receiveShadow:y,material:x,geometry:v,zIndexRange:g=[16777271,0],calculatePosition:z=$,as:w=\"div\",wrapperClass:b,pointerEvents:E=\"auto\",...M},S)=>{const{gl:C,camera:P,scene:T,size:D,raycaster:L,events:A,viewport:_}=a.useThree(),[O]=k.useState((()=>document.createElement(w))),N=k.useRef(),B=k.useRef(null),I=k.useRef(0),U=k.useRef([0,0]),V=k.useRef(null),j=k.useRef(null),X=(null==c?void 0:c.current)||A.connected||C.domElement.parentNode,Q=k.useRef(null),Z=k.useRef(!1),J=k.useMemo((()=>f&&\"blending\"!==f||Array.isArray(f)&&f.length&&function(e){return e&&\"object\"==typeof e&&\"current\"in e}(f[0])),[f]);k.useLayoutEffect((()=>{const e=C.domElement;f&&\"blending\"===f?(e.style.zIndex=`${Math.floor(g[0]/2)}`,e.style.position=\"absolute\",e.style.pointerEvents=\"none\"):(e.style.zIndex=null,e.style.position=null,e.style.pointerEvents=null)}),[f]),k.useLayoutEffect((()=>{if(B.current){const e=N.current=F.createRoot(O);if(T.updateMatrixWorld(),m)O.style.cssText=\"position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;\";else{const e=z(B.current,P,D);O.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${e[0]}px,${e[1]}px,0);transform-origin:0 0;`}return X&&(i?X.prepend(O):X.appendChild(O)),()=>{X&&X.removeChild(O),e.unmount()}}}),[X,m]),k.useLayoutEffect((()=>{b&&(O.className=b)}),[b]);const ee=k.useMemo((()=>m?{position:\"absolute\",top:0,left:0,width:D.width,height:D.height,transformStyle:\"preserve-3d\",pointerEvents:\"none\"}:{position:\"absolute\",transform:s?\"translate3d(-50%,-50%,0)\":\"none\",...l&&{top:-D.height/2,left:-D.width/2,width:D.width,height:D.height},...r}),[r,s,l,D,m]),te=k.useMemo((()=>({position:\"absolute\",pointerEvents:E})),[E]);k.useLayoutEffect((()=>{var t,n;(Z.current=!1,m)?null==(t=N.current)||t.render(k.createElement(\"div\",{ref:V,style:ee},k.createElement(\"div\",{ref:j,style:te},k.createElement(\"div\",{ref:S,className:o,style:r,children:e})))):null==(n=N.current)||n.render(k.createElement(\"div\",{ref:S,style:ee,className:o,children:e}))}));const re=k.useRef(!0);a.useFrame((e=>{if(B.current){P.updateMatrixWorld(),B.current.updateWorldMatrix(!0,!1);const e=m?U.current:z(B.current,P,D);if(m||Math.abs(I.current-P.zoom)>t||Math.abs(U.current[0]-e[0])>t||Math.abs(U.current[1]-e[1])>t){const t=function(e,t){const r=W.setFromMatrixPosition(e.matrixWorld),n=G.setFromMatrixPosition(t.matrixWorld),a=r.sub(n),o=t.getWorldDirection(H);return a.angleTo(o)>Math.PI/2}(B.current,P);let r=!1;J&&(Array.isArray(f)?r=f.map((e=>e.current)):\"blending\"!==f&&(r=[T]));const a=re.current;if(r){const e=function(e,t,r,n){const a=W.setFromMatrixPosition(e.matrixWorld),o=a.clone();o.project(t),r.setFromCamera(o,t);const i=r.intersectObjects(n,!0);if(i.length){const e=i[0].distance;return a.distanceTo(r.ray.origin)<e}return!0}(B.current,P,L,r);re.current=e&&!t}else re.current=!t;a!==re.current&&(p?p(!re.current):O.style.display=re.current?\"block\":\"none\");const o=Math.floor(g[0]/2),i=f?J?[g[0],o]:[o-1,0]:g;if(O.style.zIndex=`${function(e,t,r){if(t instanceof n.PerspectiveCamera||t instanceof n.OrthographicCamera){const n=W.setFromMatrixPosition(e.matrixWorld),a=G.setFromMatrixPosition(t.matrixWorld),o=n.distanceTo(a),i=(r[1]-r[0])/(t.far-t.near),s=r[1]-i*t.far;return Math.round(i*o+s)}}(B.current,P,i)}`,m){const[e,t]=[D.width/2,D.height/2],r=P.projectionMatrix.elements[5]*t,{isOrthographicCamera:n,top:a,left:o,bottom:i,right:s}=P,l=Y(P.matrixWorldInverse),c=n?`scale(${r})translate(${q(-(s+o)/2)}px,${q((a+i)/2)}px)`:`translateZ(${r}px)`;let m=B.current.matrixWorld;d&&(m=P.matrixWorldInverse.clone().transpose().copyPosition(m).scale(B.current.scale),m.elements[3]=m.elements[7]=m.elements[11]=0,m.elements[15]=1),O.style.width=D.width+\"px\",O.style.height=D.height+\"px\",O.style.perspective=n?\"\":`${r}px`,V.current&&j.current&&(V.current.style.transform=`${c}${l}translate(${e}px,${t}px)`,j.current.style.transform=K(m,1/((u||10)/400)))}else{const t=void 0===u?1:function(e,t){if(t instanceof n.OrthographicCamera)return t.zoom;if(t instanceof n.PerspectiveCamera){const r=W.setFromMatrixPosition(e.matrixWorld),n=G.setFromMatrixPosition(t.matrixWorld),a=t.fov*Math.PI/180,o=r.distanceTo(n);return 1/(2*Math.tan(a/2)*o)}return 1}(B.current,P)*u;O.style.transform=`translate3d(${e[0]}px,${e[1]}px,0) scale(${t})`}U.current=e,I.current=P.zoom}}if(!J&&Q.current&&!Z.current)if(m){if(V.current){const e=V.current.children[0];if(null!=e&&e.clientWidth&&null!=e&&e.clientHeight){const{isOrthographicCamera:t}=P;if(t||v)M.scale&&(Array.isArray(M.scale)?M.scale instanceof n.Vector3?Q.current.scale.copy(M.scale.clone().divideScalar(1)):Q.current.scale.set(1/M.scale[0],1/M.scale[1],1/M.scale[2]):Q.current.scale.setScalar(1/M.scale));else{const t=(u||10)/400,r=e.clientWidth*t,n=e.clientHeight*t;Q.current.scale.set(r,n,1)}Z.current=!0}}}else{const t=O.children[0];if(null!=t&&t.clientWidth&&null!=t&&t.clientHeight){const e=1/_.factor,r=t.clientWidth*e,n=t.clientHeight*e;Q.current.scale.set(r,n,1),Z.current=!0}Q.current.lookAt(e.camera.position)}}));const ne=k.useMemo((()=>({vertexShader:m?void 0:'\\n          /*\\n            This shader is from the THREE\\'s SpriteMaterial.\\n            We need to turn the backing plane into a Sprite\\n            (make it always face the camera) if \"transfrom\" \\n            is false. \\n          */\\n          #include <common>\\n\\n          void main() {\\n            vec2 center = vec2(0., 1.);\\n            float rotation = 0.0;\\n            \\n            // This is somewhat arbitrary, but it seems to work well\\n            // Need to figure out how to derive this dynamically if it even matters\\n            float size = 0.03;\\n\\n            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n            vec2 scale;\\n            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\n            bool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n            if ( isPerspective ) scale *= - mvPosition.z;\\n\\n            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\\n            vec2 rotatedPosition;\\n            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n            mvPosition.xy += rotatedPosition;\\n\\n            gl_Position = projectionMatrix * mvPosition;\\n          }\\n      ',fragmentShader:\"\\n        void main() {\\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n        }\\n      \"})),[m]);return k.createElement(\"group\",R.default({},M,{ref:B}),f&&!J&&k.createElement(\"mesh\",{castShadow:h,receiveShadow:y,ref:Q},v||k.createElement(\"planeGeometry\",null),x||k.createElement(\"shaderMaterial\",{side:n.DoubleSide,vertexShader:ne.vertexShader,fragmentShader:ne.fragmentShader})))}));let Z=0;const J=L.default((e=>(n.DefaultLoadingManager.onStart=(t,r,n)=>{e({active:!0,item:t,loaded:r,total:n,progress:(r-Z)/(n-Z)*100})},n.DefaultLoadingManager.onLoad=()=>{e({active:!1})},n.DefaultLoadingManager.onError=t=>e((e=>({errors:[...e.errors,t]}))),n.DefaultLoadingManager.onProgress=(t,r,n)=>{r===n&&(Z=n),e({active:!0,item:t,loaded:r,total:n,progress:(r-Z)/(n-Z)*100||100})},{errors:[],active:!1,progress:0,item:\"\",loaded:0,total:0}))),ee=e=>`Loading ${e.toFixed(2)}%`;const te={container:{position:\"absolute\",top:0,left:0,width:\"100%\",height:\"100%\",background:\"#171717\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",transition:\"opacity 300ms ease\",zIndex:1e3},inner:{width:100,height:3,background:\"#272727\",textAlign:\"center\"},bar:{height:3,width:\"100%\",background:\"white\",transition:\"transform 200ms\",transformOrigin:\"left center\"},data:{display:\"inline-block\",position:\"relative\",fontVariantNumeric:\"tabular-nums\",marginTop:\"0.8em\",color:\"#f0f0f0\",fontSize:\"0.6em\",fontFamily:'-apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',whiteSpace:\"nowrap\"}},re=k.createContext(null);function ne(){return k.useContext(re)}const ae=k.forwardRef((({children:e},t)=>{const r=k.useRef(null),n=ne(),{width:o,height:i}=a.useThree((e=>e.viewport));return a.useFrame((()=>{r.current.position.x=n.horizontal?-o*(n.pages-1)*n.offset:0,r.current.position.y=n.horizontal?0:i*(n.pages-1)*n.offset})),k.createElement(\"group\",{ref:A.default([t,r])},e)})),oe=k.forwardRef((({children:e,style:t,...r},n)=>{const o=ne(),i=k.useRef(null),{width:s,height:l}=a.useThree((e=>e.size)),c=k.useContext(a.context),u=k.useMemo((()=>F.createRoot(o.fixed)),[o.fixed]);return a.useFrame((()=>{o.delta>o.eps&&(i.current.style.transform=`translate3d(${o.horizontal?-s*(o.pages-1)*o.offset:0}px,${o.horizontal?0:l*(o.pages-1)*-o.offset}px,0)`)})),u.render(k.createElement(\"div\",R.default({ref:A.default([n,i]),style:{...t,position:\"absolute\",top:0,left:0,willChange:\"transform\"}},r),k.createElement(re.Provider,{value:o},k.createElement(a.context.Provider,{value:c},e)))),null})),ie=k.forwardRef((({html:e,...t},r)=>{const n=e?oe:ae;return k.createElement(n,R.default({ref:r},t))}));const se=k.createContext(null);const le=k.createContext([]);const ce=k.forwardRef((function({follow:e=!0,lockX:t=!1,lockY:r=!1,lockZ:n=!1,...o},i){const s=k.useRef();return a.useFrame((({camera:a})=>{if(!e||!s.current)return;const o=s.current.rotation.clone();a.getWorldQuaternion(s.current.quaternion),t&&(s.current.rotation.x=o.x),r&&(s.current.rotation.y=o.y),n&&(s.current.rotation.z=o.z)})),k.createElement(\"group\",R.default({ref:A.default([s,i])},o))})),ue=k.forwardRef((({children:e,depth:t=-1,...r},n)=>{const o=k.useRef(null);return a.useFrame((({camera:e})=>{o.current.quaternion.copy(e.quaternion),o.current.position.copy(e.position)})),k.createElement(\"group\",R.default({ref:A.default([n,o])},r),k.createElement(\"group\",{\"position-z\":-t},e))})),de=k.forwardRef((function({points:e,color:t=\"black\",vertexColors:r,linewidth:o,lineWidth:i,segments:s,dashed:l,...c},u){const m=a.useThree((e=>e.size)),f=k.useMemo((()=>s?new d.LineSegments2:new d.Line2),[s]),[p]=k.useState((()=>new d.LineMaterial)),h=k.useMemo((()=>{const t=s?new d.LineSegmentsGeometry:new d.LineGeometry,a=e.map((e=>{const t=Array.isArray(e);return e instanceof n.Vector3?[e.x,e.y,e.z]:e instanceof n.Vector2?[e.x,e.y,0]:t&&3===e.length?[e[0],e[1],e[2]]:t&&2===e.length?[e[0],e[1],0]:e}));if(t.setPositions(a.flat()),r){const e=r.map((e=>e instanceof n.Color?e.toArray():e));t.setColors(e.flat())}return t}),[e,s,r]);return k.useLayoutEffect((()=>{f.computeLineDistances()}),[e,f]),k.useLayoutEffect((()=>{l?p.defines.USE_DASH=\"\":delete p.defines.USE_DASH,p.needsUpdate=!0}),[l,p]),k.useEffect((()=>()=>h.dispose()),[h]),k.createElement(\"primitive\",R.default({object:f,ref:u},c),k.createElement(\"primitive\",{object:h,attach:\"geometry\"}),k.createElement(\"primitive\",R.default({object:p,attach:\"material\",color:t,vertexColors:Boolean(r),resolution:[m.width,m.height],linewidth:null!=o?o:i,dashed:l},c)))})),me=new n.Vector3,fe=k.forwardRef((function({start:e=[0,0,0],end:t=[0,0,0],mid:r,segments:a=20,...o},i){const s=k.useRef(null),[l]=k.useState((()=>new n.QuadraticBezierCurve3(void 0,void 0,void 0))),c=k.useCallback(((e,t,r,a=20)=>(e instanceof n.Vector3?l.v0.copy(e):l.v0.set(...e),t instanceof n.Vector3?l.v2.copy(t):l.v2.set(...t),r instanceof n.Vector3?l.v1.copy(r):Array.isArray(r)?l.v1.set(...r):l.v1.copy(l.v0.clone().add(l.v2.clone().sub(l.v0)).add(me.set(0,l.v0.y-l.v2.y,0))),l.getPoints(a))),[]);k.useLayoutEffect((()=>{s.current.setPoints=(e,t,r)=>{const n=c(e,t,r);s.current.geometry&&s.current.geometry.setPositions(n.map((e=>e.toArray())).flat())}}),[]);const u=k.useMemo((()=>c(e,t,r,a)),[e,t,r,a]);return k.createElement(de,R.default({ref:A.default([s,i]),points:u},o))})),pe=k.forwardRef((function({start:e,end:t,midA:r,midB:a,segments:o=20,...i},s){const l=k.useMemo((()=>{const i=e instanceof n.Vector3?e:new n.Vector3(...e),s=t instanceof n.Vector3?t:new n.Vector3(...t),l=r instanceof n.Vector3?r:new n.Vector3(...r),c=a instanceof n.Vector3?a:new n.Vector3(...a);return new n.CubicBezierCurve3(i,l,c,s).getPoints(o)}),[e,t,r,a,o]);return k.createElement(de,R.default({ref:s,points:l},i))})),he=k.forwardRef((function({points:e,closed:t=!1,curveType:r=\"centripetal\",tension:a=.5,segments:o=20,vertexColors:i,...s},l){const c=k.useMemo((()=>{const o=e.map((e=>e instanceof n.Vector3?e:new n.Vector3(...e)));return new n.CatmullRomCurve3(o,t,r,a)}),[e,t,r,a]),u=k.useMemo((()=>c.getPoints(o)),[c,o]),d=k.useMemo((()=>{if(!i||i.length<2)return;if(i.length===o+1)return i;const e=i.map((e=>e instanceof n.Color?e:new n.Color(...e)));t&&e.push(e[0].clone());const r=[e[0]],a=o/(e.length-1);for(let t=1;t<o;t++){const n=t%a/a,o=Math.floor(t/a);r.push(e[o].clone().lerp(e[o+1],n))}return r.push(e[e.length-1]),r}),[i,o]);return k.createElement(de,R.default({ref:l,points:u,vertexColors:d},s))})),ye=k.forwardRef((({url:e,distance:t=1,loop:r=!0,autoplay:o,...i},s)=>{const l=k.useRef(),c=a.useThree((({camera:e})=>e)),[u]=k.useState((()=>new n.AudioListener)),d=a.useLoader(n.AudioLoader,e);return k.useEffect((()=>{const e=l.current;e&&(e.setBuffer(d),e.setRefDistance(t),e.setLoop(r),o&&!e.isPlaying&&e.play())}),[d,c,t,r]),k.useEffect((()=>{const e=l.current;return c.add(u),()=>{c.remove(u),e&&(e.isPlaying&&e.stop(),e.source&&e.source._connected&&e.disconnect())}}),[]),k.createElement(\"positionalAudio\",R.default({ref:A.default([l,s]),args:[u]},i))})),xe=k.forwardRef((({sdfGlyphSize:e=64,anchorX:t=\"center\",anchorY:r=\"middle\",font:n,fontSize:o=1,children:i,characters:s,onSync:l,...c},u)=>{const d=a.useThree((({invalidate:e})=>e)),[m]=k.useState((()=>new f.Text)),[h,y]=k.useMemo((()=>{const e=[];let t=\"\";return k.Children.forEach(i,(r=>{\"string\"==typeof r||\"number\"==typeof r?t+=r:e.push(r)})),[e,t]}),[i]);return p.suspend((()=>new Promise((e=>f.preloadFont({font:n,characters:s},e)))),[\"troika-text\",n,s]),k.useLayoutEffect((()=>{m.sync((()=>{d(),l&&l(m)}))})),k.useEffect((()=>()=>m.dispose()),[m]),k.createElement(\"primitive\",R.default({object:m,ref:u,font:n,text:y,anchorX:t,anchorY:r,fontSize:o,sdfGlyphSize:e},c),h)}));let ve=null;async function ge(e){ve||(ve=new d.FontLoader);let t=\"string\"==typeof e?await(await fetch(e)).json():e;return ve.parse(t)}function ze(e){return p.suspend(ge,[e])}ze.preload=e=>p.preload(ge,[e]),ze.clear=e=>p.clear([e]);const we=[\"string\",\"number\"],be=k.forwardRef((({font:e,letterSpacing:r=0,lineHeight:n=1,size:o=1,height:i=.2,bevelThickness:s=.1,bevelSize:l=.01,bevelEnabled:c=!1,bevelOffset:u=0,bevelSegments:m=4,curveSegments:f=8,smooth:p,children:h,...y},x)=>{k.useMemo((()=>a.extend({RenamedTextGeometry:d.TextGeometry})),[]);const v=k.useRef(null),g=ze(e),z=t.useMemo((()=>({font:g,size:o,height:i,bevelThickness:s,bevelSize:l,bevelEnabled:c,bevelSegments:m,bevelOffset:u,curveSegments:f,letterSpacing:r,lineHeight:n})),[g,o,i,s,l,c,m,u,f,r,n]),[w,...b]=t.useMemo((()=>(e=>{let t=\"\";const r=[];return k.Children.forEach(e,(e=>{we.includes(typeof e)?t+=e+\"\":r.push(e)})),[t,...r]})(h)),[h]),E=k.useMemo((()=>[w,z]),[w,z]);return k.useLayoutEffect((()=>{p&&(v.current.geometry=d.mergeVertices(v.current.geometry,p),v.current.geometry.computeVertexNormals())}),[E,p]),k.useImperativeHandle(x,(()=>v.current),[]),k.createElement(\"mesh\",R.default({},y,{ref:v}),k.createElement(\"renamedTextGeometry\",{args:E}),b)})),Ee=k.forwardRef((({children:e,multisamping:t=8,renderIndex:r=1,disableRender:o,disableGamma:i,disableRenderPass:s,depthBuffer:l=!0,stencilBuffer:c=!1,anisotropy:u=1,encoding:m,type:f,...p},h)=>{k.useMemo((()=>a.extend({EffectComposer:d.EffectComposer,RenderPass:d.RenderPass,ShaderPass:d.ShaderPass})),[]);const y=k.useRef(),{scene:x,camera:v,gl:g,size:z,viewport:w}=a.useThree(),[b]=k.useState((()=>{const e=new n.WebGLRenderTarget(z.width,z.height,{type:f||n.HalfFloatType,format:n.RGBAFormat,depthBuffer:l,stencilBuffer:c,anisotropy:u});return f===n.UnsignedByteType&&null!=m&&(\"colorSpace\"in e?e.texture.colorSpace=m:e.texture.encoding=m),e.samples=t,e}));k.useEffect((()=>{var e,t;null==(e=y.current)||e.setSize(z.width,z.height),null==(t=y.current)||t.setPixelRatio(w.dpr)}),[g,z,w.dpr]),a.useFrame((()=>{var e;o||null==(e=y.current)||e.render()}),r);const E=[];return s||E.push(k.createElement(\"renderPass\",{key:\"renderpass\",attach:`passes-${E.length}`,args:[x,v]})),i||E.push(k.createElement(\"shaderPass\",{attach:`passes-${E.length}`,key:\"gammapass\",args:[d.GammaCorrectionShader]})),k.Children.forEach(e,(e=>{e&&E.push(k.cloneElement(e,{key:E.length,attach:`passes-${E.length}`}))})),k.createElement(\"effectComposer\",R.default({ref:A.default([h,y]),args:[g,b]},p),E)}));let Me=function(e){return e.Linear=\"linear\",e.Radial=\"radial\",e}({});function Se(e,t,r,n){const a=class extends D.ShaderMaterial{constructor(a={}){const o=Object.entries(e);super({uniforms:o.reduce(((e,[t,r])=>({...e,...D.UniformsUtils.clone({[t]:{value:r}})})),{}),vertexShader:t,fragmentShader:r}),this.key=\"\",o.forEach((([e])=>Object.defineProperty(this,e,{get:()=>this.uniforms[e].value,set:t=>this.uniforms[e].value=t}))),Object.assign(this,a),n&&n(this)}};return a.key=D.MathUtils.generateUUID(),a}const Ce=e=>e===Object(e)&&!Array.isArray(e)&&\"function\"!=typeof e;function Pe(e,r){const o=a.useThree((e=>e.gl)),i=a.useLoader(n.TextureLoader,Ce(e)?Object.values(e):e);if(t.useLayoutEffect((()=>{null==r||r(i)}),[r]),t.useEffect((()=>{if(\"initTexture\"in o){(Array.isArray(i)?i:[i]).forEach(o.initTexture)}}),[o,i]),Ce(e)){const t=Object.keys(e),r={};return t.forEach((e=>Object.assign(r,{[e]:i[t.indexOf(e)]}))),r}return i}Pe.preload=e=>a.useLoader.preload(n.TextureLoader,e),Pe.clear=e=>a.useLoader.clear(n.TextureLoader,e);const Te=parseInt(n.REVISION.replace(/\\D+/g,\"\")),Re=Se({color:new D.Color(\"white\"),scale:[1,1],imageBounds:[1,1],map:null,zoom:1,grayscale:0,opacity:1},\"\\n  varying vec2 vUv;\\n  void main() {\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\\n    vUv = uv;\\n  }\\n\",`\\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\\n  varying vec2 vUv;\\n  uniform vec2 scale;\\n  uniform vec2 imageBounds;\\n  uniform vec3 color;\\n  uniform sampler2D map;\\n  uniform float zoom;\\n  uniform float grayscale;\\n  uniform float opacity;\\n  const vec3 luma = vec3(.299, 0.587, 0.114);\\n  vec4 toGrayscale(vec4 color, float intensity) {\\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\\n  }\\n  vec2 aspect(vec2 size) {\\n    return size / min(size.x, size.y);\\n  }\\n  void main() {\\n    vec2 s = aspect(scale);\\n    vec2 i = aspect(imageBounds);\\n    float rs = s.x / s.y;\\n    float ri = i.x / i.y;\\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\\n    vec2 uv = vUv * s / new + offset;\\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\\n    \\n    #include <tonemapping_fragment>\\n    #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n  }\\n`),ke=k.forwardRef((({children:e,color:t,segments:r=1,scale:n=1,zoom:o=1,grayscale:i=0,opacity:s=1,texture:l,toneMapped:c,transparent:u,...d},m)=>{a.extend({ImageMaterial:Re});const f=Array.isArray(n)?[n[0],n[1]]:[n,n],p=[l.image.width,l.image.height];return k.createElement(\"mesh\",R.default({ref:m,scale:Array.isArray(n)?[...n,1]:n},d),k.createElement(\"planeGeometry\",{args:[1,1,r,r]}),k.createElement(\"imageMaterial\",{color:t,map:l,zoom:o,grayscale:i,opacity:s,scale:f,imageBounds:p,toneMapped:c,transparent:u}),e)})),Fe=k.forwardRef((({url:e,...t},r)=>{const n=Pe(e);return k.createElement(ke,R.default({},t,{texture:n,ref:r}))})),De=k.forwardRef((({url:e,...t},r)=>k.createElement(ke,R.default({},t,{ref:r})))),Le=k.forwardRef(((e,t)=>{if(e.url)return k.createElement(Fe,R.default({},e,{ref:t}));if(e.texture)return k.createElement(De,R.default({},e,{ref:t}));throw new Error(\"<Image /> requires a url or texture\")})),Ae=k.forwardRef((({userData:e,children:t,geometry:r,threshold:n=15,color:a=\"black\",...o},i)=>{const s=k.useRef(null);return k.useLayoutEffect((()=>{const e=s.current.parent;if(e){const t=r||e.geometry;t===s.current.userData.currentGeom&&n===s.current.userData.currentThreshold||(s.current.userData.currentGeom=t,s.current.userData.currentThreshold=n,s.current.geometry=new D.EdgesGeometry(t,n))}})),k.useImperativeHandle(i,(()=>s.current)),k.createElement(\"lineSegments\",R.default({ref:s,raycast:()=>null},o),t||k.createElement(\"lineBasicMaterial\",{color:a}))})),_e=Se({screenspace:!1,color:new D.Color(\"black\"),opacity:1,thickness:.05,size:new D.Vector2},\"#include <common>\\n   #include <morphtarget_pars_vertex>\\n   #include <skinning_pars_vertex>\\n   uniform float thickness;\\n   uniform float screenspace;\\n   uniform vec2 size;\\n   void main() {\\n     #if defined (USE_SKINNING)\\n\\t     #include <beginnormal_vertex>\\n       #include <morphnormal_vertex>\\n       #include <skinbase_vertex>\\n       #include <skinnormal_vertex>\\n       #include <defaultnormal_vertex>\\n     #endif\\n     #include <begin_vertex>\\n\\t   #include <morphtarget_vertex>\\n\\t   #include <skinning_vertex>\\n     #include <project_vertex>\\n     vec4 tNormal = vec4(normal, 0.0);\\n     vec4 tPosition = vec4(transformed, 1.0);\\n     #ifdef USE_INSTANCING\\n       tNormal = instanceMatrix * tNormal;\\n       tPosition = instanceMatrix * tPosition;\\n     #endif\\n     if (screenspace == 0.0) {\\n       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;\\n       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); \\n     } else {\\n       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;\\n       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;\\n       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;\\n       clipPosition.xy += offset;\\n       gl_Position = clipPosition;\\n     }\\n   }\",`uniform vec3 color;\\n   uniform float opacity;\\n   void main(){\\n     gl_FragColor = vec4(color, opacity);\\n     #include <tonemapping_fragment>\\n     #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n   }`);const Oe={width:.2,length:1,decay:1,local:!1,stride:0,interval:1},Ne=(e,t=1)=>(e.set(e.subarray(t)),e.fill(-1/0,-t),e);function Be(e,t){const{length:r,local:o,decay:i,interval:s,stride:l}={...Oe,...t},c=k.useRef(),[u]=k.useState((()=>new n.Vector3));k.useLayoutEffect((()=>{e&&(c.current=Float32Array.from({length:10*r*3},((t,r)=>e.position.getComponent(r%3))))}),[r,e]);const d=k.useRef(new n.Vector3),m=k.useRef(0);return a.useFrame((()=>{if(e&&c.current){if(0===m.current){let t;o?t=e.position:(e.getWorldPosition(u),t=u);const r=1*i;for(let e=0;e<r;e++)t.distanceTo(d.current)<l||(Ne(c.current,3),c.current.set(t.toArray(),c.current.length-3));d.current.copy(t)}m.current++,m.current=m.current%s}})),c}const Ie=k.forwardRef(((e,t)=>{const{children:r}=e,{width:o,length:i,decay:s,local:l,stride:c,interval:u}={...Oe,...e},{color:d=\"hotpink\",attenuation:m,target:f}=e,p=a.useThree((e=>e.size)),y=a.useThree((e=>e.scene)),x=k.useRef(null),[v,g]=k.useState(null),z=Be(v,{length:i,decay:s,local:l,stride:c,interval:u});k.useEffect((()=>{const e=(null==f?void 0:f.current)||x.current.children.find((e=>e instanceof n.Object3D));e&&g(e)}),[z,f]);const w=k.useMemo((()=>new h.MeshLineGeometry),[]),b=k.useMemo((()=>{var e;const t=new h.MeshLineMaterial({lineWidth:.1*o,color:d,sizeAttenuation:1,resolution:new n.Vector2(p.width,p.height)});let a;if(r)if(Array.isArray(r))a=r.find((e=>{const t=e;return\"string\"==typeof t.type&&\"meshLineMaterial\"===t.type}));else{const e=r;\"string\"==typeof e.type&&\"meshLineMaterial\"===e.type&&(a=e)}return\"object\"==typeof(null==(e=a)?void 0:e.props)&&t.setValues(a.props),t}),[o,d,p,r]);return k.useEffect((()=>{b.uniforms.resolution.value.set(p.width,p.height)}),[p]),a.useFrame((()=>{z.current&&w.setPoints(z.current,m)})),k.createElement(\"group\",null,a.createPortal(k.createElement(\"mesh\",{ref:t,geometry:w,material:b}),y),k.createElement(\"group\",{ref:x},r))}));function Ue(e,t=16,r,a,o){const[i,s]=k.useState((()=>{const e=Array.from({length:t},(()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])).flat();return new n.InstancedBufferAttribute(Float32Array.from(e),16)}));return k.useLayoutEffect((()=>{if(void 0===e.current)return;const l=new d.MeshSurfaceSampler(e.current);a&&l.setWeightAttribute(a),l.build();const c=new n.Vector3,u=new n.Vector3,m=new n.Color,f=new n.Object3D;e.current.updateMatrixWorld(!0);for(let n=0;n<t;n++)l.sample(c,u,m),\"function\"==typeof r?r({dummy:f,sampledMesh:e.current,position:c,normal:u,color:m},n):f.position.copy(c),f.updateMatrix(),null!=o&&o.current&&o.current.setMatrixAt(n,f.matrix),f.matrix.toArray(i.array,16*n);null!=o&&o.current&&(o.current.instanceMatrix.needsUpdate=!0),i.needsUpdate=!0,s(i.clone())}),[e,o,a,t,r]),i}const Ve=k.forwardRef((({isChild:e=!1,object:t,children:r,deep:n,castShadow:a,receiveShadow:o,inject:i,keys:s,...l},c)=>{var u;const m={keys:s,deep:n,inject:i,castShadow:a,receiveShadow:o};if(t=k.useMemo((()=>{if(!1===e&&!Array.isArray(t)){let e=!1;if(t.traverse((t=>{t.isSkinnedMesh&&(e=!0)})),e)return d.SkeletonUtils.clone(t)}return t}),[t,e]),Array.isArray(t))return k.createElement(\"group\",R.default({},l,{ref:c}),t.map((e=>k.createElement(Ve,R.default({key:e.uuid,object:e},m)))),r);const{children:f,...p}=function(e,{keys:t=[\"near\",\"far\",\"color\",\"distance\",\"decay\",\"penumbra\",\"angle\",\"intensity\",\"skeleton\",\"visible\",\"castShadow\",\"receiveShadow\",\"morphTargetDictionary\",\"morphTargetInfluences\",\"name\",\"geometry\",\"material\",\"position\",\"rotation\",\"scale\",\"up\",\"userData\",\"bindMode\",\"bindMatrix\",\"bindMatrixInverse\",\"skeleton\"],deep:r,inject:n,castShadow:a,receiveShadow:o}){let i=O.default(e,t);return r&&(i.geometry&&\"materialsOnly\"!==r&&(i.geometry=i.geometry.clone()),i.material&&\"geometriesOnly\"!==r&&(i.material=i.material.clone())),n&&(i=\"function\"==typeof n?{...i,children:n(e)}:k.isValidElement(n)?{...i,children:n}:{...i,...n}),e instanceof D.Mesh&&(a&&(i.castShadow=!0),o&&(i.receiveShadow=!0)),i}(t,m),h=t.type[0].toLowerCase()+t.type.slice(1);return k.createElement(h,R.default({},p,l,{ref:c}),(null==(u=t)?void 0:u.children).map((e=>\"Bone\"===e.type?k.createElement(\"primitive\",R.default({key:e.uuid,object:e},m)):k.createElement(Ve,R.default({key:e.uuid,object:e},m,{isChild:!0})))),r,f)})),je=k.createContext(null),We=k.forwardRef((({resolution:e=28,maxPolyCount:t=1e4,enableUvs:r=!1,enableColors:n=!1,children:o,...i},s)=>{const l=k.useRef(null),c=k.useMemo((()=>new d.MarchingCubes(e,null,r,n,t)),[e,t,r,n]),u=k.useMemo((()=>({getParent:()=>l})),[]);return a.useFrame((()=>{c.update(),c.reset()}),-1),k.createElement(k.Fragment,null,k.createElement(\"primitive\",R.default({object:c,ref:A.default([l,s])},i),k.createElement(je.Provider,{value:u},o)))})),Ge=k.forwardRef((({strength:e=.5,subtract:t=12,color:r,...n},o)=>{const{getParent:i}=k.useContext(je),s=k.useMemo((()=>i()),[i]),l=k.useRef(),c=new D.Vector3;return a.useFrame((n=>{s.current&&l.current&&(l.current.getWorldPosition(c),s.current.addBall(.5+.5*c.x,.5+.5*c.y,.5+.5*c.z,e,t,r))})),k.createElement(\"group\",R.default({ref:A.default([o,l])},n))})),He=k.forwardRef((({planeType:e=\"x\",strength:t=.5,subtract:r=12,...n},o)=>{const{getParent:i}=k.useContext(je),s=k.useMemo((()=>i()),[i]),l=k.useRef(),c=k.useMemo((()=>\"x\"===e?\"addPlaneX\":\"y\"===e?\"addPlaneY\":\"addPlaneZ\"),[e]);return a.useFrame((()=>{s.current&&l.current&&s.current[c](t,r)})),k.createElement(\"group\",R.default({ref:A.default([o,l])},n))}));function $e(e=[0,0,0]){return function(e){return Array.isArray(e)}(e)?e:e instanceof D.Vector3||e instanceof D.Euler?[e.x,e.y,e.z]:[e,e,e]}const qe=k.forwardRef((function({debug:e,depthTest:t=!1,polygonOffsetFactor:r=-10,map:n,mesh:o,children:i,position:s,rotation:l,scale:c,...u},m){const f=k.useRef(null);k.useImperativeHandle(m,(()=>f.current));const p=k.useRef(null);return k.useLayoutEffect((()=>{const e=(null==o?void 0:o.current)||f.current.parent,t=f.current;if(!(e instanceof D.Mesh))throw new Error('Decal must have a Mesh as parent or specify its \"mesh\" prop');const r={position:new D.Vector3,rotation:new D.Euler,scale:new D.Vector3(1,1,1)};if(e){a.applyProps(r,{position:s,scale:c});const n=e.matrixWorld.clone();if(e.matrixWorld.identity(),l&&\"number\"!=typeof l)a.applyProps(r,{rotation:l});else{const t=new D.Object3D;t.position.copy(r.position),t.lookAt(e.position),\"number\"==typeof l&&t.rotateZ(l),a.applyProps(r,{rotation:t.rotation})}return t.geometry=new d.DecalGeometry(e,r.position,r.rotation,r.scale),p.current&&(a.applyProps(p.current,r),p.current.traverse((e=>e.raycast=()=>null))),e.matrixWorld=n,()=>{t.geometry.dispose()}}}),[o,...$e(s),...$e(c),...$e(l)]),k.createElement(\"mesh\",R.default({ref:f,\"material-transparent\":!0,\"material-polygonOffset\":!0,\"material-polygonOffsetFactor\":r,\"material-depthTest\":t,\"material-map\":n},u),i,e&&k.createElement(\"mesh\",{ref:p},k.createElement(\"boxGeometry\",null),k.createElement(\"meshNormalMaterial\",{wireframe:!0}),k.createElement(\"axesHelper\",null)))})),Xe=t.forwardRef((function({src:e,skipFill:r,skipStrokes:o,fillMaterial:i,strokeMaterial:s,fillMeshProps:l,strokeMeshProps:c,...u},m){const f=a.useLoader(d.SVGLoader,e.startsWith(\"<svg\")?`data:image/svg+xml;utf8,${e}`:e),p=t.useMemo((()=>o?[]:f.paths.map((e=>{var t;return void 0===(null==(t=e.userData)?void 0:t.style.stroke)||\"none\"===e.userData.style.stroke?null:e.subPaths.map((t=>d.SVGLoader.pointsToStroke(t.getPoints(),e.userData.style)))}))),[f,o]);return t.useEffect((()=>()=>p.forEach((e=>e&&e.map((e=>e.dispose()))))),[p]),k.createElement(\"object3D\",R.default({ref:m},u),k.createElement(\"object3D\",{scale:[1,-1,1]},f.paths.map(((e,a)=>{var u,m;return k.createElement(t.Fragment,{key:a},!r&&void 0!==(null==(u=e.userData)?void 0:u.style.fill)&&\"none\"!==e.userData.style.fill&&d.SVGLoader.createShapes(e).map(((t,r)=>k.createElement(\"mesh\",R.default({key:r},l),k.createElement(\"shapeGeometry\",{args:[t]}),k.createElement(\"meshBasicMaterial\",R.default({color:e.userData.style.fill,opacity:e.userData.style.fillOpacity,transparent:!0,side:n.DoubleSide,depthWrite:!1},i))))),!o&&void 0!==(null==(m=e.userData)?void 0:m.style.stroke)&&\"none\"!==e.userData.style.stroke&&e.subPaths.map(((t,r)=>k.createElement(\"mesh\",R.default({key:r,geometry:p[a][r]},c),k.createElement(\"meshBasicMaterial\",R.default({color:e.userData.style.stroke,opacity:e.userData.style.strokeOpacity,transparent:!0,side:n.DoubleSide,depthWrite:!1},s))))))}))))}));let Ye=null,Ke=\"https://www.gstatic.com/draco/versioned/decoders/1.5.5/\";function Qe(e,t,r){return n=>{r&&r(n),e&&(Ye||(Ye=new d.DRACOLoader),Ye.setDecoderPath(\"string\"==typeof e?e:Ke),n.setDRACOLoader(Ye)),t&&n.setMeshoptDecoder(\"function\"==typeof d.MeshoptDecoder?d.MeshoptDecoder():d.MeshoptDecoder)}}function Ze(e,t=!0,r=!0,n){return a.useLoader(d.GLTFLoader,e,Qe(t,r,n))}Ze.preload=(e,t=!0,r=!0,n)=>a.useLoader.preload(d.GLTFLoader,e,Qe(t,r,n)),Ze.clear=e=>a.useLoader.clear(d.GLTFLoader,e),Ze.setDecoderPath=e=>{Ke=e};const Je=k.forwardRef((({src:e,...t},r)=>{const{scene:n}=Ze(e);return k.createElement(Ve,R.default({ref:r},t,{object:n}))}));function et(e,t,r){const n=a.useThree((e=>e.size)),o=a.useThree((e=>e.viewport)),i=\"number\"==typeof e?e:n.width*o.dpr,s=\"number\"==typeof t?t:n.height*o.dpr,l=(\"number\"==typeof e?r:e)||{},{samples:c=0,depth:u,...d}=l,m=k.useMemo((()=>{const e=new D.WebGLRenderTarget(i,s,{minFilter:D.LinearFilter,magFilter:D.LinearFilter,type:D.HalfFloatType,...d});return u&&(e.depthTexture=new D.DepthTexture(i,s,D.FloatType)),e.samples=c,e}),[]);return k.useLayoutEffect((()=>{m.setSize(i,s),c&&(m.samples=c)}),[c,m,i,s]),k.useEffect((()=>()=>m.dispose()),[]),m}const tt=k.forwardRef((({envMap:e,resolution:t=256,frames:r=1/0,children:n,makeDefault:o,...i},s)=>{const l=a.useThree((({set:e})=>e)),c=a.useThree((({camera:e})=>e)),u=a.useThree((({size:e})=>e)),d=k.useRef(null),m=k.useRef(null),f=et(t);k.useLayoutEffect((()=>{i.manual||d.current.updateProjectionMatrix()}),[u,i]),k.useLayoutEffect((()=>{d.current.updateProjectionMatrix()})),k.useLayoutEffect((()=>{if(o){const e=c;return l((()=>({camera:d.current}))),()=>l((()=>({camera:e})))}}),[d,o,l]);let p=0,h=null;const y=\"function\"==typeof n;return a.useFrame((t=>{y&&(r===1/0||p<r)&&(m.current.visible=!1,t.gl.setRenderTarget(f),h=t.scene.background,e&&(t.scene.background=e),t.gl.render(t.scene,d.current),t.scene.background=h,t.gl.setRenderTarget(null),m.current.visible=!0,p++)})),k.createElement(k.Fragment,null,k.createElement(\"orthographicCamera\",R.default({left:u.width/-2,right:u.width/2,top:u.height/2,bottom:u.height/-2,ref:A.default([d,s])},i),!y&&n),k.createElement(\"group\",{ref:m},y&&n(f.texture)))})),rt=k.forwardRef((({envMap:e,resolution:t=256,frames:r=1/0,makeDefault:n,children:o,...i},s)=>{const l=a.useThree((({set:e})=>e)),c=a.useThree((({camera:e})=>e)),u=a.useThree((({size:e})=>e)),d=k.useRef(null),m=k.useRef(null),f=et(t);k.useLayoutEffect((()=>{i.manual||(d.current.aspect=u.width/u.height)}),[u,i]),k.useLayoutEffect((()=>{d.current.updateProjectionMatrix()}));let p=0,h=null;const y=\"function\"==typeof o;return a.useFrame((t=>{y&&(r===1/0||p<r)&&(m.current.visible=!1,t.gl.setRenderTarget(f),h=t.scene.background,e&&(t.scene.background=e),t.gl.render(t.scene,d.current),t.scene.background=h,t.gl.setRenderTarget(null),m.current.visible=!0,p++)})),k.useLayoutEffect((()=>{if(n){const e=c;return l((()=>({camera:d.current}))),()=>l((()=>({camera:e})))}}),[d,n,l]),k.createElement(k.Fragment,null,k.createElement(\"perspectiveCamera\",R.default({ref:A.default([d,s])},i),!y&&o),k.createElement(\"group\",{ref:m},y&&o(f.texture)))}));function nt({resolution:e=256,near:r=.1,far:o=1e3,envMap:i,fog:s}={}){const l=a.useThree((({gl:e})=>e)),c=a.useThree((({scene:e})=>e)),u=t.useMemo((()=>{const t=new n.WebGLCubeRenderTarget(e);return t.texture.type=n.HalfFloatType,t}),[e]);t.useEffect((()=>()=>{u.dispose()}),[u]);const d=t.useMemo((()=>new D.CubeCamera(r,o,u)),[r,o,u]);let m,f;const p=k.useCallback((()=>{m=c.fog,f=c.background,c.background=i||f,c.fog=s||m,d.update(l,c),c.fog=m,c.background=f}),[l,c,d]);return{fbo:u,camera:d,update:p}}const at=k.forwardRef(((e,t)=>{const{camera:r,onChange:n,makeDefault:o,...i}=e,s=a.useThree((e=>e.camera)),l=a.useThree((e=>e.invalidate)),c=a.useThree((e=>e.get)),u=a.useThree((e=>e.set)),m=r||s,f=k.useMemo((()=>new d.DeviceOrientationControls(m)),[m]);return k.useEffect((()=>{const e=e=>{l(),n&&n(e)};return null==f||null==f.addEventListener||f.addEventListener(\"change\",e),()=>null==f||null==f.removeEventListener?void 0:f.removeEventListener(\"change\",e)}),[n,f,l]),a.useFrame((()=>null==f?void 0:f.update()),-1),k.useEffect((()=>{const e=f;return null==e||e.connect(),()=>null==e?void 0:e.dispose()}),[f]),k.useEffect((()=>{if(o){const e=c().controls;return u({controls:f}),()=>u({controls:e})}}),[o,f]),f?k.createElement(\"primitive\",R.default({ref:t,object:f},i)):null})),ot=k.forwardRef((({domElement:e,...t},r)=>{const{onChange:n,makeDefault:o,...i}=t,s=a.useThree((e=>e.invalidate)),l=a.useThree((e=>e.camera)),c=a.useThree((e=>e.gl)),u=a.useThree((e=>e.events)),m=a.useThree((e=>e.get)),f=a.useThree((e=>e.set)),p=e||u.connected||c.domElement,h=k.useMemo((()=>new d.FlyControls(l)),[l]);return k.useEffect((()=>(h.connect(p),()=>{h.dispose()})),[p,h,s]),k.useEffect((()=>{const e=e=>{s(),n&&n(e)};return null==h.addEventListener||h.addEventListener(\"change\",e),()=>null==h.removeEventListener?void 0:h.removeEventListener(\"change\",e)}),[n,s]),k.useEffect((()=>{if(o){const e=m().controls;return f({controls:h}),()=>f({controls:e})}}),[o,h]),a.useFrame(((e,t)=>h.update(t))),k.createElement(\"primitive\",R.default({ref:r,object:h,args:[l,p]},i))})),it=k.forwardRef(((e={enableDamping:!0},t)=>{const{domElement:r,camera:n,makeDefault:o,onChange:i,onStart:s,onEnd:l,...c}=e,u=a.useThree((e=>e.invalidate)),m=a.useThree((e=>e.camera)),f=a.useThree((e=>e.gl)),p=a.useThree((e=>e.events)),h=a.useThree((e=>e.set)),y=a.useThree((e=>e.get)),x=r||p.connected||f.domElement,v=n||m,g=k.useMemo((()=>new d.MapControls(v)),[v]);return k.useEffect((()=>{g.connect(x);const e=e=>{u(),i&&i(e)};return g.addEventListener(\"change\",e),s&&g.addEventListener(\"start\",s),l&&g.addEventListener(\"end\",l),()=>{g.dispose(),g.removeEventListener(\"change\",e),s&&g.removeEventListener(\"start\",s),l&&g.removeEventListener(\"end\",l)}}),[i,s,l,g,u,x]),k.useEffect((()=>{if(o){const e=y().controls;return h({controls:g}),()=>h({controls:e})}}),[o,g]),a.useFrame((()=>g.update()),-1),k.createElement(\"primitive\",R.default({ref:t,object:g,enableDamping:!0},c))})),st=k.forwardRef((({makeDefault:e,camera:t,regress:r,domElement:n,enableDamping:o=!0,keyEvents:i=!1,onChange:s,onStart:l,onEnd:c,...u},m)=>{const f=a.useThree((e=>e.invalidate)),p=a.useThree((e=>e.camera)),h=a.useThree((e=>e.gl)),y=a.useThree((e=>e.events)),x=a.useThree((e=>e.setEvents)),v=a.useThree((e=>e.set)),g=a.useThree((e=>e.get)),z=a.useThree((e=>e.performance)),w=t||p,b=n||y.connected||h.domElement,E=k.useMemo((()=>new d.OrbitControls(w)),[w]);return a.useFrame((()=>{E.enabled&&E.update()}),-1),k.useEffect((()=>(i&&E.connect(!0===i?b:i),E.connect(b),()=>{E.dispose()})),[i,b,r,E,f]),k.useEffect((()=>{const e=e=>{f(),r&&z.regress(),s&&s(e)},t=e=>{l&&l(e)},n=e=>{c&&c(e)};return E.addEventListener(\"change\",e),E.addEventListener(\"start\",t),E.addEventListener(\"end\",n),()=>{E.removeEventListener(\"start\",t),E.removeEventListener(\"end\",n),E.removeEventListener(\"change\",e)}}),[s,l,c,E,f,x]),k.useEffect((()=>{if(e){const e=g().controls;return v({controls:E}),()=>v({controls:e})}}),[e,E]),k.createElement(\"primitive\",R.default({ref:m,object:E,enableDamping:o},u))})),lt=k.forwardRef((({makeDefault:e,camera:t,domElement:r,regress:n,onChange:o,onStart:i,onEnd:s,...l},c)=>{const{invalidate:u,camera:m,gl:f,events:p,set:h,get:y,performance:x,viewport:v}=a.useThree(),g=t||m,z=r||p.connected||f.domElement,w=k.useMemo((()=>new d.TrackballControls(g)),[g]);return a.useFrame((()=>{w.enabled&&w.update()}),-1),k.useEffect((()=>(w.connect(z),()=>{w.dispose()})),[z,n,w,u]),k.useEffect((()=>{const e=e=>{u(),n&&x.regress(),o&&o(e)};return w.addEventListener(\"change\",e),i&&w.addEventListener(\"start\",i),s&&w.addEventListener(\"end\",s),()=>{i&&w.removeEventListener(\"start\",i),s&&w.removeEventListener(\"end\",s),w.removeEventListener(\"change\",e)}}),[o,i,s,w,u]),k.useEffect((()=>{w.handleResize()}),[v]),k.useEffect((()=>{if(e){const e=y().controls;return h({controls:w}),()=>h({controls:e})}}),[e,w]),k.createElement(\"primitive\",R.default({ref:c,object:w},l))})),ct=t.forwardRef((({camera:e,makeDefault:r,regress:n,domElement:o,onChange:i,onStart:s,onEnd:l,...c},u)=>{const m=a.useThree((e=>e.invalidate)),f=a.useThree((e=>e.camera)),p=a.useThree((e=>e.gl)),h=a.useThree((e=>e.events)),y=a.useThree((e=>e.set)),x=a.useThree((e=>e.get)),v=a.useThree((e=>e.performance)),g=e||f,z=o||h.connected||p.domElement,w=t.useMemo((()=>new d.ArcballControls(g)),[g]);return a.useFrame((()=>{w.enabled&&w.update()}),-1),t.useEffect((()=>(w.connect(z),()=>{w.dispose()})),[z,n,w,m]),t.useEffect((()=>{const e=e=>{m(),n&&v.regress(),i&&i(e)};return w.addEventListener(\"change\",e),s&&w.addEventListener(\"start\",s),l&&w.addEventListener(\"end\",l),()=>{w.removeEventListener(\"change\",e),s&&w.removeEventListener(\"start\",s),l&&w.removeEventListener(\"end\",l)}}),[i,s,l]),t.useEffect((()=>{if(r){const e=x().controls;return y({controls:w}),()=>y({controls:e})}}),[r,w]),k.createElement(\"primitive\",R.default({ref:u,object:w},c))})),ut=k.forwardRef((({children:e,domElement:t,onChange:r,onMouseDown:n,onMouseUp:o,onObjectChange:i,object:s,makeDefault:l,...c},u)=>{const m=[\"enabled\",\"axis\",\"mode\",\"translationSnap\",\"rotationSnap\",\"scaleSnap\",\"space\",\"size\",\"showX\",\"showY\",\"showZ\"],{camera:f,...p}=c,h=O.default(p,m),y=N.default(p,m),x=a.useThree((e=>e.controls)),v=a.useThree((e=>e.gl)),g=a.useThree((e=>e.events)),z=a.useThree((e=>e.camera)),w=a.useThree((e=>e.invalidate)),b=a.useThree((e=>e.get)),E=a.useThree((e=>e.set)),M=f||z,S=t||g.connected||v.domElement,C=k.useMemo((()=>new d.TransformControls(M,S)),[M,S]),P=k.useRef();k.useLayoutEffect((()=>(s?C.attach(s instanceof D.Object3D?s:s.current):P.current instanceof D.Object3D&&C.attach(P.current),()=>{C.detach()})),[s,e,C]),k.useEffect((()=>{if(x){const e=e=>x.enabled=!e.value;return C.addEventListener(\"dragging-changed\",e),()=>C.removeEventListener(\"dragging-changed\",e)}}),[C,x]);const T=k.useRef(),F=k.useRef(),L=k.useRef(),A=k.useRef();return k.useLayoutEffect((()=>{T.current=r}),[r]),k.useLayoutEffect((()=>{F.current=n}),[n]),k.useLayoutEffect((()=>{L.current=o}),[o]),k.useLayoutEffect((()=>{A.current=i}),[i]),k.useEffect((()=>{const e=e=>{w(),null==T.current||T.current(e)},t=e=>null==F.current?void 0:F.current(e),r=e=>null==L.current?void 0:L.current(e),n=e=>null==A.current?void 0:A.current(e);return C.addEventListener(\"change\",e),C.addEventListener(\"mouseDown\",t),C.addEventListener(\"mouseUp\",r),C.addEventListener(\"objectChange\",n),()=>{C.removeEventListener(\"change\",e),C.removeEventListener(\"mouseDown\",t),C.removeEventListener(\"mouseUp\",r),C.removeEventListener(\"objectChange\",n)}}),[w,C]),k.useEffect((()=>{if(l){const e=b().controls;return E({controls:C}),()=>E({controls:e})}}),[l,C]),C?k.createElement(k.Fragment,null,k.createElement(\"primitive\",R.default({ref:u,object:C},h)),k.createElement(\"group\",R.default({ref:P},y),e)):null})),dt=k.forwardRef((({domElement:e,selector:t,onChange:r,onLock:n,onUnlock:o,enabled:i=!0,makeDefault:s,...l},c)=>{const{camera:u,...m}=l,f=a.useThree((e=>e.setEvents)),p=a.useThree((e=>e.gl)),h=a.useThree((e=>e.camera)),y=a.useThree((e=>e.invalidate)),x=a.useThree((e=>e.events)),v=a.useThree((e=>e.get)),g=a.useThree((e=>e.set)),z=u||h,w=e||x.connected||p.domElement,b=k.useMemo((()=>new d.PointerLockControls(z)),[z]);return k.useEffect((()=>{if(i){b.connect(w);const e=v().events.compute;return f({compute(e,t){const r=t.size.width/2,n=t.size.height/2;t.pointer.set(r/t.size.width*2-1,-n/t.size.height*2+1),t.raycaster.setFromCamera(t.pointer,t.camera)}}),()=>{b.disconnect(),f({compute:e})}}}),[i,b]),k.useEffect((()=>{const e=e=>{y(),r&&r(e)};b.addEventListener(\"change\",e),n&&b.addEventListener(\"lock\",n),o&&b.addEventListener(\"unlock\",o);const a=()=>b.lock(),i=t?Array.from(document.querySelectorAll(t)):[document];return i.forEach((e=>e&&e.addEventListener(\"click\",a))),()=>{b.removeEventListener(\"change\",e),n&&b.addEventListener(\"lock\",n),o&&b.addEventListener(\"unlock\",o),i.forEach((e=>e?e.removeEventListener(\"click\",a):void 0))}}),[r,n,o,t,b,y]),k.useEffect((()=>{if(s){const e=v().controls;return g({controls:b}),()=>g({controls:e})}}),[s,b]),k.createElement(\"primitive\",R.default({ref:c,object:b},m))})),mt=k.forwardRef((({domElement:e,makeDefault:t,...r},n)=>{const o=a.useThree((e=>e.camera)),i=a.useThree((e=>e.gl)),s=a.useThree((e=>e.events)),l=a.useThree((e=>e.get)),c=a.useThree((e=>e.set)),u=e||s.connected||i.domElement,[m]=k.useState((()=>new d.FirstPersonControls(o,u)));return k.useEffect((()=>{if(t){const e=l().controls;return c({controls:m}),()=>c({controls:e})}}),[t,m]),a.useFrame(((e,t)=>{m.update(t)}),-1),m?k.createElement(\"primitive\",R.default({ref:n,object:m},r)):null})),ft=t.forwardRef(((e,r)=>{t.useMemo((()=>{const e={Box3:n.Box3,MathUtils:{clamp:n.MathUtils.clamp},Matrix4:n.Matrix4,Quaternion:n.Quaternion,Raycaster:n.Raycaster,Sphere:n.Sphere,Spherical:n.Spherical,Vector2:n.Vector2,Vector3:n.Vector3,Vector4:n.Vector4};B.default.install({THREE:e}),a.extend({CameraControlsImpl:B.default})}),[]);const{camera:o,domElement:i,makeDefault:s,onStart:l,onEnd:c,onChange:u,regress:d,...m}=e,f=a.useThree((e=>e.camera)),p=a.useThree((e=>e.gl)),h=a.useThree((e=>e.invalidate)),y=a.useThree((e=>e.events)),x=a.useThree((e=>e.setEvents)),v=a.useThree((e=>e.set)),g=a.useThree((e=>e.get)),z=a.useThree((e=>e.performance)),w=o||f,b=i||y.connected||p.domElement,E=t.useMemo((()=>new B.default(w)),[w]);return a.useFrame(((e,t)=>{E.enabled&&E.update(t)}),-1),t.useEffect((()=>(E.connect(b),()=>{E.disconnect()})),[b,E]),t.useEffect((()=>{const e=e=>{h(),d&&z.regress(),u&&u(e)},t=e=>{l&&l(e)},r=e=>{c&&c(e)};return E.addEventListener(\"update\",e),E.addEventListener(\"controlstart\",t),E.addEventListener(\"controlend\",r),E.addEventListener(\"control\",e),E.addEventListener(\"transitionstart\",e),E.addEventListener(\"wake\",e),()=>{E.removeEventListener(\"update\",e),E.removeEventListener(\"controlstart\",t),E.removeEventListener(\"controlend\",r),E.removeEventListener(\"control\",e),E.removeEventListener(\"transitionstart\",e),E.removeEventListener(\"wake\",e)}}),[E,l,c,h,x,d,u]),t.useEffect((()=>{if(s){const e=g().controls;return v({controls:E}),()=>v({controls:e})}}),[s,E]),k.createElement(\"primitive\",R.default({ref:r,object:E},m))}));function pt(e,r){const{unsuspend:n,start:o,crossOrigin:i,muted:s,loop:l,...c}={unsuspend:\"loadedmetadata\",crossOrigin:\"Anonymous\",muted:!0,loop:!0,start:!0,playsInline:!0,...r},u=a.useThree((e=>e.gl)),d=p.suspend((()=>new Promise(((t,r)=>{const a=Object.assign(document.createElement(\"video\"),{src:\"string\"==typeof e&&e||void 0,srcObject:e instanceof MediaStream&&e||void 0,crossOrigin:i,loop:l,muted:s,...c}),o=new D.VideoTexture(a);\"colorSpace\"in o?o.colorSpace=u.outputColorSpace:o.encoding=u.outputEncoding,a.addEventListener(n,(()=>t(o)))}))),[e]);return t.useEffect((()=>{o&&d.image.play()}),[d,o]),d}const ht=new D.Vector3(0,0,-1),yt=function(){const e=new D.Vector3,t=new D.Vector3,r=new D.Vector3,n=new D.Vector3,a=new D.Vector3;return function(o,i,s,l){return e.copy(o),t.copy(i),r.copy(s),n.copy(t).sub(e),a.copy(r).sub(e),l.crossVectors(a,n).normalize()}}();const xt=k.forwardRef((({points:e=zt.SAMPLE_FACELANDMARKER_RESULT.faceLandmarks[0],face:t,facialTransformationMatrix:r,faceBlendshapes:n,offset:o,offsetScalar:i=80,width:s,height:l,depth:c=1,verticalTri:u=[159,386,152],origin:d,eyes:m=!0,eyesAsOrigin:f=!1,debug:p=!1,children:h,...y},x)=>{var v;t&&(e=t.keypoints,console.warn(\"Facemesh `face` prop is deprecated: use `points` instead\"));const g=k.useRef(null),z=k.useRef(null),w=k.useRef(null),b=k.useRef(null),E=k.useRef(null),M=k.useRef(null),S=k.useRef(null),[C]=k.useState((()=>new D.Vector3)),[P]=k.useState((()=>new D.Object3D)),[T]=k.useState((()=>new D.Quaternion)),[R]=k.useState((()=>new D.Vector3)),{invalidate:F}=a.useThree();k.useEffect((()=>{var e;null==(e=E.current)||e.geometry.setIndex(zt.TRIANGULATION)}),[]);const[L]=k.useState((()=>new D.Vector3));k.useEffect((()=>{var t,a;const h=null==(t=E.current)?void 0:t.geometry;if(!h)return;var y,x;(h.setFromPoints(e),h.setDrawRange(0,zt.TRIANGULATION.length),r)?(P.matrix.fromArray(r.data),P.matrix.decompose(P.position,P.quaternion,P.scale),P.rotation.y*=-1,P.rotation.z*=-1,T.setFromEuler(P.rotation),o?(P.position.y*=-1,P.position.z*=-1,null==(y=g.current)||y.position.copy(P.position.divideScalar(i))):null==(x=g.current)||x.position.set(0,0,0)):(yt(e[u[0]],e[u[1]],e[u[2]],C),T.setFromUnitVectors(ht,C));const v=T.clone().invert();if(h.computeBoundingBox(),p&&F(),h.center(),h.applyQuaternion(v),null==(a=b.current)||a.setRotationFromQuaternion(T),m)if(n){if(M.current&&S.current&&w.current)if(f){const e=M.current._computeSphere(h),t=S.current._computeSphere(h),r=function(e,t){return e.clone().add(t).multiplyScalar(.5)}(e.center,t.center);d=r.negate(),M.current._update(h,n,e),S.current._update(h,n,t)}else M.current._update(h,n),S.current._update(h,n)}else console.warn(\"Facemesh `eyes` option only works if `faceBlendshapes` is provided: skipping.\");if(w.current){if(void 0!==d)if(\"number\"==typeof d){const e=h.getAttribute(\"position\");R.set(-e.getX(d),-e.getY(d),-e.getZ(d))}else d.isVector3&&R.copy(d);else R.setScalar(0);w.current.position.copy(R)}if(z.current){let e=1;(s||l||c)&&(h.boundingBox.getSize(L),s&&(e=s/L.x),l&&(e=l/L.y),c&&(e=c/L.z)),z.current.scale.setScalar(1!==e?e:1)}h.computeVertexNormals(),h.attributes.position.needsUpdate=!0}),[e,r,n,P,o,i,s,l,c,u,d,m,p,F,C,T,L,R]);const A=k.useMemo((()=>({outerRef:b,meshRef:E,eyeRightRef:M,eyeLeftRef:S})),[]);k.useImperativeHandle(x,(()=>A),[A]);const[_]=k.useState((()=>new D.Vector3)),O=null==(v=E.current)?void 0:v.geometry.boundingBox,N=(null==O?void 0:O.getSize(_).z)||1;return k.createElement(\"group\",y,k.createElement(\"group\",{ref:g},k.createElement(\"group\",{ref:b},k.createElement(\"group\",{ref:z},p?k.createElement(k.Fragment,null,k.createElement(\"axesHelper\",{args:[N]}),k.createElement(de,{points:[[0,0,0],[0,0,-N]],color:65535})):null,k.createElement(\"group\",{ref:w},m&&n&&k.createElement(\"group\",{name:\"eyes\"},k.createElement(gt,{side:\"left\",ref:M,debug:p}),k.createElement(gt,{side:\"right\",ref:S,debug:p})),k.createElement(\"mesh\",{ref:E,name:\"face\"},h,p?k.createElement(k.Fragment,null,O&&k.createElement(\"box3Helper\",{args:[O]})):null))))))})),vt={contourLandmarks:{right:[33,133,159,145,153],left:[263,362,386,374,380]},blendshapes:{right:[14,16,18,12],left:[13,15,17,11]},color:{right:\"red\",left:\"#00ff00\"},fov:{horizontal:100,vertical:90}},gt=k.forwardRef((({side:e,debug:t=!0},r)=>{const n=k.useRef(null),a=k.useRef(null),[o]=k.useState((()=>new D.Sphere)),i=k.useCallback((t=>{const r=t.getAttribute(\"position\"),n=vt.contourLandmarks[e].map((e=>new D.Vector3(r.getX(e),r.getY(e),r.getZ(e))));return o.center.set(0,0,0),n.forEach((e=>o.center.add(e))),o.center.divideScalar(n.length),o.radius=n[0].sub(n[1]).length()/2,o}),[o,e]),[s]=k.useState((()=>new D.Euler)),l=k.useCallback(((t,r,o)=>{var l;n.current&&(null!==(l=o)&&void 0!==l||(o=i(t)),n.current.position.copy(o.center),n.current.scale.setScalar(o.radius));if(r&&a.current){const t=vt.blendshapes[e],n=r.categories[t[0]].score,o=r.categories[t[1]].score,i=r.categories[t[2]].score,l=r.categories[t[3]].score,c=.5*(vt.fov.horizontal*D.MathUtils.DEG2RAD)*(l-i),u=.5*(vt.fov.vertical*D.MathUtils.DEG2RAD)*(n-o)*(\"left\"===e?1:-1);s.set(c,u,0),a.current.setRotationFromEuler(s)}}),[i,e,s]),c=k.useMemo((()=>({eyeMeshRef:n,irisDirRef:a,_computeSphere:i,_update:l})),[i,l]);k.useImperativeHandle(r,(()=>c),[c]);const u=vt.color[e];return k.createElement(\"group\",null,k.createElement(\"group\",{ref:n},t&&k.createElement(\"axesHelper\",null),k.createElement(\"group\",{ref:a},k.createElement(k.Fragment,null,t&&k.createElement(de,{points:[[0,0,0],[0,0,-2]],lineWidth:1,color:u})))))})),zt={TRIANGULATION:[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],SAMPLE_FACE:{keypoints:[{x:356.2804412841797,y:295.1960563659668,z:-23.786449432373047,name:\"lips\"},{x:354.8859405517578,y:264.69520568847656,z:-36.718435287475586},{x:355.2180862426758,y:275.3360366821289,z:-21.183712482452393},{x:347.349853515625,y:242.4400234222412,z:-25.093655586242676},{x:354.40135955810547,y:256.67933464050293,z:-38.23572635650635},{x:353.7689971923828,y:247.54886627197266,z:-34.5475435256958},{x:352.1288299560547,y:227.34312057495117,z:-13.095386028289795},{x:303.5013198852539,y:234.67002868652344,z:12.500141859054565,name:\"rightEye\"},{x:351.09378814697266,y:211.87547206878662,z:-6.413471698760986},{x:350.7115936279297,y:202.1251630783081,z:-6.413471698760986},{x:348.33667755126953,y:168.7741756439209,z:6.483500003814697,name:\"faceOval\"},{x:356.4806365966797,y:299.2995357513428,z:-23.144519329071045},{x:356.5511703491211,y:302.66146659851074,z:-21.020312309265137},{x:356.6239547729492,y:304.1536331176758,z:-18.137459754943848,name:\"lips\"},{x:356.5807342529297,y:305.1840591430664,z:-18.767719268798828,name:\"lips\"},{x:356.8241500854492,y:308.25711250305176,z:-20.16829490661621},{x:357.113037109375,y:312.26277351379395,z:-22.10575819015503},{x:357.34962463378906,y:317.1123218536377,z:-21.837315559387207,name:\"lips\"},{x:357.6658630371094,y:325.51036834716797,z:-16.27002477645874},{x:355.0201416015625,y:269.36279296875,z:-33.73054027557373},{x:348.5237503051758,y:270.33411026000977,z:-24.93025302886963},{x:279.97331619262695,y:213.24176788330078,z:47.759642601013184,name:\"faceOval\"},{x:322.66529083251953,y:238.5027265548706,z:5.535193085670471},{x:316.0983657836914,y:239.94489669799805,z:5.777376294136047},{x:309.9431610107422,y:240.24518966674805,z:7.510589361190796},{x:301.31994247436523,y:237.86138534545898,z:13.118728399276733},{x:328.14266204833984,y:235.80496788024902,z:6.646900177001953},{x:313.7326431274414,y:222.11161136627197,z:3.9887237548828125},{x:320.45196533203125,y:221.87729358673096,z:4.601476192474365},{x:307.35679626464844,y:223.63793849945068,z:5.932023525238037},{x:303.0031204223633,y:226.3743782043457,z:8.479321002960205},{x:296.80023193359375,y:242.94299125671387,z:15.931552648544312},{x:332.2352981567383,y:340.77341079711914,z:-10.165848731994629},{x:301.38587951660156,y:233.46447944641113,z:14.764405488967896,name:\"rightEye\"},{x:279.0147018432617,y:244.37155723571777,z:45.77549457550049},{x:289.60548400878906,y:239.1807460784912,z:23.191204071044922},{x:320.32257080078125,y:267.1292781829834,z:-4.954537749290466},{x:347.64583587646484,y:294.4955062866211,z:-23.062820434570312,name:\"lips\"},{x:349.28138732910156,y:303.1095886230469,z:-20.238323211669922},{x:338.9453125,y:298.19186210632324,z:-19.456336498260498,name:\"lips\"},{x:333.36788177490234,y:302.6706790924072,z:-14.776077270507812,name:\"lips\"},{x:342.89188385009766,y:304.3561363220215,z:-17.752301692962646},{x:337.7375030517578,y:306.0098361968994,z:-13.410515785217285},{x:325.6159210205078,y:316.22995376586914,z:-6.681914925575256},{x:349.0104675292969,y:264.9818515777588,z:-36.274919509887695},{x:347.7138900756836,y:257.5664806365967,z:-37.67549514770508},{x:291.79357528686523,y:218.88171672821045,z:11.578094959259033,name:\"rightEyebrow\"},{x:332.2689437866211,y:247.56946563720703,z:-3.3730539679527283},{x:332.0074462890625,y:267.1201229095459,z:-19.969879388809204},{x:331.27952575683594,y:263.6967658996582,z:-17.47218608856201},{x:301.04373931884766,y:269.56552505493164,z:3.61815482378006},{x:347.4863815307617,y:249.0706443786621,z:-32.633421421051025},{x:307.26118087768555,y:208.2646894454956,z:1.1591226607561111,name:\"rightEyebrow\"},{x:297.91919708251953,y:212.22604751586914,z:5.914516448974609,name:\"rightEyebrow\"},{x:285.1651382446289,y:197.98450469970703,z:36.391637325286865,name:\"faceOval\"},{x:337.04097747802734,y:211.25229835510254,z:-4.548954665660858},{x:326.5912628173828,y:223.16698551177979,z:6.670243740081787},{x:320.05664825439453,y:309.5834255218506,z:-4.055835008621216},{x:289.6866226196289,y:314.617395401001,z:53.875489234924316,name:\"faceOval\"},{x:337.4256896972656,y:270.8755302429199,z:-17.67060160636902},{x:343.69922637939453,y:273.0000400543213,z:-18.756048679351807},{x:327.4242401123047,y:309.22399520874023,z:-4.703601002693176,name:\"lips\"},{x:330.37220001220703,y:308.3323001861572,z:-6.442649960517883},{x:293.87027740478516,y:207.7961826324463,z:9.821539521217346,name:\"rightEyebrow\"},{x:332.11437225341797,y:271.22812271118164,z:-16.64351224899292},{x:320.1197814941406,y:207.40366458892822,z:-2.48164564371109,name:\"rightEyebrow\"},{x:318.59575271606445,y:201.07443809509277,z:-3.110446035861969,name:\"rightEyebrow\"},{x:310.72303771972656,y:175.75075149536133,z:13.328815698623657,name:\"faceOval\"},{x:289.67578887939453,y:202.29835510253906,z:21.370456218719482},{x:315.30879974365234,y:187.35260009765625,z:5.0304025411605835},{x:287.8936767578125,y:216.54793739318848,z:17.81065821647644,name:\"rightEyebrow\"},{x:283.9391899108887,y:215.01142501831055,z:32.04984903335571},{x:348.35330963134766,y:299.4155788421631,z:-22.47924566268921},{x:341.1790466308594,y:301.8221855163574,z:-18.977805376052856},{x:335.69713592529297,y:304.4266891479492,z:-14.682706594467163},{x:339.4615173339844,y:272.3654365539551,z:-16.38674020767212},{x:328.99600982666016,y:308.86685371398926,z:-5.616893768310547},{x:332.00313568115234,y:309.1875743865967,z:-10.335084199905396},{x:331.0068130493164,y:307.9274368286133,z:-6.681914925575256,name:\"lips\"},{x:341.13792419433594,y:266.4876937866211,z:-26.56425952911377},{x:339.02950286865234,y:305.6663703918457,z:-12.33674168586731,name:\"lips\"},{x:344.22935485839844,y:304.9452781677246,z:-15.161235332489014,name:\"lips\"},{x:350.1844024658203,y:304.374303817749,z:-17.5305438041687,name:\"lips\"},{x:348.52630615234375,y:325.9562301635742,z:-16.164982318878174},{x:348.6581802368164,y:317.1624183654785,z:-21.510512828826904,name:\"lips\"},{x:348.9766311645508,y:312.1923065185547,z:-21.708929538726807},{x:349.2427444458008,y:308.0660820007324,z:-19.643079042434692},{x:349.67491149902344,y:305.42747497558594,z:-18.16080331802368,name:\"lips\"},{x:337.95589447021484,y:306.6535949707031,z:-12.803598642349243,name:\"lips\"},{x:337.06878662109375,y:307.63169288635254,z:-14.274203777313232},{x:335.77449798583984,y:309.8449516296387,z:-15.698124170303345},{x:334.6099090576172,y:312.7997016906738,z:-14.764405488967896,name:\"lips\"},{x:327.2330856323242,y:293.80866050720215,z:-11.864047050476074},{x:280.97679138183594,y:279.79928970336914,z:68.90834331512451,name:\"faceOval\"},{x:355.13843536376953,y:271.7875671386719,z:-25.350427627563477},{x:334.7235870361328,y:307.4656391143799,z:-9.302158951759338,name:\"lips\"},{x:333.5293960571289,y:307.89782524108887,z:-10.200862884521484},{x:346.29688262939453,y:276.4256286621094,z:-19.748122692108154},{x:335.16246795654297,y:276.22097969055176,z:-12.313398122787476},{x:345.09132385253906,y:274.7082996368408,z:-19.304605722427368},{x:325.4267883300781,y:252.95130729675293,z:-1.6661019623279572},{x:315.347843170166,y:259.05200958251953,z:-.25604281574487686},{x:330.44933319091797,y:267.7570152282715,z:-14.017432928085327},{x:294.96768951416016,y:185.26001930236816,z:23.903164863586426,name:\"faceOval\"},{x:299.63531494140625,y:192.7913761138916,z:12.640198469161987},{x:304.5452117919922,y:202.4142837524414,z:3.244667649269104,name:\"rightEyebrow\"},{x:331.6915512084961,y:320.0467872619629,z:-10.632705688476562},{x:334.5911407470703,y:201.27566814422607,z:-6.133356094360352,name:\"rightEyebrow\"},{x:331.4815902709961,y:185.44180870056152,z:.6627205014228821},{x:328.05816650390625,y:170.8385467529297,z:7.358860373497009,name:\"faceOval\"},{x:304.49764251708984,y:239.76297855377197,z:10.387605428695679},{x:290.6382179260254,y:248.85257720947266,z:19.03616428375244},{x:331.5682601928711,y:233.20727348327637,z:7.837390303611755},{x:295.5115509033203,y:228.9834451675415,z:14.41426157951355},{x:336.94332122802734,y:241.8259334564209,z:-5.27842104434967},{x:336.2792205810547,y:262.7049922943115,z:-26.12074375152588},{x:284.4102478027344,y:255.3262710571289,z:25.467140674591064},{x:295.1420593261719,y:253.02655220031738,z:12.430112361907959},{x:303.5196113586426,y:254.20703887939453,z:6.139191389083862},{x:315.73450088500977,y:251.64799690246582,z:3.3788898587226868},{x:324.69661712646484,y:247.56494522094727,z:2.3328344523906708},{x:331.57970428466797,y:243.02241325378418,z:1.1423448473215103},{x:345.6210708618164,y:229.9976634979248,z:-10.825285911560059},{x:286.26644134521484,y:270.37991523742676,z:21.708929538726807},{x:290.2525520324707,y:228.4921360015869,z:17.71728754043579},{x:351.65367126464844,y:269.3400764465332,z:-33.450424671173096},{x:333.1378936767578,y:253.88388633728027,z:-7.230473756790161},{x:277.8318977355957,y:246.95331573486328,z:68.20805549621582,name:\"faceOval\"},{x:336.6680908203125,y:238.10003757476807,z:.7688578963279724},{x:329.95800018310547,y:269.18323516845703,z:-7.207130789756775},{x:299.17491912841797,y:234.13324356079102,z:15.95489501953125},{x:335.61729431152344,y:258.71752738952637,z:-23.016133308410645},{x:284.1079330444336,y:297.0343494415283,z:63.25934886932373,name:\"faceOval\"},{x:331.44542694091797,y:230.6892442703247,z:9.92658257484436,name:\"rightEye\"},{x:341.41536712646484,y:253.01264762878418,z:-29.038610458374023},{x:303.5472869873047,y:327.5896739959717,z:16.725212335586548},{x:304.7756576538086,y:337.4389457702637,z:27.38126277923584,name:\"faceOval\"},{x:280.80501556396484,y:275.32050132751465,z:45.0752067565918},{x:295.43582916259766,y:318.4501647949219,z:26.2608003616333},{x:281.4303207397461,y:228.7355661392212,z:40.94350814819336},{x:331.2549591064453,y:349.4216537475586,z:-7.376367449760437},{x:352.4247741699219,y:271.7330074310303,z:-24.953596591949463},{x:327.5672912597656,y:260.41900634765625,z:-5.456410646438599},{x:284.5432472229004,y:241.7647933959961,z:29.668869972229004},{x:310,y:235.66174507141113,z:8.502663969993591,name:\"rightEye\"},{x:315.7071113586426,y:235.7572603225708,z:6.938687562942505,name:\"rightEye\"},{x:330.41088104248047,y:311.04143142700195,z:-9.325502514839172,name:\"lips\"},{x:288.5377502441406,y:285.31983375549316,z:21.837315559387207},{x:344.55039978027344,y:359.4300842285156,z:-6.705257892608643,name:\"faceOval\"},{x:323.41880798339844,y:351.67362213134766,z:7.802375555038452,name:\"faceOval\"},{x:314.64088439941406,y:346.11894607543945,z:16.36339783668518,name:\"faceOval\"},{x:349.4945526123047,y:184.8434829711914,z:-.21847527474164963},{x:359.24694061279297,y:359.8348903656006,z:-8.403456211090088,name:\"faceOval\"},{x:321.26182556152344,y:234.64492321014404,z:6.90950870513916,name:\"rightEye\"},{x:326.318359375,y:232.90250301361084,z:8.029969334602356,name:\"rightEye\"},{x:329.6211624145508,y:231.6195774078369,z:9.722331762313843,name:\"rightEye\"},{x:285.9398078918457,y:228.2351303100586,z:24.650139808654785},{x:325.79288482666016,y:227.88007736206055,z:7.469738721847534,name:\"rightEye\"},{x:320.1699447631836,y:227.5934886932373,z:6.168370842933655,name:\"rightEye\"},{x:314.85408782958984,y:227.85282611846924,z:6.2675780057907104,name:\"rightEye\"},{x:309.3084907531738,y:229.1516876220703,z:7.7031683921813965,name:\"rightEye\"},{x:305.5621337890625,y:230.92366218566895,z:9.722331762313843,name:\"rightEye\"},{x:277.8681945800781,y:228.5354232788086,z:59.71122741699219,name:\"faceOval\"},{x:306.1444664001465,y:235.1954698562622,z:10.603528022766113,name:\"rightEye\"},{x:355.4478454589844,y:281.96210861206055,z:-20.565123558044434},{x:333.02661895751953,y:288.0105400085449,z:-14.72939133644104},{x:337.15728759765625,y:269.2059516906738,z:-19.8414945602417},{x:345.9898376464844,y:283.5453128814697,z:-20.4834246635437},{x:351.48963928222656,y:219.98916149139404,z:-7.0378947257995605},{x:312.39574432373047,y:336.50628089904785,z:8.671900033950806},{x:321.32152557373047,y:343.1755256652832,z:.9067271649837494},{x:343.78379821777344,y:353.2975959777832,z:-14.355905055999756},{x:296.8791389465332,y:327.91497230529785,z:41.01353645324707,name:\"faceOval\"},{x:329.6939468383789,y:229.27897453308105,z:8.934508562088013,name:\"rightEye\"},{x:341.6905212402344,y:241.4073657989502,z:-14.589333534240723},{x:359.03079986572266,y:353.48859786987305,z:-15.803166627883911},{x:333.1861877441406,y:356.43213272094727,z:-1.0234417766332626,name:\"faceOval\"},{x:283.97483825683594,y:291.4318656921387,z:41.94725513458252},{x:343.33770751953125,y:305.830135345459,z:-15.756480693817139,name:\"lips\"},{x:342.40283966064453,y:307.7453899383545,z:-17.4021577835083},{x:341.53621673583984,y:311.0595703125,z:-19.047834873199463},{x:340.9107208251953,y:315.4837703704834,z:-18.5576331615448,name:\"lips\"},{x:339.1478729248047,y:323.42233657836914,z:-14.367576837539673},{x:333.3201599121094,y:307.4406337738037,z:-9.617288708686829},{x:331.2411117553711,y:306.9811820983887,z:-9.669809937477112},{x:329.23255920410156,y:306.0508346557617,z:-9.582273960113525,name:\"lips\"},{x:322.4586486816406,y:301.33323669433594,z:-7.720675468444824},{x:297.1712112426758,y:286.9552803039551,z:8.240055441856384},{x:341.3060760498047,y:235.4432201385498,z:-7.504753470420837},{x:336.9318389892578,y:224.3451976776123,z:5.829898118972778},{x:332.65323638916016,y:226.70403957366943,z:8.105834126472473},{x:334.67357635498047,y:306.4397621154785,z:-8.981193900108337,name:\"lips\"},{x:297.4601936340332,y:306.29210472106934,z:15.476365089416504},{x:342.9119110107422,y:222.37077713012695,z:-2.754466235637665},{x:335.4629898071289,y:332.20250129699707,z:-11.823196411132812},{x:353.2412338256836,y:240.56339263916016,z:-27.147831916809082},{x:346.3080596923828,y:236.41446590423584,z:-18.452589511871338},{x:352.6475143432617,y:234.1420555114746,z:-19.748122692108154},{x:337.3209762573242,y:253.39937210083008,z:-16.024924516677856},{x:358.6122131347656,y:344.90861892700195,z:-18.592647314071655},{x:358.1117248535156,y:334.64990615844727,z:-17.49552845954895},{x:346.4450454711914,y:335.0321102142334,z:-16.32838249206543},{x:319.17640686035156,y:320.2833938598633,z:-3.276764452457428},{x:325.2540588378906,y:276.2369728088379,z:-6.460157036781311},{x:326.7214584350586,y:327.3939514160156,z:-7.417217493057251},{x:310.7190132141113,y:277.2265148162842,z:-3.5452082753181458},{x:319.78355407714844,y:284.8238182067871,z:-6.4543211460113525},{x:305.773983001709,y:290.83580017089844,z:.06907138042151928},{x:344.4001770019531,y:344.85408782958984,z:-16.946970224380493},{x:333.1879425048828,y:258.74256134033203,z:-11.90489649772644},{x:313.80598068237305,y:327.08919525146484,z:2.2277912497520447},{x:322.9637908935547,y:334.6819496154785,z:-3.3643004298210144},{x:313.4055519104004,y:311.2166690826416,z:-1.1175429821014404},{x:291.0865783691406,y:298.2831001281738,z:22.467575073242188},{x:305.6580924987793,y:313.3707904815674,z:5.561453700065613},{x:288.23760986328125,y:305.9941864013672,z:36.765122413635254},{x:315.10692596435547,y:296.26991271972656,z:-4.604393839836121},{x:337.50518798828125,y:247.5944423675537,z:-10.597691535949707},{x:338.8450622558594,y:265.47778129577637,z:-27.778091430664062},{x:334.25254821777344,y:269.0671920776367,z:-20.938611030578613},{x:341.64512634277344,y:259.6387195587158,z:-32.189905643463135},{x:331.44081115722656,y:219.0976095199585,z:4.207563698291779},{x:320.56339263916016,y:216.49658203125,z:2.930997312068939},{x:311.21912002563477,y:216.57853603363037,z:2.9674705862998962},{x:303.46256256103516,y:218.54614734649658,z:5.357203483581543},{x:297.99999237060547,y:222.505202293396,z:9.325502514839172},{x:294.93839263916016,y:236.39654159545898,z:18.534289598464966},{x:278.87489318847656,y:259.7095584869385,z:45.68212032318115},{x:300.3782653808594,y:245.38593292236328,z:12.278382778167725},{x:307.06348419189453,y:246.36857986450195,z:8.164191246032715},{x:315.5229187011719,y:245.3949737548828,z:5.503097176551819},{x:323.71395111083984,y:242.75178909301758,z:4.6335723996162415},{x:330.2785873413086,y:239.34658527374268,z:4.937030673027039},{x:334.6982192993164,y:236.0460376739502,z:4.823233783245087},{x:279.3412208557129,y:263.5196113586426,z:70.91583728790283,name:\"faceOval\"},{x:334.65972900390625,y:271.6648578643799,z:-17.775644063949585},{x:342.05677032470703,y:246.99846267700195,z:-20.84523916244507},{x:344.0357971191406,y:264.5701503753662,z:-32.936880588531494},{x:348.25531005859375,y:268.6645030975342,z:-30.695960521697998},{x:344.12227630615234,y:266.34212493896484,z:-29.808926582336426},{x:337.12318420410156,y:274.2556858062744,z:-15.768152475357056},{x:349.49047088623047,y:269.071683883667,z:-32.51670837402344},{x:350.1683044433594,y:271.4691352844238,z:-24.93025302886963},{x:333.9634704589844,y:230.56639194488525,z:8.89949381351471},{x:338.2147979736328,y:231.4807891845703,z:4.6715047955513},{x:340.4712677001953,y:231.74463272094727,z:-.34996166825294495},{x:303.28975677490234,y:232.24980354309082,z:11.916568279266357,name:\"rightEye\"},{x:299.4649124145508,y:229.53842639923096,z:12.325069904327393},{x:359.09618377685547,y:241.77349090576172,z:-24.650139808654785},{x:399.46216583251953,y:229.89503860473633,z:15.919880867004395,name:\"leftEye\"},{x:361.38919830322266,y:269.6129894256592,z:-24.510080814361572},{x:416.9973373413086,y:206.0895538330078,z:53.26857566833496,name:\"faceOval\"},{x:381.32179260253906,y:235.5476474761963,z:7.6214683055877686},{x:387.8068542480469,y:236.25958442687988,z:8.345099091529846},{x:393.95751953125,y:235.8660364151001,z:10.475142002105713},{x:401.84600830078125,y:232.77019500732422,z:16.760226488113403},{x:375.70568084716797,y:233.48456382751465,z:8.234220147132874},{x:388.17752838134766,y:218.94717693328857,z:6.810300946235657},{x:381.64928436279297,y:219.2656660079956,z:6.711093783378601},{x:394.4760513305664,y:219.66821193695068,z:9.173773527145386},{x:398.8843536376953,y:221.8837022781372,z:12.03328251838684},{x:406.5454864501953,y:237.12156772613525,z:19.7131085395813},{x:383.87447357177734,y:337.6932907104492,z:-8.631049990653992},{x:401.2682342529297,y:228.5916566848755,z:18.359217643737793,name:\"leftEye\"},{x:422.0449447631836,y:236.73934936523438,z:51.16771221160889},{x:412.69153594970703,y:232.80198097229004,z:27.52131938934326},{x:387.3497772216797,y:263.298397064209,z:-2.8609684109687805},{x:364.5124053955078,y:293.39221000671387,z:-22.397546768188477,name:\"lips\"},{x:363.62987518310547,y:302.1291446685791,z:-19.643079042434692},{x:373.2334518432617,y:295.8647060394287,z:-18.125789165496826,name:\"lips\"},{x:378.83365631103516,y:299.5177745819092,z:-13.153743743896484,name:\"lips\"},{x:369.91477966308594,y:302.5704002380371,z:-16.65518283843994},{x:374.9167251586914,y:303.5416603088379,z:-11.963253021240234},{x:387.58888244628906,y:312.2716999053955,z:-4.680258631706238},{x:360.6635284423828,y:264.31986808776855,z:-35.94811677932739},{x:361.04564666748047,y:256.8225860595703,z:-37.278664112091064},{x:408.3855438232422,y:213.52088928222656,z:15.756480693817139,name:\"leftEyebrow\"},{x:373.2946014404297,y:245.38101196289062,z:-1.9316278398036957},{x:376.83860778808594,y:264.3721103668213,z:-18.510947227478027},{x:376.9546127319336,y:261.0010528564453,z:-15.989909172058105},{x:406.1498260498047,y:263.5030174255371,z:7.072908878326416},{x:360.07205963134766,y:248.3631706237793,z:-32.16656446456909},{x:393.11119079589844,y:205.10473251342773,z:3.7786373496055603,name:\"leftEyebrow\"},{x:402.12791442871094,y:207.89000988006592,z:9.383859634399414,name:\"leftEyebrow\"},{x:410.8693313598633,y:191.6182279586792,z:41.27030849456787,name:\"faceOval\"},{x:364.9509811401367,y:210.40483474731445,z:-3.758212625980377},{x:375.94444274902344,y:221.1331844329834,z:8.368442058563232},{x:392.1904754638672,y:305.0360298156738,z:-1.752179116010666},{x:419.50225830078125,y:307.25592613220215,z:58.96425247192383,name:\"faceOval\"},{x:372.0027160644531,y:268.7212657928467,z:-16.631840467453003},{x:366.1614227294922,y:271.6237449645996,z:-18.219159841537476},{x:385.00938415527344,y:305.3863334655762,z:-2.567722797393799},{x:381.99771881103516,y:304.9723720550537,z:-4.575215280056},{x:405.078125,y:203.21216583251953,z:13.713973760604858,name:\"leftEyebrow\"},{x:377.13207244873047,y:268.4710121154785,z:-15.266278982162476},{x:380.9713363647461,y:205.36980628967285,z:-.7250899076461792,name:\"leftEyebrow\"},{x:381.7788314819336,y:198.9268398284912,z:-1.184653863310814,name:\"leftEyebrow\"},{x:385.5204772949219,y:172.1484375,z:16.04826807975769,name:\"faceOval\"},{x:407.94189453125,y:196.76236152648926,z:25.723915100097656},{x:383.03890228271484,y:184.5157527923584,z:7.393874526023865},{x:411.61781311035156,y:210.79241752624512,z:22.315845489501953,name:\"leftEyebrow\"},{x:414.30870056152344,y:208.4643030166626,z:37.021894454956055},{x:364.28722381591797,y:298.35777282714844,z:-21.86065673828125},{x:371.3682556152344,y:299.78848457336426,z:-17.834001779556274},{x:376.88201904296875,y:301.6696071624756,z:-13.153743743896484},{x:370.2193832397461,y:270.49095153808594,z:-15.569736957550049},{x:383.5081100463867,y:305.2726364135742,z:-3.673594295978546},{x:380.73760986328125,y:305.96869468688965,z:-8.660228252410889},{x:381.2334442138672,y:304.63574409484863,z:-4.820316135883331,name:\"lips\"},{x:368.1698989868164,y:264.8884963989258,z:-25.653886795043945},{x:373.5087203979492,y:303.4233856201172,z:-10.95950722694397,name:\"lips\"},{x:368.4544372558594,y:303.29601287841797,z:-14.169161319732666,name:\"lips\"},{x:362.76554107666016,y:303.5735607147217,z:-16.911956071853638,name:\"lips\"},{x:366.60980224609375,y:324.8870658874512,z:-15.616422891616821},{x:365.7067108154297,y:315.95678329467773,z:-20.903596878051758,name:\"lips\"},{x:365.0083923339844,y:311.2232208251953,z:-21.066999435424805},{x:364.1508102416992,y:307.0583438873291,z:-18.907777070999146},{x:363.37512969970703,y:304.5721435546875,z:-17.42550015449524,name:\"lips\"},{x:374.580078125,y:304.3059539794922,z:-11.40302300453186,name:\"lips\"},{x:375.55362701416016,y:305.0998020172119,z:-12.861957550048828},{x:377.2437286376953,y:307.1674346923828,z:-14.215847253799438},{x:378.68587493896484,y:309.9015712738037,z:-13.223772048950195,name:\"lips\"},{x:383.8992691040039,y:290.29629707336426,z:-9.97326910495758},{x:423.3871841430664,y:271.91688537597656,z:74.37058925628662,name:\"faceOval\"},{x:377.68043518066406,y:304.62209701538086,z:-7.603961229324341,name:\"lips\"},{x:379.00428771972656,y:304.9314594268799,z:-8.57852816581726},{x:364.00279998779297,y:275.2813911437988,z:-19.25792098045349},{x:374.68231201171875,y:273.82555961608887,z:-11.28047227859497},{x:365.0354766845703,y:273.4548568725586,z:-18.791062831878662},{x:380.61901092529297,y:249.8848056793213,z:.15501167625188828},{x:391.14158630371094,y:254.7934627532959,z:2.0906515419483185},{x:378.1761169433594,y:264.9612236022949,z:-12.605184316635132},{x:400.9540557861328,y:179.99592304229736,z:27.82477855682373,name:\"faceOval\"},{x:398.0038833618164,y:188.50656509399414,z:16.094952821731567},{x:394.8717498779297,y:199.0359592437744,z:6.226727366447449,name:\"leftEyebrow\"},{x:382.10926055908203,y:316.83926582336426,z:-8.946179747581482},{x:366.51588439941406,y:200.32583713531494,z:-5.24632453918457,name:\"leftEyebrow\"},{x:367.4893569946289,y:183.87210845947266,z:1.9039081037044525},{x:368.6243438720703,y:168.8127565383911,z:8.736093044281006,name:\"faceOval\"},{x:398.96175384521484,y:234.9675178527832,z:13.713973760604858},{x:412.9645538330078,y:242.23042488098145,z:23.272905349731445},{x:372.05257415771484,y:231.41919136047363,z:9.226294755935669},{x:406.0722351074219,y:223.58965873718262,z:18.370890617370605},{x:368.27442169189453,y:240.2039337158203,z:-4.166713654994965},{x:372.3575210571289,y:260.66442489624023,z:-24.976940155029297},{x:419.2244338989258,y:247.9079246520996,z:30.299127101898193},{x:409.43885803222656,y:246.60913467407227,z:16.398411989212036},{x:401.69139862060547,y:248.76328468322754,z:9.395531415939331},{x:389.7608184814453,y:247.56915092468262,z:5.841569304466248},{x:380.5461883544922,y:244.55984115600586,z:4.263003468513489},{x:373.25817108154297,y:240.80214500427246,z:2.5356262922286987},{x:358.77086639404297,y:229.35615062713623,z:-10.387605428695679},{x:419.5793914794922,y:262.8478717803955,z:26.5175724029541},{x:410.8808898925781,y:222.51372814178467,z:22.199130058288574},{x:358.45714569091797,y:268.91467094421387,z:-33.17030906677246},{x:373.4129333496094,y:251.6385841369629,z:-5.771540403366089},{x:422.5408172607422,y:239.23919677734375,z:74.04378890991211,name:\"faceOval\"},{x:367.8171920776367,y:236.58040523529053,z:1.820748895406723},{x:378.51959228515625,y:266.2532329559326,z:-5.74819803237915},{x:403.3472442626953,y:229.05112266540527,z:19.689764976501465},{x:372.34840393066406,y:256.6451168060303,z:-21.872329711914062},{x:422.54566192626953,y:289.1587829589844,z:68.67491245269775,name:\"faceOval\"},{x:371.9297409057617,y:228.90116214752197,z:11.432201862335205,name:\"leftEye\"},{x:366.21360778808594,y:251.6158962249756,z:-28.19826364517212},{x:409.1571807861328,y:321.3156223297119,z:20.2266526222229},{x:408.52943420410156,y:331.44238471984863,z:31.09278917312622,name:\"faceOval\"},{x:424.2788314819336,y:267.1992301940918,z:50.467424392700195},{x:415.60352325439453,y:311.6528606414795,z:30.579242706298828},{x:418.12793731689453,y:221.59927368164062,z:46.26569747924805},{x:385.68286895751953,y:346.0184955596924,z:-5.70151150226593},{x:357.82936096191406,y:271.3758373260498,z:-24.836881160736084},{x:379.588623046875,y:257.5071716308594,z:-3.755294680595398},{x:417.4592590332031,y:234.71948146820068,z:34.5475435256958},{x:393.4684371948242,y:231.58967971801758,z:11.408859491348267,name:\"leftEye\"},{x:387.8864288330078,y:232.14245796203613,z:9.51808214187622,name:\"leftEye\"},{x:382.4981689453125,y:307.5654888153076,z:-7.522260546684265,name:\"lips\"},{x:419.00169372558594,y:277.8332805633545,z:26.424202919006348},{x:373.62953186035156,y:357.6375102996826,z:-5.75986921787262,name:\"faceOval\"},{x:392.8708267211914,y:347.72446632385254,z:10.154176950454712,name:\"faceOval\"},{x:400.3953552246094,y:341.0005187988281,z:19.39797878265381,name:\"faceOval\"},{x:382.25440979003906,y:231.66935920715332,z:8.998700976371765,name:\"leftEye\"},{x:377.14550018310547,y:230.4228687286377,z:9.804032444953918,name:\"leftEye\"},{x:373.8358688354492,y:229.64950561523438,z:11.292144060134888,name:\"leftEye\"},{x:414.5794677734375,y:221.67891025543213,z:29.412097930908203},{x:377.00672149658203,y:225.66201210021973,z:9.360517263412476,name:\"leftEye\"},{x:382.29530334472656,y:224.8431158065796,z:8.32175612449646,name:\"leftEye\"},{x:387.5133514404297,y:224.49507236480713,z:8.917000889778137,name:\"leftEye\"},{x:393.15906524658203,y:225.24795055389404,z:10.737749338150024,name:\"leftEye\"},{x:397.05554962158203,y:226.55359268188477,z:13.002015352249146,name:\"leftEye\"},{x:420.5299377441406,y:221.014666557312,z:65.40690422058105,name:\"faceOval\"},{x:397.06920623779297,y:230.6661558151245,z:13.807345628738403,name:\"leftEye\"},{x:377.94647216796875,y:285.1647090911865,z:-13.305472135543823},{x:372.1118927001953,y:267.1267318725586,z:-18.83774757385254},{x:364.9968719482422,y:282.24411964416504,z:-19.818150997161865},{x:401.973876953125,y:331.20131492614746,z:11.566424369812012},{x:394.3083190917969,y:338.86693954467773,z:3.142542541027069},{x:373.9820861816406,y:351.4504623413086,z:-13.50388765335083},{x:414.3888854980469,y:321.24735832214355,z:45.51872253417969,name:\"faceOval\"},{x:373.44234466552734,y:227.33163356781006,z:10.626870393753052,name:\"leftEye\"},{x:364.0731430053711,y:240.31539916992188,z:-13.807345628738403},{x:384.2658233642578,y:353.3793067932129,z:.7385850697755814,name:\"faceOval\"},{x:423.20526123046875,y:283.5176181793213,z:47.152724266052246},{x:369.42798614501953,y:304.0898895263672,z:-14.647691249847412,name:\"lips\"},{x:370.63812255859375,y:305.90051651000977,z:-16.211668252944946},{x:371.91192626953125,y:309.0167713165283,z:-17.84567356109619},{x:373.0583953857422,y:313.3545398712158,z:-17.378815412521362,name:\"lips\"},{x:375.39905548095703,y:321.09289169311523,z:-13.118728399276733},{x:379.2567825317383,y:304.3582534790039,z:-7.924926280975342},{x:381.18797302246094,y:303.7031364440918,z:-7.843226194381714},{x:383.0918502807617,y:302.4884605407715,z:-7.6506465673446655,name:\"lips\"},{x:389.09461975097656,y:297.1475315093994,z:-5.5497825145721436},{x:411.6408920288086,y:280.24898529052734,z:12.02161192893982},{x:363.3110809326172,y:234.27620887756348,z:-6.775286793708801},{x:366.0474395751953,y:223.29872131347656,z:6.827808618545532},{x:370.34427642822266,y:225.1457118988037,z:9.558931589126587},{x:377.5371551513672,y:303.60079765319824,z:-7.358860373497009,name:\"lips\"},{x:412.9557800292969,y:299.53579902648926,z:19.39797878265381},{x:360.0810241699219,y:221.72012329101562,z:-2.153385728597641},{x:379.82784271240234,y:329.47723388671875,z:-10.48097848892212},{x:359.08477783203125,y:235.7911491394043,z:-18.079102039337158},{x:369.6688461303711,y:251.5407943725586,z:-14.962821006774902},{x:369.5555114746094,y:333.5307312011719,z:-15.67478060722351},{x:394.0193176269531,y:315.6973171234131,z:-.9920747578144073},{x:383.78997802734375,y:272.7268695831299,z:-4.689012169837952},{x:387.67765045166016,y:323.6722755432129,z:-5.640236139297485},{x:397.8769302368164,y:272.1331214904785,z:-.9395531564950943},{x:389.87476348876953,y:280.5630111694336,z:-4.29218202829361},{x:403.83888244628906,y:285.1167869567871,z:3.0229100584983826},{x:372.5467300415039,y:343.1070327758789,z:-16.153310537338257},{x:374.1112518310547,y:256.3721466064453,z:-10.574349164962769},{x:399.73785400390625,y:321.77515983581543,z:4.849494695663452},{x:392.03365325927734,y:330.56447982788086,z:-1.3407598435878754},{x:398.59134674072266,y:305.93902587890625,z:1.517290621995926},{x:417.95997619628906,y:290.9716987609863,z:26.89105987548828},{x:406.04541778564453,y:307.35154151916504,z:8.666064143180847},{x:420.75328826904297,y:298.40752601623535,z:41.78385257720947},{x:395.4522705078125,y:291.4153575897217,z:-2.1752697229385376},{x:368.6452102661133,y:245.8882999420166,z:-9.453888535499573},{x:370.34900665283203,y:263.56690406799316,z:-26.75100326538086},{x:374.98477935791016,y:266.6126346588135,z:-19.77146625518799},{x:366.99840545654297,y:258.12140464782715,z:-31.372904777526855},{x:371.00616455078125,y:217.63479709625244,z:5.60522198677063},{x:381.30577087402344,y:214.14087295532227,z:4.983716309070587},{x:390.1496124267578,y:213.38221549987793,z:5.593550801277161},{x:397.7696990966797,y:214.3659782409668,z:8.57852816581726},{x:403.1652069091797,y:217.65509605407715,z:13.013685941696167},{x:407.3551940917969,y:230.72525024414062,z:22.444231510162354},{x:424.0876770019531,y:251.7839241027832,z:51.16771221160889},{x:403.50196838378906,y:239.88757610321045,z:15.803166627883911},{x:397.31719970703125,y:241.49806022644043,z:11.233787536621094},{x:388.99425506591797,y:241.4366912841797,z:7.948269248008728},{x:380.7804489135742,y:239.78078842163086,z:6.600214838981628},{x:374.01336669921875,y:237.11946487426758,z:6.349278092384338},{x:369.39125061035156,y:234.35351371765137,z:5.987462401390076},{x:422.9730987548828,y:255.76455116271973,z:76.61150932312012,name:\"faceOval\"},{x:374.73915100097656,y:269.24214363098145,z:-16.608498096466064},{x:364.61681365966797,y:245.71088790893555,z:-20.02823829650879},{x:365.3834533691406,y:263.34174156188965,z:-32.32996463775635},{x:361.58252716064453,y:267.8273677825928,z:-30.345816612243652},{x:365.37208557128906,y:265.0249671936035,z:-29.178667068481445},{x:372.72605895996094,y:272.05135345458984,z:-14.834434986114502},{x:360.48614501953125,y:268.34827423095703,z:-32.189905643463135},{x:359.9516296386719,y:270.8049201965332,z:-24.650139808654785},{x:369.5049285888672,y:229.01945114135742,z:10.107489824295044},{x:365.5447769165039,y:230.24096488952637,z:5.593550801277161},{x:363.50669860839844,y:230.6208372116089,z:.43622106313705444},{x:399.3529510498047,y:227.65677452087402,z:15.35965085029602,name:\"leftEye\"},{x:402.5693130493164,y:224.60190296173096,z:15.931552648544312}],box:{xMin:277.8318977355957,yMin:168.7741756439209,xMax:424.2788314819336,yMax:359.8348903656006,width:146.4469337463379,height:191.0607147216797}},SAMPLE_FACELANDMARKER_RESULT:{faceLandmarks:[[{x:.5760777592658997,y:.8639070391654968,z:-.030997956171631813},{x:.572094738483429,y:.7886289358139038,z:-.07189624011516571},{x:.5723551511764526,y:.8075382709503174,z:-.03578168898820877},{x:.5548420548439026,y:.7188365459442139,z:-.057787876576185226},{x:.5706077814102173,y:.7674974799156189,z:-.07740399986505508},{x:.5681378245353699,y:.7387768030166626,z:-.07356284558773041},{x:.5621535181999207,y:.6681165099143982,z:-.04189874976873398},{x:.46613582968711853,y:.6679812073707581,z:.011289681307971478},{x:.5579932928085327,y:.6174106597900391,z:-.03502821549773216},{x:.5563451647758484,y:.5905600190162659,z:-.03928658738732338},{x:.5487832427024841,y:.4900572597980499,z:-.029898937791585922},{x:.5765544176101685,y:.8692144751548767,z:-.02831427752971649},{x:.5771114230155945,y:.873644232749939,z:-.02345779910683632},{x:.5771905779838562,y:.877016007900238,z:-.016658689826726913},{x:.5778058767318726,y:.8770116567611694,z:-.014505492523312569},{x:.5783766508102417,y:.8835000991821289,z:-.015996402129530907},{x:.5792440176010132,y:.8913810849189758,z:-.01924579218029976},{x:.5796768069267273,y:.8996334671974182,z:-.018261712044477463},{x:.5817288160324097,y:.9255813956260681,z:-.007126849144697189},{x:.5726592540740967,y:.7992473244667053,z:-.0643521398305893},{x:.5579419136047363,y:.7996989488601685,z:-.04566684365272522},{x:.4216199815273285,y:.5958762764930725,z:.06776496022939682},{x:.5052269697189331,y:.6796539425849915,z:-.0010737782577052712},{x:.49243026971817017,y:.6838865876197815,z:-.0005227324436418712},{x:.4796970784664154,y:.6856290102005005,z:.002684245817363262},{x:.4618356227874756,y:.6764569878578186,z:.013439622707664967},{x:.5160380601882935,y:.6737282276153564,z:-17607348127057776e-21},{x:.48070961236953735,y:.6255870461463928,z:-.008339674212038517},{x:.49719780683517456,y:.6256808042526245,z:-.008027955889701843},{x:.46674346923828125,y:.6317623853683472,z:-.004460199736058712},{x:.4582492709159851,y:.641118049621582,z:.0011905613355338573},{x:.45408669114112854,y:.6911458969116211,z:.020514748990535736},{x:.535312294960022,y:.9619986414909363,z:.012499462813138962},{x:.4608460068702698,y:.6628725528717041,z:.01517564244568348},{x:.4206731915473938,y:.6828458309173584,z:.07848648726940155},{x:.4390624463558197,y:.6796106696128845,z:.03283142298460007},{x:.5029968619346619,y:.7701570391654968,z:-.009734481573104858},{x:.5595027208328247,y:.8607323169708252,z:-.030043255537748337},{x:.5621269941329956,y:.8738374710083008,z:-.021709579974412918},{x:.5451499819755554,y:.865527331829071,z:-.022014077752828598},{x:.5351184010505676,y:.8705098032951355,z:-.011602800339460373},{x:.5495014190673828,y:.8744956254959106,z:-.016490943729877472},{x:.5395170450210571,y:.8759440779685974,z:-.007333362940698862},{x:.5183624029159546,y:.8959754705429077,z:.010520773939788342},{x:.5604349374771118,y:.7895449995994568,z:-.07082037627696991},{x:.557381272315979,y:.7687489986419678,z:-.07590588927268982},{x:.4432901442050934,y:.6308897733688354,z:.0027153254486620426},{x:.5258325338363647,y:.7151225805282593,z:-.014676518738269806},{x:.5271827578544617,y:.7833116054534912,z:-.037643320858478546},{x:.5257382988929749,y:.7717816233634949,z:-.03401920944452286},{x:.46516409516334534,y:.7705106735229492,z:.0065747760236263275},{x:.5558893084526062,y:.7420997619628906,z:-.0694495290517807},{x:.4720408320426941,y:.6066038608551025,z:-.021204356104135513},{x:.45432573556900024,y:.6158540844917297,z:-.011054684408009052},{x:.4305151402950287,y:.5608053803443909,z:.0396830290555954},{x:.5310865640640259,y:.6157484650611877,z:-.03081176057457924},{x:.5114666223526001,y:.6329749226570129,z:-.00335998204536736},{x:.506435751914978,y:.8786543607711792,z:.012980876490473747},{x:.4480472207069397,y:.8640613555908203,z:.12569651007652283},{x:.5372058153152466,y:.7942581176757812,z:-.03168361634016037},{x:.5488379597663879,y:.8001630306243896,z:-.03280917927622795},{x:.5213388204574585,y:.8794381618499756,z:.011892606504261494},{x:.5242055654525757,y:.8789222240447998,z:.008370225317776203},{x:.4477175176143646,y:.6039950251579285,z:-.0050799972377717495},{x:.526964008808136,y:.7916748523712158,z:-.02968614175915718},{x:.4971255660057068,y:.6050706505775452,z:-.028175678104162216},{x:.4938119053840637,y:.5882453918457031,z:-.03210941329598427},{x:.4757143557071686,y:.5094879865646362,z:-.01300730835646391},{x:.43947282433509827,y:.5816648006439209,z:.01415177434682846},{x:.485664039850235,y:.5477864146232605,z:-.023685332387685776},{x:.43635931611061096,y:.6226438283920288,z:.013606148771941662},{x:.42910251021385193,y:.6102726459503174,z:.03926564007997513},{x:.5605402588844299,y:.8680099248886108,z:-.027318159118294716},{x:.5474816560745239,y:.8702861070632935,z:-.019686367362737656},{x:.5373021364212036,y:.8728838562965393,z:-.010484928265213966},{x:.540735125541687,y:.7979167103767395,z:-.029073253273963928},{x:.5228585004806519,y:.87913578748703,z:.009915109723806381},{x:.530497670173645,y:.8815253973007202,z:.0020524784922599792},{x:.5259912610054016,y:.8790552616119385,z:.007895970717072487},{x:.5433906316757202,y:.7882310748100281,z:-.05121905356645584},{x:.541388213634491,y:.8777219653129578,z:-.00466804439201951},{x:.5515822172164917,y:.8767023086547852,z:-.010475946590304375},{x:.5637003779411316,y:.877059817314148,z:-.015273625031113625},{x:.5640299320220947,y:.9263423085212708,z:-.00658724969252944},{x:.5642300248146057,y:.8993074893951416,z:-.017653480172157288},{x:.5637336373329163,y:.8910360932350159,z:-.01852807030081749},{x:.5637134313583374,y:.8837276697158813,z:-.01482592523097992},{x:.564205527305603,y:.8768964409828186,z:-.01331155002117157},{x:.5419867634773254,y:.8778373599052429,z:-.0037720394320786},{x:.5404468774795532,y:.880696177482605,z:-.005610354244709015},{x:.5392338633537292,y:.8845721483230591,z:-.007352025713771582},{x:.538469672203064,y:.8891173601150513,z:-.005154991988092661},{x:.5189250111579895,y:.8452741503715515,z:-.009755070321261883},{x:.4258975088596344,y:.7662280797958374,z:.1387351155281067},{x:.5725725293159485,y:.8041572570800781,z:-.04583907872438431},{x:.5342061519622803,y:.8785833120346069,z:.002659974154084921},{x:.5324031114578247,y:.8804071545600891,z:.0017832003068178892},{x:.5538818836212158,y:.8078407645225525,z:-.03254539892077446},{x:.5325431823730469,y:.8026832938194275,z:-.019140373915433884},{x:.5514076948165894,y:.8043903112411499,z:-.03313535451889038},{x:.5131856203079224,y:.7284771800041199,z:-.009399853646755219},{x:.49331504106521606,y:.7443980574607849,z:-.005225230939686298},{x:.5239617824554443,y:.7807451486587524,z:-.025881027802824974},{x:.4473606050014496,y:.5315827131271362,z:.011164786294102669},{x:.45718759298324585,y:.5604941248893738,z:-.005943301599472761},{x:.4670005738735199,y:.5909327268600464,z:-.019681761041283607},{x:.5311570167541504,y:.9076261520385742,z:.00389476353302598},{x:.5249923467636108,y:.5893563628196716,z:-.037981919944286346},{x:.5166932344436646,y:.5429551005363464,z:-.03319704160094261},{x:.5085030198097229,y:.49676206707954407,z:-.02691275253891945},{x:.4687720239162445,y:.6834565997123718,z:.008113506250083447},{x:.4426414966583252,y:.7069531679153442,z:.028577271848917007},{x:.5230373740196228,y:.6675713658332825,z:.001773772411979735},{x:.4481240212917328,y:.6527872085571289,z:.012414850294589996},{x:.5339856743812561,y:.7012367844581604,z:-.020220188423991203},{x:.5347223281860352,y:.7761190533638,z:-.05141595005989075},{x:.4315067231655121,y:.7211957573890686,z:.04381405934691429},{x:.45203351974487305,y:.7206180095672607,z:.017288070172071457},{x:.46892452239990234,y:.7265436053276062,z:.005602988880127668},{x:.49314674735069275,y:.7202282547950745,z:-.0006408205372281373},{x:.5104925632476807,y:.7091827392578125,z:-.00362918758764863},{x:.5232142210006714,y:.698553740978241,z:-.00787867046892643},{x:.5497883558273315,y:.6743605136871338,z:-.036349106580019},{x:.43658503890037537,y:.7627100348472595,z:.042555369436740875},{x:.4397648870944977,y:.6528646349906921,z:.017956094816327095},{x:.5653332471847534,y:.7992802858352661,z:-.06365057826042175},{x:.5285563468933105,y:.736810564994812,z:-.018836988136172295},{x:.4180678725242615,y:.6792560815811157,z:.12284679710865021},{x:.5328429937362671,y:.6865872144699097,z:-.010484723374247551},{x:.5230283141136169,y:.7809416055679321,z:-.011922398582100868},{x:.4551771283149719,y:.6650775074958801,z:.01774493046104908},{x:.5337203741073608,y:.7618928551673889,z:-.04697106033563614},{x:.43463975191116333,y:.8133478164672852,z:.1354849934577942},{x:.5225707292556763,y:.6605283617973328,z:.004980515688657761},{x:.5441933870315552,y:.7497199773788452,z:-.06091512367129326},{x:.4774007797241211,y:.9159183502197266,z:.059622734785079956},{x:.48068761825561523,y:.9364941716194153,z:.08404944837093353},{x:.4268292486667633,y:.7657528519630432,z:.09051097184419632},{x:.46051913499832153,y:.8880485892295837,z:.0738474428653717},{x:.4243420660495758,y:.6434382200241089,z:.06230505183339119},{x:.5342157483100891,y:.9835634231567383,z:.021662971004843712},{x:.5668109655380249,y:.8042187094688416,z:-.044937074184417725},{x:.5176341533660889,y:.7530587315559387,z:-.012967454269528389},{x:.430206298828125,y:.6835605502128601,z:.04612284153699875},{x:.4794231951236725,y:.6732114553451538,z:.003970044665038586},{x:.49073347449302673,y:.6722435355186462,z:.0008692514384165406},{x:.5294116139411926,y:.884677529335022,z:.004413890186697245},{x:.4430122375488281,y:.80235356092453,z:.04987282305955887},{x:.5603825449943542,y:1.0092442035675049,z:.026417359709739685},{x:.5186598300933838,y:.9828659892082214,z:.0513598807156086},{x:.5010536909103394,y:.9640932679176331,z:.06591596454381943},{x:.5524769425392151,y:.539441704750061,z:-.035816047340631485},{x:.5879997611045837,y:1.0091472864151,z:.02285068854689598},{x:.5016193985939026,y:.6684437990188599,z:.00028415941051207483},{x:.511952817440033,y:.6642197370529175,z:.0021144719794392586},{x:.5194343328475952,y:.6623469591140747,z:.004674181342124939},{x:.4321230351924896,y:.6496355533599854,z:.03124697133898735},{x:.508686363697052,y:.6479565501213074,z:-.00044765998609364033},{x:.4963986277580261,y:.6431032419204712,z:-.0032507688738405704},{x:.4845542013645172,y:.6430778503417969,z:-.002903624437749386},{x:.4733612537384033,y:.647506833076477,z:.00023347247042693198},{x:.4668654501438141,y:.653346598148346,z:.004762572236359119},{x:.41815051436424255,y:.633708119392395,z:.09809435904026031},{x:.47159942984580994,y:.6711485385894775,z:.007849935442209244},{x:.5734396576881409,y:.8256140351295471,z:-.03155219927430153},{x:.5306524038314819,y:.8337990641593933,z:-.018351426348090172},{x:.5371729135513306,y:.7910830974578857,z:-.037286680191755295},{x:.5549534559249878,y:.8275275826454163,z:-.030664825811982155},{x:.5597432255744934,y:.6418541669845581,z:-.03318847343325615},{x:.4958484172821045,y:.9429569244384766,z:.048340678215026855},{x:.5140507817268372,y:.9634028077125549,z:.03589847311377525},{x:.5587693452835083,y:.9951097369194031,z:.00908728688955307},{x:.46411189436912537,y:.9051855206489563,z:.10601935535669327},{x:.5181609392166138,y:.6554316878318787,z:.002546071307733655},{x:.5436590909957886,y:.7085841298103333,z:-.03844436630606651},{x:.5872187614440918,y:.9960382580757141,z:.0063423276878893375},{x:.5379653573036194,y:.9989125728607178,z:.03636329993605614},{x:.4350326955318451,y:.8088565468788147,z:.09147704392671585},{x:.5523084998130798,y:.8773422837257385,z:-.009068487212061882},{x:.5510149598121643,y:.8816931843757629,z:-.011043853126466274},{x:.5503793954849243,y:.88776695728302,z:-.01348799467086792},{x:.5501549243927002,y:.8954370617866516,z:-.012142189778387547},{x:.546072781085968,y:.9192524552345276,z:-.003157563041895628},{x:.5314661860466003,y:.8771666884422302,z:.0005075141089037061},{x:.5293324589729309,y:.8762547969818115,z:.00039177737198770046},{x:.5275698900222778,y:.8750609755516052,z:47732755774632096e-21},{x:.5104271173477173,y:.8607332110404968,z:.0012934643309563398},{x:.45938700437545776,y:.8134918212890625,z:.023569690063595772},{x:.5418947339057922,y:.6864100694656372,z:-.027333909645676613},{x:.531914234161377,y:.6456130743026733,z:-.005434140563011169},{x:.523697018623352,y:.647885262966156,z:-.0002466466394253075},{x:.5338191390037537,y:.8783687353134155,z:.002268768846988678},{x:.46226605772972107,y:.8610277771949768,z:.04718952998518944},{x:.5434442758560181,y:.6456181406974792,z:-.02327350154519081},{x:.5399754643440247,y:.940219521522522,z:.005075343884527683},{x:.5661457777023315,y:.71457839012146,z:-.06242101639509201},{x:.5523148775100708,y:.6974870562553406,z:-.04863070324063301},{x:.5639959573745728,y:.6923378109931946,z:-.05180761218070984},{x:.5367592573165894,y:.7423217296600342,z:-.03623027727007866},{x:.5853689908981323,y:.9752064943313599,z:-.002361974213272333},{x:.5835235118865967,y:.9493685960769653,z:-.003941743168979883},{x:.5615018606185913,y:.949194610118866,z:-.0015953965485095978},{x:.5068561434745789,y:.9048219323158264,z:.01862684078514576},{x:.5134067535400391,y:.7971825003623962,z:-.008485661819577217},{x:.5223897099494934,y:.925589919090271,z:.01249657291918993},{x:.48500555753707886,y:.7959478497505188,z:-.0032065745908766985},{x:.5037734508514404,y:.8184596300125122,z:-.004932103678584099},{x:.4766361117362976,y:.828806459903717,z:.01027688942849636},{x:.5589827299118042,y:.974656343460083,z:.0009666886180639267},{x:.5294582843780518,y:.7541216611862183,z:-.025603046640753746},{x:.4973002076148987,y:.9208990931510925,z:.031931452453136444},{x:.5163551568984985,y:.9432790875434875,z:.024321340024471283},{x:.49399662017822266,y:.8814862370491028,z:.018687399104237556},{x:.44948166608810425,y:.836137592792511,z:.05702034756541252},{x:.47898444533348083,y:.8836610913276672,z:.03150695189833641},{x:.4454479217529297,y:.8499438166618347,z:.08868525922298431},{x:.49572959542274475,y:.8452823758125305,z:.0036111653316766024},{x:.5362502336502075,y:.7222585678100586,z:-.027912352234125137},{x:.5393770337104797,y:.7850722074508667,z:-.05415399745106697},{x:.531399667263031,y:.7898418307304382,z:-.03883346915245056},{x:.5451627373695374,y:.7717036604881287,z:-.06480253487825394},{x:.5206395983695984,y:.6287745833396912,z:-.010521138086915016},{x:.4974782466888428,y:.6191938519477844,z:-.014098240062594414},{x:.4774145185947418,y:.6193130612373352,z:-.013643337413668633},{x:.4616098403930664,y:.6259890198707581,z:-.008448202162981033},{x:.4516478478908539,y:.6368461847305298,z:9050309745362028e-20},{x:.4485096037387848,y:.6719120740890503,z:.022984720766544342},{x:.42177659273147583,y:.7240667343139648,z:.08511673659086227},{x:.4616215229034424,y:.6988231539726257,z:.014238474890589714},{x:.4755798876285553,y:.7034608721733093,z:.00625590980052948},{x:.4924992024898529,y:.7005885243415833,z:.0009391739731654525},{x:.5082254409790039,y:.693384051322937,z:-.0009464038303121924},{x:.5203112959861755,y:.6849707961082458,z:-.0022114769089967012},{x:.52867591381073,y:.6779075860977173,z:-.002962538506835699},{x:.4213953912258148,y:.7219811677932739,z:.1350894570350647},{x:.5320829749107361,y:.794858992099762,z:-.03181503340601921},{x:.5452795028686523,y:.7286570072174072,z:-.04771539941430092},{x:.5496407747268677,y:.7866933345794678,z:-.06452003121376038},{x:.557040274143219,y:.7962084412574768,z:-.05837344378232956},{x:.549176812171936,y:.7895247936248779,z:-.057761140167713165},{x:.5362890362739563,y:.8005836606025696,z:-.026903774589300156},{x:.560200035572052,y:.7983731031417847,z:-.06172555685043335},{x:.5616944432258606,y:.8022753596305847,z:-.045200999826192856},{x:.5273328423500061,y:.6611284017562866,z:.0029021520167589188},{x:.534850537776947,y:.6660012006759644,z:-.005215510260313749},{x:.5394860506057739,y:.6701375246047974,z:-.014931917190551758},{x:.4634307324886322,y:.658291757106781,z:.009295716881752014},{x:.4538393020629883,y:.6519932150840759,z:.00930330716073513},{x:.5776031613349915,y:.7159298658370972,z:-.057365912944078445},{x:.6504855155944824,y:.6461779475212097,z:.014184834435582161},{x:.5860154032707214,y:.7962266206741333,z:-.04522843658924103},{x:.6842049360275269,y:.5631637573242188,z:.07207967340946198},{x:.6152560710906982,y:.6674962639808655,z:.0007529259892180562},{x:.6280948519706726,y:.6684326529502869,z:.0016892586136236787},{x:.6408625245094299,y:.6663892269134521,z:.005331226624548435},{x:.6557814478874207,y:.6534678936004639,z:.01646413467824459},{x:.6035663485527039,y:.6639701724052429,z:.0013799630105495453},{x:.6329053044319153,y:.608010470867157,z:-.006195899099111557},{x:.6167260408401489,y:.6117533445358276,z:-.006319951266050339},{x:.6471013426780701,y:.6112449765205383,z:-.0017843559617176652},{x:.6560901999473572,y:.6185776591300964,z:.004047257360070944},{x:.6666946411132812,y:.6651176810264587,z:.023647578433156013},{x:.6311345100402832,y:.9495396018028259,z:.014004078693687916},{x:.6544655561447144,y:.6397901773452759,z:.01809609681367874},{x:.6965808868408203,y:.6482675075531006,z:.08304904401302338},{x:.679817259311676,y:.650188148021698,z:.03632688894867897},{x:.6336516737937927,y:.7541458010673523,z:-.007742783520370722},{x:.5921701192855835,y:.8567668199539185,z:-.029399123042821884},{x:.591663658618927,y:.870215654373169,z:-.02103729173541069},{x:.6068367958068848,y:.8584195375442505,z:-.020668085664510727},{x:.6176617741584778,y:.860965371131897,z:-.009790095500648022},{x:.6040634512901306,y:.8686612844467163,z:-.015289564616978168},{x:.6143736839294434,y:.8671170473098755,z:-.005712216719985008},{x:.6373105049133301,y:.8815656900405884,z:.012672550976276398},{x:.5832505822181702,y:.7866312861442566,z:-.07051534950733185},{x:.5836675763130188,y:.7658692598342896,z:-.07566110789775848},{x:.6709531545639038,y:.604898989200592,z:.005951565690338612},{x:.6029891967773438,y:.705652117729187,z:-.013388276100158691},{x:.6131622195243835,y:.7728396058082581,z:-.036248479038476944},{x:.6123163104057312,y:.7612020373344421,z:-.03264721855521202},{x:.6696187853813171,y:.744706928730011,z:.009673702530562878},{x:.5803102254867554,y:.7385968565940857,z:-.0689152330160141},{x:.6404349207878113,y:.5877999663352966,z:-.01929756999015808},{x:.6588467955589294,y:.5929454565048218,z:-.008487257175147533},{x:.6720337867736816,y:.530631422996521,z:.043437421321868896},{x:.584305465221405,y:.6099005341529846,z:-.030301367864012718},{x:.6034283638000488,y:.6217452883720398,z:-.001970183802768588},{x:.6460927724838257,y:.8608663082122803,z:.015541625209152699},{x:.6957815289497375,y:.8326103091239929,z:.13015234470367432},{x:.6043362617492676,y:.7861682772636414,z:-.030476901680231094},{x:.594293475151062,y:.7942103147506714,z:-.032218821346759796},{x:.6324057579040527,y:.8665139675140381,z:.014255806803703308},{x:.6296147704124451,y:.8667733669281006,z:.010388285852968693},{x:.663644552230835,y:.5798642635345459,z:-.0022301070857793093},{x:.6140630841255188,y:.7809288501739502,z:-.02835679054260254},{x:.615908145904541,y:.5921698212623596,z:-.026804860681295395},{x:.617181122303009,y:.5748661756515503,z:-.03060605563223362},{x:.6222207546234131,y:.49137672781944275,z:-.011151673272252083},{x:.6669357419013977,y:.5541607141494751,z:.017466170713305473},{x:.6182981729507446,y:.5320425629615784,z:-.021793590858578682},{x:.6760554313659668,y:.595052182674408,z:.017115700989961624},{x:.6801463961601257,y:.5800720453262329,z:.043127160519361496},{x:.5922210812568665,y:.8644017577171326,z:-.02662893570959568},{x:.6054555177688599,y:.8637874722480774,z:-.018363753333687782},{x:.6161889433860779,y:.8641164898872375,z:-.008808949030935764},{x:.6017249822616577,y:.7901403307914734,z:-.028126630932092667},{x:.631446123123169,y:.8664817810058594,z:.012112865224480629},{x:.6249198913574219,y:.8716511130332947,z:.003882825840264559},{x:.6281915903091431,y:.867301881313324,z:.009891441091895103},{x:.5986843109130859,y:.7813931703567505,z:-.050227612257003784},{x:.6126407384872437,y:.869275689125061,z:-.0031255714129656553},{x:.6027271151542664,y:.8711842894554138,z:-.009324162267148495},{x:.59088134765625,y:.8742044568061829,z:-.014608660712838173},{x:.5984604358673096,y:.9216185212135315,z:-.005981989670544863},{x:.5950398445129395,y:.8964707255363464,z:-.01703473925590515},{x:.5941568613052368,y:.8882410526275635,z:-.017784785479307175},{x:.5928806662559509,y:.8803883194923401,z:-.014153128489851952},{x:.5909661054611206,y:.8748103976249695,z:-.012609979137778282},{x:.6128016710281372,y:.8702545762062073,z:-.0022550546564161777},{x:.6150846481323242,y:.8726804256439209,z:-.00414019962772727},{x:.6173093914985657,y:.8770190477371216,z:-.005970994010567665},{x:.619335412979126,y:.8814800977706909,z:-.0036864024586975574},{x:.6292637586593628,y:.8314558267593384,z:-.007714875973761082},{x:.702275276184082,y:.7320667505264282,z:.1433621346950531},{x:.6204835176467896,y:.8689177632331848,z:.0044869170524179935},{x:.6223508715629578,y:.8704851269721985,z:.00352082890458405},{x:.590448260307312,y:.8029727935791016,z:-.03200828656554222},{x:.6097423434257507,y:.7933741211891174,z:-.018042555078864098},{x:.59229576587677,y:.7993767261505127,z:-.032564569264650345},{x:.6171364188194275,y:.7153720259666443,z:-.007672437466681004},{x:.6389747858047485,y:.726390540599823,z:-.002999067772179842},{x:.6151940226554871,y:.769412100315094,z:-.024427521973848343},{x:.6526776552200317,y:.505868136882782,z:.01412637997418642},{x:.6475822329521179,y:.5375454425811768,z:-.0033899128902703524},{x:.6433356404304504,y:.5714520215988159,z:-.017428796738386154},{x:.626949667930603,y:.8962116837501526,z:.005602736957371235},{x:.5868416428565979,y:.5829002261161804,z:-.03727729618549347},{x:.5877229571342468,y:.5345035791397095,z:-.032396964728832245},{x:.5887066125869751,y:.48655083775520325,z:-.025856535881757736},{x:.6507197618484497,y:.6612282991409302,z:.011114613153040409},{x:.6803066730499268,y:.677992045879364,z:.032125361263751984},{x:.5963194370269775,y:.6598632335662842,z:.002976928371936083},{x:.667536199092865,y:.6274255514144897,z:.015618261881172657},{x:.5930740833282471,y:.6940041780471802,z:-.019217798486351967},{x:.6053346395492554,y:.7676517963409424,z:-.050308309495449066},{x:.6934473514556885,y:.6884298920631409,z:.04794462397694588},{x:.6738007664680481,y:.6934011578559875,z:.020697161555290222},{x:.6588084697723389,y:.7033141851425171,z:.008462334051728249},{x:.6346072554588318,y:.7029502391815186,z:.001542167621664703},{x:.6157816648483276,y:.6966525912284851,z:-.002009218093007803},{x:.6015574336051941,y:.688928484916687,z:-.006588225718587637},{x:.5746836066246033,y:.6711069345474243,z:-.03597589209675789},{x:.6947521567344666,y:.7309479117393494,z:.046707939356565475},{x:.6759101152420044,y:.6249120831489563,z:.021654341369867325},{x:.5794773101806641,y:.7971615195274353,z:-.06339326500892639},{x:.6041849851608276,y:.727514922618866,z:-.017512541264295578},{x:.6968844532966614,y:.6440950036048889,z:.12727996706962585},{x:.5910853147506714,y:.679325520992279,z:-.009497715160250664},{x:.6157375574111938,y:.7695677280426025,z:-.010624290443956852},{x:.6606494784355164,y:.6410489678382874,z:.0208158977329731},{x:.6040687561035156,y:.7531470656394958,z:-.045887019485235214},{x:.7012156248092651,y:.780247151851654,z:.14028730988502502},{x:.595149576663971,y:.6527782678604126,z:.006308757700026035},{x:.5925500392913818,y:.7436665892601013,z:-.060151755809783936},{x:.6780198812484741,y:.8905693888664246,z:.0626060739159584},{x:.676746666431427,y:.9113880395889282,z:.08726003766059875},{x:.7030686140060425,y:.7312687635421753,z:.09529774636030197},{x:.688987135887146,y:.8588417172431946,z:.07752864807844162},{x:.6883691549301147,y:.6109960675239563,z:.06669612973928452},{x:.6358906030654907,y:.9702065587043762,z:.023120900616049767},{x:.5781539678573608,y:.8023634552955627,z:-.044763918966054916},{x:.6170316934585571,y:.7408350706100464,z:-.011375460773706436},{x:.688542366027832,y:.6516284346580505,z:.050206027925014496},{x:.6385149359703064,y:.6540714502334595,z:.006462941411882639},{x:.6279382109642029,y:.6563615798950195,z:.003062846139073372},{x:.6268895268440247,y:.8736732006072998,z:.00627936702221632},{x:.6944946050643921,y:.7709181308746338,z:.053824134171009064},{x:.614617109298706,y:1.0022112131118774,z:.02719894051551819},{x:.6493719220161438,y:.9665167927742004,z:.053563784807920456},{x:.6624587178230286,y:.943530797958374,z:.068605437874794},{x:.6162528991699219,y:.6558693051338196,z:.002187855076044798},{x:.6058168411254883,y:.654328465461731,z:.0036193584091961384},{x:.5987918972969055,y:.6536934971809387,z:.006134530063718557},{x:.6831037402153015,y:.6195642948150635,z:.03511790186166763},{x:.6062582731246948,y:.6356398463249207,z:.001280312892049551},{x:.6174948811531067,y:.62776118516922,z:-.0013642468256875873},{x:.6297246217727661,y:.6253792643547058,z:-.0007034156005829573},{x:.6407091617584229,y:.627578616142273,z:.0028144705574959517},{x:.6479622721672058,y:.6322650909423828,z:.00750273372977972},{x:.6915091276168823,y:.5990704298019409,z:.10270945727825165},{x:.6457163095474243,y:.6504453420639038,z:.010696077719330788},{x:.6164222955703735,y:.8231936097145081,z:-.016772059723734856},{x:.6042401194572449,y:.7830976843833923,z:-.03630910441279411},{x:.5922216773033142,y:.8228387236595154,z:-.029992375522851944},{x:.6646111011505127,y:.92097008228302,z:.050967294722795486},{x:.651232898235321,y:.9460107088088989,z:.038000158965587616},{x:.6140977144241333,y:.9882472157478333,z:.009882091544568539},{x:.6870781183242798,y:.8768675327301025,z:.10980932414531708},{x:.5986856818199158,y:.6456438899040222,z:.003999010659754276},{x:.585981547832489,y:.7034481763839722,z:-.0377722829580307},{x:.6342031359672546,y:.9867448806762695,z:.03786521404981613},{x:.7013950943946838,y:.776049017906189,z:.09598205983638763},{x:.6030206680297852,y:.8719133138656616,z:-.007931148633360863},{x:.6050592064857483,y:.8767156004905701,z:-.009791925549507141},{x:.6073468923568726,y:.8831382393836975,z:-.012361008673906326},{x:.6087977290153503,y:.890143632888794,z:-.01098148338496685},{x:.6147705316543579,y:.9110084772109985,z:-.0018823575228452682},{x:.622577965259552,y:.8670604825019836,z:.002609190298244357},{x:.6241236329078674,y:.8651344180107117,z:.0025534380692988634},{x:.6257084608078003,y:.8638408184051514,z:.0023300074972212315},{x:.639931321144104,y:.8449671268463135,z:.0038123116828501225},{x:.6810906529426575,y:.7856625318527222,z:.02717764675617218},{x:.583532452583313,y:.6811994910240173,z:-.026588857173919678},{x:.5855660438537598,y:.6393819451332092,z:-.004512844607234001},{x:.5932201743125916,y:.6398029327392578,z:.0008020466193556786},{x:.6200879812240601,y:.8683351874351501,z:.00417016725987196},{x:.6842559576034546,y:.8330534100532532,z:.050836317241191864},{x:.5754412412643433,y:.6418221592903137,z:-.022838059812784195},{x:.6232790350914001,y:.9295297265052795,z:.006339520215988159},{x:.5764067769050598,y:.694546639919281,z:-.04825803264975548},{x:.59778892993927,y:.7343927621841431,z:-.035004377365112305},{x:.6042810678482056,y:.9441440105438232,z:-.0010970570147037506},{x:.6496372222900391,y:.8869078159332275,z:.021036235615611076},{x:.6274012327194214,y:.7830310463905334,z:-.006658440921455622},{x:.637792706489563,y:.9104999899864197,z:.014290250837802887},{x:.6549934148788452,y:.7748609185218811,z:-.0006672973395325243},{x:.6404005289077759,y:.801220715045929,z:-.0026642554439604282},{x:.6671456694602966,y:.8045546412467957,z:.013180811889469624},{x:.6107483506202698,y:.9680658578872681,z:.001778992242179811},{x:.6060343980789185,y:.744587242603302,z:-.024382334202528},{x:.6602751612663269,y:.8998945355415344,z:.0344940721988678},{x:.6463775038719177,y:.9262562394142151,z:.02617623284459114},{x:.6579852104187012,y:.8602304458618164,z:.021586716175079346},{x:.6926165223121643,y:.8053340315818787,z:.061075080186128616},{x:.6724731922149658,y:.8594399690628052,z:.03457934781908989},{x:.6975721716880798,y:.8183245062828064,z:.09300774335861206},{x:.6512877941131592,y:.8258221745491028,z:.006324059329926968},{x:.594887375831604,y:.7148372530937195,z:-.026898479089140892},{x:.6017440557479858,y:.7773507833480835,z:-.05312420800328255},{x:.6096571683883667,y:.7806998491287231,z:-.037646256387233734},{x:.5952993035316467,y:.7654367685317993,z:-.06398405134677887},{x:.5950021147727966,y:.6201304793357849,z:-.009297547861933708},{x:.6165438890457153,y:.6052900552749634,z:-.012455573305487633},{x:.6362661719322205,y:.6015968918800354,z:-.011649220250546932},{x:.6522727608680725,y:.6046400666236877,z:-.005903332494199276},{x:.6625409722328186,y:.6128141283988953,z:.0030042496509850025},{x:.6688099503517151,y:.6457712054252625,z:.026322703808546066},{x:.7013440728187561,y:.6893666386604309,z:.08984331786632538},{x:.6608623266220093,y:.6749406456947327,z:.0172116681933403},{x:.6482325196266174,y:.6823726296424866,z:.008881398476660252},{x:.6313265562057495,y:.6842025518417358,z:.0031308617908507586},{x:.6147016286849976,y:.6809731721878052,z:.0007630771724507213},{x:.6018834114074707,y:.6755372285842896,z:-.0008834321051836014},{x:.5925027132034302,y:.670681357383728,z:-.001968748401850462},{x:.700127363204956,y:.6871103644371033,z:.13980500400066376},{x:.6095665693283081,y:.7853189706802368,z:-.03074747882783413},{x:.5880423784255981,y:.7229287028312683,z:-.04691500961780548},{x:.5930182337760925,y:.7811514139175415,z:-.06398335844278336},{x:.5867722034454346,y:.7922660112380981,z:-.05794971063733101},{x:.5933279991149902,y:.7842848896980286,z:-.05714067071676254},{x:.6063535809516907,y:.7920218706130981,z:-.02590685710310936},{x:.5839452743530273,y:.794978141784668,z:-.0615212507545948},{x:.5828126072883606,y:.8000800013542175,z:-.0449722595512867},{x:.5909603834152222,y:.6541213393211365,z:.003991890233010054},{x:.5852181911468506,y:.6602938771247864,z:-.004428438376635313},{x:.5825737714767456,y:.6651063561439514,z:-.014345290139317513},{x:.6517343521118164,y:.6362385153770447,z:.012151890434324741},{x:.6615052819252014,y:.6281577944755554,z:.0123682152479887},{x:.4856873154640198,y:.6568945646286011,z:.000720038078725338},{x:.49988406896591187,y:.6547410488128662,z:.0006949726957827806},{x:.48438939452171326,y:.6392973065376282,z:.000705525919329375},{x:.47143134474754333,y:.6589511632919312,z:.0006980331381782889},{x:.48704618215560913,y:.6752797961235046,z:.0006921177846379578},{x:.6243702173233032,y:.640461802482605,z:-6592126737814397e-20},{x:.6390967965126038,y:.6385173797607422,z:-.00016105435497593135},{x:.6230536699295044,y:.6224825382232666,z:-.00016136496560648084},{x:.6095397472381592,y:.641917884349823,z:-.0001803556369850412},{x:.6250996589660645,y:.6586247682571411,z:-.0001785515050869435}]],faceBlendshapes:[{categories:[{index:0,score:5187174338061595e-21,categoryName:\"_neutral\",displayName:\"\"},{index:1,score:.24521504342556,categoryName:\"browDownLeft\",displayName:\"\"},{index:2,score:.1987743377685547,categoryName:\"browDownRight\",displayName:\"\"},{index:3,score:.013400448486208916,categoryName:\"browInnerUp\",displayName:\"\"},{index:4,score:.012361560948193073,categoryName:\"browOuterUpLeft\",displayName:\"\"},{index:5,score:.019305096939206123,categoryName:\"browOuterUpRight\",displayName:\"\"},{index:6,score:28426356948330067e-21,categoryName:\"cheekPuff\",displayName:\"\"},{index:7,score:3.4500112633395474e-7,categoryName:\"cheekSquintLeft\",displayName:\"\"},{index:8,score:4.83789051486383e-7,categoryName:\"cheekSquintRight\",displayName:\"\"},{index:9,score:.07650448381900787,categoryName:\"eyeBlinkLeft\",displayName:\"\"},{index:10,score:.05070012807846069,categoryName:\"eyeBlinkRight\",displayName:\"\"},{index:11,score:.13978900015354156,categoryName:\"eyeLookDownLeft\",displayName:\"\"},{index:12,score:.14198613166809082,categoryName:\"eyeLookDownRight\",displayName:\"\"},{index:13,score:.2177766114473343,categoryName:\"eyeLookInLeft\",displayName:\"\"},{index:14,score:.014739357866346836,categoryName:\"eyeLookInRight\",displayName:\"\"},{index:15,score:.02361512929201126,categoryName:\"eyeLookOutLeft\",displayName:\"\"},{index:16,score:.19679604470729828,categoryName:\"eyeLookOutRight\",displayName:\"\"},{index:17,score:.04874616861343384,categoryName:\"eyeLookUpLeft\",displayName:\"\"},{index:18,score:.049392376095056534,categoryName:\"eyeLookUpRight\",displayName:\"\"},{index:19,score:.34944331645965576,categoryName:\"eyeSquintLeft\",displayName:\"\"},{index:20,score:.2939716875553131,categoryName:\"eyeSquintRight\",displayName:\"\"},{index:21,score:.005955042317509651,categoryName:\"eyeWideLeft\",displayName:\"\"},{index:22,score:.006776117719709873,categoryName:\"eyeWideRight\",displayName:\"\"},{index:23,score:16942436559475027e-21,categoryName:\"jawForward\",displayName:\"\"},{index:24,score:.0045165494084358215,categoryName:\"jawLeft\",displayName:\"\"},{index:25,score:.07803940027952194,categoryName:\"jawOpen\",displayName:\"\"},{index:26,score:2090057751047425e-20,categoryName:\"jawRight\",displayName:\"\"},{index:27,score:.06032035872340202,categoryName:\"mouthClose\",displayName:\"\"},{index:28,score:.00228882092051208,categoryName:\"mouthDimpleLeft\",displayName:\"\"},{index:29,score:.00781762320548296,categoryName:\"mouthDimpleRight\",displayName:\"\"},{index:30,score:.0017093931091949344,categoryName:\"mouthFrownLeft\",displayName:\"\"},{index:31,score:.0019319106359034777,categoryName:\"mouthFrownRight\",displayName:\"\"},{index:32,score:8485237776767462e-20,categoryName:\"mouthFunnel\",displayName:\"\"},{index:33,score:.0009051355300471187,categoryName:\"mouthLeft\",displayName:\"\"},{index:34,score:.0003630454302765429,categoryName:\"mouthLowerDownLeft\",displayName:\"\"},{index:35,score:.00017601238505449146,categoryName:\"mouthLowerDownRight\",displayName:\"\"},{index:36,score:.12865161895751953,categoryName:\"mouthPressLeft\",displayName:\"\"},{index:37,score:.20137207210063934,categoryName:\"mouthPressRight\",displayName:\"\"},{index:38,score:.0022203284315764904,categoryName:\"mouthPucker\",displayName:\"\"},{index:39,score:.0009096377179957926,categoryName:\"mouthRight\",displayName:\"\"},{index:40,score:.34189721941947937,categoryName:\"mouthRollLower\",displayName:\"\"},{index:41,score:.11409689486026764,categoryName:\"mouthRollUpper\",displayName:\"\"},{index:42,score:.17172536253929138,categoryName:\"mouthShrugLower\",displayName:\"\"},{index:43,score:.004038424696773291,categoryName:\"mouthShrugUpper\",displayName:\"\"},{index:44,score:.00023205230536404997,categoryName:\"mouthSmileLeft\",displayName:\"\"},{index:45,score:.00019313619122840464,categoryName:\"mouthSmileRight\",displayName:\"\"},{index:46,score:.0018571305554360151,categoryName:\"mouthStretchLeft\",displayName:\"\"},{index:47,score:.0023813238367438316,categoryName:\"mouthStretchRight\",displayName:\"\"},{index:48,score:24323100660694763e-21,categoryName:\"mouthUpperUpLeft\",displayName:\"\"},{index:49,score:3161552012898028e-20,categoryName:\"mouthUpperUpRight\",displayName:\"\"},{index:50,score:1.08198406678639e-7,categoryName:\"noseSneerLeft\",displayName:\"\"},{index:51,score:12652527630052646e-22,categoryName:\"noseSneerRight\",displayName:\"\"}],headIndex:-1,headName:\"\"}],facialTransformationMatrixes:[{rows:4,columns:4,data:[.9947517514228821,.10230544209480286,.0013679931871592999,0,-.10230997204780579,.9947447776794434,.003816320328041911,0,-.000970348424743861,-.0039362297393381596,.9999914169311523,0,2.8888821601867676,-7.808934211730957,-30.52109146118164,1]}]}},wt=t.createContext({}),bt={basePath:\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.2/wasm\",options:{baseOptions:{modelAssetPath:\"https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task\",delegate:\"GPU\"},runningMode:\"VIDEO\",outputFaceBlendshapes:!0,outputFacialTransformationMatrixes:!0}};function Et(){return t.useContext(wt)}function Mt(e,t){return e.clone().add(t).multiplyScalar(.5)}function St(e,t,r){const n=e.localToWorld(t);return r.worldToLocal(n)}const Ct=t.createContext({}),Pt=t.forwardRef((({camera:e,autostart:r=!0,webcam:n=!0,webcamVideoTextureSrc:o,manualUpdate:i=!1,manualDetect:l=!1,onVideoFrame:c,smoothTime:u=.25,offset:d=!0,offsetScalar:m=80,eyes:f=!1,eyesAsOrigin:p=!0,depth:h=.15,debug:y=!1,facemesh:x,makeDefault:v},g)=>{var z,w;const b=a.useThree((e=>e.scene)),E=a.useThree((e=>e.camera)),M=a.useThree((e=>e.set)),S=a.useThree((e=>e.get)),C=e||E,P=t.useRef(null),T=t.useRef(null),[F]=t.useState((()=>new D.Object3D)),[L]=t.useState((()=>new D.Vector3)),[A]=t.useState((()=>new D.Vector3)),[_]=t.useState((()=>new D.Vector3)),[O]=t.useState((()=>new D.Vector3)),N=t.useCallback((()=>{F.parent=C.parent;const e=T.current;if(e){const{outerRef:t,eyeRightRef:r,eyeLeftRef:n}=e;if(r.current&&n.current){const{irisDirRef:e}=r.current,{irisDirRef:a}=n.current;e.current&&a.current&&t.current&&(L.copy(St(e.current,new D.Vector3(0,0,0),t.current)),A.copy(St(a.current,new D.Vector3(0,0,0),t.current)),F.position.copy(St(t.current,Mt(L,A),C.parent||b)),_.copy(St(e.current,new D.Vector3(0,0,1),t.current)),O.copy(St(a.current,new D.Vector3(0,0,1),t.current)),F.lookAt(t.current.localToWorld(Mt(_,O))))}else t.current&&(F.position.copy(St(t.current,new D.Vector3(0,0,0),C.parent||b)),F.lookAt(t.current.localToWorld(new D.Vector3(0,0,1))))}return F}),[C,A,O,L,_,b,F]),[B]=t.useState((()=>new D.Object3D)),I=t.useCallback((function(e,t){if(C){var r;if(null!==(r=t)&&void 0!==r||(t=N()),u>0){const r=1e-9;s.easing.damp3(B.position,t.position,u,e,void 0,void 0,r),s.easing.dampE(B.rotation,t.rotation,u,e,void 0,void 0,r)}else B.position.copy(t.position),B.rotation.copy(t.rotation);C.position.copy(B.position),C.rotation.copy(B.rotation)}}),[C,N,u,B.position,B.rotation]),[U,V]=t.useState(),j=Et(),W=t.useCallback(((e,t)=>{const r=null==j?void 0:j.detectForVideo(e,t);V(r)}),[j]);a.useFrame(((e,t)=>{i||I(t)}));const G=t.useMemo((()=>Object.assign(Object.create(D.EventDispatcher.prototype),{detect:W,computeTarget:N,update:I,facemeshApiRef:T,webcamApiRef:P,play:()=>{var e;null==(e=P.current)||null==(e=e.videoTextureApiRef.current)||e.texture.source.data.play()},pause:()=>{var e;null==(e=P.current)||null==(e=e.videoTextureApiRef.current)||e.texture.source.data.pause()}})),[W,N,I]);t.useImperativeHandle(g,(()=>G),[G]),t.useEffect((()=>{const e=e=>{l||W(e.texture.source.data,e.time),c&&c(e)};return G.addEventListener(\"videoFrame\",e),()=>{G.removeEventListener(\"videoFrame\",e)}}),[G,W,j,l,c]),t.useEffect((()=>{if(v){const e=S().controls;return M({controls:G}),()=>M({controls:e})}}),[v,G,S,M]);const H=null==U?void 0:U.faceLandmarks[0],$=null==U||null==(z=U.facialTransformationMatrixes)?void 0:z[0],q=null==U||null==(w=U.faceBlendshapes)?void 0:w[0];return k.createElement(Ct.Provider,{value:G},n&&k.createElement(t.Suspense,{fallback:null},k.createElement(Rt,{ref:P,autostart:r,videoTextureSrc:o})),k.createElement(xt,R.default({ref:T},x,{points:H,depth:h,facialTransformationMatrix:$,faceBlendshapes:q,eyes:f,eyesAsOrigin:p,offset:d,offsetScalar:m,debug:y,\"rotation-z\":Math.PI,visible:y}),k.createElement(\"meshBasicMaterial\",{side:D.DoubleSide})))})),Tt=()=>t.useContext(Ct),Rt=t.forwardRef((({videoTextureSrc:e,autostart:r=!0},n)=>{const a=t.useRef(null),o=Tt(),i=p.suspend((async()=>e?Promise.resolve(null):await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:\"user\"}})),[e]);t.useEffect((()=>(o.dispatchEvent({type:\"stream\",stream:i}),()=>{null==i||i.getTracks().forEach((e=>e.stop())),p.clear([e])})),[i,o,e]);const s=t.useMemo((()=>({videoTextureApiRef:a})),[]);return t.useImperativeHandle(n,(()=>s),[s]),k.createElement(t.Suspense,{fallback:null},k.createElement(kt,{ref:a,src:e||i,start:r}))})),kt=t.forwardRef((({src:e,start:r},n)=>{const a=pt(e,{start:r}),o=a.source.data,i=Tt(),s=t.useCallback((e=>{i.dispatchEvent({type:\"videoFrame\",texture:a,time:e})}),[a,i]);Ft(o,s);const l=t.useMemo((()=>({texture:a})),[a]);return t.useImperativeHandle(n,(()=>l),[l]),k.createElement(k.Fragment,null)})),Ft=(e,r)=>{t.useEffect((()=>{if(!e||!e.requestVideoFrameCallback)return;let t;return e.requestVideoFrameCallback((function n(...a){r(...a),t=e.requestVideoFrameCallback(n)})),()=>e.cancelVideoFrameCallback(t)}),[e,r])},Dt=k.createContext(null);function Lt(){return k.useContext(Dt)}function At({points:e=50}){const{path:t}=Lt(),[r,n]=k.useState([]),[a]=k.useState((()=>new D.MeshBasicMaterial({color:\"black\"}))),[o]=k.useState((()=>new D.SphereGeometry(.025,16,16))),i=k.useRef([]);return k.useEffect((()=>{t.curves!==i.current&&(n(t.getPoints(e)),i.current=t.curves)})),k.createElement(k.Fragment,null,r.map(((e,t)=>k.createElement(\"mesh\",{key:t,material:a,geometry:o,position:[e.x,e.y,e.z]}))))}const _t=k.forwardRef((({children:e,curves:t=[],object:r,debug:n=!1,smooth:o=!1,focus:i,offset:l,eps:c=1e-5,damping:u=.1,focusDamping:d=.1,maxSpeed:m=1/0,...f},p)=>{const{camera:h}=a.useThree(),y=k.useRef(),[x]=k.useState((()=>new D.CurvePath)),v=k.useRef(null!=l?l:0),g=k.useMemo((()=>({focus:i,object:(null==r?void 0:r.current)instanceof D.Object3D?r:{current:h},path:x,current:v.current,offset:v.current,point:new D.Vector3,tangent:new D.Vector3,next:new D.Vector3})),[i,r]);k.useLayoutEffect((()=>{var e;x.curves=[];const r=t.length>0?t:null==(e=y.current)?void 0:e.__r3f.objects;for(var n=0;n<r.length;n++)x.add(r[n]);if(o){const e=x.getPoints(\"number\"==typeof o?o:1),t=new D.CatmullRomCurve3(e);x.curves=[t]}x.updateArcLengths()})),k.useImperativeHandle(p,(()=>y.current),[]),k.useLayoutEffect((()=>{v.current=s.misc.repeat(v.current,1)}),[l]);let z=0;const[w]=k.useState((()=>new D.Vector3));return a.useFrame(((e,t)=>{if(z=g.offset,s.easing.damp(v,\"current\",void 0!==l?l:g.current,u,t,m,void 0,c),g.offset=s.misc.repeat(v.current,1),x.getCurveLengths().length>0){x.getPointAt(g.offset,g.point),x.getTangentAt(g.offset,g.tangent).normalize(),x.getPointAt(s.misc.repeat(v.current-(z-g.offset),1),g.next);const e=(null==r?void 0:r.current)instanceof D.Object3D?r.current:h;e.position.copy(g.point),i&&s.easing.dampLookAt(e,(e=>(null==e?void 0:e.current)instanceof D.Object3D)(i)?i.current.getWorldPosition(w):i,d,t,m,void 0,c)}})),k.createElement(\"group\",R.default({ref:y},f),k.createElement(Dt.Provider,{value:g},e,n&&k.createElement(At,null)))}));function Ot({defaultScene:e,defaultCamera:t,renderPriority:r=1}){const{gl:n,scene:o,camera:i}=a.useThree();let s;return a.useFrame((()=>{s=n.autoClear,1===r&&(n.autoClear=!0,n.render(e,t)),n.autoClear=!1,n.clearDepth(),n.render(o,i),n.autoClear=s}),r),k.createElement(\"group\",{onPointerOver:()=>null})}function Nt({children:e,renderPriority:t=1}){const{scene:r,camera:n}=a.useThree(),[o]=k.useState((()=>new D.Scene));return k.createElement(k.Fragment,null,a.createPortal(k.createElement(k.Fragment,null,e,k.createElement(Ot,{defaultScene:r,defaultCamera:n,renderPriority:t})),o,{events:{priority:t+1}}))}const Bt=k.createContext({}),It=()=>k.useContext(Bt),Ut=2*Math.PI,Vt=new n.Object3D,jt=new n.Matrix4,[Wt,Gt]=[new n.Quaternion,new n.Quaternion],Ht=new n.Vector3,$t=new n.Vector3,qt=\"#f0f0f0\",Xt=\"#999\",Yt=\"black\",Kt=\"black\",Qt=[\"Right\",\"Left\",\"Top\",\"Bottom\",\"Front\",\"Back\"],Zt=e=>new n.Vector3(...e).multiplyScalar(.38),Jt=[[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]].map(Zt),er=[.25,.25,.25],tr=[[1,1,0],[1,0,1],[1,0,-1],[1,-1,0],[0,1,1],[0,1,-1],[0,-1,1],[0,-1,-1],[-1,1,0],[-1,0,1],[-1,0,-1],[-1,-1,0]].map(Zt),rr=tr.map((e=>e.toArray().map((e=>0==e?.5:.25)))),nr=({hover:e,index:t,font:r=\"20px Inter var, Arial, sans-serif\",faces:o=Qt,color:i=qt,hoverColor:s=Xt,textColor:l=Yt,strokeColor:c=Kt,opacity:u=1})=>{const d=a.useThree((e=>e.gl)),m=k.useMemo((()=>{const e=document.createElement(\"canvas\");e.width=128,e.height=128;const a=e.getContext(\"2d\");return a.fillStyle=i,a.fillRect(0,0,e.width,e.height),a.strokeStyle=c,a.strokeRect(0,0,e.width,e.height),a.font=r,a.textAlign=\"center\",a.fillStyle=l,a.fillText(o[t].toUpperCase(),64,76),new n.CanvasTexture(e)}),[t,o,r,i,l,c]);return k.createElement(\"meshBasicMaterial\",{map:m,\"map-anisotropy\":d.capabilities.getMaxAnisotropy()||1,attach:`material-${t}`,color:e?s:\"white\",transparent:!0,opacity:u})},ar=e=>{const{tweenCamera:t}=It(),[r,n]=k.useState(null);return k.createElement(\"mesh\",{onPointerOut:e=>{e.stopPropagation(),n(null)},onPointerMove:e=>{e.stopPropagation(),n(Math.floor(e.faceIndex/2))},onClick:e.onClick||(e=>{e.stopPropagation(),t(e.face.normal)})},[...Array(6)].map(((t,n)=>k.createElement(nr,R.default({key:n,index:n,hover:r===n},e)))),k.createElement(\"boxGeometry\",null))},or=({onClick:e,dimensions:t,position:r,hoverColor:n=Xt})=>{const{tweenCamera:a}=It(),[o,i]=k.useState(!1);return k.createElement(\"mesh\",{scale:1.01,position:r,onPointerOver:e=>{e.stopPropagation(),i(!0)},onPointerOut:e=>{e.stopPropagation(),i(!1)},onClick:e||(e=>{e.stopPropagation(),a(r)})},k.createElement(\"meshBasicMaterial\",{color:o?n:\"white\",transparent:!0,opacity:.6,visible:o}),k.createElement(\"boxGeometry\",{args:t}))};function ir({scale:e=[.8,.05,.05],color:t,rotation:r}){return k.createElement(\"group\",{rotation:r},k.createElement(\"mesh\",{position:[.4,0,0]},k.createElement(\"boxGeometry\",{args:e}),k.createElement(\"meshBasicMaterial\",{color:t,toneMapped:!1})))}function sr({onClick:e,font:t,disabled:r,arcStyle:o,label:i,labelColor:s,axisHeadScale:l=1,...c}){const u=a.useThree((e=>e.gl)),d=k.useMemo((()=>{const e=document.createElement(\"canvas\");e.width=64,e.height=64;const r=e.getContext(\"2d\");return r.beginPath(),r.arc(32,32,16,0,2*Math.PI),r.closePath(),r.fillStyle=o,r.fill(),i&&(r.font=t,r.textAlign=\"center\",r.fillStyle=s,r.fillText(i,32,41)),new n.CanvasTexture(e)}),[o,i,s,t]),[m,f]=k.useState(!1),p=(i?1:.75)*(m?1.2:1)*l;return k.createElement(\"sprite\",R.default({scale:p,onPointerOver:r?void 0:e=>{e.stopPropagation(),f(!0)},onPointerOut:r?void 0:e||(e=>{e.stopPropagation(),f(!1)})},c),k.createElement(\"spriteMaterial\",{map:d,\"map-anisotropy\":u.capabilities.getMaxAnisotropy()||1,alphaTest:.3,opacity:i?1:.75,toneMapped:!1}))}const lr=Se({cellSize:.5,sectionSize:1,fadeDistance:100,fadeStrength:1,cellThickness:.5,sectionThickness:1,cellColor:new D.Color,sectionColor:new D.Color,infiniteGrid:!1,followCamera:!1,worldCamProjPosition:new D.Vector3,worldPlanePosition:new D.Vector3},\"\\n    varying vec3 localPosition;\\n    varying vec4 worldPosition;\\n\\n    uniform vec3 worldCamProjPosition;\\n    uniform vec3 worldPlanePosition;\\n    uniform float fadeDistance;\\n    uniform bool infiniteGrid;\\n    uniform bool followCamera;\\n\\n    void main() {\\n      localPosition = position.xzy;\\n      if (infiniteGrid) localPosition *= 1.0 + fadeDistance;\\n      \\n      worldPosition = modelMatrix * vec4(localPosition, 1.0);\\n      if (followCamera) {\\n        worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);\\n        localPosition = (inverse(modelMatrix) * worldPosition).xyz;\\n      }\\n\\n      gl_Position = projectionMatrix * viewMatrix * worldPosition;\\n    }\\n  \",`\\n    varying vec3 localPosition;\\n    varying vec4 worldPosition;\\n\\n    uniform vec3 worldCamProjPosition;\\n    uniform float cellSize;\\n    uniform float sectionSize;\\n    uniform vec3 cellColor;\\n    uniform vec3 sectionColor;\\n    uniform float fadeDistance;\\n    uniform float fadeStrength;\\n    uniform float cellThickness;\\n    uniform float sectionThickness;\\n\\n    float getGrid(float size, float thickness) {\\n      vec2 r = localPosition.xz / size;\\n      vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);\\n      float line = min(grid.x, grid.y) + 1.0 - thickness;\\n      return 1.0 - min(line, 1.0);\\n    }\\n\\n    void main() {\\n      float g1 = getGrid(cellSize, cellThickness);\\n      float g2 = getGrid(sectionSize, sectionThickness);\\n\\n      float dist = distance(worldCamProjPosition, worldPosition.xyz);\\n      float d = 1.0 - min(dist / fadeDistance, 1.0);\\n      vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));\\n\\n      gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));\\n      gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);\\n      if (gl_FragColor.a <= 0.0) discard;\\n\\n      #include <tonemapping_fragment>\\n      #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n    }\\n  `),cr=k.forwardRef((({args:e,cellColor:t=\"#000000\",sectionColor:r=\"#2080ff\",cellSize:n=.5,sectionSize:o=1,followCamera:i=!1,infiniteGrid:s=!1,fadeDistance:l=100,fadeStrength:c=1,cellThickness:u=.5,sectionThickness:d=1,side:m=D.BackSide,...f},p)=>{a.extend({GridMaterial:lr});const h=k.useRef(null),y=new D.Plane,x=new D.Vector3(0,1,0),v=new D.Vector3(0,0,0);a.useFrame((e=>{y.setFromNormalAndCoplanarPoint(x,v).applyMatrix4(h.current.matrixWorld);const t=h.current.material,r=t.uniforms.worldCamProjPosition,n=t.uniforms.worldPlanePosition;y.projectPoint(e.camera.position,r.value),n.value.set(0,0,0).applyMatrix4(h.current.matrixWorld)}));const g={cellSize:n,sectionSize:o,cellColor:t,sectionColor:r,cellThickness:u,sectionThickness:d},z={fadeDistance:l,fadeStrength:c,infiniteGrid:s,followCamera:i};return k.createElement(\"mesh\",R.default({ref:A.default([h,p]),frustumCulled:!1},f),k.createElement(\"gridMaterial\",R.default({transparent:!0,\"extensions-derivatives\":!0,side:m},g,z)),k.createElement(\"planeGeometry\",{args:e}))}));function ur(e,{path:t}){const[r]=a.useLoader(n.CubeTextureLoader,[e],(e=>e.setPath(t)));return r}function dr(e){return a.useLoader(d.FBXLoader,e)}ur.preload=(e,{path:t})=>a.useLoader.preload(n.CubeTextureLoader,[e],(e=>e.setPath(t))),dr.preload=e=>a.useLoader.preload(d.FBXLoader,e),dr.clear=e=>a.useLoader.clear(d.FBXLoader,e);const mr=\"https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master\";function fr(e,r=`${mr}/basis/`){const n=a.useThree((e=>e.gl)),o=a.useLoader(d.KTX2Loader,Ce(e)?Object.values(e):e,(e=>{e.detectSupport(n),e.setTranscoderPath(r)}));if(t.useEffect((()=>{(Array.isArray(o)?o:[o]).forEach(n.initTexture)}),[n,o]),Ce(e)){const t=Object.keys(e),r={};return t.forEach((e=>Object.assign(r,{[e]:o[t.indexOf(e)]}))),r}return o}function pr(e,t){\"function\"==typeof e?e(t):null!=e&&(e.current=t)}fr.preload=(e,t=`${mr}/basis/`)=>a.useLoader.preload(d.KTX2Loader,e,(e=>{e.setTranscoderPath(t)})),fr.clear=e=>a.useLoader.clear(d.KTX2Loader,e);function hr(e,t,...r){const n=k.useRef(),o=a.useThree((e=>e.scene));return k.useLayoutEffect((()=>{let a;if(e&&null!=e&&e.current&&t&&(n.current=a=new t(e.current,...r)),a)return a.traverse((e=>e.raycast=()=>null)),o.add(a),()=>{n.current=void 0,o.remove(a),null==a.dispose||a.dispose()}}),[o,t,e,...r]),a.useFrame((()=>{var e;null==(e=n.current)||null==e.update||e.update()})),n}const yr=e=>e.isMesh;const xr=k.forwardRef((({enabled:e=!0,firstHitOnly:t=!1,children:r,strategy:o=E.SAH,verbose:i=!1,setBoundingBox:s=!0,maxDepth:l=40,maxLeafTris:c=10,...u},d)=>{const m=k.useRef(null),f=a.useThree((e=>e.raycaster));return k.useImperativeHandle(d,(()=>m.current),[]),k.useEffect((()=>{if(e){const e={strategy:o,verbose:i,setBoundingBox:s,maxDepth:l,maxLeafTris:c},r=m.current;return f.firstHitOnly=t,r.traverse((t=>{yr(t)&&!t.geometry.boundsTree&&t.raycast===n.Mesh.prototype.raycast&&(t.raycast=E.acceleratedRaycast,t.geometry.computeBoundsTree=E.computeBoundsTree,t.geometry.disposeBoundsTree=E.disposeBoundsTree,t.geometry.computeBoundsTree(e))})),()=>{delete f.firstHitOnly,r.traverse((e=>{yr(e)&&e.geometry.boundsTree&&(e.geometry.disposeBoundsTree(),e.raycast=n.Mesh.prototype.raycast)}))}}})),k.createElement(\"group\",R.default({ref:m},u),r)}));function vr(e){const t=k.useRef(null),r=k.useRef(!1),n=k.useRef(!1),o=k.useRef(e);return k.useLayoutEffect((()=>{o.current=e}),[e]),k.useEffect((()=>{const e=t.current;if(e){const t=a.addEffect((()=>(r.current=!1,!0))),i=e.onBeforeRender;e.onBeforeRender=()=>r.current=!0;const s=a.addAfterEffect((()=>(r.current!==n.current&&(null==o.current||o.current(n.current=r.current)),!0)));return()=>{e.onBeforeRender=i,t(),s()}}}),[]),t}const gr=\"\\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n  vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n  #ifdef BOX_PROJECTED_ENV_MAP\\n    vWorldPosition = worldPosition.xyz;\\n  #endif\\n#endif\\n\",zr=\"\\n#ifdef BOX_PROJECTED_ENV_MAP\\n  uniform vec3 envMapSize;\\n  uniform vec3 envMapPosition;\\n  varying vec3 vWorldPosition;\\n    \\n  vec3 parallaxCorrectNormal( vec3 v, vec3 cubeSize, vec3 cubePos ) {\\n    vec3 nDir = normalize( v );\\n    vec3 rbmax = ( .5 * cubeSize + cubePos - vWorldPosition ) / nDir;\\n    vec3 rbmin = ( -.5 * cubeSize + cubePos - vWorldPosition ) / nDir;\\n    vec3 rbminmax;\\n    rbminmax.x = ( nDir.x > 0. ) ? rbmax.x : rbmin.x;\\n    rbminmax.y = ( nDir.y > 0. ) ? rbmax.y : rbmin.y;\\n    rbminmax.z = ( nDir.z > 0. ) ? rbmax.z : rbmin.z;\\n    float correction = min( min( rbminmax.x, rbminmax.y ), rbminmax.z );\\n    vec3 boxIntersection = vWorldPosition + nDir * correction;    \\n    return boxIntersection - cubePos;\\n  }\\n#endif\\n\",wr=\"\\n#ifdef BOX_PROJECTED_ENV_MAP\\n  worldNormal = parallaxCorrectNormal( worldNormal, envMapSize, envMapPosition );\\n#endif\\n\",br=\"\\n#ifdef BOX_PROJECTED_ENV_MAP\\n  reflectVec = parallaxCorrectNormal( reflectVec, envMapSize, envMapPosition );\\n#endif\\n\";const Er=new D.Box3,Mr=new D.Vector3;const Sr=e=>Math.sqrt(1-Math.pow(e-1,2));class Cr{constructor({size:e=256,maxAge:t=750,radius:r=.3,intensity:n=.2,interpolate:a=0,smoothing:o=0,minForce:i=.3,blend:s=\"screen\",ease:l=Sr}={}){this.size=e,this.maxAge=t,this.radius=r,this.intensity=n,this.ease=l,this.interpolate=a,this.smoothing=o,this.minForce=i,this.blend=s,this.trail=[],this.force=0,this.initTexture()}initTexture(){this.canvas=document.createElement(\"canvas\"),this.canvas.width=this.canvas.height=this.size,this.ctx=this.canvas.getContext(\"2d\"),this.ctx.fillStyle=\"black\",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.texture=new n.Texture(this.canvas),this.canvas.id=\"touchTexture\",this.canvas.style.width=this.canvas.style.height=`${this.canvas.width}px`}update(e){this.clear(),this.trail.forEach(((t,r)=>{t.age+=1e3*e,t.age>this.maxAge&&this.trail.splice(r,1)})),this.trail.length||(this.force=0),this.trail.forEach((e=>{this.drawTouch(e)})),this.texture.needsUpdate=!0}clear(){this.ctx.globalCompositeOperation=\"source-over\",this.ctx.fillStyle=\"black\",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}addTouch(e){const t=this.trail[this.trail.length-1];if(t){const r=t.x-e.x,n=t.y-e.y,a=r*r+n*n,o=Math.max(this.minForce,Math.min(1e4*a,1));if(this.force=function(e,t,r=.9){return t*r+e*(1-r)}(o,this.force,this.smoothing),this.interpolate){const e=Math.ceil(a/Math.pow(.5*this.radius/this.interpolate,2));if(e>1)for(let a=1;a<e;a++)this.trail.push({x:t.x-r/e*a,y:t.y-n/e*a,age:0,force:o})}}this.trail.push({x:e.x,y:e.y,age:0,force:this.force})}drawTouch(e){const t={x:e.x*this.size,y:(1-e.y)*this.size};let r=1;r=e.age<.3*this.maxAge?this.ease(e.age/(.3*this.maxAge)):this.ease(1-(e.age-.3*this.maxAge)/(.7*this.maxAge)),r*=e.force,this.ctx.globalCompositeOperation=this.blend;const n=this.size*this.radius*r,a=this.ctx.createRadialGradient(t.x,t.y,Math.max(0,.25*n),t.x,t.y,Math.max(0,n));a.addColorStop(0,`rgba(255, 255, 255, ${this.intensity})`),a.addColorStop(1,\"rgba(0, 0, 0, 0.0)\"),this.ctx.beginPath(),this.ctx.fillStyle=a,this.ctx.arc(t.x,t.y,Math.max(0,n),0,2*Math.PI),this.ctx.fill()}}const Pr=k.forwardRef((function({children:e,disable:t,disableX:r,disableY:a,disableZ:o,left:i,right:s,top:l,bottom:c,front:u,back:d,onCentered:m,precise:f=!0,cacheKey:p=0,...h},y){const x=k.useRef(null),v=k.useRef(null),g=k.useRef(null);return k.useLayoutEffect((()=>{v.current.matrixWorld.identity();const e=(new n.Box3).setFromObject(g.current,f),p=new n.Vector3,h=new n.Sphere,y=e.max.x-e.min.x,z=e.max.y-e.min.y,w=e.max.z-e.min.z;e.getCenter(p),e.getBoundingSphere(h);const b=l?z/2:c?-z/2:0,E=i?-y/2:s?y/2:0,M=u?w/2:d?-w/2:0;v.current.position.set(t||r?0:-p.x+E,t||a?0:-p.y+b,t||o?0:-p.z+M),void 0!==m&&m({parent:x.current.parent,container:x.current,width:y,height:z,depth:w,boundingBox:e,boundingSphere:h,center:p,verticalAlignment:b,horizontalAlignment:E,depthAlignment:M})}),[p,m,l,i,u,t,r,a,o,f,s,c,d]),k.useImperativeHandle(y,(()=>x.current),[]),k.createElement(\"group\",R.default({ref:x},h),k.createElement(\"group\",{ref:v},k.createElement(\"group\",{ref:g},e)))})),Tr=k.forwardRef((({font:e,color:t=\"#cbcbcb\",bevelSize:r=.04,debug:n=!1,children:a,...o},i)=>{const[s,l]=k.useState(0),c=k.useCallback(((e=1)=>l(s+e)),[s]),u=k.useCallback(((e=1)=>l(s-e)),[s]),d=k.useMemo((()=>({incr:c,decr:u})),[c,u]);return k.useImperativeHandle(i,(()=>d),[d]),k.createElement(\"group\",o,k.createElement(k.Suspense,{fallback:null},k.createElement(Pr,{top:!0,cacheKey:JSON.stringify({counter:s,font:e})},k.createElement(be,{bevelEnabled:!0,bevelSize:r,font:e},n?k.createElement(\"meshNormalMaterial\",{wireframe:!0}):k.createElement(\"meshStandardMaterial\",{color:t}),s))),a)})),Rr=k.forwardRef((({children:e,curve:t},r)=>{const[n]=k.useState((()=>new D.Scene)),[o,i]=k.useState(),s=k.useRef();return k.useEffect((()=>{s.current=new d.Flow(n.children[0]),i(s.current.object3D)}),[e]),k.useEffect((()=>{var e;t&&(null==(e=s.current)||e.updateCurve(0,t))}),[t]),k.useImperativeHandle(r,(()=>({moveAlongCurve:e=>{var t;null==(t=s.current)||t.moveAlongCurve(e)}}))),k.createElement(k.Fragment,null,a.createPortal(e,n),o&&k.createElement(\"primitive\",{object:o}))}));class kr extends n.MeshPhysicalMaterial{constructor(e={}){super(e),this.setValues(e),this._time={value:0},this._distort={value:.4},this._radius={value:1}}onBeforeCompile(e){e.uniforms.time=this._time,e.uniforms.radius=this._radius,e.uniforms.distort=this._distort,e.vertexShader=`\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      #define GLSLIFY 1\\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}\\n      ${e.vertexShader}\\n    `,e.vertexShader=e.vertexShader.replace(\"#include <begin_vertex>\",\"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \")}get time(){return this._time.value}set time(e){this._time.value=e}get distort(){return this._distort.value}set distort(e){this._distort.value=e}get radius(){return this._radius.value}set radius(e){this._radius.value=e}}const Fr=k.forwardRef((({speed:e=1,...t},r)=>{const[n]=k.useState((()=>new kr));return a.useFrame((t=>n&&(n.time=t.clock.getElapsedTime()*e))),k.createElement(\"primitive\",R.default({object:n,ref:r,attach:\"material\"},t))}));class Dr extends n.MeshStandardMaterial{constructor(e={}){super(e),this.setValues(e),this._time={value:0},this._factor={value:1}}onBeforeCompile(e){e.uniforms.time=this._time,e.uniforms.factor=this._factor,e.vertexShader=`\\n      uniform float time;\\n      uniform float factor;\\n      ${e.vertexShader}\\n    `,e.vertexShader=e.vertexShader.replace(\"#include <begin_vertex>\",\"float theta = sin( time + position.y ) / 2.0 * factor;\\n        float c = cos( theta );\\n        float s = sin( theta );\\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\\n        vec3 transformed = vec3( position ) * m;\\n        vNormal = vNormal * m;\")}get time(){return this._time.value}set time(e){this._time.value=e}get factor(){return this._factor.value}set factor(e){this._factor.value=e}}const Lr=k.forwardRef((({speed:e=1,...t},r)=>{const[n]=k.useState((()=>new Dr));return a.useFrame((t=>n&&(n.time=t.clock.getElapsedTime()*e))),k.createElement(\"primitive\",R.default({object:n,ref:r,attach:\"material\"},t))}));class Ar extends D.ShaderMaterial{constructor(e=new D.Vector2){super({uniforms:{inputBuffer:new D.Uniform(null),depthBuffer:new D.Uniform(null),resolution:new D.Uniform(new D.Vector2),texelSize:new D.Uniform(new D.Vector2),halfTexelSize:new D.Uniform(new D.Vector2),kernel:new D.Uniform(0),scale:new D.Uniform(1),cameraNear:new D.Uniform(0),cameraFar:new D.Uniform(1),minDepthThreshold:new D.Uniform(0),maxDepthThreshold:new D.Uniform(1),depthScale:new D.Uniform(0),depthToBlurRatioBias:new D.Uniform(.25)},fragmentShader:`#include <common>\\n        #include <dithering_pars_fragment>      \\n        uniform sampler2D inputBuffer;\\n        uniform sampler2D depthBuffer;\\n        uniform float cameraNear;\\n        uniform float cameraFar;\\n        uniform float minDepthThreshold;\\n        uniform float maxDepthThreshold;\\n        uniform float depthScale;\\n        uniform float depthToBlurRatioBias;\\n        varying vec2 vUv;\\n        varying vec2 vUv0;\\n        varying vec2 vUv1;\\n        varying vec2 vUv2;\\n        varying vec2 vUv3;\\n\\n        void main() {\\n          float depthFactor = 0.0;\\n          \\n          #ifdef USE_DEPTH\\n            vec4 depth = texture2D(depthBuffer, vUv);\\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\\n            depthFactor *= depthScale;\\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\\n          #endif\\n          \\n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\\n          gl_FragColor = sum * 0.25 ;\\n\\n          #include <dithering_fragment>\\n          #include <tonemapping_fragment>\\n          #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n        }`,vertexShader:\"uniform vec2 texelSize;\\n        uniform vec2 halfTexelSize;\\n        uniform float kernel;\\n        uniform float scale;\\n        varying vec2 vUv;\\n        varying vec2 vUv0;\\n        varying vec2 vUv1;\\n        varying vec2 vUv2;\\n        varying vec2 vUv3;\\n\\n        void main() {\\n          vec2 uv = position.xy * 0.5 + 0.5;\\n          vUv = uv;\\n\\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\\n\\n          gl_Position = vec4(position.xy, 1.0, 1.0);\\n        }\",blending:D.NoBlending,depthWrite:!1,depthTest:!1}),this.toneMapped=!1,this.setTexelSize(e.x,e.y),this.kernel=new Float32Array([0,1,2,2,3])}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t),this.uniforms.halfTexelSize.value.set(e,t).multiplyScalar(.5)}setResolution(e){this.uniforms.resolution.value.copy(e)}}class _r{constructor({gl:e,resolution:t,width:r=500,height:a=500,minDepthThreshold:o=0,maxDepthThreshold:i=1,depthScale:s=0,depthToBlurRatioBias:l=.25}){this.renderToScreen=!1,this.renderTargetA=new n.WebGLRenderTarget(t,t,{minFilter:n.LinearFilter,magFilter:n.LinearFilter,stencilBuffer:!1,depthBuffer:!1,type:n.HalfFloatType}),this.renderTargetB=this.renderTargetA.clone(),this.convolutionMaterial=new Ar,this.convolutionMaterial.setTexelSize(1/r,1/a),this.convolutionMaterial.setResolution(new n.Vector2(r,a)),this.scene=new n.Scene,this.camera=new n.Camera,this.convolutionMaterial.uniforms.minDepthThreshold.value=o,this.convolutionMaterial.uniforms.maxDepthThreshold.value=i,this.convolutionMaterial.uniforms.depthScale.value=s,this.convolutionMaterial.uniforms.depthToBlurRatioBias.value=l,this.convolutionMaterial.defines.USE_DEPTH=s>0;const c=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),u=new Float32Array([0,0,2,0,0,2]),d=new n.BufferGeometry;d.setAttribute(\"position\",new n.BufferAttribute(c,3)),d.setAttribute(\"uv\",new n.BufferAttribute(u,2)),this.screen=new n.Mesh(d,this.convolutionMaterial),this.screen.frustumCulled=!1,this.scene.add(this.screen)}render(e,t,r){const n=this.scene,a=this.camera,o=this.renderTargetA,i=this.renderTargetB;let s=this.convolutionMaterial,l=s.uniforms;l.depthBuffer.value=t.depthTexture;const c=s.kernel;let u,d,m,f=t;for(d=0,m=c.length-1;d<m;++d)u=0==(1&d)?o:i,l.kernel.value=c[d],l.inputBuffer.value=f.texture,e.setRenderTarget(u),e.render(n,a),f=u;l.kernel.value=c[d],l.inputBuffer.value=f.texture,e.setRenderTarget(this.renderToScreen?null:r),e.render(n,a)}}n.MeshStandardMaterial;const Or=k.forwardRef((({mixBlur:e=0,mixStrength:t=1,resolution:r=256,blur:o=[0,0],minDepthThreshold:i=.9,maxDepthThreshold:s=1,depthScale:l=0,depthToBlurRatioBias:c=.25,mirror:u=0,distortion:d=1,mixContrast:m=1,distortionMap:f,reflectorOffset:p=0,...h},y)=>{const x=a.useThree((({gl:e})=>e)),v=a.useThree((({camera:e})=>e)),g=a.useThree((({scene:e})=>e)),z=(o=Array.isArray(o)?o:[o,o])[0]+o[1]>0,w=k.useRef(null),[b]=k.useState((()=>new n.Plane)),[E]=k.useState((()=>new n.Vector3)),[M]=k.useState((()=>new n.Vector3)),[S]=k.useState((()=>new n.Vector3)),[C]=k.useState((()=>new n.Matrix4)),[P]=k.useState((()=>new n.Vector3(0,0,-1))),[T]=k.useState((()=>new n.Vector4)),[F]=k.useState((()=>new n.Vector3)),[D]=k.useState((()=>new n.Vector3)),[L]=k.useState((()=>new n.Vector4)),[_]=k.useState((()=>new n.Matrix4)),[O]=k.useState((()=>new n.PerspectiveCamera)),N=k.useCallback((()=>{var e;const t=w.current.parent||(null==(e=w.current)?void 0:e.__r3f.parent);if(!t)return;if(M.setFromMatrixPosition(t.matrixWorld),S.setFromMatrixPosition(v.matrixWorld),C.extractRotation(t.matrixWorld),E.set(0,0,1),E.applyMatrix4(C),M.addScaledVector(E,p),F.subVectors(M,S),F.dot(E)>0)return;F.reflect(E).negate(),F.add(M),C.extractRotation(v.matrixWorld),P.set(0,0,-1),P.applyMatrix4(C),P.add(S),D.subVectors(M,P),D.reflect(E).negate(),D.add(M),O.position.copy(F),O.up.set(0,1,0),O.up.applyMatrix4(C),O.up.reflect(E),O.lookAt(D),O.far=v.far,O.updateMatrixWorld(),O.projectionMatrix.copy(v.projectionMatrix),_.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),_.multiply(O.projectionMatrix),_.multiply(O.matrixWorldInverse),_.multiply(t.matrixWorld),b.setFromNormalAndCoplanarPoint(E,M),b.applyMatrix4(O.matrixWorldInverse),T.set(b.normal.x,b.normal.y,b.normal.z,b.constant);const r=O.projectionMatrix;L.x=(Math.sign(T.x)+r.elements[8])/r.elements[0],L.y=(Math.sign(T.y)+r.elements[9])/r.elements[5],L.z=-1,L.w=(1+r.elements[10])/r.elements[14],T.multiplyScalar(2/T.dot(L)),r.elements[2]=T.x,r.elements[6]=T.y,r.elements[10]=T.z+1,r.elements[14]=T.w}),[v,p]),[B,I,U,V]=k.useMemo((()=>{const a={minFilter:n.LinearFilter,magFilter:n.LinearFilter,type:n.HalfFloatType},p=new n.WebGLRenderTarget(r,r,a);p.depthBuffer=!0,p.depthTexture=new n.DepthTexture(r,r),p.depthTexture.format=n.DepthFormat,p.depthTexture.type=n.UnsignedShortType;const h=new n.WebGLRenderTarget(r,r,a);return[p,h,new _r({gl:x,resolution:r,width:o[0],height:o[1],minDepthThreshold:i,maxDepthThreshold:s,depthScale:l,depthToBlurRatioBias:c}),{mirror:u,textureMatrix:_,mixBlur:e,tDiffuse:p.texture,tDepth:p.depthTexture,tDiffuseBlur:h.texture,hasBlur:z,mixStrength:t,minDepthThreshold:i,maxDepthThreshold:s,depthScale:l,depthToBlurRatioBias:c,distortion:d,distortionMap:f,mixContrast:m,\"defines-USE_BLUR\":z?\"\":void 0,\"defines-USE_DEPTH\":l>0?\"\":void 0,\"defines-USE_DISTORTION\":f?\"\":void 0}]}),[x,o,_,r,u,z,e,t,i,s,l,c,d,f,m]);return a.useFrame((()=>{var e;const t=w.current.parent||(null==(e=w.current)?void 0:e.__r3f.parent);if(!t)return;t.visible=!1;const r=x.xr.enabled,n=x.shadowMap.autoUpdate;N(),x.xr.enabled=!1,x.shadowMap.autoUpdate=!1,x.setRenderTarget(B),x.state.buffers.depth.setMask(!0),x.autoClear||x.clear(),x.render(g,O),z&&U.render(x,B,I),x.xr.enabled=r,x.shadowMap.autoUpdate=n,t.visible=!0,x.setRenderTarget(null)})),k.createElement(\"meshReflectorMaterialImpl\",R.default({attach:\"material\",key:\"key\"+V[\"defines-USE_BLUR\"]+V[\"defines-USE_DEPTH\"]+V[\"defines-USE_DISTORTION\"],ref:A.default([w,y])},V,h))})),Nr=Se({envMap:null,bounces:3,ior:2.4,correctMips:!0,aberrationStrength:.01,fresnel:0,bvh:new E.MeshBVHUniformStruct,color:new D.Color(\"white\"),resolution:new D.Vector2,viewMatrixInverse:new D.Matrix4,projectionMatrixInverse:new D.Matrix4},\"\\n  uniform mat4 viewMatrixInverse;\\n\\n  varying vec3 vWorldPosition;  \\n  varying vec3 vNormal;\\n  varying mat4 vModelMatrixInverse;\\n\\n  #ifdef USE_INSTANCING_COLOR\\n    varying vec3 vInstanceColor;\\n  #endif\\n\\n  void main() {        \\n    vec4 transformedNormal = vec4(normal, 0.0);\\n    vec4 transformedPosition = vec4(position, 1.0);\\n    #ifdef USE_INSTANCING\\n      transformedNormal = instanceMatrix * transformedNormal;\\n      transformedPosition = instanceMatrix * transformedPosition;\\n    #endif\\n\\n    #ifdef USE_INSTANCING\\n      vModelMatrixInverse = inverse(modelMatrix * instanceMatrix);\\n    #else\\n      vModelMatrixInverse = inverse(modelMatrix);\\n    #endif\\n\\n    #ifdef USE_INSTANCING_COLOR\\n      vInstanceColor = instanceColor.rgb;\\n    #endif\\n\\n    vWorldPosition = (modelMatrix * transformedPosition).xyz;\\n    vNormal = normalize((viewMatrixInverse * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;\\n  }\",`\\n  #define ENVMAP_TYPE_CUBE_UV\\n  precision highp isampler2D;\\n  precision highp usampler2D;\\n  varying vec3 vWorldPosition;\\n  varying vec3 vNormal;\\n  varying mat4 vModelMatrixInverse;\\n\\n  #ifdef USE_INSTANCING_COLOR\\n    varying vec3 vInstanceColor;\\n  #endif\\n    \\n  #ifdef ENVMAP_TYPE_CUBEM\\n    uniform samplerCube envMap;\\n  #else\\n    uniform sampler2D envMap;\\n  #endif\\n    \\n  uniform float bounces;\\n  ${E.shaderStructs}\\n  ${E.shaderIntersectFunction}\\n  uniform BVH bvh;\\n  uniform float ior;\\n  uniform bool correctMips;\\n  uniform vec2 resolution;\\n  uniform float fresnel;\\n  uniform mat4 modelMatrix;\\n  uniform mat4 projectionMatrixInverse;\\n  uniform mat4 viewMatrixInverse;\\n  uniform float aberrationStrength;\\n  uniform vec3 color;\\n  \\n  float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\\n    return pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );\\n  }\\n    \\n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {\\n    vec3 rayOrigin = ro;\\n    vec3 rayDirection = rd;\\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\\n    rayOrigin = vWorldPosition + rayDirection * 0.001;\\n    rayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;\\n    rayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);\\n    for(float i = 0.0; i < bounces; i++) {\\n      uvec4 faceIndices = uvec4( 0u );\\n      vec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\\n      vec3 barycoord = vec3( 0.0 );\\n      float side = 1.0;\\n      float dist = 0.0;\\n      bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\\n      vec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);      \\n      vec3 tempDir = refract(rayDirection, faceNormal, ior);\\n      if (length(tempDir) != 0.0) {\\n        rayDirection = tempDir;\\n        break;\\n      }\\n      rayDirection = reflect(rayDirection, faceNormal);\\n      rayOrigin = hitPos + rayDirection * 0.01;\\n    }\\n    rayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);\\n    return rayDirection;\\n  }\\n    \\n  #include <common>\\n  #include <cube_uv_reflection_fragment>\\n    \\n  #ifdef ENVMAP_TYPE_CUBEM\\n    vec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {\\n      return textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));\\n    }\\n  #else\\n    vec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {\\n      vec2 uvv = equirectUv( rayDirection );\\n      vec2 smoothUv = equirectUv( directionCamPerfect );\\n      return textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));\\n    }\\n  #endif\\n  \\n  void main() {\\n    vec2 uv = gl_FragCoord.xy / resolution;\\n    vec3 directionCamPerfect = (projectionMatrixInverse * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;\\n    directionCamPerfect = (viewMatrixInverse * vec4(directionCamPerfect, 0.0)).xyz;\\n    directionCamPerfect = normalize(directionCamPerfect);\\n    vec3 normal = vNormal;\\n    vec3 rayOrigin = cameraPosition;\\n    vec3 rayDirection = normalize(vWorldPosition - cameraPosition);\\n    vec3 finalColor;\\n    #ifdef CHROMATIC_ABERRATIONS\\n      vec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\\n      #ifdef FAST_CHROMA \\n        vec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));\\n        vec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));\\n      #else\\n        vec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), vModelMatrixInverse);\\n        vec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), vModelMatrixInverse);\\n      #endif\\n      float finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;\\n      float finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;\\n      float finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;\\n      finalColor = vec3(finalColorR, finalColorG, finalColorB);\\n    #else\\n      rayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\\n      finalColor = textureGradient(envMap, rayDirection, directionCamPerfect).rgb;    \\n    #endif\\n\\n    finalColor *= color;\\n    #ifdef USE_INSTANCING_COLOR\\n      finalColor *= vInstanceColor;\\n    #endif\\n\\n    vec3 viewDirection = normalize(vWorldPosition - cameraPosition);\\n    float nFresnel = fresnelFunc(viewDirection, normal) * fresnel;\\n    gl_FragColor = vec4(mix(finalColor, vec3(1.0), nFresnel), 1.0);      \\n    #include <tonemapping_fragment>\\n    #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n  }`);const Br=Se({},\"void main() { }\",\"void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }\");class Ir extends D.MeshPhysicalMaterial{constructor(e=6,t=!1){super(),this.uniforms={chromaticAberration:{value:.05},transmission:{value:0},_transmission:{value:1},transmissionMap:{value:null},roughness:{value:0},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:1/0},attenuationColor:{value:new D.Color(\"white\")},anisotropicBlur:{value:.1},time:{value:0},distortion:{value:0},distortionScale:{value:.5},temporalDistortion:{value:0},buffer:{value:null}},this.onBeforeCompile=r=>{r.uniforms={...r.uniforms,...this.uniforms},this.anisotropy>0&&(r.defines.USE_ANISOTROPY=\"\"),t?r.defines.USE_SAMPLER=\"\":r.defines.USE_TRANSMISSION=\"\",r.fragmentShader=\"\\n      uniform float chromaticAberration;         \\n      uniform float anisotropicBlur;      \\n      uniform float time;\\n      uniform float distortion;\\n      uniform float distortionScale;\\n      uniform float temporalDistortion;\\n      uniform sampler2D buffer;\\n\\n      vec3 random3(vec3 c) {\\n        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\\n        vec3 r;\\n        r.z = fract(512.0*j);\\n        j *= .125;\\n        r.x = fract(512.0*j);\\n        j *= .125;\\n        r.y = fract(512.0*j);\\n        return r-0.5;\\n      }\\n\\n      float seed = 0.0;\\n      uint hash( uint x ) {\\n        x += ( x << 10u );\\n        x ^= ( x >>  6u );\\n        x += ( x <<  3u );\\n        x ^= ( x >> 11u );\\n        x += ( x << 15u );\\n        return x;\\n      }\\n\\n      // Compound versions of the hashing algorithm I whipped together.\\n      uint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\\n      uint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\\n      uint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\\n\\n      // Construct a float with half-open range [0:1] using low 23 bits.\\n      // All zeroes yields 0.0, all ones yields the next smallest representable value below 1.0.\\n      float floatConstruct( uint m ) {\\n        const uint ieeeMantissa = 0x007FFFFFu; // binary32 mantissa bitmask\\n        const uint ieeeOne      = 0x3F800000u; // 1.0 in IEEE binary32\\n        m &= ieeeMantissa;                     // Keep only mantissa bits (fractional part)\\n        m |= ieeeOne;                          // Add fractional part to 1.0\\n        float  f = uintBitsToFloat( m );       // Range [1:2]\\n        return f - 1.0;                        // Range [0:1]\\n      }\\n\\n      // Pseudo-random value in half-open range [0:1].\\n      float random( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\\n      float random( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\\n      float random( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\\n      float random( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\\n\\n      float rand() {\\n        float result = random(vec3(gl_FragCoord.xy, seed));\\n        seed += 1.0;\\n        return result;\\n      }\\n\\n      const float F3 =  0.3333333;\\n      const float G3 =  0.1666667;\\n\\n      float snoise(vec3 p) {\\n        vec3 s = floor(p + dot(p, vec3(F3)));\\n        vec3 x = p - s + dot(s, vec3(G3));\\n        vec3 e = step(vec3(0.0), x - x.yzx);\\n        vec3 i1 = e*(1.0 - e.zxy);\\n        vec3 i2 = 1.0 - e.zxy*(1.0 - e);\\n        vec3 x1 = x - i1 + G3;\\n        vec3 x2 = x - i2 + 2.0*G3;\\n        vec3 x3 = x - 1.0 + 3.0*G3;\\n        vec4 w, d;\\n        w.x = dot(x, x);\\n        w.y = dot(x1, x1);\\n        w.z = dot(x2, x2);\\n        w.w = dot(x3, x3);\\n        w = max(0.6 - w, 0.0);\\n        d.x = dot(random3(s), x);\\n        d.y = dot(random3(s + i1), x1);\\n        d.z = dot(random3(s + i2), x2);\\n        d.w = dot(random3(s + 1.0), x3);\\n        w *= w;\\n        w *= w;\\n        d *= w;\\n        return dot(d, vec4(52.0));\\n      }\\n\\n      float snoiseFractal(vec3 m) {\\n        return 0.5333333* snoise(m)\\n              +0.2666667* snoise(2.0*m)\\n              +0.1333333* snoise(4.0*m)\\n              +0.0666667* snoise(8.0*m);\\n      }\\n\"+r.fragmentShader,r.fragmentShader=r.fragmentShader.replace(\"#include <transmission_pars_fragment>\",\"\\n        #ifdef USE_TRANSMISSION\\n          // Transmission code is based on glTF-Sampler-Viewer\\n          // https://github.com/KhronosGroup/glTF-Sample-Viewer\\n          uniform float _transmission;\\n          uniform float thickness;\\n          uniform float attenuationDistance;\\n          uniform vec3 attenuationColor;\\n          #ifdef USE_TRANSMISSIONMAP\\n            uniform sampler2D transmissionMap;\\n          #endif\\n          #ifdef USE_THICKNESSMAP\\n            uniform sampler2D thicknessMap;\\n          #endif\\n          uniform vec2 transmissionSamplerSize;\\n          uniform sampler2D transmissionSamplerMap;\\n          uniform mat4 modelMatrix;\\n          uniform mat4 projectionMatrix;\\n          varying vec3 vWorldPosition;\\n          vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n            // Direction of refracted light.\\n            vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n            // Compute rotation-independant scaling of the model matrix.\\n            vec3 modelScale;\\n            modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n            modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n            modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n            // The thickness is specified in local space.\\n            return normalize( refractionVector ) * thickness * modelScale;\\n          }\\n          float applyIorToRoughness( const in float roughness, const in float ior ) {\\n            // Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\\n            // an IOR of 1.5 results in the default amount of microfacet refraction.\\n            return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n          }\\n          vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n            float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );            \\n            #ifdef USE_SAMPLER\\n              #ifdef texture2DLodEXT\\n                return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod);\\n              #else\\n                return texture2D(transmissionSamplerMap, fragCoord.xy, framebufferLod);\\n              #endif\\n            #else\\n              return texture2D(buffer, fragCoord.xy);\\n            #endif\\n          }\\n          vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n            if ( isinf( attenuationDistance ) ) {\\n              // Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.\\n              return radiance;\\n            } else {\\n              // Compute light attenuation using Beer's law.\\n              vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n              vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law\\n              return transmittance * radiance;\\n            }\\n          }\\n          vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n            const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n            const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n            const in vec3 attenuationColor, const in float attenuationDistance ) {\\n            vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n            vec3 refractedRayExit = position + transmissionRay;\\n            // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\\n            vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n            vec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n            refractionCoords += 1.0;\\n            refractionCoords /= 2.0;\\n            // Sample framebuffer to get pixel the refracted ray hits.\\n            vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n            vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n            // Get the specular component.\\n            vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n            return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n          }\\n        #endif\\n\"),r.fragmentShader=r.fragmentShader.replace(\"#include <transmission_fragment>\",`  \\n        // Improve the refraction to use the world pos\\n        material.transmission = _transmission;\\n        material.transmissionAlpha = 1.0;\\n        material.thickness = thickness;\\n        material.attenuationDistance = attenuationDistance;\\n        material.attenuationColor = attenuationColor;\\n        #ifdef USE_TRANSMISSIONMAP\\n          material.transmission *= texture2D( transmissionMap, vUv ).r;\\n        #endif\\n        #ifdef USE_THICKNESSMAP\\n          material.thickness *= texture2D( thicknessMap, vUv ).g;\\n        #endif\\n        \\n        vec3 pos = vWorldPosition;\\n        vec3 v = normalize( cameraPosition - pos );\\n        vec3 n = inverseTransformDirection( normal, viewMatrix );\\n        vec3 transmission = vec3(0.0);\\n        float transmissionR, transmissionB, transmissionG;\\n        float randomCoords = rand();\\n        float thickness_smear = thickness * max(pow(roughnessFactor, 0.33), anisotropicBlur);\\n        vec3 distortionNormal = vec3(0.0);\\n        vec3 temporalOffset = vec3(time, -time, -time) * temporalDistortion;\\n        if (distortion > 0.0) {\\n          distortionNormal = distortion * vec3(snoiseFractal(vec3((pos * distortionScale + temporalOffset))), snoiseFractal(vec3(pos.zxy * distortionScale - temporalOffset)), snoiseFractal(vec3(pos.yxz * distortionScale + temporalOffset)));\\n        }\\n        for (float i = 0.0; i < ${e}.0; i ++) {\\n          vec3 sampleNorm = normalize(n + roughnessFactor * roughnessFactor * 2.0 * normalize(vec3(rand() - 0.5, rand() - 0.5, rand() - 0.5)) * pow(rand(), 0.33) + distortionNormal);\\n          transmissionR = getIBLVolumeRefraction(\\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness  + thickness_smear * (i + randomCoords) / float(${e}),\\n            material.attenuationColor, material.attenuationDistance\\n          ).r;\\n          transmissionG = getIBLVolumeRefraction(\\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior  * (1.0 + chromaticAberration * (i + randomCoords) / float(${e})) , material.thickness + thickness_smear * (i + randomCoords) / float(${e}),\\n            material.attenuationColor, material.attenuationDistance\\n          ).g;\\n          transmissionB = getIBLVolumeRefraction(\\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior * (1.0 + 2.0 * chromaticAberration * (i + randomCoords) / float(${e})), material.thickness + thickness_smear * (i + randomCoords) / float(${e}),\\n            material.attenuationColor, material.attenuationDistance\\n          ).b;\\n          transmission.r += transmissionR;\\n          transmission.g += transmissionG;\\n          transmission.b += transmissionB;\\n        }\\n        transmission /= ${e}.0;\\n        totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n`)},Object.keys(this.uniforms).forEach((e=>Object.defineProperty(this,e,{get:()=>this.uniforms[e].value,set:t=>this.uniforms[e].value=t})))}}const Ur=k.forwardRef((({buffer:e,transmissionSampler:t=!1,backside:r=!1,side:n=D.FrontSide,transmission:o=1,thickness:i=0,backsideThickness:s=0,samples:l=10,resolution:c,backsideResolution:u,background:d,anisotropy:m,anisotropicBlur:f,...p},h)=>{a.extend({MeshTransmissionMaterial:Ir});const y=k.useRef(null),[x]=k.useState((()=>new Br)),v=et(u||c),g=et(c);let z,w,b;return a.useFrame((e=>{y.current.time=e.clock.getElapsedTime(),y.current.buffer!==g.texture||t||(b=y.current.__r3f.parent,b&&(w=e.gl.toneMapping,z=e.scene.background,e.gl.toneMapping=D.NoToneMapping,d&&(e.scene.background=d),b.material=x,r&&(e.gl.setRenderTarget(v),e.gl.render(e.scene,e.camera),b.material=y.current,b.material.buffer=v.texture,b.material.thickness=s,b.material.side=D.BackSide),e.gl.setRenderTarget(g),e.gl.render(e.scene,e.camera),b.material=y.current,b.material.thickness=i,b.material.side=n,b.material.buffer=g.texture,e.scene.background=z,e.gl.setRenderTarget(null),e.gl.toneMapping=w))})),k.useImperativeHandle(h,(()=>y.current),[]),k.createElement(\"meshTransmissionMaterial\",R.default({args:[l,t],ref:y},p,{buffer:e||g.texture,_transmission:o,anisotropicBlur:null!=f?f:m,transmission:t?o:0,thickness:i,side:n}))})),Vr=k.forwardRef(((e,t)=>(a.extend({DiscardMaterialImpl:Br}),k.createElement(\"discardMaterialImpl\",R.default({ref:t},e))))),jr=Te>=154?\"opaque_fragment\":\"output_fragment\";class Wr extends D.PointsMaterial{constructor(e){super(e),this.onBeforeCompile=(e,t)=>{const{isWebGL2:r}=t.capabilities;e.fragmentShader=e.fragmentShader.replace(`#include <${jr}>`,`\\n        ${r?`#include <${jr}>`:`#extension GL_OES_standard_derivatives : enable\\n#include <${jr}>`}\\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\\n      float r = dot(cxy, cxy);\\n      float delta = fwidth(r);     \\n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\\n      #include <tonemapping_fragment>\\n      #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n      `)}}}const Gr=k.forwardRef(((e,t)=>{const[r]=k.useState((()=>new Wr(null)));return k.createElement(\"primitive\",R.default({},e,{object:r,ref:t,attach:\"material\"}))}));function Hr(e,t,r){t.traverse((t=>{t.material&&(e.properties.remove(t.material),null==t.material.dispose||t.material.dispose())})),e.info.programs.length=0,e.compile(t,r)}function $r(e,t){const r=e+\"Geometry\";return k.forwardRef((({args:e,children:n,...a},o)=>{const i=k.useRef(null);return k.useImperativeHandle(o,(()=>i.current)),k.useLayoutEffect((()=>{null==t||t(i.current)})),k.createElement(\"mesh\",R.default({ref:i},a),k.createElement(r,{attach:\"geometry\",args:e}),n)}))}const qr=$r(\"box\"),Xr=$r(\"circle\"),Yr=$r(\"cone\"),Kr=$r(\"cylinder\"),Qr=$r(\"sphere\"),Zr=$r(\"plane\"),Jr=$r(\"tube\"),en=$r(\"torus\"),tn=$r(\"torusKnot\"),rn=$r(\"tetrahedron\"),nn=$r(\"ring\"),an=$r(\"polyhedron\"),on=$r(\"icosahedron\"),sn=$r(\"octahedron\"),ln=$r(\"dodecahedron\"),cn=$r(\"extrude\"),un=$r(\"lathe\"),dn=$r(\"capsule\"),mn=$r(\"shape\",(({geometry:e})=>{const t=e.attributes.position,r=(new D.Box3).setFromBufferAttribute(t),n=new D.Vector3;r.getSize(n);const a=[];let o=0,i=0,s=0,l=0;for(let e=0;e<t.count;e++)o=t.getX(e),i=t.getY(e),s=(o-r.min.x)/n.x,l=(i-r.min.y)/n.y,a.push(s,l);e.setAttribute(\"uv\",new D.Float32BufferAttribute(a,2))})),fn=1e-5;const pn=k.forwardRef((function({args:[e=1,t=1,r=1]=[],radius:a=.05,steps:o=1,smoothness:i=4,bevelSegments:s=4,creaseAngle:l=.4,children:c,...u},m){const f=k.useMemo((()=>function(e,t,r){const a=new n.Shape,o=r-fn;return a.absarc(fn,fn,fn,-Math.PI/2,-Math.PI,!0),a.absarc(fn,t-2*o,fn,Math.PI,Math.PI/2,!0),a.absarc(e-2*o,t-2*o,fn,Math.PI/2,0,!0),a.absarc(e-2*o,fn,fn,0,-Math.PI/2,!0),a}(e,t,a)),[e,t,a]),p=k.useMemo((()=>({depth:r-2*a,bevelEnabled:!0,bevelSegments:2*s,steps:o,bevelSize:a-fn,bevelThickness:a,curveSegments:i})),[r,a,i]),h=k.useRef(null);return k.useLayoutEffect((()=>{h.current&&(h.current.center(),d.toCreasedNormals(h.current,l))}),[f,p]),k.createElement(\"mesh\",R.default({ref:m},u),k.createElement(\"extrudeGeometry\",{ref:h,args:[f,p]}),c)}));function hn(){const e=new D.BufferGeometry,t=new Float32Array([-1,-1,3,-1,-1,3]);return e.boundingSphere=new D.Sphere,e.boundingSphere.set(new D.Vector3,1/0),e.setAttribute(\"position\",new D.BufferAttribute(t,2)),e}const yn=k.forwardRef((function({children:e,...t},r){const n=k.useMemo(hn,[]);return k.createElement(\"mesh\",R.default({ref:r,geometry:n,frustumCulled:!1},t),e)})),xn=k.forwardRef((({children:e,width:t,height:r,depth:n,box3:a,precise:o=!0,...i},s)=>{const l=k.useRef(null),c=k.useRef(null),u=k.useRef(null);return k.useLayoutEffect((()=>{c.current.matrixWorld.identity();let e=a||(new D.Box3).setFromObject(u.current,o);const i=e.max.x-e.min.x,s=e.max.y-e.min.y,l=e.max.z-e.min.z;let d=Math.max(i,s,l);t&&(d=i),r&&(d=s),n&&(d=l),c.current.scale.setScalar(1/d)}),[t,r,n,a,o]),k.useImperativeHandle(s,(()=>l.current),[]),k.createElement(\"group\",R.default({ref:l},i),k.createElement(\"group\",{ref:c},k.createElement(\"group\",{ref:u},e)))})),vn=e=>e&&e.isOrthographicCamera,gn=e=>e&&e.isBox3,zn=k.createContext(null);function wn({children:e,damping:t=6,fit:r,clip:n,observe:o,margin:i=1.2,eps:s=.01,onFit:l}){const c=k.useRef(null),{camera:u,invalidate:d,size:m,controls:f}=a.useThree(),p=f,h=k.useRef(l);function y(e,t){return Math.abs(e.x-t.x)<s&&Math.abs(e.y-t.y)<s&&Math.abs(e.z-t.z)<s}function x(e,t,r,n){e.x=D.MathUtils.damp(e.x,t.x,r,n),e.y=D.MathUtils.damp(e.y,t.y,r,n),e.z=D.MathUtils.damp(e.z,t.z,r,n)}h.current=l;const[v]=k.useState((()=>({animating:!1,focus:new D.Vector3,camera:new D.Vector3,zoom:1}))),[g]=k.useState((()=>({focus:new D.Vector3,camera:new D.Vector3,zoom:1}))),[z]=k.useState((()=>new D.Box3)),w=k.useMemo((()=>{function e(){const e=z.getSize(new D.Vector3),t=z.getCenter(new D.Vector3),r=Math.max(e.x,e.y,e.z),n=vn(u)?4*r:r/(2*Math.atan(Math.PI*u.fov/360)),a=vn(u)?4*r:n/u.aspect,o=i*Math.max(n,a);return{box:z,size:e,center:t,distance:o}}return{getSize:e,refresh(t){if(gn(t))z.copy(t);else{const e=t||c.current;if(!e)return this;e.updateWorldMatrix(!0,!0),z.setFromObject(e)}if(z.isEmpty()){const e=u.position.length()||10;z.setFromCenterAndSize(new D.Vector3,new D.Vector3(e,e,e))}if(\"OrthographicTrackballControls\"===(null==p?void 0:p.constructor.name)){const{distance:t}=e(),r=u.position.clone().sub(p.target).normalize().multiplyScalar(t),n=p.target.clone().add(r);u.position.copy(n)}return this},clip(){const{distance:t}=e();return p&&(p.maxDistance=10*t),u.near=t/100,u.far=100*t,u.updateProjectionMatrix(),p&&p.update(),d(),this},to({position:r,target:n}){v.camera.copy(u.position);const{center:a}=e();return g.camera.set(...r),n?g.focus.set(...n):g.focus.copy(a),t?v.animating=!0:u.position.set(...r),this},fit(){v.camera.copy(u.position),p&&v.focus.copy(p.target);const{center:r,distance:n}=e(),a=r.clone().sub(u.position).normalize().multiplyScalar(n);if(g.camera.copy(r).sub(a),g.focus.copy(r),vn(u)){v.zoom=u.zoom;let e=0,n=0;const a=[new D.Vector3(z.min.x,z.min.y,z.min.z),new D.Vector3(z.min.x,z.max.y,z.min.z),new D.Vector3(z.min.x,z.min.y,z.max.z),new D.Vector3(z.min.x,z.max.y,z.max.z),new D.Vector3(z.max.x,z.max.y,z.max.z),new D.Vector3(z.max.x,z.max.y,z.min.z),new D.Vector3(z.max.x,z.min.y,z.max.z),new D.Vector3(z.max.x,z.min.y,z.min.z)];r.applyMatrix4(u.matrixWorldInverse);for(const t of a)t.applyMatrix4(u.matrixWorldInverse),e=Math.max(e,Math.abs(t.y-r.y)),n=Math.max(n,Math.abs(t.x-r.x));e*=2,n*=2;const o=(u.top-u.bottom)/e,s=(u.right-u.left)/n;g.zoom=Math.min(o,s)/i,t||(u.zoom=g.zoom,u.updateProjectionMatrix())}return t?v.animating=!0:(u.position.copy(g.camera),u.lookAt(g.focus),p&&(p.target.copy(g.focus),p.update())),h.current&&h.current(this.getSize()),d(),this}}}),[z,u,p,i,t,d]);k.useLayoutEffect((()=>{if(p){const e=()=>v.animating=!1;return p.addEventListener(\"start\",e),()=>p.removeEventListener(\"start\",e)}}),[p]);const b=k.useRef(0);return k.useLayoutEffect((()=>{(o||0==b.current++)&&(w.refresh(),r&&w.fit(),n&&w.clip())}),[m,n,r,o,u,p]),a.useFrame(((e,r)=>{if(v.animating){if(x(v.focus,g.focus,t,r),x(v.camera,g.camera,t,r),v.zoom=D.MathUtils.damp(v.zoom,g.zoom,t,r),u.position.copy(v.camera),vn(u)&&(u.zoom=v.zoom,u.updateProjectionMatrix()),p?(p.target.copy(v.focus),p.update()):u.lookAt(v.focus),d(),vn(u)&&!(Math.abs(v.zoom-g.zoom)<s))return;if(!vn(u)&&!y(v.camera,g.camera))return;if(p&&!y(v.focus,g.focus))return;v.animating=!1}})),k.createElement(\"group\",{ref:c},k.createElement(zn.Provider,{value:w},e))}function bn(){return k.useContext(zn)}const En=k.forwardRef((({intensity:e=1,decay:t,decayRate:r=.65,maxYaw:n=.1,maxPitch:o=.1,maxRoll:i=.1,yawFrequency:s=.1,pitchFrequency:l=.1,rollFrequency:c=.1},u)=>{const m=a.useThree((e=>e.camera)),f=a.useThree((e=>e.controls)),p=k.useRef(e),h=k.useRef(m.rotation.clone()),[y]=k.useState((()=>new d.SimplexNoise)),[x]=k.useState((()=>new d.SimplexNoise)),[v]=k.useState((()=>new d.SimplexNoise)),g=()=>{(p.current<0||p.current>1)&&(p.current=p.current<0?0:1)};return k.useImperativeHandle(u,(()=>({getIntensity:()=>p.current,setIntensity:e=>{p.current=e,g()}})),[]),k.useEffect((()=>{if(f){const e=()=>{h.current=m.rotation.clone()};return f.addEventListener(\"change\",e),e(),()=>{f.removeEventListener(\"change\",e)}}}),[m,f]),a.useFrame(((e,a)=>{const u=Math.pow(p.current,2),d=n*u*y.noise(e.clock.elapsedTime*s,1),f=o*u*x.noise(e.clock.elapsedTime*l,1),z=i*u*v.noise(e.clock.elapsedTime*c,1);m.rotation.set(h.current.x+f,h.current.y+d,h.current.z+z),t&&p.current>0&&(p.current-=r*a,g())})),null})),Mn=k.forwardRef((({children:e,enabled:t=!0,speed:r=1,rotationIntensity:n=1,floatIntensity:o=1,floatingRange:i=[-.1,.1],...s},l)=>{const c=k.useRef(null),u=k.useRef(1e4*Math.random());return a.useFrame((e=>{var a,s;if(!t||0===r)return;const l=u.current+e.clock.getElapsedTime();c.current.rotation.x=Math.cos(l/4*r)/8*n,c.current.rotation.y=Math.sin(l/4*r)/8*n,c.current.rotation.z=Math.sin(l/4*r)/20*n;let d=Math.sin(l/4*r)/10;d=D.MathUtils.mapLinear(d,-.1,.1,null!==(a=null==i?void 0:i[0])&&void 0!==a?a:-.1,null!==(s=null==i?void 0:i[1])&&void 0!==s?s:.1),c.current.position.y=d*o,c.current.updateMatrix()})),k.createElement(\"group\",s,k.createElement(\"group\",{ref:A.default([c,l]),matrixAutoUpdate:!1},e))})),Sn={apartment:\"lebombo_1k.hdr\",city:\"potsdamer_platz_1k.hdr\",dawn:\"kiara_1_dawn_1k.hdr\",forest:\"forest_slope_1k.hdr\",lobby:\"st_fagans_interior_1k.hdr\",night:\"dikhololo_night_1k.hdr\",park:\"rooitou_park_1k.hdr\",studio:\"studio_small_03_1k.hdr\",sunset:\"venice_sunset_1k.hdr\",warehouse:\"empty_warehouse_01_1k.hdr\"},Cn=\"https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/\",Pn=e=>Array.isArray(e);function Tn({files:e=[\"/px.png\",\"/nx.png\",\"/py.png\",\"/ny.png\",\"/pz.png\",\"/nz.png\"],path:t=\"\",preset:r,encoding:o,extensions:i}={}){var s;let l,c=null,u=!1;if(r){if(!(r in Sn))throw new Error(\"Preset must be one of: \"+Object.keys(Sn).join(\", \"));e=Sn[r],t=Cn}if(u=Pn(e),l=Pn(e)?\"cube\":e.startsWith(\"data:application/exr\")?\"exr\":e.startsWith(\"data:application/hdr\")?\"hdr\":null==(s=e.split(\".\").pop())||null==(s=s.split(\"?\"))||null==(s=s.shift())?void 0:s.toLowerCase(),c=u?n.CubeTextureLoader:\"hdr\"===l?d.RGBELoader:\"exr\"===l?d.EXRLoader:null,!c)throw new Error(\"useEnvironment: Unrecognized file extension: \"+e);const m=a.useLoader(c,u?[e]:e,(e=>{null==e.setPath||e.setPath(t),i&&i(e)})),f=u?m[0]:m;f.mapping=u?n.CubeReflectionMapping:n.EquirectangularReflectionMapping;return\"colorSpace\"in f?f.colorSpace=(null!=o?o:u)?\"srgb\":\"srgb-linear\":f.encoding=(null!=o?o:u)?3001:3e3,f}const Rn=e=>{return(t=e).current&&t.current.isScene?e.current:e;var t};function kn(e,t,r,n,a=0){const o=Rn(t||r),i=o.background,s=o.environment,l=o.backgroundBlurriness||0;return\"only\"!==e&&(o.environment=n),e&&(o.background=n),e&&void 0!==o.backgroundBlurriness&&(o.backgroundBlurriness=a),()=>{\"only\"!==e&&(o.environment=s),e&&(o.background=i),e&&void 0!==o.backgroundBlurriness&&(o.backgroundBlurriness=l)}}function Fn({scene:e,background:t=!1,blur:r,map:n}){const o=a.useThree((e=>e.scene));return k.useLayoutEffect((()=>{if(n)return kn(t,e,o,n,r)}),[o,e,n,t,r]),null}function Dn({background:e=!1,scene:t,blur:r,...n}){const o=Tn(n),i=a.useThree((e=>e.scene));return k.useLayoutEffect((()=>kn(e,t,i,o,r)),[o,e,t,i,r]),null}function Ln({children:e,near:t=1,far:r=1e3,resolution:o=256,frames:i=1,map:s,background:l=!1,blur:c,scene:u,files:d,path:m,preset:f,extensions:p}){const h=a.useThree((e=>e.gl)),y=a.useThree((e=>e.scene)),x=k.useRef(null),[v]=k.useState((()=>new n.Scene)),g=k.useMemo((()=>{const e=new n.WebGLCubeRenderTarget(o);return e.texture.type=n.HalfFloatType,e}),[o]);k.useLayoutEffect((()=>(1===i&&x.current.update(h,v),kn(l,u,y,g.texture,c))),[e,v,g.texture,u,y,l,i,h]);let z=1;return a.useFrame((()=>{(i===1/0||z<i)&&(x.current.update(h,v),z++)})),k.createElement(k.Fragment,null,a.createPortal(k.createElement(k.Fragment,null,e,k.createElement(\"cubeCamera\",{ref:x,args:[t,r,g]}),d||f?k.createElement(Dn,{background:!0,files:d,preset:f,path:m,extensions:p}):s?k.createElement(Fn,{background:!0,map:s,extensions:p}):null),v))}function An(e){var t,r,n,o;const i=Tn(e),s=e.map||i;k.useMemo((()=>a.extend({GroundProjectedEnvImpl:d.GroundProjectedEnv})),[]);const l=k.useMemo((()=>[s]),[s]),c=null==(t=e.ground)?void 0:t.height,u=null==(r=e.ground)?void 0:r.radius,m=null!==(n=null==(o=e.ground)?void 0:o.scale)&&void 0!==n?n:1e3;return k.createElement(k.Fragment,null,k.createElement(Fn,R.default({},e,{map:s})),k.createElement(\"groundProjectedEnvImpl\",{args:l,scale:m,height:c,radius:u}))}function _n(e){return e.ground?k.createElement(An,e):e.map?k.createElement(Fn,e):e.children?k.createElement(Ln,e):k.createElement(Dn,e)}const On=k.forwardRef((({scale:e=10,frames:t=1/0,opacity:r=1,width:n=1,height:o=1,blur:i=1,near:s=0,far:l=10,resolution:c=512,smooth:u=!0,color:m=\"#000000\",depthWrite:f=!1,renderOrder:p,...h},y)=>{const x=k.useRef(null),v=a.useThree((e=>e.scene)),g=a.useThree((e=>e.gl)),z=k.useRef(null);n*=Array.isArray(e)?e[0]:e||1,o*=Array.isArray(e)?e[1]:e||1;const[w,b,E,M,S,C,P]=k.useMemo((()=>{const e=new D.WebGLRenderTarget(c,c),t=new D.WebGLRenderTarget(c,c);t.texture.generateMipmaps=e.texture.generateMipmaps=!1;const r=new D.PlaneGeometry(n,o).rotateX(Math.PI/2),a=new D.Mesh(r),i=new D.MeshDepthMaterial;i.depthTest=i.depthWrite=!1,i.onBeforeCompile=e=>{e.uniforms={...e.uniforms,ucolor:{value:new D.Color(m)}},e.fragmentShader=e.fragmentShader.replace(\"void main() {\",\"uniform vec3 ucolor;\\n           void main() {\\n          \"),e.fragmentShader=e.fragmentShader.replace(\"vec4( vec3( 1.0 - fragCoordZ ), opacity );\",\"vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );\")};const s=new D.ShaderMaterial(d.HorizontalBlurShader),l=new D.ShaderMaterial(d.VerticalBlurShader);return l.depthTest=s.depthTest=!1,[e,r,i,a,s,l,t]}),[c,n,o,e,m]),T=e=>{M.visible=!0,M.material=S,S.uniforms.tDiffuse.value=w.texture,S.uniforms.h.value=1*e/256,g.setRenderTarget(P),g.render(M,z.current),M.material=C,C.uniforms.tDiffuse.value=P.texture,C.uniforms.v.value=1*e/256,g.setRenderTarget(w),g.render(M,z.current),M.visible=!1};let F,L,A=0;return a.useFrame((()=>{z.current&&(t===1/0||A<t)&&(A++,F=v.background,L=v.overrideMaterial,x.current.visible=!1,v.background=null,v.overrideMaterial=E,g.setRenderTarget(w),g.render(v,z.current),T(i),u&&T(.4*i),g.setRenderTarget(null),x.current.visible=!0,v.overrideMaterial=L,v.background=F)})),k.useImperativeHandle(y,(()=>x.current),[]),k.createElement(\"group\",R.default({\"rotation-x\":Math.PI/2},h,{ref:x}),k.createElement(\"mesh\",{renderOrder:p,geometry:b,scale:[1,-1,1],rotation:[-Math.PI/2,0,0]},k.createElement(\"meshBasicMaterial\",{transparent:!0,map:w.texture,opacity:r,depthWrite:f})),k.createElement(\"orthographicCamera\",{ref:z,args:[-n/2,n/2,o/2,-o/2,s,l]}))}));const Nn=k.createContext(null),Bn=Se({color:new D.Color,blend:2,alphaTest:.75,opacity:0,map:null},\"varying vec2 vUv;\\n   void main() {\\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\\n     vUv = uv;\\n   }\",`varying vec2 vUv;\\n   uniform sampler2D map;\\n   uniform vec3 color;\\n   uniform float opacity;\\n   uniform float alphaTest;\\n   uniform float blend;\\n   void main() {\\n     vec4 sampledDiffuseColor = texture2D(map, vUv);\\n     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);\\n     #include <tonemapping_fragment>\\n     #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n   }`),In=k.forwardRef((({children:e,temporal:t,frames:r=40,limit:n=1/0,blend:o=20,scale:i=10,opacity:s=1,alphaTest:l=.75,color:c=\"black\",colorBlend:u=2,resolution:d=1024,toneMapped:m=!0,...f},p)=>{a.extend({SoftShadowMaterial:Bn});const h=a.useThree((e=>e.gl)),y=a.useThree((e=>e.scene)),x=a.useThree((e=>e.camera)),v=a.useThree((e=>e.invalidate)),g=k.useRef(null),z=k.useRef(null),[w]=k.useState((()=>new Vn(h,y,d)));k.useLayoutEffect((()=>{w.configure(g.current)}),[]);const b=k.useMemo((()=>({lights:new Map,temporal:!!t,frames:Math.max(2,r),blend:Math.max(2,r===1/0?o:r),count:0,getMesh:()=>g.current,reset:()=>{w.clear();const e=g.current.material;e.opacity=0,e.alphaTest=0,b.count=0},update:(e=1)=>{const t=g.current.material;b.temporal?(t.opacity=Math.min(s,t.opacity+s/b.blend),t.alphaTest=Math.min(l,t.alphaTest+l/b.blend)):(t.opacity=s,t.alphaTest=l),z.current.visible=!0,w.prepare();for(let t=0;t<e;t++)b.lights.forEach((e=>e.update())),w.update(x,b.blend);z.current.visible=!1,w.finish()}})),[w,x,y,t,r,o,s,l]);return k.useLayoutEffect((()=>{b.reset(),b.temporal||b.frames===1/0||b.update(b.blend)})),k.useImperativeHandle(p,(()=>b),[b]),a.useFrame((()=>{(b.temporal||b.frames===1/0)&&b.count<b.frames&&b.count<n&&(v(),b.update(),b.count++)})),k.createElement(\"group\",f,k.createElement(\"group\",{traverse:()=>null,ref:z},k.createElement(Nn.Provider,{value:b},e)),k.createElement(\"mesh\",{receiveShadow:!0,ref:g,scale:i,rotation:[-Math.PI/2,0,0]},k.createElement(\"planeGeometry\",null),k.createElement(\"softShadowMaterial\",{transparent:!0,depthWrite:!1,toneMapped:m,color:c,blend:u,map:w.progressiveLightMap2.texture})))})),Un=k.forwardRef((({castShadow:e=!0,bias:t=.001,mapSize:r=512,size:n=5,near:a=.5,far:o=500,frames:i=1,position:s=[0,0,0],radius:l=1,amount:c=8,intensity:u=(Te>=155?Math.PI:1),ambient:d=.5,...m},f)=>{const p=k.useRef(null),h=new D.Vector3(...s).length(),y=k.useContext(Nn),x=k.useCallback((()=>{let e;if(p.current)for(let t=0;t<p.current.children.length;t++)if(e=p.current.children[t],Math.random()>d)e.position.set(s[0]+D.MathUtils.randFloatSpread(l),s[1]+D.MathUtils.randFloatSpread(l),s[2]+D.MathUtils.randFloatSpread(l));else{let t=Math.acos(2*Math.random()-1)-Math.PI/2,r=2*Math.PI*Math.random();e.position.set(Math.cos(t)*Math.cos(r)*h,Math.abs(Math.cos(t)*Math.sin(r)*h),Math.sin(t)*h)}}),[l,d,h,...s]),v=k.useMemo((()=>({update:x})),[x]);return k.useImperativeHandle(f,(()=>v),[v]),k.useLayoutEffect((()=>{const e=p.current;return y&&y.lights.set(e.uuid,v),()=>{y.lights.delete(e.uuid)}}),[y,v]),k.createElement(\"group\",R.default({ref:p},m),Array.from({length:c},((i,s)=>k.createElement(\"directionalLight\",{key:s,castShadow:e,\"shadow-bias\":t,\"shadow-mapSize\":[r,r],intensity:u/c},k.createElement(\"orthographicCamera\",{attach:\"shadow-camera\",args:[-n,n,n,-n,a,o]})))))}));class Vn{constructor(e,t,r=1024){this.renderer=e,this.res=r,this.scene=t,this.buffer1Active=!1,this.lights=[],this.meshes=[],this.object=null,this.clearColor=new D.Color,this.clearAlpha=0;const n={type:D.HalfFloatType,magFilter:D.NearestFilter,minFilter:D.NearestFilter};this.progressiveLightMap1=new D.WebGLRenderTarget(this.res,this.res,n),this.progressiveLightMap2=new D.WebGLRenderTarget(this.res,this.res,n),this.discardMat=new Br,this.targetMat=new D.MeshLambertMaterial({fog:!1}),this.previousShadowMap={value:this.progressiveLightMap1.texture},this.averagingWindow={value:100},this.targetMat.onBeforeCompile=e=>{e.vertexShader=\"varying vec2 vUv;\\n\"+e.vertexShader.slice(0,-1)+\"vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }\";const t=e.fragmentShader.indexOf(\"void main() {\");e.fragmentShader=\"varying vec2 vUv;\\n\"+e.fragmentShader.slice(0,t)+\"uniform sampler2D previousShadowMap;\\n\\tuniform float averagingWindow;\\n\"+e.fragmentShader.slice(t-1,-1)+\"\\nvec3 texelOld = texture2D(previousShadowMap, vUv).rgb;\\n        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);\\n      }\",e.uniforms.previousShadowMap=this.previousShadowMap,e.uniforms.averagingWindow=this.averagingWindow}}clear(){this.renderer.getClearColor(this.clearColor),this.clearAlpha=this.renderer.getClearAlpha(),this.renderer.setClearColor(\"black\",1),this.renderer.setRenderTarget(this.progressiveLightMap1),this.renderer.clear(),this.renderer.setRenderTarget(this.progressiveLightMap2),this.renderer.clear(),this.renderer.setRenderTarget(null),this.renderer.setClearColor(this.clearColor,this.clearAlpha),this.lights=[],this.meshes=[],this.scene.traverse((e=>{!function(e){return!!e.geometry}(e)?function(e){return e.isLight}(e)&&this.lights.push({object:e,intensity:e.intensity}):this.meshes.push({object:e,material:e.material})}))}prepare(){this.lights.forEach((e=>e.object.intensity=0)),this.meshes.forEach((e=>e.object.material=this.discardMat))}finish(){this.lights.forEach((e=>e.object.intensity=e.intensity)),this.meshes.forEach((e=>e.object.material=e.material))}configure(e){this.object=e}update(e,t=100){if(!this.object)return;this.averagingWindow.value=t,this.object.material=this.targetMat;const r=this.buffer1Active?this.progressiveLightMap1:this.progressiveLightMap2,n=this.buffer1Active?this.progressiveLightMap2:this.progressiveLightMap1,a=this.scene.background;this.scene.background=null,this.renderer.setRenderTarget(r),this.previousShadowMap.value=n.texture,this.buffer1Active=!this.buffer1Active,this.renderer.render(this.scene,e),this.renderer.setRenderTarget(null),this.scene.background=a}}const jn={rembrandt:{main:[1,2,1],fill:[-2,-.5,-2]},portrait:{main:[-1,2,.5],fill:[-1,.5,-1.5]},upfront:{main:[0,2,1],fill:[-1,.5,-1.5]},soft:{main:[-2,4,4],fill:[-1,.5,-1.5]}};function Wn({radius:e,adjustCamera:t}){const r=bn();return k.useEffect((()=>{t&&r.refresh().clip().fit()}),[e,t]),null}const Gn=e=>0===e?0:Math.pow(2,10*e-10);const Hn=k.forwardRef((({fog:e=!1,renderOrder:t,depthWrite:r=!1,colorStop:a=0,color:o=\"black\",opacity:i=.5,...s},l)=>{const c=k.useMemo((()=>{const e=document.createElement(\"canvas\");e.width=128,e.height=128;const t=e.getContext(\"2d\"),r=t.createRadialGradient(e.width/2,e.height/2,0,e.width/2,e.height/2,e.width/2);return r.addColorStop(a,new n.Color(o).getStyle()),r.addColorStop(1,\"rgba(0,0,0,0)\"),t.fillStyle=r,t.fillRect(0,0,e.width,e.height),e}),[o,a]);return k.createElement(\"mesh\",R.default({renderOrder:t,ref:l,\"rotation-x\":-Math.PI/2},s),k.createElement(\"planeGeometry\",null),k.createElement(\"meshBasicMaterial\",{transparent:!0,opacity:i,fog:e,depthWrite:r,side:n.DoubleSide},k.createElement(\"canvasTexture\",{attach:\"map\",args:[c]})))}));function $n(e=D.FrontSide){const t={value:new D.Matrix4};return Object.assign(new D.MeshNormalMaterial({side:e}),{viewMatrix:t,onBeforeCompile:e=>{e.uniforms.viewMatrix=t,e.fragmentShader=\"vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n           return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n         }\\n\"+e.fragmentShader.replace(\"#include <normal_fragment_maps>\",\"#include <normal_fragment_maps>\\n           normal = inverseTransformDirection( normal, viewMatrix );\\n\")}})}const qn=Se({causticsTexture:null,causticsTextureB:null,color:new D.Color,lightProjMatrix:new D.Matrix4,lightViewMatrix:new D.Matrix4},\"varying vec3 vWorldPosition;   \\n   void main() {\\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\\n     vec4 worldPosition = modelMatrix * vec4(position, 1.);\\n     vWorldPosition = worldPosition.xyz;\\n   }\",`varying vec3 vWorldPosition;\\n  uniform vec3 color;\\n  uniform sampler2D causticsTexture; \\n  uniform sampler2D causticsTextureB; \\n  uniform mat4 lightProjMatrix;\\n  uniform mat4 lightViewMatrix;\\n   void main() {\\n    // Apply caustics  \\n    vec4 lightSpacePos = lightProjMatrix * lightViewMatrix * vec4(vWorldPosition, 1.0);\\n    lightSpacePos.xyz /= lightSpacePos.w;\\n    lightSpacePos.xyz = lightSpacePos.xyz * 0.5 + 0.5; \\n    vec3 front = texture2D(causticsTexture, lightSpacePos.xy).rgb;\\n    vec3 back = texture2D(causticsTextureB, lightSpacePos.xy).rgb;\\n    gl_FragColor = vec4((front + back) * color, 1.0);\\n    #include <tonemapping_fragment>\\n    #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n   }`),Xn=Se({cameraMatrixWorld:new D.Matrix4,cameraProjectionMatrixInv:new D.Matrix4,normalTexture:null,depthTexture:null,lightDir:new D.Vector3(0,1,0),lightPlaneNormal:new D.Vector3(0,1,0),lightPlaneConstant:0,near:.1,far:100,modelMatrix:new D.Matrix4,worldRadius:1/40,ior:1.1,bounces:0,resolution:1024,size:10,intensity:.5},\"\\n  varying vec2 vUv;\\n  void main() {\\n      vUv = uv;\\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n  }\",\"  \\n  uniform mat4 cameraMatrixWorld;\\n  uniform mat4 cameraProjectionMatrixInv;\\n  uniform vec3 lightDir;\\n  uniform vec3 lightPlaneNormal;\\n  uniform float lightPlaneConstant;\\n  uniform float near;\\n  uniform float far;\\n  uniform float time;\\n  uniform float worldRadius;\\n  uniform float resolution;\\n  uniform float size;\\n  uniform float intensity;\\n  uniform float ior;\\n  precision highp isampler2D;\\n  precision highp usampler2D;\\n  uniform sampler2D normalTexture;\\n  uniform sampler2D depthTexture;\\n  uniform float bounces;\\n  varying vec2 vUv;\\n  vec3 WorldPosFromDepth(float depth, vec2 coord) {\\n    float z = depth * 2.0 - 1.0;\\n    vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);\\n    vec4 viewSpacePosition = cameraProjectionMatrixInv * clipSpacePosition;\\n    // Perspective division\\n    viewSpacePosition /= viewSpacePosition.w;\\n    vec4 worldSpacePosition = cameraMatrixWorld * viewSpacePosition;\\n    return worldSpacePosition.xyz;\\n  }                  \\n  float sdPlane( vec3 p, vec3 n, float h ) {\\n    // n must be normalized\\n    return dot(p,n) + h;\\n  }\\n  float planeIntersect( vec3 ro, vec3 rd, vec4 p ) {\\n    return -(dot(ro,p.xyz)+p.w)/dot(rd,p.xyz);\\n  }\\n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 pos, vec3 normal, float ior, out vec3 rayOrigin, out vec3 rayDirection) {\\n    rayOrigin = ro;\\n    rayDirection = rd;\\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\\n    rayOrigin = pos + rayDirection * 0.1;\\n    return rayDirection;\\n  }\\n  void main() {\\n    // Each sample consists of random offset in the x and y direction\\n    float caustic = 0.0;\\n    float causticTexelSize = (1.0 / resolution) * size * 2.0;\\n    float texelsNeeded = worldRadius / causticTexelSize;\\n    float sampleRadius = texelsNeeded / resolution;\\n    float sum = 0.0;\\n    if (texture2D(depthTexture, vUv).x == 1.0) {\\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n      return;\\n    }\\n    vec2 offset1 = vec2(-0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);\\n    vec2 offset2 = vec2(-0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);\\n    vec2 offset3 = vec2(0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);\\n    vec2 offset4 = vec2(0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);\\n    vec2 uv1 = vUv + offset1 * sampleRadius;\\n    vec2 uv2 = vUv + offset2 * sampleRadius;\\n    vec2 uv3 = vUv + offset3 * sampleRadius;\\n    vec2 uv4 = vUv + offset4 * sampleRadius;\\n    vec3 normal1 = texture2D(normalTexture, uv1, -10.0).rgb * 2.0 - 1.0;\\n    vec3 normal2 = texture2D(normalTexture, uv2, -10.0).rgb * 2.0 - 1.0;\\n    vec3 normal3 = texture2D(normalTexture, uv3, -10.0).rgb * 2.0 - 1.0;\\n    vec3 normal4 = texture2D(normalTexture, uv4, -10.0).rgb * 2.0 - 1.0;\\n    float depth1 = texture2D(depthTexture, uv1, -10.0).x;\\n    float depth2 = texture2D(depthTexture, uv2, -10.0).x;\\n    float depth3 = texture2D(depthTexture, uv3, -10.0).x;\\n    float depth4 = texture2D(depthTexture, uv4, -10.0).x;\\n    // Sanity check the depths\\n    if (depth1 == 1.0 || depth2 == 1.0 || depth3 == 1.0 || depth4 == 1.0) {\\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n      return;\\n    }\\n    vec3 pos1 = WorldPosFromDepth(depth1, uv1);\\n    vec3 pos2 = WorldPosFromDepth(depth2, uv2);\\n    vec3 pos3 = WorldPosFromDepth(depth3, uv3);\\n    vec3 pos4 = WorldPosFromDepth(depth4, uv4);\\n    vec3 originPos1 = WorldPosFromDepth(0.0, uv1);\\n    vec3 originPos2 = WorldPosFromDepth(0.0, uv2);\\n    vec3 originPos3 = WorldPosFromDepth(0.0, uv3);\\n    vec3 originPos4 = WorldPosFromDepth(0.0, uv4);\\n    vec3 endPos1, endPos2, endPos3, endPos4;\\n    vec3 endDir1, endDir2, endDir3, endDir4;\\n    totalInternalReflection(originPos1, lightDir, pos1, normal1, ior, endPos1, endDir1);\\n    totalInternalReflection(originPos2, lightDir, pos2, normal2, ior, endPos2, endDir2);\\n    totalInternalReflection(originPos3, lightDir, pos3, normal3, ior, endPos3, endDir3);\\n    totalInternalReflection(originPos4, lightDir, pos4, normal4, ior, endPos4, endDir4);\\n    float lightPosArea = length(cross(originPos2 - originPos1, originPos3 - originPos1)) + length(cross(originPos3 - originPos1, originPos4 - originPos1));\\n    float t1 = planeIntersect(endPos1, endDir1, vec4(lightPlaneNormal, lightPlaneConstant));\\n    float t2 = planeIntersect(endPos2, endDir2, vec4(lightPlaneNormal, lightPlaneConstant));\\n    float t3 = planeIntersect(endPos3, endDir3, vec4(lightPlaneNormal, lightPlaneConstant));\\n    float t4 = planeIntersect(endPos4, endDir4, vec4(lightPlaneNormal, lightPlaneConstant));\\n    vec3 finalPos1 = endPos1 + endDir1 * t1;\\n    vec3 finalPos2 = endPos2 + endDir2 * t2;\\n    vec3 finalPos3 = endPos3 + endDir3 * t3;\\n    vec3 finalPos4 = endPos4 + endDir4 * t4;\\n    float finalArea = length(cross(finalPos2 - finalPos1, finalPos3 - finalPos1)) + length(cross(finalPos3 - finalPos1, finalPos4 - finalPos1));\\n    caustic += intensity * (lightPosArea / finalArea);\\n    // Calculate the area of the triangle in light spaces\\n    gl_FragColor = vec4(vec3(max(caustic, 0.0)), 1.0);\\n  }\"),Yn={depth:!0,minFilter:D.LinearFilter,magFilter:D.LinearFilter,type:D.UnsignedByteType},Kn={minFilter:D.LinearMipmapLinearFilter,magFilter:D.LinearFilter,type:D.FloatType,generateMipmaps:!0},Qn=k.forwardRef((({debug:e,children:t,frames:r=1,ior:n=1.1,color:o=\"white\",causticsOnly:i=!1,backside:s=!1,backsideIOR:l=1.1,worldRadius:c=.3125,intensity:u=.05,resolution:m=2024,lightSource:f=[5,5,5],...p},h)=>{a.extend({CausticsProjectionMaterial:qn});const y=k.useRef(null),x=k.useRef(null),v=k.useRef(null),g=k.useRef(null),z=a.useThree((e=>e.gl)),w=hr(e&&x,D.CameraHelper),b=et(m,m,Yn),E=et(m,m,Yn),M=et(m,m,Kn),S=et(m,m,Kn),[C]=k.useState((()=>$n())),[P]=k.useState((()=>$n(D.BackSide))),[T]=k.useState((()=>new Xn)),[F]=k.useState((()=>new d.FullScreenQuad(T)));k.useLayoutEffect((()=>{y.current.updateWorldMatrix(!1,!0)}));let L=0;const A=new D.Vector3,_=new D.Frustum,O=new D.Matrix4,N=new D.Plane,B=new D.Vector3,I=new D.Vector3,U=new D.Box3,V=new D.Vector3,j=[],W=[],G=[],H=[],$=new D.Vector3;for(let e=0;e<8;e++)j.push(new D.Vector3),W.push(new D.Vector3),G.push(new D.Vector3),H.push(new D.Vector3);return a.useFrame((()=>{if(r===1/0||L++<r){var t,a;Array.isArray(f)?B.fromArray(f).normalize():B.copy(y.current.worldToLocal(f.current.getWorldPosition(A)).normalize()),I.copy(B).multiplyScalar(-1),null==(t=v.current.parent)||t.matrixWorld.identity(),U.setFromObject(v.current,!0),j[0].set(U.min.x,U.min.y,U.min.z),j[1].set(U.min.x,U.min.y,U.max.z),j[2].set(U.min.x,U.max.y,U.min.z),j[3].set(U.min.x,U.max.y,U.max.z),j[4].set(U.max.x,U.min.y,U.min.z),j[5].set(U.max.x,U.min.y,U.max.z),j[6].set(U.max.x,U.max.y,U.min.z),j[7].set(U.max.x,U.max.y,U.max.z);for(let e=0;e<8;e++)W[e].copy(j[e]);U.getCenter(V),j.map((e=>e.sub(V)));const r=N.set(I,0);j.map(((e,t)=>r.projectPoint(e,G[t])));const o=G.reduce(((e,t)=>e.add(t)),A.set(0,0,0)).divideScalar(G.length),d=G.map((e=>e.distanceTo(o))).reduce(((e,t)=>Math.max(e,t))),p=j.map((e=>e.dot(B))).reduce(((e,t)=>Math.max(e,t)));x.current.position.copy($.copy(B).multiplyScalar(p).add(V)),x.current.lookAt(v.current.localToWorld(V));const h=O.lookAt(x.current.position,V,A.set(0,1,0));x.current.left=-d,x.current.right=d,x.current.top=d,x.current.bottom=-d;const R=A.set(0,d,0).applyMatrix4(h),k=(x.current.position.y+R.y)/B.y;x.current.near=.1,x.current.far=k,x.current.updateProjectionMatrix(),x.current.updateMatrixWorld();const D=W.map(((e,t)=>e.add(H[t].copy(B).multiplyScalar(-e.y/B.y)))),L=D.reduce(((e,t)=>e.add(t)),A.set(0,0,0)).divideScalar(D.length),q=2*D.map((e=>Math.hypot(e.x-L.x,e.z-L.z))).reduce(((e,t)=>Math.max(e,t)));g.current.scale.setScalar(q),g.current.position.copy(L),e&&(null==(a=w.current)||a.update()),P.viewMatrix.value=C.viewMatrix.value=x.current.matrixWorldInverse;const X=_.setFromProjectionMatrix(O.multiplyMatrices(x.current.projectionMatrix,x.current.matrixWorldInverse)).planes[4];T.cameraMatrixWorld=x.current.matrixWorld,T.cameraProjectionMatrixInv=x.current.projectionMatrixInverse,T.lightDir=I,T.lightPlaneNormal=X.normal,T.lightPlaneConstant=X.constant,T.near=x.current.near,T.far=x.current.far,T.resolution=m,T.size=d,T.intensity=u,T.worldRadius=c,v.current.visible=!0,z.setRenderTarget(b),z.clear(),v.current.overrideMaterial=C,z.render(v.current,x.current),z.setRenderTarget(E),z.clear(),s&&(v.current.overrideMaterial=P,z.render(v.current,x.current)),v.current.overrideMaterial=null,T.ior=n,g.current.material.lightProjMatrix=x.current.projectionMatrix,g.current.material.lightViewMatrix=x.current.matrixWorldInverse,T.normalTexture=b.texture,T.depthTexture=b.depthTexture,z.setRenderTarget(M),z.clear(),F.render(z),T.ior=l,T.normalTexture=E.texture,T.depthTexture=E.depthTexture,z.setRenderTarget(S),z.clear(),s&&F.render(z),z.setRenderTarget(null),i&&(v.current.visible=!1)}})),k.useImperativeHandle(h,(()=>y.current),[]),k.createElement(\"group\",R.default({ref:y},p),k.createElement(\"scene\",{ref:v},k.createElement(\"orthographicCamera\",{ref:x,up:[0,1,0]}),t),k.createElement(\"mesh\",{renderOrder:2,ref:g,\"rotation-x\":-Math.PI/2},k.createElement(\"planeGeometry\",null),k.createElement(\"causticsProjectionMaterial\",{transparent:!0,color:o,causticsTexture:M.texture,causticsTextureB:S.texture,blending:D.CustomBlending,blendSrc:D.OneFactor,blendDst:D.SrcAlphaFactor,depthWrite:!1}),e&&k.createElement(Ae,null,k.createElement(\"lineBasicMaterial\",{color:\"#ffff00\",toneMapped:!1}))))})),Zn=k.forwardRef((({mixBlur:e=0,mixStrength:t=.5,resolution:r=256,blur:o=[0,0],args:i=[1,1],minDepthThreshold:s=.9,maxDepthThreshold:l=1,depthScale:c=0,depthToBlurRatioBias:u=.25,mirror:d=0,children:m,debug:f=0,distortion:p=1,mixContrast:h=1,distortionMap:y,...x},v)=>{k.useEffect((()=>{console.warn(\"Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!\")}),[]);const g=a.useThree((({gl:e})=>e)),z=a.useThree((({camera:e})=>e)),w=a.useThree((({scene:e})=>e)),b=(o=Array.isArray(o)?o:[o,o])[0]+o[1]>0,E=k.useRef(null),[M]=k.useState((()=>new n.Plane)),[S]=k.useState((()=>new n.Vector3)),[C]=k.useState((()=>new n.Vector3)),[P]=k.useState((()=>new n.Vector3)),[T]=k.useState((()=>new n.Matrix4)),[F]=k.useState((()=>new n.Vector3(0,0,-1))),[D]=k.useState((()=>new n.Vector4)),[L]=k.useState((()=>new n.Vector3)),[_]=k.useState((()=>new n.Vector3)),[O]=k.useState((()=>new n.Vector4)),[N]=k.useState((()=>new n.Matrix4)),[B]=k.useState((()=>new n.PerspectiveCamera)),I=k.useCallback((()=>{if(C.setFromMatrixPosition(E.current.matrixWorld),P.setFromMatrixPosition(z.matrixWorld),T.extractRotation(E.current.matrixWorld),S.set(0,0,1),S.applyMatrix4(T),L.subVectors(C,P),L.dot(S)>0)return;L.reflect(S).negate(),L.add(C),T.extractRotation(z.matrixWorld),F.set(0,0,-1),F.applyMatrix4(T),F.add(P),_.subVectors(C,F),_.reflect(S).negate(),_.add(C),B.position.copy(L),B.up.set(0,1,0),B.up.applyMatrix4(T),B.up.reflect(S),B.lookAt(_),B.far=z.far,B.updateMatrixWorld(),B.projectionMatrix.copy(z.projectionMatrix),N.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),N.multiply(B.projectionMatrix),N.multiply(B.matrixWorldInverse),N.multiply(E.current.matrixWorld),M.setFromNormalAndCoplanarPoint(S,C),M.applyMatrix4(B.matrixWorldInverse),D.set(M.normal.x,M.normal.y,M.normal.z,M.constant);const e=B.projectionMatrix;O.x=(Math.sign(D.x)+e.elements[8])/e.elements[0],O.y=(Math.sign(D.y)+e.elements[9])/e.elements[5],O.z=-1,O.w=(1+e.elements[10])/e.elements[14],D.multiplyScalar(2/D.dot(O)),e.elements[2]=D.x,e.elements[6]=D.y,e.elements[10]=D.z+1,e.elements[14]=D.w}),[]),[U,V,j,W]=k.useMemo((()=>{const a={type:n.HalfFloatType,minFilter:n.LinearFilter,magFilter:n.LinearFilter},i=new n.WebGLRenderTarget(r,r,a);i.depthBuffer=!0,i.depthTexture=new n.DepthTexture(r,r),i.depthTexture.format=n.DepthFormat,i.depthTexture.type=n.UnsignedShortType;const m=new n.WebGLRenderTarget(r,r,a);return[i,m,new _r({gl:g,resolution:r,width:o[0],height:o[1],minDepthThreshold:s,maxDepthThreshold:l,depthScale:c,depthToBlurRatioBias:u}),{mirror:d,textureMatrix:N,mixBlur:e,tDiffuse:i.texture,tDepth:i.depthTexture,tDiffuseBlur:m.texture,hasBlur:b,mixStrength:t,minDepthThreshold:s,maxDepthThreshold:l,depthScale:c,depthToBlurRatioBias:u,transparent:!0,debug:f,distortion:p,distortionMap:y,mixContrast:h,\"defines-USE_BLUR\":b?\"\":void 0,\"defines-USE_DEPTH\":c>0?\"\":void 0,\"defines-USE_DISTORTION\":y?\"\":void 0}]}),[g,o,N,r,d,b,e,t,s,l,c,u,f,p,y,h]);return a.useFrame((()=>{if(null==E||!E.current)return;E.current.visible=!1;const e=g.xr.enabled,t=g.shadowMap.autoUpdate;I(),g.xr.enabled=!1,g.shadowMap.autoUpdate=!1,g.setRenderTarget(U),g.state.buffers.depth.setMask(!0),g.autoClear||g.clear(),g.render(w,B),b&&j.render(g,U,V),g.xr.enabled=e,g.shadowMap.autoUpdate=t,E.current.visible=!0,g.setRenderTarget(null)})),k.createElement(\"mesh\",R.default({ref:A.default([E,v])},x),k.createElement(\"planeGeometry\",{args:i}),m?m(\"meshReflectorMaterial\",W):k.createElement(\"meshReflectorMaterial\",W))}));class Jn extends D.ShaderMaterial{constructor(){super({uniforms:{depth:{value:null},opacity:{value:1},attenuation:{value:2.5},anglePower:{value:12},spotPosition:{value:new D.Vector3(0,0,0)},lightColor:{value:new D.Color(\"white\")},cameraNear:{value:0},cameraFar:{value:1},resolution:{value:new D.Vector2(0,0)}},transparent:!0,depthWrite:!1,vertexShader:\"\\n      varying vec3 vNormal;\\n      varying vec3 vWorldPosition;\\n      varying float vViewZ;\\n      varying float vIntensity;\\n      uniform vec3 spotPosition;\\n      uniform float attenuation;      \\n\\n      void main() {\\n        // compute intensity\\n        vNormal = normalize( normalMatrix * normal );\\n        vec4 worldPosition\\t= modelMatrix * vec4( position, 1.0 );\\n        vWorldPosition = worldPosition.xyz;\\n        vec4 viewPosition = viewMatrix * worldPosition;\\n        vViewZ = viewPosition.z;\\n        float intensity\\t= distance(worldPosition.xyz, spotPosition) / attenuation;\\n        intensity\\t= 1.0 - clamp(intensity, 0.0, 1.0);\\n        vIntensity = intensity;        \\n        // set gl_Position\\n        gl_Position\\t= projectionMatrix * viewPosition;\\n\\n      }\",fragmentShader:`\\n      #include <packing>\\n\\n      varying vec3 vNormal;\\n      varying vec3 vWorldPosition;\\n      uniform vec3 lightColor;\\n      uniform vec3 spotPosition;\\n      uniform float attenuation;\\n      uniform float anglePower;\\n      uniform sampler2D depth;\\n      uniform vec2 resolution;\\n      uniform float cameraNear;\\n      uniform float cameraFar;\\n      varying float vViewZ;\\n      varying float vIntensity;\\n      uniform float opacity;\\n\\n      float readDepth( sampler2D depthSampler, vec2 coord ) {\\n        float fragCoordZ = texture2D( depthSampler, coord ).x;\\n        float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\\n        return viewZ;\\n      }\\n\\n      void main() {\\n        float d = 1.0;\\n        bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\\n        if (isSoft) {\\n          vec2 sUv = gl_FragCoord.xy / resolution;\\n          d = readDepth(depth, sUv);\\n        }\\n        float intensity = vIntensity;\\n        vec3 normal\\t= vec3(vNormal.x, vNormal.y, abs(vNormal.z));\\n        float angleIntensity\\t= pow( dot(normal, vec3(0.0, 0.0, 1.0)), anglePower );\\n        intensity\\t*= angleIntensity;\\n        // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\\n        if (isSoft) {\\n          intensity\\t*= smoothstep(0., 1., vViewZ - d);\\n        }\\n        gl_FragColor = vec4(lightColor, intensity * opacity);\\n\\n        #include <tonemapping_fragment>\\n\\t      #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n      }`})}}var ea=\"#define GLSLIFY 1\\nvarying vec2 vUv;uniform sampler2D uShadowMap;uniform float uTime;void main(){vec3 color=texture2D(uShadowMap,vUv).xyz;gl_FragColor=vec4(color,1.);}\";const ta=e=>null==e?void 0:e.isSpotLight;function ra({opacity:e=1,radiusTop:t,radiusBottom:r,depthBuffer:o,color:i=\"white\",distance:s=5,angle:l=.15,attenuation:c=5,anglePower:u=5}){const d=k.useRef(null),m=a.useThree((e=>e.size)),f=a.useThree((e=>e.camera)),p=a.useThree((e=>e.viewport.dpr)),[h]=k.useState((()=>new Jn)),[y]=k.useState((()=>new n.Vector3));t=void 0===t?.1:t,r=void 0===r?7*l:r,a.useFrame((()=>{h.uniforms.spotPosition.value.copy(d.current.getWorldPosition(y)),d.current.lookAt(d.current.parent.target.getWorldPosition(y))}));const x=k.useMemo((()=>{const e=new n.CylinderGeometry(t,r,s,128,64,!0);return e.applyMatrix4((new n.Matrix4).makeTranslation(0,-s/2,0)),e.applyMatrix4((new n.Matrix4).makeRotationX(-Math.PI/2)),e}),[s,t,r]);return k.createElement(k.Fragment,null,k.createElement(\"mesh\",{ref:d,geometry:x,raycast:()=>null},k.createElement(\"primitive\",{object:h,attach:\"material\",\"uniforms-opacity-value\":e,\"uniforms-lightColor-value\":i,\"uniforms-attenuation-value\":c,\"uniforms-anglePower-value\":u,\"uniforms-depth-value\":o,\"uniforms-cameraNear-value\":f.near,\"uniforms-cameraFar-value\":f.far,\"uniforms-resolution-value\":o?[m.width*p,m.height*p]:[0,0]})))}function na(e,t,r,o,i){const[[s,l]]=k.useState((()=>[new n.Vector3,new n.Vector3]));k.useLayoutEffect((()=>{if(!ta(e.current))throw new Error(\"SpotlightShadow must be a child of a SpotLight\");e.current.shadow.mapSize.set(r,o),e.current.shadow.needsUpdate=!0}),[e,r,o]),a.useFrame((()=>{if(!e.current)return;const r=e.current.position,n=e.current.target.position;l.copy(n).sub(r);var a=l.length();l.normalize().multiplyScalar(a*i),s.copy(r).add(l),t.current.position.copy(s),t.current.lookAt(e.current.target.position)}))}function aa({distance:e=.4,alphaTest:t=.5,map:r,shader:o=ea,width:i=512,height:s=512,scale:l=1,children:c,...u}){const m=k.useRef(null),f=u.spotlightRef,p=u.debug;na(f,m,i,s,e);const h=k.useMemo((()=>new n.WebGLRenderTarget(i,s,{format:n.RGBAFormat,encoding:n.LinearEncoding,stencilBuffer:!1})),[i,s]),y=k.useRef({uShadowMap:{value:r},uTime:{value:0}});k.useEffect((()=>{y.current.uShadowMap.value=r}),[r]);const x=k.useMemo((()=>new d.FullScreenQuad(new n.ShaderMaterial({uniforms:y.current,vertexShader:\"\\n          varying vec2 vUv;\\n\\n          void main() {\\n            vUv = uv;\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n          }\\n          \",fragmentShader:o}))),[o]);return k.useEffect((()=>()=>{x.material.dispose(),x.dispose()}),[x]),k.useEffect((()=>()=>h.dispose()),[h]),a.useFrame((({gl:e},t)=>{y.current.uTime.value+=t,e.setRenderTarget(h),x.render(e),e.setRenderTarget(null)})),k.createElement(k.Fragment,null,k.createElement(\"mesh\",{ref:m,scale:l,castShadow:!0},k.createElement(\"planeGeometry\",null),k.createElement(\"meshBasicMaterial\",{transparent:!0,side:n.DoubleSide,alphaTest:t,alphaMap:h.texture,\"alphaMap-wrapS\":n.RepeatWrapping,\"alphaMap-wrapT\":n.RepeatWrapping,opacity:p?1:0},c)))}function oa({distance:e=.4,alphaTest:t=.5,map:r,width:a=512,height:o=512,scale:i,children:s,...l}){const c=k.useRef(null),u=l.spotlightRef,d=l.debug;return na(u,c,a,o,e),k.createElement(k.Fragment,null,k.createElement(\"mesh\",{ref:c,scale:i,castShadow:!0},k.createElement(\"planeGeometry\",null),k.createElement(\"meshBasicMaterial\",{transparent:!0,side:n.DoubleSide,alphaTest:t,alphaMap:r,\"alphaMap-wrapS\":n.RepeatWrapping,\"alphaMap-wrapT\":n.RepeatWrapping,opacity:d?1:0},s)))}const ia=k.forwardRef((({opacity:e=1,radiusTop:t,radiusBottom:r,depthBuffer:n,color:a=\"white\",distance:o=5,angle:i=.15,attenuation:s=5,anglePower:l=5,volumetric:c=!0,debug:u=!1,children:d,...m},f)=>{const p=k.useRef(null);return k.createElement(\"group\",null,u&&p.current&&k.createElement(\"spotLightHelper\",{args:[p.current]}),k.createElement(\"spotLight\",R.default({ref:A.default([f,p]),angle:i,color:a,distance:o,castShadow:!0},m),c&&k.createElement(ra,{debug:u,opacity:e,radiusTop:t,radiusBottom:r,depthBuffer:n,color:a,distance:o,angle:i,attenuation:s,anglePower:l})),d&&k.cloneElement(d,{spotlightRef:p,debug:u}))})),sa=k.forwardRef((({args:e,map:t,toneMapped:r=!1,color:n=\"white\",form:o=\"rect\",intensity:i=1,scale:s=1,target:l,children:c,...u},d)=>{const m=k.useRef(null);return k.useLayoutEffect((()=>{c||u.material||(a.applyProps(m.current.material,{color:n}),m.current.material.color.multiplyScalar(i))}),[n,i,c,u.material]),k.useLayoutEffect((()=>{l&&m.current.lookAt(Array.isArray(l)?new D.Vector3(...l):l)}),[l]),s=Array.isArray(s)&&2===s.length?[s[0],s[1],1]:s,k.createElement(\"mesh\",R.default({ref:A.default([m,d]),scale:s},u),\"circle\"===o?k.createElement(\"ringGeometry\",{args:[0,1,64]}):\"ring\"===o?k.createElement(\"ringGeometry\",{args:[.5,1,64]}):\"rect\"===o?k.createElement(\"planeGeometry\",null):k.createElement(o,{args:e}),c||(u.material?null:k.createElement(\"meshBasicMaterial\",{toneMapped:r,map:t,side:D.DoubleSide})))}));function la(e,t,r=new n.Vector3){const a=Math.PI*(e-.5),o=2*Math.PI*(t-.5);return r.x=Math.cos(o),r.y=Math.sin(a),r.z=Math.sin(o),r}const ca=k.forwardRef((({inclination:e=.6,azimuth:t=.1,distance:r=1e3,mieCoefficient:a=.005,mieDirectionalG:o=.8,rayleigh:i=.5,turbidity:s=10,sunPosition:l=la(e,t),...c},u)=>{const m=k.useMemo((()=>(new n.Vector3).setScalar(r)),[r]),[f]=k.useState((()=>new d.Sky));return k.createElement(\"primitive\",R.default({object:f,ref:u,\"material-uniforms-mieCoefficient-value\":a,\"material-uniforms-mieDirectionalG-value\":o,\"material-uniforms-rayleigh-value\":i,\"material-uniforms-sunPosition-value\":l,\"material-uniforms-turbidity-value\":s,scale:m},c))}));class ua extends n.ShaderMaterial{constructor(){super({uniforms:{time:{value:0},fade:{value:1}},vertexShader:\"\\n      uniform float time;\\n      attribute float size;\\n      varying vec3 vColor;\\n      void main() {\\n        vColor = color;\\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));\\n        gl_Position = projectionMatrix * mvPosition;\\n      }\",fragmentShader:`\\n      uniform sampler2D pointTexture;\\n      uniform float fade;\\n      varying vec3 vColor;\\n      void main() {\\n        float opacity = 1.0;\\n        if (fade == 1.0) {\\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\\n        }\\n        gl_FragColor = vec4(vColor, opacity);\\n\\n        #include <tonemapping_fragment>\\n\\t      #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n      }`})}}const da=e=>(new n.Vector3).setFromSpherical(new n.Spherical(e,Math.acos(1-2*Math.random()),2*Math.random()*Math.PI)),ma=k.forwardRef((({radius:e=100,depth:t=50,count:r=5e3,saturation:o=0,factor:i=4,fade:s=!1,speed:l=1},c)=>{const u=k.useRef(),[d,m,f]=k.useMemo((()=>{const a=[],s=[],l=Array.from({length:r},(()=>(.5+.5*Math.random())*i)),c=new n.Color;let u=e+t;const d=t/r;for(let e=0;e<r;e++)u-=d*Math.random(),a.push(...da(u).toArray()),c.setHSL(e/r,o,.9),s.push(c.r,c.g,c.b);return[new Float32Array(a),new Float32Array(s),new Float32Array(l)]}),[r,t,i,e,o]);a.useFrame((e=>u.current&&(u.current.uniforms.time.value=e.clock.getElapsedTime()*l)));const[p]=k.useState((()=>new ua));return k.createElement(\"points\",{ref:c},k.createElement(\"bufferGeometry\",null,k.createElement(\"bufferAttribute\",{attach:\"attributes-position\",args:[d,3]}),k.createElement(\"bufferAttribute\",{attach:\"attributes-color\",args:[m,3]}),k.createElement(\"bufferAttribute\",{attach:\"attributes-size\",args:[f,1]})),k.createElement(\"primitive\",{ref:u,object:p,attach:\"material\",blending:n.AdditiveBlending,\"uniforms-fade-value\":s,depthWrite:!1,transparent:!0,vertexColors:!0}))})),fa=new n.Matrix4,pa=new n.Vector3,ha=new n.Quaternion,ya=new n.Vector3,xa=new n.Quaternion,va=new n.Vector3,ga=k.createContext(null),za=k.forwardRef((({children:e,material:t=n.MeshLambertMaterial,texture:r=\"https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png\",range:o,limit:i=200,...s},l)=>{var c,u;const d=k.useMemo((()=>class extends t{constructor(){super(),this.onBeforeCompile=e=>{e.vertexShader=\"attribute float opacity;\\n               varying float vOpacity;\\n              \"+e.vertexShader.replace(\"#include <fog_vertex>\",\"#include <fog_vertex>\\n                 vOpacity = opacity;\\n                \"),e.fragmentShader=\"varying float vOpacity;\\n              \"+e.fragmentShader.replace(\"#include <opaque_fragment>\",\"#include <opaque_fragment>\\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\\n                \")}}}),[t]);a.extend({CloudMaterial:d});const m=k.useRef(null),f=k.useRef([]),p=k.useMemo((()=>new Float32Array(Array.from({length:i},(()=>1)))),[i]),h=k.useMemo((()=>new Float32Array(Array.from({length:i},(()=>[1,1,1])).flat())),[i]),y=Pe(r);let x,v=0,g=0;const z=new n.Quaternion,w=new n.Vector3(0,0,1),b=new n.Vector3;a.useFrame(((e,t)=>{for(v=e.clock.getElapsedTime(),fa.copy(m.current.matrixWorld).invert(),e.camera.matrixWorld.decompose(ya,xa,va),g=0;g<f.current.length;g++)x=f.current[g],x.ref.current.matrixWorld.decompose(pa,ha,va),pa.add(b.copy(x.position).applyQuaternion(ha).multiply(va)),ha.copy(xa).multiply(z.setFromAxisAngle(w,x.rotation+=t*x.rotationFactor)),va.multiplyScalar(x.volume+(1+Math.sin(v*x.density*x.speed))/2*x.growth),x.matrix.compose(pa,ha,va).premultiply(fa),x.dist=pa.distanceTo(ya);for(f.current.sort(((e,t)=>t.dist-e.dist)),g=0;g<f.current.length;g++)x=f.current[g],p[g]=x.opacity*(x.dist<x.fade-1?x.dist/x.fade:1),m.current.setMatrixAt(g,x.matrix),m.current.setColorAt(g,x.color);m.current.geometry.attributes.opacity.needsUpdate=!0,m.current.instanceMatrix.needsUpdate=!0,m.current.instanceColor&&(m.current.instanceColor.needsUpdate=!0)})),k.useLayoutEffect((()=>{const e=Math.min(i,void 0!==o?o:i,f.current.length);m.current.count=e,m.current.instanceMatrix.updateRange.count=16*e,m.current.instanceColor&&(m.current.instanceColor.updateRange.count=3*e),m.current.geometry.attributes.opacity.updateRange.count=e}));let E=[null!==(c=y.image.width)&&void 0!==c?c:1,null!==(u=y.image.height)&&void 0!==u?u:1],M=Math.max(E[0],E[1]);return E=[E[0]/M,E[1]/M],k.createElement(\"group\",R.default({ref:l},s),k.createElement(ga.Provider,{value:f},e,k.createElement(\"instancedMesh\",{matrixAutoUpdate:!1,ref:m,args:[null,null,i]},k.createElement(\"instancedBufferAttribute\",{usage:n.DynamicDrawUsage,attach:\"instanceColor\",args:[h,3]}),k.createElement(\"planeGeometry\",{args:[...E]},k.createElement(\"instancedBufferAttribute\",{usage:n.DynamicDrawUsage,attach:\"attributes-opacity\",args:[p,1]})),k.createElement(\"cloudMaterial\",{key:t.name,map:y,transparent:!0,depthWrite:!1}))))})),wa=k.forwardRef((({opacity:e=1,speed:t=0,bounds:r=[5,1,1],segments:o=20,color:i=\"#ffffff\",fade:s=10,volume:l=6,smallestVolume:c=.25,distribute:u=null,growth:d=4,concentrate:m=\"inside\",seed:f=Math.random(),...p},h)=>{function y(){const e=1e4*Math.sin(f++);return e-Math.floor(e)}const x=k.useContext(ga),v=k.useRef(null),[g]=k.useState((()=>M.v4())),z=k.useMemo((()=>[...new Array(o)].map(((e,t)=>({segments:o,bounds:new n.Vector3(1,1,1),position:new n.Vector3,uuid:g,index:t,ref:v,dist:0,matrix:new n.Matrix4,color:new n.Color,rotation:t*(Math.PI/o)})))),[o,g]);return k.useLayoutEffect((()=>{z.forEach(((n,f)=>{var p;a.applyProps(n,{volume:l,color:i,speed:t,growth:d,opacity:e,fade:s,bounds:r,density:Math.max(.5,y()),rotationFactor:Math.max(.2,.5*y())*t});const h=null==u?void 0:u(n,f);(h||o>1)&&n.position.copy(n.bounds).multiply(null!==(p=null==h?void 0:h.point)&&void 0!==p?p:{x:2*y()-1,y:2*y()-1,z:2*y()-1});const x=Math.abs(n.position.x),v=Math.abs(n.position.y),g=Math.abs(n.position.z),z=Math.max(x,v,g);n.length=1,x===z&&(n.length-=x/n.bounds.x),v===z&&(n.length-=v/n.bounds.y),g===z&&(n.length-=g/n.bounds.z),n.volume=(void 0!==(null==h?void 0:h.volume)?h.volume:Math.max(Math.max(0,c),\"random\"===m?y():\"inside\"===m?n.length:1-n.length))*l}))}),[m,r,s,i,e,d,l,f,o,t]),k.useLayoutEffect((()=>{const e=z;return x.current=[...x.current,...e],()=>{x.current=x.current.filter((e=>e.uuid!==g))}}),[z]),k.useImperativeHandle(h,(()=>v.current),[]),k.createElement(\"group\",R.default({ref:v},p))})),ba=k.forwardRef(((e,t)=>k.useContext(ga)?k.createElement(wa,R.default({ref:t},e)):k.createElement(za,null,k.createElement(wa,R.default({ref:t},e))))),Ea=Se({time:0,pixelRatio:1},\" uniform float pixelRatio;\\n    uniform float time;\\n    attribute float size;  \\n    attribute float speed;  \\n    attribute float opacity;\\n    attribute vec3 noise;\\n    attribute vec3 color;\\n    varying vec3 vColor;\\n    varying float vOpacity;\\n    void main() {\\n      vec4 modelPosition = modelMatrix * vec4(position, 1.0);\\n      modelPosition.y += sin(time * speed + modelPosition.x * noise.x * 100.0) * 0.2;\\n      modelPosition.z += cos(time * speed + modelPosition.x * noise.y * 100.0) * 0.2;\\n      modelPosition.x += cos(time * speed + modelPosition.x * noise.z * 100.0) * 0.2;\\n      vec4 viewPosition = viewMatrix * modelPosition;\\n      vec4 projectionPostion = projectionMatrix * viewPosition;\\n      gl_Position = projectionPostion;\\n      gl_PointSize = size * 25. * pixelRatio;\\n      gl_PointSize *= (1.0 / - viewPosition.z);\\n      vColor = color;\\n      vOpacity = opacity;\\n    }\",` varying vec3 vColor;\\n    varying float vOpacity;\\n    void main() {\\n      float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\\n      float strength = 0.05 / distanceToCenter - 0.1;\\n      gl_FragColor = vec4(vColor, strength * vOpacity);\\n      #include <tonemapping_fragment>\\n      #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n    }`),Ma=e=>e&&e.constructor===Float32Array,Sa=e=>e instanceof D.Vector2||e instanceof D.Vector3||e instanceof D.Vector4,Ca=e=>Array.isArray(e)?e:Sa(e)?e.toArray():[e,e,e];function Pa(e,t,r){return k.useMemo((()=>{if(void 0!==t){if(Ma(t))return t;if(t instanceof D.Color){const r=Array.from({length:3*e},(()=>(e=>[e.r,e.g,e.b])(t))).flat();return Float32Array.from(r)}if(Sa(t)||Array.isArray(t)){const r=Array.from({length:3*e},(()=>Ca(t))).flat();return Float32Array.from(r)}return Float32Array.from({length:e},(()=>t))}return Float32Array.from({length:e},r)}),[t])}const Ta=k.forwardRef((({noise:e=1,count:t=100,speed:r=1,opacity:n=1,scale:o=1,size:i,color:s,children:l,...c},u)=>{k.useMemo((()=>a.extend({SparklesImplMaterial:Ea})),[]);const d=k.useRef(null),m=a.useThree((e=>e.viewport.dpr)),f=Ca(o),p=k.useMemo((()=>Float32Array.from(Array.from({length:t},(()=>f.map(D.MathUtils.randFloatSpread))).flat())),[t,...f]),h=Pa(t,i,Math.random),y=Pa(t,n),x=Pa(t,r),v=Pa(3*t,e),g=Pa(void 0===s?3*t:t,Ma(s)?s:new D.Color(s),(()=>1));return a.useFrame((e=>{d.current&&d.current.material&&(d.current.material.time=e.clock.elapsedTime)})),k.useImperativeHandle(u,(()=>d.current),[]),k.createElement(\"points\",R.default({key:`particle-${t}-${JSON.stringify(o)}`},c,{ref:d}),k.createElement(\"bufferGeometry\",null,k.createElement(\"bufferAttribute\",{attach:\"attributes-position\",args:[p,3]}),k.createElement(\"bufferAttribute\",{attach:\"attributes-size\",args:[h,1]}),k.createElement(\"bufferAttribute\",{attach:\"attributes-opacity\",args:[y,1]}),k.createElement(\"bufferAttribute\",{attach:\"attributes-speed\",args:[x,1]}),k.createElement(\"bufferAttribute\",{attach:\"attributes-color\",args:[g,3]}),k.createElement(\"bufferAttribute\",{attach:\"attributes-noise\",args:[v,3]})),l||k.createElement(\"sparklesImplMaterial\",{transparent:!0,pixelRatio:m,depthWrite:!1}))}));const Ra={uniforms:{strokeOpacity:1,fillOpacity:.25,fillMix:0,thickness:.05,colorBackfaces:!1,dashInvert:!0,dash:!1,dashRepeats:4,dashLength:.5,squeeze:!1,squeezeMin:.2,squeezeMax:1,stroke:new D.Color(\"#ff0000\"),backfaceStroke:new D.Color(\"#0000ff\"),fill:new D.Color(\"#00ff00\")},vertex:\"\\n\\t  attribute vec3 barycentric;\\n\\t\\n\\t\\tvarying vec3 v_edges_Barycentric;\\n\\t\\tvarying vec3 v_edges_Position;\\n\\n\\t\\tvoid initWireframe() {\\n\\t\\t\\tv_edges_Barycentric = barycentric;\\n\\t\\t\\tv_edges_Position = position.xyz;\\n\\t\\t}\\n\\t  \",fragment:\"\\n\\t\\t#ifndef PI\\n\\t  \\t#define PI 3.1415926535897932384626433832795\\n\\t\\t#endif\\n  \\n\\t  varying vec3 v_edges_Barycentric;\\n\\t  varying vec3 v_edges_Position;\\n  \\n\\t  uniform float strokeOpacity;\\n\\t  uniform float fillOpacity;\\n\\t  uniform float fillMix;\\n\\t  uniform float thickness;\\n\\t  uniform bool colorBackfaces;\\n  \\n\\t  // Dash\\n\\t  uniform bool dashInvert;\\n\\t  uniform bool dash;\\n\\t  uniform bool dashOnly;\\n\\t  uniform float dashRepeats;\\n\\t  uniform float dashLength;\\n  \\n\\t  // Squeeze\\n\\t  uniform bool squeeze;\\n\\t  uniform float squeezeMin;\\n\\t  uniform float squeezeMax;\\n  \\n\\t  // Colors\\n\\t  uniform vec3 stroke;\\n\\t  uniform vec3 backfaceStroke;\\n\\t  uniform vec3 fill;\\n  \\n\\t  // This is like\\n\\t  float wireframe_aastep(float threshold, float dist) {\\n\\t\\t  float afwidth = fwidth(dist) * 0.5;\\n\\t\\t  return smoothstep(threshold - afwidth, threshold + afwidth, dist);\\n\\t  }\\n  \\n\\t  float wireframe_map(float value, float min1, float max1, float min2, float max2) {\\n\\t\\t  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\\n\\t  }\\n  \\n\\t  float getWireframe() {\\n\\t\\t\\tvec3 barycentric = v_edges_Barycentric;\\n\\t\\t\\n\\t\\t\\t// Distance from center of each triangle to its edges.\\n\\t\\t\\tfloat d = min(min(barycentric.x, barycentric.y), barycentric.z);\\n\\n\\t\\t\\t// for dashed rendering, we can use this to get the 0 .. 1 value of the line length\\n\\t\\t\\tfloat positionAlong = max(barycentric.x, barycentric.y);\\n\\t\\t\\tif (barycentric.y < barycentric.x && barycentric.y < barycentric.z) {\\n\\t\\t\\t\\tpositionAlong = 1.0 - positionAlong;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// the thickness of the stroke\\n\\t\\t\\tfloat computedThickness = wireframe_map(thickness, 0.0, 1.0, 0.0, 0.34);\\n\\n\\t\\t\\t// if we want to shrink the thickness toward the center of the line segment\\n\\t\\t\\tif (squeeze) {\\n\\t\\t\\t\\tcomputedThickness *= mix(squeezeMin, squeezeMax, (1.0 - sin(positionAlong * PI)));\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Create dash pattern\\n\\t\\t\\tif (dash) {\\n\\t\\t\\t\\t// here we offset the stroke position depending on whether it\\n\\t\\t\\t\\t// should overlap or not\\n\\t\\t\\t\\tfloat offset = 1.0 / dashRepeats * dashLength / 2.0;\\n\\t\\t\\t\\tif (!dashInvert) {\\n\\t\\t\\t\\t\\toffset += 1.0 / dashRepeats / 2.0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// if we should animate the dash or not\\n\\t\\t\\t\\t// if (dashAnimate) {\\n\\t\\t\\t\\t// \\toffset += time * 0.22;\\n\\t\\t\\t\\t// }\\n\\n\\t\\t\\t\\t// create the repeating dash pattern\\n\\t\\t\\t\\tfloat pattern = fract((positionAlong + offset) * dashRepeats);\\n\\t\\t\\t\\tcomputedThickness *= 1.0 - wireframe_aastep(dashLength, pattern);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// compute the anti-aliased stroke edge  \\n\\t\\t\\tfloat edge = 1.0 - wireframe_aastep(computedThickness, d);\\n\\n\\t\\t\\treturn edge;\\n\\t  }\\n\\t  \"};Ra.uniforms,Ra.vertex,Ra.fragment;function ka(e){return void 0!==(null==e?void 0:e.current)}function Fa(e){return\"WireframeGeometry\"===e.type}function Da(e){const t=null!=(r=e)&&r.current?e.current:e;var r;if(function(e){return!(null==e||!e.isBufferGeometry)}(t))return t;{if(Fa(t))throw new Error(\"Wireframe: WireframeGeometry is not supported.\");const e=t.parent;if(function(e){return!(null==e||!e.geometry)}(e)){if(Fa(e.geometry))throw new Error(\"Wireframe: WireframeGeometry is not supported.\");return e.geometry}}}function La(e,t){if(e.index){console.warn(\"Wireframe: Requires non-indexed geometry, converting to non-indexed geometry.\");const t=e.toNonIndexed();e.copy(t),e.setIndex(null)}const r=function(e,t){const r=e.getAttribute(\"position\").count,n=[];for(let e=0;e<r;e++){const r=t?1:0;e%2==0?n.push(0,0,1,0,1,0,1,0,r):n.push(0,1,0,0,0,1,1,0,r)}return new D.BufferAttribute(Float32Array.from(n),3)}(e,t);e.setAttribute(\"barycentric\",r)}function Aa({geometry:e,simplify:t=!1,...r}){const[n,a]=k.useState(null);k.useLayoutEffect((()=>{const r=Da(e);if(!r)throw new Error(\"Wireframe: geometry prop must be a BufferGeometry or a ref to a BufferGeometry.\");La(r,t),ka(e)&&a(r)}),[t,e]);const o=ka(e)?n:e;return k.createElement(k.Fragment,null,o&&k.createElement(\"mesh\",{geometry:o},k.createElement(\"meshWireframeMaterial\",R.default({attach:\"material\",transparent:!0,side:D.DoubleSide,polygonOffset:!0,polygonOffsetFactor:-4},r,{extensions:{derivatives:!0,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1}}))))}function _a({simplify:e=!1,...t}){const r=k.useRef(null),n=k.useMemo((()=>function(){const e={};for(const t in Ra.uniforms)e[t]={value:Ra.uniforms[t]};return e}()),[Ra.uniforms]);return function(e,t){k.useEffect((()=>{var r;e.fillOpacity.value=null!==(r=t.fillOpacity)&&void 0!==r?r:e.fillOpacity.value}),[t.fillOpacity]),k.useEffect((()=>{var r;e.fillMix.value=null!==(r=t.fillMix)&&void 0!==r?r:e.fillMix.value}),[t.fillMix]),k.useEffect((()=>{var r;e.strokeOpacity.value=null!==(r=t.strokeOpacity)&&void 0!==r?r:e.strokeOpacity.value}),[t.strokeOpacity]),k.useEffect((()=>{var r;e.thickness.value=null!==(r=t.thickness)&&void 0!==r?r:e.thickness.value}),[t.thickness]),k.useEffect((()=>{e.colorBackfaces.value=!!t.colorBackfaces}),[t.colorBackfaces]),k.useEffect((()=>{e.dash.value=!!t.dash}),[t.dash]),k.useEffect((()=>{e.dashInvert.value=!!t.dashInvert}),[t.dashInvert]),k.useEffect((()=>{var r;e.dashRepeats.value=null!==(r=t.dashRepeats)&&void 0!==r?r:e.dashRepeats.value}),[t.dashRepeats]),k.useEffect((()=>{var r;e.dashLength.value=null!==(r=t.dashLength)&&void 0!==r?r:e.dashLength.value}),[t.dashLength]),k.useEffect((()=>{e.squeeze.value=!!t.squeeze}),[t.squeeze]),k.useEffect((()=>{var r;e.squeezeMin.value=null!==(r=t.squeezeMin)&&void 0!==r?r:e.squeezeMin.value}),[t.squeezeMin]),k.useEffect((()=>{var r;e.squeezeMax.value=null!==(r=t.squeezeMax)&&void 0!==r?r:e.squeezeMax.value}),[t.squeezeMax]),k.useEffect((()=>{e.stroke.value=t.stroke?new D.Color(t.stroke):e.stroke.value}),[t.stroke]),k.useEffect((()=>{e.fill.value=t.fill?new D.Color(t.fill):e.fill.value}),[t.fill]),k.useEffect((()=>{e.backfaceStroke.value=t.backfaceStroke?new D.Color(t.backfaceStroke):e.backfaceStroke.value}),[t.backfaceStroke])}(n,t),k.useLayoutEffect((()=>{const t=Da(r);if(!t)throw new Error(\"Wireframe: Must be a child of a Mesh, Line or Points object or specify a geometry prop.\");const n=t.clone();return La(t,e),()=>{t.copy(n),n.dispose()}}),[e]),k.useLayoutEffect((()=>{const e=r.current.parent,t=e.material.clone();return function(e,t){e.onBeforeCompile=e=>{e.uniforms={...e.uniforms,...t},e.vertexShader=e.vertexShader.replace(\"void main() {\",`\\n\\t\\t  ${Ra.vertex}\\n\\t\\t  void main() {\\n\\t\\t\\tinitWireframe();\\n\\t\\t`),e.fragmentShader=e.fragmentShader.replace(\"void main() {\",`\\n\\t\\t  ${Ra.fragment}\\n\\t\\t  void main() {\\n\\t\\t`),e.fragmentShader=e.fragmentShader.replace(\"#include <color_fragment>\",\"\\n\\t\\t  #include <color_fragment>\\n\\t\\t\\t  float edge = getWireframe();\\n\\t\\t  vec4 colorStroke = vec4(stroke, edge);\\n\\t\\t  #ifdef FLIP_SIDED\\n\\t\\t\\tcolorStroke.rgb = backfaceStroke;\\n\\t\\t  #endif\\n\\t\\t  vec4 colorFill = vec4(mix(diffuseColor.rgb, fill, fillMix), mix(diffuseColor.a, fillOpacity, fillMix));\\n\\t\\t  vec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\\n\\n\\t\\t  diffuseColor.rgb = outColor.rgb;\\n\\t\\t  diffuseColor.a *= outColor.a;\\n\\t\\t\")},e.side=D.DoubleSide,e.transparent=!0}(e.material,n),()=>{e.material.dispose(),e.material=t}}),[]),k.createElement(\"object3D\",{ref:r})}const Oa=new D.Matrix4,Na=new D.Ray,Ba=new D.Sphere,Ia=new D.Vector3;class Ua extends D.Group{constructor(){super(),this.size=0,this.color=new D.Color(\"white\"),this.instance={current:void 0},this.instanceKey={current:void 0}}get geometry(){var e;return null==(e=this.instance.current)?void 0:e.geometry}raycast(e,t){var r,n;const a=this.instance.current;if(!a||!a.geometry)return;const o=a.userData.instances.indexOf(this.instanceKey);if(-1===o||o>a.geometry.drawRange.count)return;const i=null!==(r=null==(n=e.params.Points)?void 0:n.threshold)&&void 0!==r?r:1;if(Ba.set(this.getWorldPosition(Ia),i),!1===e.ray.intersectsSphere(Ba))return;Oa.copy(a.matrixWorld).invert(),Na.copy(e.ray).applyMatrix4(Oa);const s=i/((this.scale.x+this.scale.y+this.scale.z)/3),l=s*s,c=Na.distanceSqToPoint(this.position);if(c<l){const r=new D.Vector3;Na.closestPointToPoint(this.position,r),r.applyMatrix4(this.matrixWorld);const n=e.ray.origin.distanceTo(r);if(n<e.near||n>e.far)return;t.push({distance:n,distanceToRay:Math.sqrt(c),point:r,index:o,face:null,object:this})}}}let Va,ja;const Wa=k.createContext(null),Ga=new D.Matrix4,Ha=new D.Vector3,$a=k.forwardRef((({children:e,range:t,limit:r=1e3,...n},o)=>{const i=k.useRef(null),[s,l]=k.useState([]),[[c,u,d]]=k.useState((()=>[new Float32Array(3*r),Float32Array.from({length:3*r},(()=>1)),Float32Array.from({length:r},(()=>1))]));k.useEffect((()=>{i.current.geometry.attributes.position.needsUpdate=!0})),a.useFrame((()=>{for(i.current.updateMatrix(),i.current.updateMatrixWorld(),Ga.copy(i.current.matrixWorld).invert(),i.current.geometry.drawRange.count=Math.min(r,void 0!==t?t:r,s.length),Va=0;Va<s.length;Va++)ja=s[Va].current,ja.getWorldPosition(Ha).applyMatrix4(Ga),Ha.toArray(c,3*Va),i.current.geometry.attributes.position.needsUpdate=!0,ja.matrixWorldNeedsUpdate=!0,ja.color.toArray(u,3*Va),i.current.geometry.attributes.color.needsUpdate=!0,d.set([ja.size],Va),i.current.geometry.attributes.size.needsUpdate=!0}));const m=k.useMemo((()=>({getParent:()=>i,subscribe:e=>(l((t=>[...t,e])),()=>l((t=>t.filter((t=>t.current!==e.current)))))})),[]);return k.createElement(\"points\",R.default({userData:{instances:s},matrixAutoUpdate:!1,ref:A.default([o,i]),raycast:()=>null},n),k.createElement(\"bufferGeometry\",null,k.createElement(\"bufferAttribute\",{attach:\"attributes-position\",count:c.length/3,array:c,itemSize:3,usage:D.DynamicDrawUsage}),k.createElement(\"bufferAttribute\",{attach:\"attributes-color\",count:u.length/3,array:u,itemSize:3,usage:D.DynamicDrawUsage}),k.createElement(\"bufferAttribute\",{attach:\"attributes-size\",count:d.length,array:d,itemSize:1,usage:D.DynamicDrawUsage})),k.createElement(Wa.Provider,{value:m},e))})),qa=k.forwardRef((({children:e,...t},r)=>{k.useMemo((()=>a.extend({PositionPoint:Ua})),[]);const n=k.useRef(),{subscribe:o,getParent:i}=k.useContext(Wa);return k.useLayoutEffect((()=>o(n)),[]),k.createElement(\"positionPoint\",R.default({instance:i(),instanceKey:n,ref:A.default([r,n])},t),e)})),Xa=k.forwardRef((({children:e,positions:t,colors:r,sizes:n,stride:o=3,...i},s)=>{const l=k.useRef(null);return a.useFrame((()=>{const e=l.current.geometry.attributes;e.position.needsUpdate=!0,r&&(e.color.needsUpdate=!0),n&&(e.size.needsUpdate=!0)})),k.createElement(\"points\",R.default({ref:A.default([s,l])},i),k.createElement(\"bufferGeometry\",null,k.createElement(\"bufferAttribute\",{attach:\"attributes-position\",count:t.length/o,array:t,itemSize:o,usage:D.DynamicDrawUsage}),r&&k.createElement(\"bufferAttribute\",{attach:\"attributes-color\",count:r.length/o,array:r,itemSize:3,usage:D.DynamicDrawUsage}),n&&k.createElement(\"bufferAttribute\",{attach:\"attributes-size\",count:n.length/o,array:n,itemSize:1,usage:D.DynamicDrawUsage})),e)})),Ya=k.forwardRef(((e,t)=>e.positions instanceof Float32Array?k.createElement(Xa,R.default({},e,{ref:t})):k.createElement($a,R.default({},e,{ref:t})))),Ka=new D.Matrix4,Qa=new D.Matrix4,Za=[],Ja=new D.Mesh;class eo extends D.Group{constructor(){super(),this.color=new D.Color(\"white\"),this.instance={current:void 0},this.instanceKey={current:void 0}}get geometry(){var e;return null==(e=this.instance.current)?void 0:e.geometry}raycast(e,t){const r=this.instance.current;if(!r)return;if(!r.geometry||!r.material)return;Ja.geometry=r.geometry;const n=r.matrixWorld,a=r.userData.instances.indexOf(this.instanceKey);if(!(-1===a||a>r.count)){r.getMatrixAt(a,Ka),Qa.multiplyMatrices(n,Ka),Ja.matrixWorld=Qa,r.material instanceof D.Material?Ja.material.side=r.material.side:Ja.material.side=r.material[0].side,Ja.raycast(e,Za);for(let e=0,r=Za.length;e<r;e++){const r=Za[e];r.instanceId=a,r.object=this,t.push(r)}Za.length=0}}}const to=k.createContext(null),ro=new D.Matrix4,no=new D.Matrix4,ao=new D.Matrix4,oo=new D.Vector3,io=new D.Quaternion,so=new D.Vector3,lo=k.forwardRef((({context:e,children:t,...r},n)=>{k.useMemo((()=>a.extend({PositionMesh:eo})),[]);const o=k.useRef(),{subscribe:i,getParent:s}=k.useContext(e||to);return k.useLayoutEffect((()=>i(o)),[]),k.createElement(\"positionMesh\",R.default({instance:s(),instanceKey:o,ref:A.default([n,o])},r),t)})),co=k.forwardRef((({children:e,range:t,limit:r=1e3,frames:n=1/0,...o},i)=>{const[{context:s,instance:l}]=k.useState((()=>{const e=k.createContext(null);return{context:e,instance:k.forwardRef(((t,r)=>k.createElement(lo,R.default({context:e},t,{ref:r}))))}})),c=k.useRef(null),[u,d]=k.useState([]),[[m,f]]=k.useState((()=>{const e=new Float32Array(16*r);for(let t=0;t<r;t++)ao.identity().toArray(e,16*t);return[e,new Float32Array([...new Array(3*r)].map((()=>1)))]}));k.useEffect((()=>{c.current.instanceMatrix.needsUpdate=!0}));let p=0,h=0;a.useFrame((()=>{if(n===1/0||p<n){c.current.updateMatrix(),c.current.updateMatrixWorld(),ro.copy(c.current.matrixWorld).invert(),h=Math.min(r,void 0!==t?t:r,u.length),c.current.count=h,c.current.instanceMatrix.updateRange.count=16*h,c.current.instanceColor.updateRange.count=3*h;for(let e=0;e<u.length;e++){const t=u[e].current;t.matrixWorld.decompose(oo,io,so),no.compose(oo,io,so).premultiply(ro),no.toArray(m,16*e),c.current.instanceMatrix.needsUpdate=!0,t.color.toArray(f,3*e),c.current.instanceColor.needsUpdate=!0}p++}}));const y=k.useMemo((()=>({getParent:()=>c,subscribe:e=>(d((t=>[...t,e])),()=>d((t=>t.filter((t=>t.current!==e.current)))))})),[]);return k.createElement(\"instancedMesh\",R.default({userData:{instances:u},matrixAutoUpdate:!1,ref:A.default([i,c]),args:[null,null,0],raycast:()=>null},o),k.createElement(\"instancedBufferAttribute\",{attach:\"instanceMatrix\",count:m.length/16,array:m,itemSize:16,usage:D.DynamicDrawUsage}),k.createElement(\"instancedBufferAttribute\",{attach:\"instanceColor\",count:f.length/3,array:f,itemSize:3,usage:D.DynamicDrawUsage}),\"function\"==typeof e?k.createElement(s.Provider,{value:y},e(l)):k.createElement(to.Provider,{value:y},e))})),uo=k.forwardRef((function({meshes:e,children:t,...r},n){const a=Array.isArray(e);if(!a)for(const t of Object.keys(e))e[t].isMesh||delete e[t];return k.createElement(\"group\",{ref:n},k.createElement(V.default,{components:(a?e:Object.values(e)).map((({geometry:e,material:t})=>k.createElement(co,R.default({key:e.uuid,geometry:e,material:t},r))))},(r=>a?t(...r):t(Object.keys(e).filter((t=>e[t].isMesh)).reduce(((e,t,n)=>({...e,[t]:r[n]})),{})))))})),mo=k.createContext(null),fo=k.forwardRef(((e,t)=>{k.useMemo((()=>a.extend({SegmentObject:po})),[]);const{limit:r=1e3,lineWidth:n=1,children:o,...i}=e,[s,l]=k.useState([]),[c]=k.useState((()=>new d.Line2)),[u]=k.useState((()=>new d.LineMaterial)),[m]=k.useState((()=>new d.LineSegmentsGeometry)),[f]=k.useState((()=>new D.Vector2(512,512))),[p]=k.useState((()=>Array(6*r).fill(0))),[h]=k.useState((()=>Array(6*r).fill(0))),y=k.useMemo((()=>({subscribe:e=>(l((t=>[...t,e])),()=>l((t=>t.filter((t=>t.current!==e.current)))))})),[]);return a.useFrame((()=>{for(let t=0;t<r;t++){var e;const r=null==(e=s[t])?void 0:e.current;r&&(p[6*t+0]=r.start.x,p[6*t+1]=r.start.y,p[6*t+2]=r.start.z,p[6*t+3]=r.end.x,p[6*t+4]=r.end.y,p[6*t+5]=r.end.z,h[6*t+0]=r.color.r,h[6*t+1]=r.color.g,h[6*t+2]=r.color.b,h[6*t+3]=r.color.r,h[6*t+4]=r.color.g,h[6*t+5]=r.color.b)}m.setColors(h),m.setPositions(p),c.computeLineDistances()})),k.createElement(\"primitive\",{object:c,ref:t},k.createElement(\"primitive\",{object:m,attach:\"geometry\"}),k.createElement(\"primitive\",R.default({object:u,attach:\"material\",vertexColors:!0,resolution:f,linewidth:n},i)),k.createElement(mo.Provider,{value:y},o))}));class po{constructor(){this.color=new D.Color(\"white\"),this.start=new D.Vector3(0,0,0),this.end=new D.Vector3(0,0,0)}}const ho=e=>e instanceof D.Vector3?e:new D.Vector3(...\"number\"==typeof e?[e,e,e]:e),yo=k.forwardRef((({color:e,start:t,end:r},n)=>{const a=k.useContext(mo);if(!a)throw\"Segment must used inside Segments component.\";const o=k.useRef(null);return k.useLayoutEffect((()=>a.subscribe(o)),[]),k.createElement(\"segmentObject\",{ref:A.default([o,n]),color:e,start:ho(t),end:ho(r)})})),xo=k.forwardRef((({children:e,hysteresis:t=0,distances:r,...n},o)=>{const i=k.useRef(null);return k.useLayoutEffect((()=>{const{current:e}=i;e.levels.length=0,e.children.forEach(((n,a)=>e.levels.push({object:n,hysteresis:t,distance:r[a]})))})),a.useFrame((e=>{var t;return null==(t=i.current)?void 0:t.update(e.camera)})),k.createElement(\"lOD\",R.default({ref:A.default([i,o])},n),e)}));const vo=new n.Matrix4,go=new n.Ray,zo=new n.Sphere,wo=new n.Vector3;const bo=t.createContext(null);const Eo=k.forwardRef((({children:e,compute:t,width:r,height:n,samples:o=8,renderPriority:i=0,eventPriority:s=0,frames:l=1/0,stencilBuffer:c=!1,depthBuffer:u=!0,generateMipmaps:d=!1,...m},f)=>{const{size:p,viewport:h}=a.useThree(),y=et((r||p.width)*h.dpr,(n||p.height)*h.dpr,{samples:o,stencilBuffer:c,depthBuffer:u,generateMipmaps:d}),[x]=k.useState((()=>new D.Scene)),v=k.useCallback(((e,t,r)=>{var n,a;let o=null==(n=y.texture)?void 0:n.__r3f.parent;for(;o&&!(o instanceof D.Object3D);)o=o.__r3f.parent;if(!o)return!1;r.raycaster.camera||r.events.compute(e,r,null==(a=r.previousRoot)?void 0:a.getState());const[i]=r.raycaster.intersectObject(o);if(!i)return!1;const s=i.uv;if(!s)return!1;t.raycaster.setFromCamera(t.pointer.set(2*s.x-1,2*s.y-1),t.camera)}),[]);return k.useImperativeHandle(f,(()=>y.texture),[y]),k.createElement(k.Fragment,null,a.createPortal(k.createElement(Mo,{renderPriority:i,frames:l,fbo:y},e,k.createElement(\"group\",{onPointerOver:()=>null})),x,{events:{compute:t||v,priority:s}}),k.createElement(\"primitive\",R.default({object:y.texture},m)))}));function Mo({frames:e,renderPriority:t,children:r,fbo:n}){let o,i=0;return a.useFrame((t=>{(e===1/0||i<e)&&(o=t.gl.autoClear,t.gl.autoClear=!0,t.gl.setRenderTarget(n),t.gl.render(t.scene,t.camera),t.gl.setRenderTarget(null),t.gl.autoClear=o,i++)}),t),k.createElement(k.Fragment,null,r)}const So=k.forwardRef((({id:e=1,colorWrite:t=!1,depthWrite:r=!1,...n},a)=>{const o=k.useRef(null),i=k.useMemo((()=>({colorWrite:t,depthWrite:r,stencilWrite:!0,stencilRef:e,stencilFunc:D.AlwaysStencilFunc,stencilFail:D.ReplaceStencilOp,stencilZFail:D.ReplaceStencilOp,stencilZPass:D.ReplaceStencilOp})),[e,t,r]);return k.useLayoutEffect((()=>{Object.assign(o.current.material,i)})),k.useImperativeHandle(a,(()=>o.current),[]),k.createElement(\"mesh\",R.default({ref:o,renderOrder:-e},n))}));const Co=Se({blur:0,map:null,sdf:null,blend:0,size:0,resolution:new D.Vector2},\"varying vec2 vUv;\\n   void main() {\\n     gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n     vUv = uv;\\n   }\",`uniform sampler2D sdf;\\n   uniform sampler2D map;\\n   uniform float blur;\\n   uniform float size;\\n   uniform float time;\\n   uniform vec2 resolution;\\n   varying vec2 vUv;\\n   #include <packing>\\n   void main() {\\n     vec2 uv = gl_FragCoord.xy / resolution.xy;\\n     vec4 t = texture2D(map, uv);\\n     float k = blur;\\n     float d = texture2D(sdf, vUv).r/size;\\n     float alpha = 1.0 - smoothstep(0.0, 1.0, clamp(d/k + 1.0, 0.0, 1.0));\\n     gl_FragColor = vec4(t.rgb, blur == 0.0 ? t.a : t.a * alpha);\\n     #include <tonemapping_fragment>\\n     #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n   }`),Po=k.forwardRef((({children:e,events:t,blur:r=0,eventPriority:n=0,renderPriority:o=0,worldUnits:i=!1,resolution:s=512,...l},c)=>{a.extend({PortalMaterialImpl:Co});const u=k.useRef(null),{scene:d,gl:m,size:f,viewport:p,setEvents:h}=a.useThree(),y=et(s,s),[x,v]=k.useState(0);a.useFrame((()=>{const e=u.current.blend>0?Math.max(1,o):0;x!==e&&v(e)})),k.useEffect((()=>{void 0!==t&&h({enabled:!t})}),[t]);const[g,z]=k.useState(!0),w=vr(z);k.useLayoutEffect((()=>{var e;w.current=null==(e=u.current)?void 0:e.__r3f.parent}),[]),k.useLayoutEffect((()=>{if(w.current&&r&&null===u.current.sdf){const e=new D.Mesh(w.current.geometry,new D.MeshBasicMaterial),t=(new D.Box3).setFromBufferAttribute(e.geometry.attributes.position),r=new D.OrthographicCamera(t.min.x*(1+2/s),t.max.x*(1+2/s),t.max.y*(1+2/s),t.min.y*(1+2/s),.1,1e3);r.position.set(0,0,1),r.lookAt(0,0,0),m.setRenderTarget(y),m.render(e,r);const n=Ro(s,s,m)(y.texture),a=new Float32Array(s*s);m.readRenderTargetPixels(n,0,0,s,s,a);let o=1/0;for(let e=0;e<a.length;e++)a[e]<o&&(o=a[e]);o=-o,u.current.size=o,u.current.sdf=n.texture,m.setRenderTarget(null)}}),[s,r]),k.useImperativeHandle(c,(()=>u.current));const b=k.useCallback(((e,t,r)=>{var n;if(!w.current)return!1;if(t.pointer.set(e.offsetX/t.size.width*2-1,-e.offsetY/t.size.height*2+1),t.raycaster.setFromCamera(t.pointer,t.camera),0===(null==(n=u.current)?void 0:n.blend)){const[e]=t.raycaster.intersectObject(w.current);if(!e)return t.raycaster.camera=void 0,!1}}),[]);return k.createElement(\"portalMaterialImpl\",R.default({ref:u,blur:r,blend:0,resolution:[f.width*p.dpr,f.height*p.dpr],toneMapped:!1,attach:\"material\"},l),k.createElement(Eo,{attach:\"map\",frames:g?1/0:0,eventPriority:n,renderPriority:o,compute:b},e,k.createElement(To,{events:t,rootScene:d,priority:x,material:u,worldUnits:i})))}));function To({events:e,rootScene:t,material:r,priority:n,worldUnits:o}){const i=a.useThree((e=>e.scene)),s=a.useThree((e=>e.setEvents)),l=et(),c=et();k.useLayoutEffect((()=>{i.matrixAutoUpdate=!1}),[]),k.useEffect((()=>{void 0!==e&&s({enabled:e})}),[e]);const[u,m]=k.useMemo((()=>{const e={value:0};return[new d.FullScreenQuad(new D.ShaderMaterial({uniforms:{a:{value:l.texture},b:{value:c.texture},blend:e},vertexShader:\"\\n          varying vec2 vUv;\\n          void main() {\\n            vUv = uv;\\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n          }\",fragmentShader:`\\n          uniform sampler2D a;\\n          uniform sampler2D b;\\n          uniform float blend;\\n          varying vec2 vUv;\\n          #include <packing>\\n          void main() {\\n            vec4 ta = texture2D(a, vUv);\\n            vec4 tb = texture2D(b, vUv);\\n            gl_FragColor = mix(tb, ta, blend);\\n            #include <${Te>=154?\"colorspace_fragment\":\"encodings_fragment\"}>\\n          }`})),e]}),[]);return a.useFrame((e=>{var a;let s=null==r||null==(a=r.current)?void 0:a.__r3f.parent;if(s){var d,f,p,h;if(o)i.matrixWorld.identity();else n&&1===(null==(d=r.current)?void 0:d.blend)&&s.updateWorldMatrix(!0,!1),i.matrixWorld.copy(s.matrixWorld);if(n)(null==(f=r.current)?void 0:f.blend)>0&&(null==(p=r.current)?void 0:p.blend)<1?(m.value=r.current.blend,e.gl.setRenderTarget(l),e.gl.render(i,e.camera),e.gl.setRenderTarget(c),e.gl.render(t,e.camera),e.gl.setRenderTarget(null),u.render(e.gl)):1===(null==(h=r.current)?void 0:h.blend)&&e.gl.render(i,e.camera)}}),n),k.createElement(k.Fragment,null)}const Ro=(e,t,r)=>{let n=new D.WebGLRenderTarget(e,t,{minFilter:D.LinearMipmapLinearFilter,magFilter:D.LinearFilter,type:D.FloatType,format:D.RedFormat,generateMipmaps:!0}),a=new D.WebGLRenderTarget(e,t,{minFilter:D.NearestFilter,magFilter:D.NearestFilter}),o=new D.WebGLRenderTarget(e,t,{minFilter:D.NearestFilter,magFilter:D.NearestFilter}),i=new D.WebGLRenderTarget(e,t,{minFilter:D.NearestFilter,magFilter:D.NearestFilter}),s=new D.WebGLRenderTarget(e,t,{minFilter:D.NearestFilter,magFilter:D.NearestFilter}),l=new D.WebGLRenderTarget(e,t,{minFilter:D.NearestFilter,magFilter:D.NearestFilter,type:D.FloatType,format:D.RedFormat}),c=new D.WebGLRenderTarget(e,t,{minFilter:D.NearestFilter,magFilter:D.NearestFilter,type:D.FloatType,format:D.RedFormat});const u=new d.FullScreenQuad(new D.ShaderMaterial({uniforms:{tex:{value:null}},vertexShader:\"\\n        varying vec2 vUv;\\n        void main() {\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n        }\",fragmentShader:\"\\n        uniform sampler2D tex;\\n        varying vec2 vUv;\\n        #include <packing>\\n        void main() {\\n          gl_FragColor = pack2HalfToRGBA(vUv * (round(texture2D(tex, vUv).x)));\\n        }\"})),m=new d.FullScreenQuad(new D.ShaderMaterial({uniforms:{tex:{value:null}},vertexShader:\"\\n        varying vec2 vUv;\\n        void main() {\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n        }\",fragmentShader:\"\\n        uniform sampler2D tex;\\n        varying vec2 vUv;\\n        #include <packing>\\n        void main() {\\n          gl_FragColor = pack2HalfToRGBA(vUv * (1.0 - round(texture2D(tex, vUv).x)));\\n        }\"})),f=new d.FullScreenQuad(new D.ShaderMaterial({uniforms:{tex:{value:null},offset:{value:0},level:{value:0},maxSteps:{value:0}},vertexShader:\"\\n        varying vec2 vUv;\\n        void main() {\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n        }\",fragmentShader:`\\n        varying vec2 vUv;\\n        uniform sampler2D tex;\\n        uniform float offset;\\n        uniform float level;\\n        uniform float maxSteps;\\n        #include <packing>\\n        void main() {\\n          float closestDist = 9999999.9;\\n          vec2 closestPos = vec2(0.0);\\n          for (float x = -1.0; x <= 1.0; x += 1.0) {\\n            for (float y = -1.0; y <= 1.0; y += 1.0) {\\n              vec2 voffset = vUv;\\n              voffset += vec2(x, y) * vec2(${1/e}, ${1/t}) * offset;\\n              vec2 pos = unpackRGBATo2Half(texture2D(tex, voffset));\\n              float dist = distance(pos.xy, vUv);\\n              if(pos.x != 0.0 && pos.y != 0.0 && dist < closestDist) {\\n                closestDist = dist;\\n                closestPos = pos;\\n              }\\n            }\\n          }\\n          gl_FragColor = pack2HalfToRGBA(closestPos);\\n        }`})),p=new d.FullScreenQuad(new D.ShaderMaterial({uniforms:{tex:{value:null},size:{value:new D.Vector2(e,t)}},vertexShader:\"\\n        varying vec2 vUv;\\n        void main() {\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n        }\",fragmentShader:\"\\n        varying vec2 vUv;\\n        uniform sampler2D tex;\\n        uniform vec2 size;\\n        #include <packing>\\n        void main() {\\n          gl_FragColor = vec4(distance(size * unpackRGBATo2Half(texture2D(tex, vUv)), size * vUv), 0.0, 0.0, 0.0);\\n        }\"})),h=new d.FullScreenQuad(new D.ShaderMaterial({uniforms:{inside:{value:c.texture},outside:{value:l.texture},tex:{value:null}},vertexShader:\"\\n        varying vec2 vUv;\\n        void main() {\\n          vUv = uv;\\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n        }\",fragmentShader:\"\\n        varying vec2 vUv;\\n        uniform sampler2D inside;\\n        uniform sampler2D outside;\\n        uniform sampler2D tex;\\n        #include <packing>\\n        void main() {\\n          float i = texture2D(inside, vUv).x;\\n          float o =texture2D(outside, vUv).x;\\n          if (texture2D(tex, vUv).x == 0.0) {\\n            gl_FragColor = vec4(o, 0.0, 0.0, 0.0);\\n          } else {\\n            gl_FragColor = vec4(-i, 0.0, 0.0, 0.0);\\n          }\\n        }\"}));return d=>{let y=n;d.minFilter=D.NearestFilter,d.magFilter=D.NearestFilter,u.material.uniforms.tex.value=d,r.setRenderTarget(a),u.render(r);const x=Math.ceil(Math.log(Math.max(e,t))/Math.log(2));let v=a,g=null;for(let e=0;e<x;e++){const t=Math.pow(2,x-e-1);g=v===a?i:a,f.material.uniforms.level.value=e,f.material.uniforms.maxSteps.value=x,f.material.uniforms.offset.value=t,f.material.uniforms.tex.value=v.texture,r.setRenderTarget(g),f.render(r),v=g}r.setRenderTarget(l),p.material.uniforms.tex.value=g.texture,p.render(r),m.material.uniforms.tex.value=d,r.setRenderTarget(o),m.render(r),v=o;for(let e=0;e<x;e++){const t=Math.pow(2,x-e-1);g=v===o?s:o,f.material.uniforms.level.value=e,f.material.uniforms.maxSteps.value=x,f.material.uniforms.offset.value=t,f.material.uniforms.tex.value=v.texture,r.setRenderTarget(g),f.render(r),v=g}return r.setRenderTarget(c),p.material.uniforms.tex.value=g.texture,p.render(r),r.setRenderTarget(y),h.material.uniforms.tex.value=d,h.render(r),r.setRenderTarget(null),y}},ko=new D.Color;function Fo(e){return\"top\"in e}function Do({canvasSize:e,scene:t,index:r,children:n,frames:o,rect:i,track:s}){const l=a.useThree((e=>e.get)),c=a.useThree((e=>e.camera)),u=a.useThree((e=>e.scene)),d=a.useThree((e=>e.setEvents));let m=0;return a.useFrame((r=>{var a,l;(o===1/0||m<=o)&&(i.current=null==(a=s.current)?void 0:a.getBoundingClientRect(),m++);if(i.current){const{position:{left:a,bottom:o,width:s,height:d},isOffscreen:m}=function(e,t){const{right:r,top:n,left:a,bottom:o,width:i,height:s}=t,l=t.bottom<0||n>e.height||r<0||t.left>e.width;if(Fo(e)){const t=e.top+e.height-o;return{position:{width:i,height:s,left:a-e.left,top:n,bottom:t,right:r},isOffscreen:l}}return{position:{width:i,height:s,top:n,left:a,bottom:e.height-o,right:r},isOffscreen:l}}(e,i.current),f=s/d;(l=c)&&l.isOrthographicCamera?c.left===s/-2&&c.right===s/2&&c.top===d/2&&c.bottom===d/-2||(Object.assign(c,{left:s/-2,right:s/2,top:d/2,bottom:d/-2}),c.updateProjectionMatrix()):c.aspect!==f&&(c.aspect=f,c.updateProjectionMatrix()),r.gl.setViewport(a,o,s,d),r.gl.setScissor(a,o,s,d),r.gl.setScissorTest(!0),m?(r.gl.getClearColor(ko),r.gl.setClearColor(ko,r.gl.getClearAlpha()),r.gl.clear(!0,!0)):r.gl.render(n?u:t,c),r.gl.setScissorTest(!0)}}),r),k.useEffect((()=>{const e=l().events.connected;return d({connected:s.current}),()=>d({connected:e})}),[]),k.useEffect((()=>{Fo(e)||console.warn(\"Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944\")}),[]),k.createElement(k.Fragment,null,n)}const Lo=k.createContext(null),Ao=new D.Vector3,_o=new D.Vector3,Oo=new D.Vector3(0,1,0),No=new D.Matrix4,Bo=({direction:e,axis:t})=>{const{translation:r,translationLimits:n,annotations:o,annotationsClass:i,depthTest:s,scale:l,lineWidth:c,fixed:u,axisColors:d,hoveredColor:m,opacity:f,onDragStart:p,onDrag:h,onDragEnd:y,userData:x}=k.useContext(Lo),v=a.useThree((e=>e.controls)),g=k.useRef(null),z=k.useRef(null),w=k.useRef(null),b=k.useRef(0),[E,M]=k.useState(!1),S=k.useCallback((n=>{o&&(g.current.innerText=`${r.current[t].toFixed(2)}`,g.current.style.display=\"block\"),n.stopPropagation();const a=(new D.Matrix4).extractRotation(z.current.matrixWorld),i=n.point.clone(),s=(new D.Vector3).setFromMatrixPosition(z.current.matrixWorld),l=e.clone().applyMatrix4(a).normalize();w.current={clickPoint:i,dir:l},b.current=r.current[t],p({component:\"Arrow\",axis:t,origin:s,directions:[l]}),v&&(v.enabled=!1),n.target.setPointerCapture(n.pointerId)}),[o,e,v,p,r,t]),C=k.useCallback((e=>{if(e.stopPropagation(),E||M(!0),w.current){const{clickPoint:a,dir:i}=w.current,[s,l]=(null==n?void 0:n[t])||[void 0,void 0];let c=((e,t,r,n)=>{const a=t.dot(t),o=t.dot(e)-t.dot(r),i=t.dot(n);return 0===i?-o/a:(Ao.copy(n).multiplyScalar(a/i).sub(t),_o.copy(n).multiplyScalar(o/i).add(r).sub(e),-Ao.dot(_o)/Ao.dot(Ao))})(a,i,e.ray.origin,e.ray.direction);void 0!==s&&(c=Math.max(c,s-b.current)),void 0!==l&&(c=Math.min(c,l-b.current)),r.current[t]=b.current+c,o&&(g.current.innerText=`${r.current[t].toFixed(2)}`),No.makeTranslation(i.x*c,i.y*c,i.z*c),h(No)}}),[o,h,E,r,n,t]),P=k.useCallback((e=>{o&&(g.current.style.display=\"none\"),e.stopPropagation(),w.current=null,y(),v&&(v.enabled=!0),e.target.releasePointerCapture(e.pointerId)}),[o,v,y]),T=k.useCallback((e=>{e.stopPropagation(),M(!1)}),[]),{cylinderLength:R,coneWidth:F,coneLength:L,matrixL:A}=k.useMemo((()=>{const t=u?c/l*1.6:l/20,r=u?.2:l/5,n=u?1-r:l-r,a=(new D.Quaternion).setFromUnitVectors(Oo,e.clone().normalize());return{cylinderLength:n,coneWidth:t,coneLength:r,matrixL:(new D.Matrix4).makeRotationFromQuaternion(a)}}),[e,l,c,u]),_=E?m:d[t];return k.createElement(\"group\",{ref:z},k.createElement(\"group\",{matrix:A,matrixAutoUpdate:!1,onPointerDown:S,onPointerMove:C,onPointerUp:P,onPointerOut:T},o&&k.createElement(Q,{position:[0,-L,0]},k.createElement(\"div\",{style:{display:\"none\",background:\"#151520\",color:\"white\",padding:\"6px 8px\",borderRadius:7,whiteSpace:\"nowrap\"},className:i,ref:g})),k.createElement(\"mesh\",{visible:!1,position:[0,(R+L)/2,0],userData:x},k.createElement(\"cylinderGeometry\",{args:[1.4*F,1.4*F,R+L,8,1]})),k.createElement(de,{transparent:!0,raycast:()=>null,depthTest:s,points:[0,0,0,0,R,0],lineWidth:c,color:_,opacity:f,polygonOffset:!0,renderOrder:1,polygonOffsetFactor:-10,fog:!1}),k.createElement(\"mesh\",{raycast:()=>null,position:[0,R+L/2,0],renderOrder:500},k.createElement(\"coneGeometry\",{args:[F,L,24,1]}),k.createElement(\"meshBasicMaterial\",{transparent:!0,depthTest:s,color:_,opacity:f,polygonOffset:!0,polygonOffsetFactor:-10,fog:!1}))))},Io=new D.Ray,Uo=new D.Vector3,Vo=new D.Matrix4,jo=({dir1:e,dir2:t,axis:r})=>{const{translation:n,translationLimits:o,annotations:i,annotationsClass:s,depthTest:l,scale:c,lineWidth:u,fixed:d,axisColors:m,hoveredColor:f,opacity:p,onDragStart:h,onDrag:y,onDragEnd:x,userData:v}=k.useContext(Lo),g=a.useThree((e=>e.controls)),z=k.useRef(null),w=k.useRef(null),b=k.useRef(null),E=k.useRef(0),M=k.useRef(0),[S,C]=k.useState(!1),P=k.useCallback((e=>{i&&(z.current.innerText=`${n.current[(r+1)%3].toFixed(2)}, ${n.current[(r+2)%3].toFixed(2)}`,z.current.style.display=\"block\"),e.stopPropagation();const t=e.point.clone(),a=(new D.Vector3).setFromMatrixPosition(w.current.matrixWorld),o=(new D.Vector3).setFromMatrixColumn(w.current.matrixWorld,0).normalize(),s=(new D.Vector3).setFromMatrixColumn(w.current.matrixWorld,1).normalize(),l=(new D.Vector3).setFromMatrixColumn(w.current.matrixWorld,2).normalize(),c=(new D.Plane).setFromNormalAndCoplanarPoint(l,a);b.current={clickPoint:t,e1:o,e2:s,plane:c},E.current=n.current[(r+1)%3],M.current=n.current[(r+2)%3],h({component:\"Slider\",axis:r,origin:a,directions:[o,s,l]}),g&&(g.enabled=!1),e.target.setPointerCapture(e.pointerId)}),[i,g,h,r]),T=k.useCallback((e=>{if(e.stopPropagation(),S||C(!0),b.current){const{clickPoint:t,e1:a,e2:s,plane:l}=b.current,[c,u]=(null==o?void 0:o[(r+1)%3])||[void 0,void 0],[d,m]=(null==o?void 0:o[(r+2)%3])||[void 0,void 0];Io.copy(e.ray),Io.intersectPlane(l,Uo),Io.direction.negate(),Io.intersectPlane(l,Uo),Uo.sub(t);let[f,p]=((e,t,r)=>{const n=Math.abs(e.x)>=Math.abs(e.y)&&Math.abs(e.x)>=Math.abs(e.z)?0:Math.abs(e.y)>=Math.abs(e.x)&&Math.abs(e.y)>=Math.abs(e.z)?1:2,a=[0,1,2].sort(((e,r)=>Math.abs(t.getComponent(r))-Math.abs(t.getComponent(e)))),o=n===a[0]?a[1]:a[0],i=e.getComponent(n),s=e.getComponent(o),l=t.getComponent(n),c=t.getComponent(o),u=r.getComponent(n),d=(r.getComponent(o)-u*(s/i))/(c-l*(s/i));return[(u-d*l)/i,d]})(a,s,Uo);void 0!==c&&(f=Math.max(f,c-E.current)),void 0!==u&&(f=Math.min(f,u-E.current)),void 0!==d&&(p=Math.max(p,d-M.current)),void 0!==m&&(p=Math.min(p,m-M.current)),n.current[(r+1)%3]=E.current+f,n.current[(r+2)%3]=M.current+p,i&&(z.current.innerText=`${n.current[(r+1)%3].toFixed(2)}, ${n.current[(r+2)%3].toFixed(2)}`),Vo.makeTranslation(f*a.x+p*s.x,f*a.y+p*s.y,f*a.z+p*s.z),y(Vo)}}),[i,y,S,n,o,r]),R=k.useCallback((e=>{i&&(z.current.style.display=\"none\"),e.stopPropagation(),b.current=null,x(),g&&(g.enabled=!0),e.target.releasePointerCapture(e.pointerId)}),[i,g,x]),F=k.useCallback((e=>{e.stopPropagation(),C(!1)}),[]),L=k.useMemo((()=>{const r=e.clone().normalize(),n=t.clone().normalize();return(new D.Matrix4).makeBasis(r,n,r.clone().cross(n))}),[e,t]),A=d?1/7:c/7,_=d?.225:.225*c,O=S?f:m[r],N=k.useMemo((()=>[new D.Vector3(0,0,0),new D.Vector3(0,_,0),new D.Vector3(_,_,0),new D.Vector3(_,0,0),new D.Vector3(0,0,0)]),[_]);return k.createElement(\"group\",{ref:w,matrix:L,matrixAutoUpdate:!1},i&&k.createElement(Q,{position:[0,0,0]},k.createElement(\"div\",{style:{display:\"none\",background:\"#151520\",color:\"white\",padding:\"6px 8px\",borderRadius:7,whiteSpace:\"nowrap\"},className:s,ref:z})),k.createElement(\"group\",{position:[1.7*A,1.7*A,0]},k.createElement(\"mesh\",{visible:!0,onPointerDown:P,onPointerMove:T,onPointerUp:R,onPointerOut:F,scale:_,userData:v},k.createElement(\"planeGeometry\",null),k.createElement(\"meshBasicMaterial\",{transparent:!0,depthTest:l,color:O,polygonOffset:!0,polygonOffsetFactor:-10,side:D.DoubleSide,fog:!1})),k.createElement(de,{position:[-_/2,-_/2,0],transparent:!0,depthTest:l,points:N,lineWidth:u,color:O,opacity:p,polygonOffset:!0,polygonOffsetFactor:-10,userData:v,fog:!1})))},Wo=new D.Vector3,Go=new D.Vector3,Ho=e=>180*e/Math.PI,$o=e=>{let t=((e,t)=>{let r=Math.floor(e/t);return r=r<0?r+1:r,e-r*t})(e,2*Math.PI);return Math.abs(t)<1e-6?0:(t<0&&(t+=2*Math.PI),t)},qo=new D.Matrix4,Xo=new D.Vector3,Yo=new D.Ray,Ko=new D.Vector3,Qo=({dir1:e,dir2:t,axis:r})=>{const{rotationLimits:n,annotations:o,annotationsClass:i,depthTest:s,scale:l,lineWidth:c,fixed:u,axisColors:d,hoveredColor:m,opacity:f,onDragStart:p,onDrag:h,onDragEnd:y,userData:x}=k.useContext(Lo),v=a.useThree((e=>e.controls)),g=k.useRef(null),z=k.useRef(null),w=k.useRef(0),b=k.useRef(0),E=k.useRef(null),[M,S]=k.useState(!1),C=k.useCallback((e=>{o&&(g.current.innerText=`${Ho(b.current).toFixed(0)}º`,g.current.style.display=\"block\"),e.stopPropagation();const t=e.point.clone(),n=(new D.Vector3).setFromMatrixPosition(z.current.matrixWorld),a=(new D.Vector3).setFromMatrixColumn(z.current.matrixWorld,0).normalize(),i=(new D.Vector3).setFromMatrixColumn(z.current.matrixWorld,1).normalize(),s=(new D.Vector3).setFromMatrixColumn(z.current.matrixWorld,2).normalize(),l=(new D.Plane).setFromNormalAndCoplanarPoint(s,n);E.current={clickPoint:t,origin:n,e1:a,e2:i,normal:s,plane:l},p({component:\"Rotator\",axis:r,origin:n,directions:[a,i,s]}),v&&(v.enabled=!1),e.target.setPointerCapture(e.pointerId)}),[o,v,p,r]),P=k.useCallback((e=>{if(e.stopPropagation(),M||S(!0),E.current){const{clickPoint:t,origin:a,e1:i,e2:s,normal:l,plane:c}=E.current,[u,d]=(null==n?void 0:n[r])||[void 0,void 0];Yo.copy(e.ray),Yo.intersectPlane(c,Ko),Yo.direction.negate(),Yo.intersectPlane(c,Ko);let m=((e,t,r,n,a)=>{Wo.copy(e).sub(r),Go.copy(t).sub(r);const o=n.dot(n),i=a.dot(a),s=Wo.dot(n)/o,l=Wo.dot(a)/i,c=Go.dot(n)/o,u=Go.dot(a)/i,d=Math.atan2(l,s);return Math.atan2(u,c)-d})(t,Ko,a,i,s),f=Ho(m);e.shiftKey&&(f=10*Math.round(f/10),m=(e=>e*Math.PI/180)(f)),void 0!==u&&void 0!==d&&d-u<2*Math.PI?(m=$o(m),m=m>Math.PI?m-2*Math.PI:m,m=j.default(m,u-w.current,d-w.current),b.current=w.current+m):(b.current=$o(w.current+m),b.current=b.current>Math.PI?b.current-2*Math.PI:b.current),o&&(f=Ho(b.current),g.current.innerText=`${f.toFixed(0)}º`),qo.makeRotationAxis(l,m),Xo.copy(a).applyMatrix4(qo).sub(a).negate(),qo.setPosition(Xo),h(qo)}}),[o,h,M,n,r]),T=k.useCallback((e=>{o&&(g.current.style.display=\"none\"),e.stopPropagation(),w.current=b.current,E.current=null,y(),v&&(v.enabled=!0),e.target.releasePointerCapture(e.pointerId)}),[o,v,y]),R=k.useCallback((e=>{e.stopPropagation(),S(!1)}),[]),F=k.useMemo((()=>{const r=e.clone().normalize(),n=t.clone().normalize();return(new D.Matrix4).makeBasis(r,n,r.clone().cross(n))}),[e,t]),L=u?.65:.65*l,A=k.useMemo((()=>{const e=[];for(let t=0;t<=32;t++){const r=t*(Math.PI/2)/32;e.push(new D.Vector3(Math.cos(r)*L,Math.sin(r)*L,0))}return e}),[L]);return k.createElement(\"group\",{ref:z,onPointerDown:C,onPointerMove:P,onPointerUp:T,onPointerOut:R,matrix:F,matrixAutoUpdate:!1},o&&k.createElement(Q,{position:[L,L,0]},k.createElement(\"div\",{style:{display:\"none\",background:\"#151520\",color:\"white\",padding:\"6px 8px\",borderRadius:7,whiteSpace:\"nowrap\"},className:i,ref:g})),k.createElement(de,{points:A,lineWidth:4*c,visible:!1,userData:x}),k.createElement(de,{transparent:!0,raycast:()=>null,depthTest:s,points:A,lineWidth:c,color:M?m:d[r],opacity:f,polygonOffset:!0,polygonOffsetFactor:-10,fog:!1}))},Zo=new D.Vector3,Jo=new D.Vector3,ei=new D.Vector3,ti=(e,t,r,n=1)=>{const a=Zo.set(e.x/r.width*2-1,-e.y/r.height*2+1,n);return a.unproject(t),a},ri=(e,t,r,n)=>{const a=((e,t,r)=>{const n=r.width/2,a=r.height/2;t.updateMatrixWorld(!1);const o=e.project(t);return o.x=o.x*n+n,o.y=-o.y*a+a,o})(ei.copy(e),r,n);let o=0;for(let i=0;i<2;++i){const s=Jo.copy(a).setComponent(i,a.getComponent(i)+t),l=ti(s,r,n,s.z);o=Math.max(o,e.distanceTo(l))}return o},ni=new D.Matrix4,ai=new D.Matrix4,oi=new D.Matrix4,ii=new D.Matrix4,si=new D.Matrix4,li=new D.Matrix4,ci=new D.Matrix4,ui=new D.Matrix4,di=new D.Box3,mi=new D.Box3,fi=new D.Vector3,pi=new D.Vector3,hi=new D.Vector3,yi=new D.Vector3,xi=new D.Vector3(1,0,0),vi=new D.Vector3(0,1,0),gi=new D.Vector3(0,0,1),zi=k.forwardRef((({matrix:e,onDragStart:t,onDrag:r,onDragEnd:n,autoTransform:o=!0,anchor:i,disableAxes:s=!1,disableSliders:l=!1,disableRotations:c=!1,activeAxes:u=[!0,!0,!0],offset:d=[0,0,0],rotation:m=[0,0,0],scale:f=1,lineWidth:p=4,fixed:h=!1,translationLimits:y,rotationLimits:x,depthTest:v=!0,axisColors:g=[\"#ff2060\",\"#20df80\",\"#2080ff\"],hoveredColor:z=\"#ffff40\",annotations:w=!1,annotationsClass:b,opacity:E=1,visible:M=!0,userData:S,children:C,...P},T)=>{const F=a.useThree((e=>e.invalidate)),L=k.useRef(null),A=k.useRef(null),_=k.useRef(null),O=k.useRef(null),N=k.useRef([0,0,0]);k.useLayoutEffect((()=>{i&&(O.current.updateWorldMatrix(!0,!0),ii.copy(O.current.matrixWorld).invert(),di.makeEmpty(),O.current.traverse((e=>{e.geometry&&(e.geometry.boundingBox||e.geometry.computeBoundingBox(),li.copy(e.matrixWorld).premultiply(ii),mi.copy(e.geometry.boundingBox),mi.applyMatrix4(li),di.union(mi))})),fi.copy(di.max).add(di.min).multiplyScalar(.5),pi.copy(di.max).sub(di.min).multiplyScalar(.5),hi.copy(pi).multiply(new D.Vector3(...i)).add(fi),yi.set(...d).add(hi),_.current.position.copy(yi),F())}));const B=k.useMemo((()=>({onDragStart:e=>{ni.copy(A.current.matrix),ai.copy(A.current.matrixWorld),t&&t(e),F()},onDrag:e=>{oi.copy(L.current.matrixWorld),ii.copy(oi).invert(),si.copy(ai).premultiply(e),li.copy(si).premultiply(ii),ci.copy(ni).invert(),ui.copy(li).multiply(ci),o&&A.current.matrix.copy(li),r&&r(li,ui,si,e),F()},onDragEnd:()=>{n&&n(),F()},translation:N,translationLimits:y,rotationLimits:x,axisColors:g,hoveredColor:z,opacity:E,scale:f,lineWidth:p,fixed:h,depthTest:v,userData:S,annotations:w,annotationsClass:b})),[t,r,n,N,y,x,v,f,p,h,...g,z,E,S,o,w,b]),I=new D.Vector3;return a.useFrame((e=>{if(h){const a=ri(_.current.getWorldPosition(I),f,e.camera,e.size);var t,r,n;if(_.current)(null==(t=_.current)?void 0:t.scale.x)===a&&(null==(r=_.current)?void 0:r.scale.y)===a&&(null==(n=_.current)?void 0:n.scale.z)===a||(_.current.scale.setScalar(a),e.invalidate())}})),k.useImperativeHandle(T,(()=>A.current),[]),k.useLayoutEffect((()=>{e&&e instanceof D.Matrix4&&(A.current.matrix=e)}),[e]),k.createElement(Lo.Provider,{value:B},k.createElement(\"group\",{ref:L},k.createElement(\"group\",R.default({ref:A,matrix:e,matrixAutoUpdate:!1},P),k.createElement(\"group\",{visible:M,ref:_,position:d,rotation:m},!s&&u[0]&&k.createElement(Bo,{axis:0,direction:xi}),!s&&u[1]&&k.createElement(Bo,{axis:1,direction:vi}),!s&&u[2]&&k.createElement(Bo,{axis:2,direction:gi}),!l&&u[0]&&u[1]&&k.createElement(jo,{axis:2,dir1:xi,dir2:vi}),!l&&u[0]&&u[2]&&k.createElement(jo,{axis:1,dir1:gi,dir2:xi}),!l&&u[2]&&u[1]&&k.createElement(jo,{axis:0,dir1:vi,dir2:gi}),!c&&u[0]&&u[1]&&k.createElement(Qo,{axis:2,dir1:xi,dir2:vi}),!c&&u[0]&&u[2]&&k.createElement(Qo,{axis:1,dir1:gi,dir2:xi}),!c&&u[2]&&u[1]&&k.createElement(Qo,{axis:0,dir1:vi,dir2:gi})),k.createElement(\"group\",{ref:O},C))))}));exports.AccumulativeShadows=In,exports.AdaptiveDpr=function({pixelated:e}){const t=a.useThree((e=>e.gl)),r=a.useThree((e=>e.internal.active)),n=a.useThree((e=>e.performance.current)),o=a.useThree((e=>e.viewport.initialDpr)),i=a.useThree((e=>e.setDpr));return k.useEffect((()=>{const n=t.domElement;return()=>{r&&i(o),e&&n&&(n.style.imageRendering=\"auto\")}}),[]),k.useEffect((()=>{i(n*o),e&&t.domElement&&(t.domElement.style.imageRendering=1===n?\"auto\":\"pixelated\")}),[n]),null},exports.AdaptiveEvents=function(){const e=a.useThree((e=>e.get)),t=a.useThree((e=>e.setEvents)),r=a.useThree((e=>e.performance.current));return k.useEffect((()=>{const r=e().events.enabled;return()=>t({enabled:r})}),[]),k.useEffect((()=>t({enabled:1===r})),[r]),null},exports.ArcballControls=ct,exports.AsciiRenderer=function({renderIndex:e=1,bgColor:t=\"black\",fgColor:r=\"white\",characters:n=\" .:-+*=%@#\",invert:o=!0,color:i=!1,resolution:s=.15}){const{size:l,gl:c,scene:u,camera:m}=a.useThree(),f=k.useMemo((()=>{const e=new d.AsciiEffect(c,n,{invert:o,color:i,resolution:s});return e.domElement.style.position=\"absolute\",e.domElement.style.top=\"0px\",e.domElement.style.left=\"0px\",e.domElement.style.pointerEvents=\"none\",e}),[n,o,i,s]);return k.useLayoutEffect((()=>{f.domElement.style.color=r,f.domElement.style.backgroundColor=t}),[r,t]),k.useEffect((()=>(c.domElement.style.opacity=\"0\",c.domElement.parentNode.appendChild(f.domElement),()=>{c.domElement.style.opacity=\"1\",c.domElement.parentNode.removeChild(f.domElement)})),[f]),k.useEffect((()=>{f.setSize(l.width,l.height)}),[f,l]),a.useFrame((e=>{f.render(u,m)}),e),k.createElement(k.Fragment,null)},exports.BBAnchor=({anchor:e,...t})=>{const r=k.useRef(null),n=k.useRef(null);return k.useEffect((()=>{var e;null!=(e=r.current)&&null!=(e=e.parent)&&e.parent&&(n.current=r.current.parent,r.current.parent.parent.add(r.current))}),[]),a.useFrame((()=>{n.current&&(Er.setFromObject(n.current),Er.getSize(Mr),r.current.position.set(n.current.position.x+Mr.x*(Array.isArray(e)?e[0]:e.x)/2,n.current.position.y+Mr.y*(Array.isArray(e)?e[1]:e.y)/2,n.current.position.z+Mr.z*(Array.isArray(e)?e[2]:e.z)/2))})),k.createElement(\"group\",R.default({ref:r},t))},exports.Backdrop=function({children:e,floor:t=.25,segments:r=20,receiveShadow:n,...a}){const o=k.useRef(null);return k.useLayoutEffect((()=>{let e=0;const n=r/r/2,a=o.current.attributes.position;for(let o=0;o<r+1;o++)for(let i=0;i<r+1;i++)a.setXYZ(e++,o/r-n+(0===o?-t:0),i/r-n,Gn(o/r));a.needsUpdate=!0,o.current.computeVertexNormals()}),[r,t]),k.createElement(\"group\",a,k.createElement(\"mesh\",{receiveShadow:n,rotation:[-Math.PI/2,0,Math.PI/2]},k.createElement(\"planeGeometry\",{ref:o,args:[1,1,r,r]}),e))},exports.BakeShadows=function(){const e=a.useThree((e=>e.gl));return t.useEffect((()=>(e.shadowMap.autoUpdate=!1,e.shadowMap.needsUpdate=!0,()=>{e.shadowMap.autoUpdate=e.shadowMap.needsUpdate=!0})),[e.shadowMap]),null},exports.Billboard=ce,exports.Bounds=wn,exports.Box=qr,exports.Bvh=xr,exports.CameraControls=ft,exports.CameraShake=En,exports.Capsule=dn,exports.CatmullRomLine=he,exports.Caustics=Qn,exports.Center=Pr,exports.Circle=Xr,exports.Clone=Ve,exports.Cloud=ba,exports.CloudInstance=wa,exports.Clouds=za,exports.ComputedAttribute=({compute:e,name:t,...r})=>{const[a]=k.useState((()=>new n.BufferAttribute(new Float32Array(0),1))),o=k.useRef(null);return k.useLayoutEffect((()=>{if(o.current){var t;const r=null!==(t=o.current.parent)&&void 0!==t?t:o.current.__r3f.parent,n=e(r);o.current.copy(n)}}),[e]),k.createElement(\"primitive\",R.default({ref:o,object:a,attach:`attributes-${t}`},r))},exports.Cone=Yr,exports.ContactShadows=On,exports.CubeCamera=function({children:e,frames:t=1/0,resolution:r,near:n,far:o,envMap:i,fog:s,...l}){const c=k.useRef(null),{fbo:u,camera:d,update:m}=nt({resolution:r,near:n,far:o,envMap:i,fog:s});let f=0;return a.useFrame((()=>{c.current&&(t===1/0||f<t)&&(c.current.visible=!1,m(),c.current.visible=!0,f++)})),k.createElement(\"group\",l,k.createElement(\"primitive\",{object:d}),k.createElement(\"group\",{ref:c},e(u.texture)))},exports.CubicBezierLine=pe,exports.CurveModifier=Rr,exports.CycleRaycast=function({onChanged:e,portal:t,preventDefault:r=!0,scroll:n=!0,keyCode:o=9}){const i=k.useRef(0),s=a.useThree((e=>e.setEvents)),l=a.useThree((e=>e.get)),c=a.useThree((e=>e.gl));return k.useEffect((()=>{var a;let u,d=[];const m=l().events.filter,f=null!==(a=null==t?void 0:t.current)&&void 0!==a?a:c.domElement.parentNode,p=()=>f&&e&&e(d,Math.round(i.current)%d.length);s({filter:(e,t)=>{let r=[...e];r.length===d.length&&d.every((e=>r.map((e=>e.object.uuid)).includes(e.object.uuid)))||(i.current=0,d=r,p()),m&&(r=m(r,t));for(let e=0;e<Math.round(i.current)%r.length;e++){const e=r.shift();r=[...r,e]}return r}});const h=e=>{var t,r;i.current=e(i.current),null==(t=l().events.handlers)||t.onPointerCancel(void 0),null==(r=l().events.handlers)||r.onPointerMove(u),p()},y=e=>{(e.keyCode||e.which===o)&&(r&&e.preventDefault(),d.length>1&&h((e=>e+1)))},x=e=>{r&&e.preventDefault();let t=0;e||(e=window.event),e.wheelDelta?t=e.wheelDelta/120:e.detail&&(t=-e.detail/3),d.length>1&&h((e=>Math.abs(e-t)))},v=e=>u=e;return document.addEventListener(\"pointermove\",v,{passive:!0}),n&&document.addEventListener(\"wheel\",x),void 0!==o&&document.addEventListener(\"keydown\",y),()=>{s({filter:m}),void 0!==o&&document.removeEventListener(\"keydown\",y),n&&document.removeEventListener(\"wheel\",x),document.removeEventListener(\"pointermove\",v)}}),[c,l,s,r,n,o]),null},exports.Cylinder=Kr,exports.Decal=qe,exports.Detailed=xo,exports.DeviceOrientationControls=at,exports.Dodecahedron=ln,exports.Edges=Ae,exports.Effects=Ee,exports.Environment=_n,exports.EnvironmentCube=Dn,exports.EnvironmentMap=Fn,exports.EnvironmentPortal=Ln,exports.Example=Tr,exports.Extrude=cn,exports.FaceControls=Pt,exports.FaceLandmarker=function({basePath:e=bt.basePath,options:r=bt.options,children:n}){const a=JSON.stringify(r),o=p.suspend((async()=>await g.FilesetResolver.forVisionTasks(e).then((e=>g.FaceLandmarker.createFromOptions(e,r)))),[e,a]);return t.useEffect((()=>()=>{null==o||o.close(),p.clear([e,a])}),[o,e,a]),k.createElement(wt.Provider,{value:o},n)},exports.FaceLandmarkerDefaults=bt,exports.Facemesh=xt,exports.FacemeshDatas=zt,exports.FacemeshEye=gt,exports.FacemeshEyeDefaults=vt,exports.FirstPersonControls=mt,exports.Float=Mn,exports.FlyControls=ot,exports.GizmoHelper=({alignment:e=\"bottom-right\",margin:t=[80,80],renderPriority:r=1,onUpdate:o,onTarget:i,children:s})=>{const l=a.useThree((e=>e.size)),c=a.useThree((e=>e.camera)),u=a.useThree((e=>e.controls)),d=a.useThree((e=>e.invalidate)),m=k.useRef(null),f=k.useRef(null),p=k.useRef(!1),h=k.useRef(0),y=k.useRef(new n.Vector3(0,0,0)),x=k.useRef(new n.Vector3(0,0,0));k.useEffect((()=>{x.current.copy(c.up)}),[c]);const v=k.useCallback((e=>{p.current=!0,(u||i)&&(y.current=(null==u?void 0:u.target)||(null==i?void 0:i())),h.current=c.position.distanceTo(Ht),Wt.copy(c.quaternion),$t.copy(e).multiplyScalar(h.current).add(Ht),Vt.lookAt($t),Vt.up.copy(c.up),Gt.copy(Vt.quaternion),d()}),[u,c,i,d]);a.useFrame(((e,t)=>{if(f.current&&m.current){var r;if(p.current)if(Wt.angleTo(Gt)<.01)p.current=!1,\"minPolarAngle\"in u&&c.up.copy(x.current);else{const e=t*Ut;Wt.rotateTowards(Gt,e),c.position.set(0,0,1).applyQuaternion(Wt).multiplyScalar(h.current).add(y.current),c.up.set(0,1,0).applyQuaternion(Wt).normalize(),c.quaternion.copy(Wt),o?o():u&&u.update(),d()}jt.copy(c.matrix).invert(),null==(r=m.current)||r.quaternion.setFromRotationMatrix(jt)}}));const g=k.useMemo((()=>({tweenCamera:v})),[v]),[z,w]=t,b=e.endsWith(\"-center\")?0:e.endsWith(\"-left\")?-l.width/2+z:l.width/2-z,E=e.startsWith(\"center-\")?0:e.startsWith(\"top-\")?l.height/2-w:-l.height/2+w;return k.createElement(Nt,{renderPriority:r},k.createElement(Bt.Provider,{value:g},k.createElement(tt,{makeDefault:!0,ref:f,position:[0,0,200]}),k.createElement(\"group\",{ref:m,position:[b,E,0]},s)))},exports.GizmoViewcube=e=>k.createElement(\"group\",{scale:[60,60,60]},k.createElement(ar,e),tr.map(((t,r)=>k.createElement(or,R.default({key:r,position:t,dimensions:rr[r]},e)))),Jt.map(((t,r)=>k.createElement(or,R.default({key:r,position:t,dimensions:er},e))))),exports.GizmoViewport=({hideNegativeAxes:e,hideAxisHeads:t,disabled:r,font:n=\"18px Inter var, Arial, sans-serif\",axisColors:a=[\"#ff2060\",\"#20df80\",\"#2080ff\"],axisHeadScale:o=1,axisScale:i,labels:s=[\"X\",\"Y\",\"Z\"],labelColor:l=\"#000\",onClick:c,...u})=>{const[d,m,f]=a,{tweenCamera:p}=It(),h={font:n,disabled:r,labelColor:l,onClick:c,axisHeadScale:o,onPointerDown:r?void 0:e=>{p(e.object.position),e.stopPropagation()}};return k.createElement(\"group\",R.default({scale:40},u),k.createElement(ir,{color:d,rotation:[0,0,0],scale:i}),k.createElement(ir,{color:m,rotation:[0,0,Math.PI/2],scale:i}),k.createElement(ir,{color:f,rotation:[0,-Math.PI/2,0],scale:i}),!t&&k.createElement(k.Fragment,null,k.createElement(sr,R.default({arcStyle:d,position:[1,0,0],label:s[0]},h)),k.createElement(sr,R.default({arcStyle:m,position:[0,1,0],label:s[1]},h)),k.createElement(sr,R.default({arcStyle:f,position:[0,0,1],label:s[2]},h)),!e&&k.createElement(k.Fragment,null,k.createElement(sr,R.default({arcStyle:d,position:[-1,0,0]},h)),k.createElement(sr,R.default({arcStyle:m,position:[0,-1,0]},h)),k.createElement(sr,R.default({arcStyle:f,position:[0,0,-1]},h)))))},exports.Gltf=Je,exports.GradientTexture=function({stops:e,colors:t,size:r=1024,width:n=16,type:o=Me.Linear,innerCircleRadius:i=0,outerCircleRadius:s=\"auto\",...l}){const c=a.useThree((e=>e.gl)),u=k.useMemo((()=>{const a=document.createElement(\"canvas\"),l=a.getContext(\"2d\");let c;if(a.width=n,a.height=r,o===Me.Linear)c=l.createLinearGradient(0,0,0,r);else{const e=a.width/2,t=a.height/2,r=\"auto\"!==s?Math.abs(Number(s)):Math.sqrt(e**2+t**2);c=l.createRadialGradient(e,t,Math.abs(i),e,t,r)}let u=e.length;for(;u--;)c.addColorStop(e[u],t[u]);return l.save(),l.fillStyle=c,l.fillRect(0,0,n,r),l.restore(),a}),[e]);return k.createElement(\"canvasTexture\",R.default({colorSpace:c.outputColorSpace,args:[u],attach:\"map\"},l))},exports.GradientType=Me,exports.Grid=cr,exports.Html=Q,exports.Hud=Nt,exports.Icosahedron=on,exports.Image=Le,exports.Instance=lo,exports.Instances=co,exports.IsObject=Ce,exports.KeyboardControls=function({map:e,children:t,onChange:r,domElement:n}){const a=e.map((e=>e.name+e.keys)).join(\"-\"),o=k.useMemo((()=>L.default(u.subscribeWithSelector((()=>e.reduce(((e,t)=>({...e,[t.name]:!1})),{}))))),[a]),i=k.useMemo((()=>[o.subscribe,o.getState,o]),[a]),s=o.setState;return k.useEffect((()=>{const t=e.map((({name:e,keys:t,up:n})=>({keys:t,up:n,fn:t=>{s({[e]:t}),r&&r(e,t,i[1]())}}))).reduce(((e,{keys:t,fn:r,up:n=!0})=>(t.forEach((t=>e[t]={fn:r,pressed:!1,up:n})),e)),{}),a=({key:e,code:r})=>{const n=t[e]||t[r];if(!n)return;const{fn:a,pressed:o,up:i}=n;n.pressed=!0,!i&&o||a(!0)},o=({key:e,code:r})=>{const n=t[e]||t[r];if(!n)return;const{fn:a,up:o}=n;n.pressed=!1,o&&a(!1)},l=n||window;return l.addEventListener(\"keydown\",a,{passive:!0}),l.addEventListener(\"keyup\",o,{passive:!0}),()=>{l.removeEventListener(\"keydown\",a),l.removeEventListener(\"keyup\",o)}}),[n,a]),k.createElement(se.Provider,{value:i,children:t})},exports.Lathe=un,exports.Lightformer=sa,exports.Line=de,exports.Loader=function({containerStyles:e,innerStyles:t,barStyles:r,dataStyles:n,dataInterpolation:a=ee,initialState:o=(e=>e)}){const{active:i,progress:s}=J(),l=k.useRef(0),c=k.useRef(0),u=k.useRef(null),[d,m]=k.useState(o(i));k.useEffect((()=>{let e;return i!==d&&(e=setTimeout((()=>m(i)),300)),()=>clearTimeout(e)}),[d,i]);const f=k.useCallback((()=>{u.current&&(l.current+=(s-l.current)/2,(l.current>.95*s||100===s)&&(l.current=s),u.current.innerText=a(l.current),l.current<s&&(c.current=requestAnimationFrame(f)))}),[a,s]);return k.useEffect((()=>(f(),()=>cancelAnimationFrame(c.current))),[f]),d?k.createElement(\"div\",{style:{...te.container,opacity:i?1:0,...e}},k.createElement(\"div\",null,k.createElement(\"div\",{style:{...te.inner,...t}},k.createElement(\"div\",{style:{...te.bar,transform:`scaleX(${s/100})`,...r}}),k.createElement(\"span\",{ref:u,style:{...te.data,...n}})))):null},exports.MapControls=it,exports.MarchingCube=Ge,exports.MarchingCubes=We,exports.MarchingPlane=He,exports.Mask=So,exports.Merged=uo,exports.MeshDiscardMaterial=Vr,exports.MeshDistortMaterial=Fr,exports.MeshPortalMaterial=Po,exports.MeshReflectorMaterial=Or,exports.MeshRefractionMaterial=function({aberrationStrength:e=0,fastChroma:r=!0,envMap:n,...o}){a.extend({MeshRefractionMaterial:Nr});const i=t.useRef(),{size:s}=a.useThree(),l=t.useMemo((()=>{var t,a;const o={},i=(s=n)&&s.isCubeTexture;var s;const l=(null!==(t=i?null==(a=n.image[0])?void 0:a.width:n.image.width)&&void 0!==t?t:1024)/4,c=Math.floor(Math.log2(l)),u=Math.pow(2,c),d=3*Math.max(u,112),m=4*u;return i&&(o.ENVMAP_TYPE_CUBEM=\"\"),o.CUBEUV_TEXEL_WIDTH=\"\"+1/d,o.CUBEUV_TEXEL_HEIGHT=\"\"+1/m,o.CUBEUV_MAX_MIP=`${c}.0`,e>0&&(o.CHROMATIC_ABERRATIONS=\"\"),r&&(o.FAST_CHROMA=\"\"),o}),[e,r]);return t.useLayoutEffect((()=>{var e;const t=null==(e=i.current)||null==(e=e.__r3f)||null==(e=e.parent)?void 0:e.geometry;t&&(i.current.bvh=new E.MeshBVHUniformStruct,i.current.bvh.updateFrom(new E.MeshBVH(t.clone().toNonIndexed(),{lazyGeneration:!1,strategy:E.SAH})))}),[]),a.useFrame((({camera:e})=>{i.current.viewMatrixInverse=e.matrixWorld,i.current.projectionMatrixInverse=e.projectionMatrixInverse})),k.createElement(\"meshRefractionMaterial\",R.default({key:JSON.stringify(l),defines:l,ref:i,resolution:[s.width,s.height],aberrationStrength:e,envMap:n},o))},exports.MeshTransmissionMaterial=Ur,exports.MeshWobbleMaterial=Lr,exports.MotionPathControls=_t,exports.Octahedron=sn,exports.OrbitControls=st,exports.OrthographicCamera=tt,exports.Outlines=function({color:e=\"black\",opacity:t=1,transparent:r=!1,screenspace:n=!1,toneMapped:o=!0,polygonOffset:i=!1,polygonOffsetFactor:s=0,renderOrder:l=0,thickness:c=.05,angle:u=Math.PI,...m}){var f;const p=k.useRef(null),[h]=k.useState((()=>new _e({side:D.BackSide}))),{gl:y}=a.useThree(),x=y.getDrawingBufferSize(new D.Vector2);return k.useMemo((()=>a.extend({OutlinesMaterial:_e})),[]),k.useLayoutEffect((()=>{const e=p.current,t=e.parent;if(t&&t.geometry){let r;return t.skeleton?(r=new D.SkinnedMesh,r.material=h,r.bind(t.skeleton,t.bindMatrix),e.add(r)):t.isInstancedMesh?(r=new D.InstancedMesh(t.geometry,h,t.count),r.instanceMatrix=t.instanceMatrix,e.add(r)):(r=new D.Mesh,r.material=h,e.add(r)),r.geometry=u?d.toCreasedNormals(t.geometry,u):t.geometry,()=>{u&&r.geometry.dispose(),e.remove(r)}}}),[u,null==(f=p.current)||null==(f=f.parent)?void 0:f.geometry]),k.useLayoutEffect((()=>{const u=p.current.children[0];u&&(u.renderOrder=l,a.applyProps(u.material,{transparent:r,thickness:c,color:e,opacity:t,size:x,screenspace:n,toneMapped:o,polygonOffset:i,polygonOffsetFactor:s}))}),[u,r,c,e,t,n,o,i,s,x,l]),k.createElement(\"group\",R.default({ref:p},m))},exports.PerformanceMonitor=function({iterations:e=10,ms:r=250,threshold:n=.75,step:o=.1,factor:i=.5,flipflops:s=1/0,bounds:l=(e=>e>100?[60,100]:[40,60]),onIncline:c,onDecline:u,onChange:d,onFallback:m,children:f}){const p=Math.pow(10,0),[h,y]=t.useState((()=>({fps:0,index:0,factor:i,flipped:0,refreshrate:0,fallback:!1,frames:[],averages:[],subscriptions:new Map,subscribe:e=>{const t=Symbol();return h.subscriptions.set(t,e.current),()=>{h.subscriptions.delete(t)}}})));let x=0;return a.useFrame((()=>{const{frames:t,averages:a}=h;if(!h.fallback&&a.length<e){t.push(performance.now());const i=t[t.length-1]-t[0];if(i>=r){if(h.fps=Math.round(t.length/i*1e3*p)/p,h.refreshrate=Math.max(h.refreshrate,h.fps),a[h.index++%e]=h.fps,a.length===e){const[t,r]=l(h.refreshrate),i=a.filter((e=>e>=r)),f=a.filter((e=>e<t));i.length>e*n&&(h.factor=Math.min(1,h.factor+o),h.flipped++,c&&c(h),h.subscriptions.forEach((e=>e.onIncline&&e.onIncline(h)))),f.length>e*n&&(h.factor=Math.max(0,h.factor-o),h.flipped++,u&&u(h),h.subscriptions.forEach((e=>e.onDecline&&e.onDecline(h)))),x!==h.factor&&(x=h.factor,d&&d(h),h.subscriptions.forEach((e=>e.onChange&&e.onChange(h)))),h.flipped>s&&!h.fallback&&(h.fallback=!0,m&&m(h),h.subscriptions.forEach((e=>e.onFallback&&e.onFallback(h)))),h.averages=[]}h.frames=[]}}})),k.createElement(bo.Provider,{value:h},f)},exports.PerspectiveCamera=rt,exports.PivotControls=zi,exports.Plane=Zr,exports.Point=qa,exports.PointMaterial=Gr,exports.PointMaterialImpl=Wr,exports.PointerLockControls=dt,exports.Points=Ya,exports.PointsBuffer=Xa,exports.Polyhedron=an,exports.PositionPoint=Ua,exports.PositionalAudio=ye,exports.Preload=function({all:e,scene:t,camera:r}){const o=a.useThree((({gl:e})=>e)),i=a.useThree((({camera:e})=>e)),s=a.useThree((({scene:e})=>e));return k.useLayoutEffect((()=>{const a=[];e&&(t||s).traverse((e=>{!1===e.visible&&(a.push(e),e.visible=!0)})),o.compile(t||s,r||i);const l=new n.WebGLCubeRenderTarget(128);new n.CubeCamera(.01,1e5,l).update(o,t||s),l.dispose(),a.forEach((e=>e.visible=!1))}),[]),null},exports.PresentationControls=function({enabled:e=!0,snap:t,global:r,domElement:o,cursor:i=!0,children:s,speed:u=1,rotation:d=[0,0,0],zoom:m=1,polar:f=[0,Math.PI/2],azimuth:p=[-1/0,1/0],config:h={mass:1,tension:170,friction:26}}){const y=a.useThree((e=>e.events)),x=a.useThree((e=>e.gl)),v=o||y.connected||x.domElement,{size:g}=a.useThree(),z=k.useMemo((()=>[d[0]+f[0],d[0]+f[1]]),[d[0],f[0],f[1]]),w=k.useMemo((()=>[d[1]+p[0],d[1]+p[1]]),[d[1],p[0],p[1]]),b=k.useMemo((()=>[n.MathUtils.clamp(d[0],...z),n.MathUtils.clamp(d[1],...w),d[2]]),[d[0],d[1],d[2],z,w]),[E,M]=l.useSpring((()=>({scale:1,rotation:b,config:h})));k.useEffect((()=>{M.start({scale:1,rotation:b,config:h})}),[b]),k.useEffect((()=>{if(r&&i&&e)return v.style.cursor=\"grab\",x.domElement.style.cursor=\"\",()=>{v.style.cursor=\"default\",x.domElement.style.cursor=\"default\"}}),[r,i,v,e]);const S=c.useGesture({onHover:({last:t})=>{i&&!r&&e&&(v.style.cursor=t?\"auto\":\"grab\")},onDrag:({down:r,delta:[a,o],memo:[s,l]=E.rotation.animation.to||b})=>{if(!e)return[o,a];i&&(v.style.cursor=r?\"grabbing\":\"grab\"),a=n.MathUtils.clamp(l+a/g.width*Math.PI*u,...w),o=n.MathUtils.clamp(s+o/g.height*Math.PI*u,...z);const c=t&&!r&&\"boolean\"!=typeof t?t:h;return M.start({scale:r&&o>z[1]/2?m:1,rotation:t&&!r?b:[o,a,0],config:e=>\"scale\"===e?{...c,friction:3*c.friction}:c}),[o,a]}},{target:r?v:void 0});return k.createElement(l.a.group,R.default({},null==S?void 0:S(),E),s)},exports.QuadraticBezierLine=fe,exports.RandomizedLight=Un,exports.Reflector=Zn,exports.RenderTexture=Eo,exports.Resize=xn,exports.Ring=nn,exports.RoundedBox=pn,exports.Sampler=function({children:e,weight:t,transform:r,instances:n,mesh:a,count:o=16,...i}){const s=k.useRef(null),l=k.useRef(null),c=k.useRef(null);return k.useLayoutEffect((()=>{var e,t;l.current=null!==(e=null==n?void 0:n.current)&&void 0!==e?e:s.current.children.find((e=>e.hasOwnProperty(\"instanceMatrix\"))),c.current=null!==(t=null==a?void 0:a.current)&&void 0!==t?t:s.current.children.find((e=>\"Mesh\"===e.type))}),[e,null==a?void 0:a.current,null==n?void 0:n.current]),Ue(c,o,r,t,l),k.createElement(\"group\",R.default({ref:s},i),e)},exports.ScreenQuad=yn,exports.ScreenSpace=ue,exports.Scroll=ie,exports.ScrollControls=function({eps:e=1e-5,enabled:t=!0,infinite:r,horizontal:n,pages:o=1,distance:i=1,damping:l=.25,maxSpeed:c=1/0,style:u={},children:d}){const{get:m,setEvents:f,gl:p,size:h,invalidate:y,events:x}=a.useThree(),[v]=k.useState((()=>document.createElement(\"div\"))),[g]=k.useState((()=>document.createElement(\"div\"))),[z]=k.useState((()=>document.createElement(\"div\"))),w=p.domElement.parentNode,b=k.useRef(0),E=k.useMemo((()=>{const t={el:v,eps:e,fill:g,fixed:z,horizontal:n,damping:l,offset:0,delta:0,scroll:b,pages:o,range(e,t,r=0){const n=e-r,a=n+t+2*r;return this.offset<n?0:this.offset>a?1:(this.offset-n)/(a-n)},curve(e,t,r=0){return Math.sin(this.range(e,t,r)*Math.PI)},visible(e,t,r=0){const n=e-r,a=n+t+2*r;return this.offset>=n&&this.offset<=a}};return t}),[e,l,n,o]);k.useEffect((()=>{v.style.position=\"absolute\",v.style.width=\"100%\",v.style.height=\"100%\",v.style[n?\"overflowX\":\"overflowY\"]=\"auto\",v.style[n?\"overflowY\":\"overflowX\"]=\"hidden\",v.style.top=\"0px\",v.style.left=\"0px\";for(const e in u)v.style[e]=u[e];z.style.position=\"sticky\",z.style.top=\"0px\",z.style.left=\"0px\",z.style.width=\"100%\",z.style.height=\"100%\",z.style.overflow=\"hidden\",v.appendChild(z),g.style.height=n?\"100%\":o*i*100+\"%\",g.style.width=n?o*i*100+\"%\":\"100%\",g.style.pointerEvents=\"none\",v.appendChild(g),w.appendChild(v),v[n?\"scrollLeft\":\"scrollTop\"]=1;const e=x.connected||p.domElement;requestAnimationFrame((()=>null==x.connect?void 0:x.connect(v)));const t=m().events.compute;return f({compute(e,t){const{left:r,top:n}=w.getBoundingClientRect(),a=e.clientX-r,o=e.clientY-n;t.pointer.set(a/t.size.width*2-1,-o/t.size.height*2+1),t.raycaster.setFromCamera(t.pointer,t.camera)}}),()=>{w.removeChild(v),f({compute:t}),null==x.connect||x.connect(e)}}),[o,i,n,v,g,z,w]),k.useEffect((()=>{if(x.connected===v){const e=h[n?\"width\":\"height\"],a=v[n?\"scrollWidth\":\"scrollHeight\"],o=a-e;let i=0,s=!0,l=!0;const c=()=>{if(t&&!l&&(y(),i=v[n?\"scrollLeft\":\"scrollTop\"],b.current=i/o,r)){if(!s)if(i>=o){const e=1-E.offset;v[n?\"scrollLeft\":\"scrollTop\"]=1,b.current=E.offset=-e,s=!0}else if(i<=0){const e=1+E.offset;v[n?\"scrollLeft\":\"scrollTop\"]=a,b.current=E.offset=e,s=!0}s&&setTimeout((()=>s=!1),40)}};v.addEventListener(\"scroll\",c,{passive:!0}),requestAnimationFrame((()=>l=!1));const u=e=>v.scrollLeft+=e.deltaY/2;return n&&v.addEventListener(\"wheel\",u,{passive:!0}),()=>{v.removeEventListener(\"scroll\",c),n&&v.removeEventListener(\"wheel\",u)}}}),[v,x,h,r,E,y,n,t]);let M=0;return a.useFrame(((t,r)=>{M=E.offset,s.easing.damp(E,\"offset\",b.current,l,r,c,void 0,e),s.easing.damp(E,\"delta\",Math.abs(M-E.offset),l,r,c,void 0,e),E.delta>e&&y()})),k.createElement(re.Provider,{value:E},d)},exports.Segment=yo,exports.SegmentObject=po,exports.Segments=fo,exports.Select=function({box:e,multiple:t,children:r,onChange:n,onChangePointerUp:o,border:i=\"1px solid #55aaff\",backgroundColor:s=\"rgba(75, 160, 255, 0.1)\",filter:l=(e=>e),...c}){const[u,m]=k.useState(!1),{setEvents:f,camera:p,raycaster:h,gl:y,controls:x,size:v,get:g}=a.useThree(),[z,w]=k.useState(!1),[b,E]=k.useReducer(((e,{object:t,shift:r})=>void 0===t?[]:Array.isArray(t)?t:r?e.includes(t)?e.filter((e=>e!==t)):[t,...e]:e[0]===t?[]:[t]),[]);k.useEffect((()=>{u?null==n||n(b):null==o||o(b)}),[b,u]);const M=k.useCallback((e=>{e.stopPropagation(),E({object:l([e.object])[0],shift:t&&e.shiftKey})}),[]),S=k.useCallback((e=>!z&&E({})),[z]),C=k.useRef(null);return k.useEffect((()=>{if(!e||!t)return;const r=new d.SelectionBox(p,C.current),n=document.createElement(\"div\");n.style.pointerEvents=\"none\",n.style.border=i,n.style.backgroundColor=s,n.style.position=\"fixed\";const a=new D.Vector2,o=new D.Vector2,c=new D.Vector2,u=g().events.enabled,h=null==x?void 0:x.enabled;let z=!1;function w(e,t){const{offsetX:r,offsetY:n}=e,{width:a,height:o}=v;t.set(r/a*2-1,-n/o*2+1)}function b(e){e.shiftKey&&(!function(e){var t;x&&(x.enabled=!1),f({enabled:!1}),m(z=!0),null==(t=y.domElement.parentElement)||t.appendChild(n),n.style.left=`${e.clientX}px`,n.style.top=`${e.clientY}px`,n.style.width=\"0px\",n.style.height=\"0px\",a.x=e.clientX,a.y=e.clientY}(e),w(e,r.startPoint))}let M=[];function S(e){if(z){!function(e){c.x=Math.max(a.x,e.clientX),c.y=Math.max(a.y,e.clientY),o.x=Math.min(a.x,e.clientX),o.y=Math.min(a.y,e.clientY),n.style.left=`${o.x}px`,n.style.top=`${o.y}px`,n.style.width=c.x-o.x+\"px\",n.style.height=c.y-o.y+\"px\"}(e),w(e,r.endPoint);const t=r.select().sort((e=>e.uuid)).filter((e=>e.isMesh));_.default(t,M)||(M=t,E({object:l(t)}))}}function P(e){var t;z&&z&&(x&&(x.enabled=h),f({enabled:u}),m(z=!1),null==(t=n.parentElement)||t.removeChild(n))}return document.addEventListener(\"pointerdown\",b,{passive:!0}),document.addEventListener(\"pointermove\",S,{passive:!0,capture:!0}),document.addEventListener(\"pointerup\",P,{passive:!0}),()=>{document.removeEventListener(\"pointerdown\",b),document.removeEventListener(\"pointermove\",S),document.removeEventListener(\"pointerup\",P)}}),[v.width,v.height,h,p,x,y]),k.createElement(\"group\",R.default({ref:C,onClick:M,onPointerOver:()=>w(!0),onPointerOut:()=>w(!1),onPointerMissed:S},c),k.createElement(le.Provider,{value:b},r))},exports.Shadow=Hn,exports.Shape=mn,exports.Sky=ca,exports.SoftShadows=function({focus:e=0,samples:t=10,size:r=25}){const n=a.useThree((e=>e.gl)),o=a.useThree((e=>e.scene)),i=a.useThree((e=>e.camera));return k.useEffect((()=>{const a=D.ShaderChunk.shadowmap_pars_fragment;return D.ShaderChunk.shadowmap_pars_fragment=D.ShaderChunk.shadowmap_pars_fragment.replace(\"#ifdef USE_SHADOWMAP\",\"#ifdef USE_SHADOWMAP\\n\"+(({focus:e=0,size:t=25,samples:r=10}={})=>`\\n#define PENUMBRA_FILTER_SIZE float(${t})\\n#define RGB_NOISE_FUNCTION(uv) (randRGB(uv))\\nvec3 randRGB(vec2 uv) {\\n  return vec3(\\n    fract(sin(dot(uv, vec2(12.75613, 38.12123))) * 13234.76575),\\n    fract(sin(dot(uv, vec2(19.45531, 58.46547))) * 43678.23431),\\n    fract(sin(dot(uv, vec2(23.67817, 78.23121))) * 93567.23423)\\n  );\\n}\\n\\nvec3 lowPassRandRGB(vec2 uv) {\\n  // 3x3 convolution (average)\\n  // can be implemented as separable with an extra buffer for a total of 6 samples instead of 9\\n  vec3 result = vec3(0);\\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0, -1.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0,  0.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0, +1.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0, -1.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0,  0.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0, +1.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0, -1.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0,  0.0));\\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0, +1.0));\\n  result *= 0.111111111; // 1.0 / 9.0\\n  return result;\\n}\\nvec3 highPassRandRGB(vec2 uv) {\\n  // by subtracting the low-pass signal from the original signal, we're being left with the high-pass signal\\n  // hp(x) = x - lp(x)\\n  return RGB_NOISE_FUNCTION(uv) - lowPassRandRGB(uv) + 0.5;\\n}\\n\\n\\nvec2 vogelDiskSample(int sampleIndex, int sampleCount, float angle) {\\n  const float goldenAngle = 2.399963f; // radians\\n  float r = sqrt(float(sampleIndex) + 0.5f) / sqrt(float(sampleCount));\\n  float theta = float(sampleIndex) * goldenAngle + angle;\\n  float sine = sin(theta);\\n  float cosine = cos(theta);\\n  return vec2(cosine, sine) * r;\\n}\\nfloat penumbraSize( const in float zReceiver, const in float zBlocker ) { // Parallel plane estimation\\n  return (zReceiver - zBlocker) / zBlocker;\\n}\\nfloat findBlocker(sampler2D shadowMap, vec2 uv, float compare, float angle) {\\n  float texelSize = 1.0 / float(textureSize(shadowMap, 0).x);\\n  float blockerDepthSum = float(${e});\\n  float blockers = 0.0;\\n\\n  int j = 0;\\n  vec2 offset = vec2(0.);\\n  float depth = 0.;\\n\\n  #pragma unroll_loop_start\\n  for(int i = 0; i < ${r}; i ++) {\\n    offset = (vogelDiskSample(j, ${r}, angle) * texelSize) * 2.0 * PENUMBRA_FILTER_SIZE;\\n    depth = unpackRGBAToDepth( texture2D( shadowMap, uv + offset));\\n    if (depth < compare) {\\n      blockerDepthSum += depth;\\n      blockers++;\\n    }\\n    j++;\\n  }\\n  #pragma unroll_loop_end\\n\\n  if (blockers > 0.0) {\\n    return blockerDepthSum / blockers;\\n  }\\n  return -1.0;\\n}\\n\\n        \\nfloat vogelFilter(sampler2D shadowMap, vec2 uv, float zReceiver, float filterRadius, float angle) {\\n  float texelSize = 1.0 / float(textureSize(shadowMap, 0).x);\\n  float shadow = 0.0f;\\n  int j = 0;\\n  vec2 vogelSample = vec2(0.0);\\n  vec2 offset = vec2(0.0);\\n  #pragma unroll_loop_start\\n  for (int i = 0; i < ${r}; i++) {\\n    vogelSample = vogelDiskSample(j, ${r}, angle) * texelSize;\\n    offset = vogelSample * (1.0 + filterRadius * float(${t}));\\n    shadow += step( zReceiver, unpackRGBAToDepth( texture2D( shadowMap, uv + offset ) ) );\\n    j++;\\n  }\\n  #pragma unroll_loop_end\\n  return shadow * 1.0 / ${r}.0;\\n}\\n\\nfloat PCSS (sampler2D shadowMap, vec4 coords) {\\n  vec2 uv = coords.xy;\\n  float zReceiver = coords.z; // Assumed to be eye-space z in this code\\n  float angle = highPassRandRGB(gl_FragCoord.xy).r * PI2;\\n  float avgBlockerDepth = findBlocker(shadowMap, uv, zReceiver, angle);\\n  if (avgBlockerDepth == -1.0) {\\n    return 1.0;\\n  }\\n  float penumbraRatio = penumbraSize(zReceiver, avgBlockerDepth);\\n  return vogelFilter(shadowMap, uv, zReceiver, 1.25 * penumbraRatio, angle);\\n}`)({size:r,samples:t,focus:e})).replace(\"#if defined( SHADOWMAP_TYPE_PCF )\",\"\\nreturn PCSS(shadowMap, shadowCoord);\\n#if defined( SHADOWMAP_TYPE_PCF )\"),Hr(n,o,i),()=>{D.ShaderChunk.shadowmap_pars_fragment=a,Hr(n,o,i)}}),[e,r,t]),null},exports.Sparkles=Ta,exports.Sphere=Qr,exports.SpotLight=ia,exports.SpotLightShadow=function(e){return e.shader?k.createElement(aa,e):k.createElement(oa,e)},exports.SpriteAnimator=({startFrame:e,endFrame:t,fps:r,frameName:n,textureDataURL:o,textureImageURL:i,loop:s,numberOfFrames:l,autoPlay:c,animationNames:u,onStart:d,onEnd:m,onLoopEnd:f,onFrame:p,play:h,pause:y,flipX:x,alphaTest:v,children:g,asSprite:z,...w},b)=>{a.useThree((e=>e.viewport));const E=k.useRef(null),[M,S]=k.useState(!1),C=k.useRef(!1),P=k.useRef(),T=k.useRef(),R=k.useRef(window.performance.now()),F=k.useRef(),L=k.useRef(e||0),A=k.useRef(n||\"\"),_=1e3/(r||30),[O,N]=k.useState(new D.Texture),B=k.useRef(0),[I,U]=k.useState([1,1,1]),V=x?-1:1,[j,W]=k.useState(null==z||z);const G=(e,t)=>{const r=t/e;return T.current.scale.set(1,r,1),[1,r,1]};k.useEffect((()=>{if(o&&i)!function(e,t,r){const n=new D.TextureLoader,a=fetch(e).then((e=>e.json())),o=new Promise((e=>{n.load(t,e)}));Promise.all([a,o]).then((e=>{r(e[0],e[1])}))}(o,i,H);else if(i){const e=new D.TextureLoader;new Promise((t=>{e.load(i,t)})).then((e=>{H(null,e)}))}}),[]),k.useEffect((()=>{W(null==z||z)}),[z]),k.useLayoutEffect((()=>{q()}),[O,x]),k.useEffect((()=>{}),[y]),k.useEffect((()=>{A.current!==n&&n&&(L.current=0,A.current=n,C.current=!1)}),[n]);const H=(e,t)=>{if(null===e){if(t&&l){const e=t.image.width,r=t.image.height,n=e/l,a=r;if(F.current=t,B.current=l,E.current={frames:[],meta:{version:\"1.0\",size:{w:e,h:r},scale:\"1\"}},parseInt(n.toString(),10)===n)for(let e=0;e<l;e++)E.current.frames.push({frame:{x:e*n,y:0,w:n,h:a},rotated:!1,trimmed:!1,spriteSourceSize:{x:0,y:0,w:n,h:a},sourceSize:{w:n,h:r}})}}else if(t){E.current=e,E.current.frames=Array.isArray(e.frames)?e.frames:$(),B.current=Array.isArray(e.frames)?e.frames.length:Object.keys(e.frames).length,F.current=t;const{w:r,h:n}=X(e.frames).sourceSize,a=G(r,n);U(a),P.current&&(P.current.map=t)}t.premultiplyAlpha=!1,N(t)},$=()=>{const e={},t=E.current,r=u;if(r)for(let n=0;n<r.length;n++){e[r[n]]=[];for(let a in t.frames){const o=t.frames[a],i=o.frame,s=i.x,l=i.y,c=i.w,u=i.h,d=o.sourceSize.w,m=o.sourceSize.h;\"string\"==typeof a&&-1!==a.toLowerCase().indexOf(r[n].toLowerCase())&&e[r[n]].push({x:s,y:l,w:c,h:u,frame:i,sourceSize:{w:d,h:m}})}}return e},q=()=>{if(!E.current)return;const{meta:{size:e},frames:t}=E.current,{w:r,h:a}=Array.isArray(t)?t[0].sourceSize:n&&t[n]?t[n][0].sourceSize:{w:0,h:0};P.current.map.wrapS=P.current.map.wrapT=D.RepeatWrapping,P.current.map.center.set(0,0),P.current.map.repeat.set(1*V/(e.w/r),1/(e.h/a));const o=1/((e.h-1)/a);P.current.map.offset.x=0,P.current.map.offset.y=1-o,S(!0),d&&d({currentFrameName:n,currentFrame:L.current})};a.useFrame(((r,a)=>{var o,i;null!=(o=E.current)&&o.frames&&null!=(i=P.current)&&i.map&&(y||C.current||!c&&!h||((()=>{const r=window.performance.now(),a=r-R.current,{meta:{size:o},frames:i}=E.current,{w:l,h:c}=X(i).sourceSize,u=Array.isArray(i)?i:n?i[n]:[];let d=0,p=0;const h=t||u.length-1;if(L.current>h&&(L.current=s&&null!=e?e:0,s?null==f||f({currentFrameName:n,currentFrame:L.current}):(null==m||m({currentFrameName:n,currentFrame:L.current}),C.current=!0),!s))return;if(a<=_)return;R.current=r-a%_,G(l,c);const y=(o.w-1)/l,x=(o.h-1)/c,{frame:{x:v,y:g},sourceSize:{w:z,h:w}}=u[L.current],b=1/y,M=1/x;d=V>0?b*(v/z):b*(v/z)-P.current.map.repeat.x,p=Math.abs(1-M)-M*(g/w),P.current.map.offset.x=d,P.current.map.offset.y=p,L.current+=1})(),p&&p({currentFrameName:A.current,currentFrame:L.current})))}));const X=e=>{if(Array.isArray(e))return e[0];if(\"object\"==typeof e&&null!==e){return e[Object.keys(e)[0]][0]}return{w:0,h:0}};return k.createElement(\"group\",w,k.createElement(k.Suspense,{fallback:null},j&&k.createElement(\"sprite\",{ref:T,scale:I},k.createElement(\"spriteMaterial\",{toneMapped:!1,ref:P,map:O,transparent:!0,alphaTest:null!=v?v:0})),!j&&k.createElement(\"mesh\",{ref:T,scale:I},k.createElement(\"planeGeometry\",{args:[1,1]}),k.createElement(\"meshBasicMaterial\",{toneMapped:!1,side:D.DoubleSide,ref:P,map:O,transparent:!0,alphaTest:null!=v?v:0}))),g)},exports.Stage=function({children:e,center:t,adjustCamera:r=!0,intensity:n=.5,shadows:a=\"contact\",environment:o=\"city\",preset:i=\"rembrandt\",...s}){var l,c,u,d,m,f,p,h;const y=\"string\"==typeof i?jn[i]:i,[{radius:x,height:v},g]=k.useState({radius:0,width:0,height:0,depth:0}),z=null!==(l=null==a?void 0:a.bias)&&void 0!==l?l:-1e-4,w=null!==(c=null==a?void 0:a.normalBias)&&void 0!==c?c:0,b=null!==(u=null==a?void 0:a.size)&&void 0!==u?u:1024,E=null!==(d=null==a?void 0:a.offset)&&void 0!==d?d:0,M=\"contact\"===a||\"contact\"===(null==a?void 0:a.type),S=\"accumulative\"===a||\"accumulative\"===(null==a?void 0:a.type),C={...\"object\"==typeof a?a:{}},P=o?\"string\"==typeof o?{preset:o}:o:null,T=k.useCallback((e=>{const{width:r,height:n,depth:a,boundingSphere:o}=e;g({radius:o.radius,width:r,height:n,depth:a}),null!=t&&t.onCentered&&t.onCentered(e)}),[]);return k.createElement(k.Fragment,null,k.createElement(\"ambientLight\",{intensity:n/3}),k.createElement(\"spotLight\",{penumbra:1,position:[y.main[0]*x,y.main[1]*x,y.main[2]*x],intensity:2*n,castShadow:!!a,\"shadow-bias\":z,\"shadow-normalBias\":w,\"shadow-mapSize\":b}),k.createElement(\"pointLight\",{position:[y.fill[0]*x,y.fill[1]*x,y.fill[2]*x],intensity:n}),k.createElement(wn,R.default({fit:!!r,clip:!!r,margin:Number(r),observe:!0},s),k.createElement(Wn,{radius:x,adjustCamera:r}),k.createElement(Pr,R.default({},t,{position:[0,E/2,0],onCentered:T}),e)),k.createElement(\"group\",{position:[0,-v/2-E/2,0]},M&&k.createElement(On,R.default({scale:4*x,far:x,blur:2},C)),S&&k.createElement(In,R.default({temporal:!0,frames:100,alphaTest:.9,toneMapped:!0,scale:4*x},C),k.createElement(Un,{amount:null!==(m=C.amount)&&void 0!==m?m:8,radius:null!==(f=C.radius)&&void 0!==f?f:x,ambient:null!==(p=C.ambient)&&void 0!==p?p:.5,intensity:null!==(h=C.intensity)&&void 0!==h?h:1,position:[y.main[0]*x,y.main[1]*x,y.main[2]*x],size:4*x,bias:-z,mapSize:b}))),o&&k.createElement(_n,P))},exports.Stars=ma,exports.Stats=function({showPanel:e=0,className:t,parent:r}){const n=function(e,t=[],r){const[n,a]=k.useState();return k.useLayoutEffect((()=>{const t=e();return a(t),pr(r,t),()=>pr(r,null)}),t),n}((()=>new I.default),[]);return k.useEffect((()=>{if(n){const o=r&&r.current||document.body;n.showPanel(e),null==o||o.appendChild(n.dom),t&&n.dom.classList.add(...t.split(\" \").filter((e=>e)));const i=a.addEffect((()=>n.begin())),s=a.addAfterEffect((()=>n.end()));return()=>{null==o||o.removeChild(n.dom),i(),s()}}}),[r,n,t,e]),null},exports.StatsGl=function({className:e,parent:t,...r}){const n=a.useThree((e=>e.gl)),o=k.useMemo((()=>{const e=new U.default({...r});return e.init(n.domElement),e}),[n]);return k.useEffect((()=>{if(o){const r=t&&t.current||document.body;null==r||r.appendChild(o.container),e&&o.container.classList.add(...e.split(\" \").filter((e=>e)));const n=a.addEffect((()=>o.begin())),i=a.addAfterEffect((()=>o.end()));return()=>{null==r||r.removeChild(o.container),n(),i()}}}),[t,o,e]),null},exports.Svg=Xe,exports.Tetrahedron=rn,exports.Text=xe,exports.Text3D=be,exports.Torus=en,exports.TorusKnot=tn,exports.TrackballControls=lt,exports.Trail=Ie,exports.TransformControls=ut,exports.Tube=Jr,exports.View=({track:e,index:t=1,frames:r=1/0,children:n})=>{var o,i;const s=k.useRef(null),{size:l,scene:c}=a.useThree(),[u]=k.useState((()=>new D.Scene)),d=k.useCallback(((t,r)=>{if(s.current&&e.current&&t.target===e.current){const{width:e,height:n,left:a,top:o}=s.current,i=t.clientX-a,l=t.clientY-o;r.pointer.set(i/e*2-1,-l/n*2+1),r.raycaster.setFromCamera(r.pointer,r.camera)}}),[s,e]),[m,f]=k.useReducer((()=>!0),!1);return k.useEffect((()=>{var t;s.current=null==(t=e.current)?void 0:t.getBoundingClientRect(),f()}),[e]),k.createElement(k.Fragment,null,m&&a.createPortal(k.createElement(Do,{canvasSize:l,frames:r,scene:c,track:e,rect:s,index:t},n,k.createElement(\"group\",{onPointerOver:()=>null})),u,{events:{compute:d,priority:t},size:{width:null==(o=s.current)?void 0:o.width,height:null==(i=s.current)?void 0:i.height}}))},exports.Wireframe=function({geometry:e,...t}){return e?k.createElement(Aa,R.default({geometry:e},t)):k.createElement(_a,t)},exports.accumulativeContext=Nn,exports.calcPosFromAngles=la,exports.calculateScaleFactor=ri,exports.isWebGL2Available=()=>{try{var e=document.createElement(\"canvas\");return!(!window.WebGL2RenderingContext||!e.getContext(\"webgl2\"))}catch(e){return!1}},exports.meshBounds=function(e,t){const r=this.geometry,n=this.material,a=this.matrixWorld;void 0!==n&&(null===r.boundingSphere&&r.computeBoundingSphere(),zo.copy(r.boundingSphere),zo.applyMatrix4(a),!1!==e.ray.intersectsSphere(zo)&&(vo.copy(a).invert(),go.copy(e.ray).applyMatrix4(vo),null!==r.boundingBox&&null===go.intersectBox(r.boundingBox,wo)||t.push({distance:wo.distanceTo(e.ray.origin),point:wo.clone(),object:this})))},exports.shaderMaterial=Se,exports.useAnimations=function(e,t){const r=k.useRef(),[o]=k.useState((()=>t?t instanceof n.Object3D?{current:t}:t:r)),[i]=k.useState((()=>new n.AnimationMixer(void 0)));k.useLayoutEffect((()=>{t&&(o.current=t instanceof n.Object3D?t:t.current),i._root=o.current}));const s=k.useRef({}),l=k.useMemo((()=>{const t={};return e.forEach((e=>Object.defineProperty(t,e.name,{enumerable:!0,get(){if(o.current)return s.current[e.name]||(s.current[e.name]=i.clipAction(e,o.current))},configurable:!0}))),{ref:o,clips:e,actions:t,names:e.map((e=>e.name)),mixer:i}}),[e]);return a.useFrame(((e,t)=>i.update(t))),k.useEffect((()=>{const e=o.current;return()=>{s.current={},i.stopAllAction(),Object.values(l.actions).forEach((t=>{e&&i.uncacheAction(t,e)}))}}),[e]),l},exports.useAspect=function(e,t,r=1){const n=a.useThree((e=>e.viewport)),o=t*(n.aspect>e/t?n.width/e:n.height/t);return[e*(n.aspect>e/t?n.width/e:n.height/t)*r,o*r,1]},exports.useBVH=function(e,t){t={strategy:E.SAH,verbose:!1,setBoundingBox:!0,maxDepth:40,maxLeafTris:10,...t},k.useEffect((()=>{if(e.current){e.current.raycast=E.acceleratedRaycast;const r=e.current.geometry;return r.computeBoundsTree=E.computeBoundsTree,r.disposeBoundsTree=E.disposeBoundsTree,r.computeBoundsTree(t),()=>{r.boundsTree&&r.disposeBoundsTree()}}}),[e,JSON.stringify(t)])},exports.useBounds=bn,exports.useBoxProjectedEnv=function(e=new D.Vector3,t=new D.Vector3){const[r]=k.useState((()=>({position:new D.Vector3,size:new D.Vector3})));a.applyProps(r,{position:e,size:t});const n=k.useRef(null),o=k.useMemo((()=>({ref:n,onBeforeCompile:e=>function(e,t,r){e.defines.BOX_PROJECTED_ENV_MAP=!0,e.uniforms.envMapPosition={value:t},e.uniforms.envMapSize={value:r},e.vertexShader=`\\n  varying vec3 vWorldPosition;\\n  ${e.vertexShader.replace(\"#include <worldpos_vertex>\",gr)}`,e.fragmentShader=`\\n    ${zr}\\n    ${e.fragmentShader.replace(\"#include <envmap_physical_pars_fragment>\",D.ShaderChunk.envmap_physical_pars_fragment).replace(\"vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\",`vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n         ${wr}\\n         `).replace(\"reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\",`reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n         ${br}\\n        `)}`}(e,r.position,r.size),customProgramCacheKey:()=>JSON.stringify(r.position.toArray())+JSON.stringify(r.size.toArray())})),[...r.position.toArray(),...r.size.toArray()]);return k.useLayoutEffect((()=>{n.current.needsUpdate=!0}),[r]),o},exports.useCamera=function(e,t){const r=a.useThree((e=>e.pointer)),[o]=k.useState((()=>{const o=new n.Raycaster;return t&&a.applyProps(o,t,{}),function(t,a){o.setFromCamera(r,e instanceof n.Camera?e:e.current);const i=this.constructor.prototype.raycast.bind(this);i&&i(o,a)}}));return o},exports.useContextBridge=function(...e){const t=k.useRef([]);return t.current=e.map((e=>k.useContext(e))),k.useMemo((()=>({children:r})=>e.reduceRight(((e,r,n)=>k.createElement(r.Provider,{value:t.current[n],children:e})),r)),[])},exports.useCubeCamera=nt,exports.useCubeTexture=ur,exports.useCursor=function(e,t=\"pointer\",r=\"auto\",n=document.body){k.useEffect((()=>{if(e)return n.style.cursor=t,()=>{n.style.cursor=r}}),[e])},exports.useDepthBuffer=function({size:e=256,frames:t=1/0}={}){const r=a.useThree((e=>e.viewport.dpr)),{width:o,height:i}=a.useThree((e=>e.size)),s=e||o*r,l=e||i*r,c=k.useMemo((()=>{const e=new n.DepthTexture(s,l);return e.format=n.DepthFormat,e.type=n.UnsignedShortType,{depthTexture:e}}),[s,l]);let u=0;const d=et(s,l,c);return a.useFrame((e=>{(t===1/0||u<t)&&(e.gl.setRenderTarget(d),e.gl.render(e.scene,e.camera),e.gl.setRenderTarget(null),u++)})),d.depthTexture},exports.useDetectGPU=e=>p.suspend((()=>b.getGPUTier(e)),[\"useDetectGPU\"]),exports.useEnvironment=Tn,exports.useFBO=et,exports.useFBX=dr,exports.useFaceControls=Tt,exports.useFaceLandmarker=Et,exports.useFont=ze,exports.useGLTF=Ze,exports.useGizmoContext=It,exports.useHelper=hr,exports.useIntersect=vr,exports.useKTX2=fr,exports.useKeyboardControls=function(e){const[t,r,n]=k.useContext(se);return e?n(e):[t,r]},exports.useMask=function(e,t=!1){return{stencilWrite:!0,stencilRef:e,stencilFunc:t?D.NotEqualStencilFunc:D.EqualStencilFunc,stencilFail:D.KeepStencilOp,stencilZFail:D.KeepStencilOp,stencilZPass:D.KeepStencilOp}},exports.useMatcapTexture=function(e=0,t=1024,r){const n=p.suspend((()=>fetch(\"https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json\").then((e=>e.json()))),[\"matcapList\"]),a=n[0],o=k.useMemo((()=>Object.keys(n).length),[]),i=`${k.useMemo((()=>\"string\"==typeof e?e:\"number\"==typeof e?n[e]:null),[e])||a}${function(e){switch(e){case 64:return\"-64px\";case 128:return\"-128px\";case 256:return\"-256px\";case 512:return\"-512px\";default:return\"\"}}(t)}.png`,s=`https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d/${t}/${i}`;return[Pe(s,r),s,o]},exports.useMotion=Lt,exports.useNormalTexture=function(e=0,t={},r){const{repeat:a=[1,1],anisotropy:o=1,offset:i=[0,0]}=t,s=p.suspend((()=>fetch(\"https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/normals/normals.json\").then((e=>e.json()))),[\"normalsList\"]),l=k.useMemo((()=>Object.keys(s).length),[]),c=s[0],u=`https://rawcdn.githack.com/pmndrs/drei-assets/7a3104997e1576f83472829815b00880d88b32fb/normals/${s[e]||c}`,d=Pe(u,r);return k.useLayoutEffect((()=>{d&&(d.wrapS=d.wrapT=n.RepeatWrapping,d.repeat=new n.Vector2(a[0],a[1]),d.offset=new n.Vector2(i[0],i[1]),d.anisotropy=o)}),[d,o,a,i]),[d,u,l]},exports.usePerformanceMonitor=function({onIncline:e,onDecline:r,onChange:n,onFallback:a}){const o=t.useContext(bo),i=t.useRef({onIncline:e,onDecline:r,onChange:n,onFallback:a});t.useLayoutEffect((()=>{i.current.onIncline=e,i.current.onDecline=r,i.current.onChange=n,i.current.onFallback=a}),[e,r,n,a]),t.useLayoutEffect((()=>o.subscribe(i)),[o])},exports.useProgress=J,exports.useScroll=ne,exports.useSelect=function(){return k.useContext(le)},exports.useSurfaceSampler=Ue,exports.useTexture=Pe,exports.useTrail=Be,exports.useTrailTexture=function(e={}){const{size:r,maxAge:n,radius:o,intensity:i,interpolate:s,smoothing:l,minForce:c,blend:u,ease:d}=e,m=t.useMemo((()=>new Cr(e)),[r,n,o,i,s,l,c,u,d]);a.useFrame(((e,t)=>{m.update(t)}));const f=t.useCallback((e=>m.addTouch(e.uv)),[m]);return[m.texture,f]},exports.useVideoTexture=pt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2RyZWkvaW5kZXguY2pzLmpzIiwibWFwcGluZ3MiOiJBQUFhLDhDQUEyQyxDQUFDLFNBQVMsRUFBQyxDQUFDLE1BQU0sbUJBQU8sQ0FBQyw4RkFBZ0MsSUFBSSxtQkFBTyxDQUFDLHdHQUFPLElBQUksbUJBQU8sQ0FBQyxxRkFBa0IsSUFBSSxtQkFBTyxDQUFDLHlEQUFPLElBQUksbUJBQU8sQ0FBQyxpR0FBb0IsSUFBSSxtQkFBTyxDQUFDLDBEQUFTLElBQUksbUJBQU8sQ0FBQyw2RUFBa0IsSUFBSSxtQkFBTyxDQUFDLDJEQUFPLElBQUksbUJBQU8sQ0FBQyxvR0FBcUIsSUFBSSxtQkFBTyxDQUFDLGlHQUFvQixJQUFJLG1CQUFPLENBQUMsMEVBQW9CLElBQUksbUJBQU8sQ0FBQyxpRUFBYyxJQUFJLG1CQUFPLENBQUMsb0VBQWlCLElBQUksbUJBQU8sQ0FBQywrRkFBbUIsSUFBSSxtQkFBTyxDQUFDLHNFQUFlLElBQUksbUJBQU8sQ0FBQyw4REFBVSxJQUFJLG1CQUFPLENBQUMsOERBQWEsSUFBSSxtQkFBTyxDQUFDLDhEQUFhLElBQUksbUJBQU8sQ0FBQyxxRkFBaUIsSUFBSSxtQkFBTyxDQUFDLCtGQUF5QixJQUFJLG1CQUFPLENBQUMsa0VBQVUsSUFBSSxtQkFBTyxDQUFDLDZEQUFVLElBQUksbUJBQU8sQ0FBQywwRUFBWSxJQUFJLG1CQUFPLENBQUMsK0VBQWdCLElBQUksbUJBQU8sQ0FBQyw4REFBTSxJQUFJLG1CQUFPLENBQUMsd0VBQWdCLElBQUksbUJBQU8sQ0FBQyxnRUFBYyxFQUFFLGNBQWMsK0NBQStDLFdBQVcsY0FBYyw0QkFBNEIsMEJBQTBCLDhDQUE4QyxrQkFBa0IsMkNBQTJDLG1DQUFtQyw2QkFBNkIsYUFBYSxHQUFHLGdDQUFnQyxzR0FBc0csc0RBQXNELGtCQUFrQiwrQ0FBK0MsYUFBYSwrQkFBK0IseUJBQXlCLGlDQUFpQyxxQkFBcUIsa0JBQWtCLFlBQVksT0FBTyw4Q0FB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REFBOEQsRUFBRSw4REFBOEQsRUFBRSwyRUFBMkUsRUFBRSwrREFBK0QsRUFBRSxxRUFBcUUsRUFBRSwyRUFBMkUsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSxtRkFBbUYsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSxrRkFBa0YsRUFBRSxrRkFBa0YsRUFBRSw4RUFBOEUsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw0RUFBNEUsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwwRUFBMEUsRUFBRSw4REFBOEQsRUFBRSxpRkFBaUYsRUFBRSwrREFBK0QsRUFBRSxpRkFBaUYsRUFBRSxtRkFBbUYsRUFBRSwrRUFBK0UsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSxpRkFBaUYsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSx5RUFBeUUsRUFBRSw4REFBOEQsRUFBRSwwRUFBMEUsRUFBRSwyRUFBMkUsRUFBRSx1RUFBdUUsRUFBRSwrREFBK0QsRUFBRSwwRUFBMEUsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwyRUFBMkUsRUFBRSwyRUFBMkUsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSwwRUFBMEUsRUFBRSwrREFBK0QsRUFBRSw4RUFBOEUsRUFBRSwrREFBK0QsRUFBRSx5RUFBeUUsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrRUFBK0UsRUFBRSw4REFBOEQsRUFBRSxnRkFBZ0YsRUFBRSw4REFBOEQsRUFBRSxrRkFBa0YsRUFBRSw2REFBNkQsRUFBRSw2RUFBNkUsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2RUFBNkUsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw0RUFBNEUsRUFBRSw0RUFBNEUsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSw0RUFBNEUsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw0RUFBNEUsRUFBRSwyRUFBMkUsRUFBRSw4REFBOEQsRUFBRSw4RUFBOEUsRUFBRSw4RUFBOEUsRUFBRSw4RUFBOEUsRUFBRSw4REFBOEQsRUFBRSw4RUFBOEUsRUFBRSw2RUFBNkUsRUFBRSx5RUFBeUUsRUFBRSw0RUFBNEUsRUFBRSw2REFBNkQsRUFBRSw4RUFBOEUsRUFBRSw0RUFBNEUsRUFBRSwrRUFBK0UsRUFBRSw2RUFBNkUsRUFBRSw2RUFBNkUsRUFBRSw0RUFBNEUsRUFBRSw2RUFBNkUsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw2RUFBNkUsRUFBRSw2RUFBNkUsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSwrRUFBK0UsRUFBRSw2REFBNkQsRUFBRSwwRUFBMEUsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSx3RUFBd0UsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwwRUFBMEUsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSwwRUFBMEUsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwyREFBMkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw0RUFBNEUsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSwwREFBMEQsRUFBRSwrREFBK0QsRUFBRSwrRUFBK0UsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw4RUFBOEUsRUFBRSwrREFBK0QsRUFBRSw0RUFBNEUsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwyREFBMkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSw0RUFBNEUsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwyRUFBMkUsRUFBRSwrREFBK0QsRUFBRSwwRUFBMEUsRUFBRSwyRUFBMkUsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSxpRkFBaUYsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSxrRkFBa0YsRUFBRSxpRkFBaUYsRUFBRSw0RUFBNEUsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4RUFBOEUsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwyREFBMkQsRUFBRSwwRUFBMEUsRUFBRSwrREFBK0QsRUFBRSxpRkFBaUYsRUFBRSxnRkFBZ0YsRUFBRSxzRUFBc0UsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSxrRkFBa0YsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwwRUFBMEUsRUFBRSw4REFBOEQsRUFBRSx5RUFBeUUsRUFBRSwyRUFBMkUsRUFBRSwyRUFBMkUsRUFBRSwrREFBK0QsRUFBRSwyRUFBMkUsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwwRUFBMEUsRUFBRSxxRUFBcUUsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwyRUFBMkUsRUFBRSw2REFBNkQsRUFBRSw2RUFBNkUsRUFBRSwyRUFBMkUsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2RUFBNkUsRUFBRSw4REFBOEQsRUFBRSwrRUFBK0UsRUFBRSwrREFBK0QsRUFBRSxpRkFBaUYsRUFBRSw4REFBOEQsRUFBRSw0RUFBNEUsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSwyREFBMkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2RUFBNkUsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2RUFBNkUsRUFBRSw2RUFBNkUsRUFBRSw4REFBOEQsRUFBRSwyREFBMkQsRUFBRSw4RUFBOEUsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw0REFBNEQsRUFBRSw2RUFBNkUsRUFBRSwyRUFBMkUsRUFBRSx5RUFBeUUsRUFBRSw4REFBOEQsRUFBRSw2RUFBNkUsRUFBRSw4RUFBOEUsRUFBRSw0RUFBNEUsRUFBRSw2RUFBNkUsRUFBRSw0RUFBNEUsRUFBRSw2RUFBNkUsRUFBRSw4REFBOEQsRUFBRSw2RUFBNkUsRUFBRSwyRUFBMkUsRUFBRSw0RUFBNEUsRUFBRSw4RUFBOEUsRUFBRSw4RUFBOEUsRUFBRSwyRUFBMkUsRUFBRSw2RUFBNkUsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw2RUFBNkUsRUFBRSw4RUFBOEUsRUFBRSwrREFBK0QsRUFBRSw0RUFBNEUsRUFBRSw4REFBOEQsRUFBRSwyRUFBMkUsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSwwRUFBMEUsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwwRUFBMEUsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwwRUFBMEUsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwyREFBMkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2RUFBNkUsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw0RUFBNEUsRUFBRSw4REFBOEQsT0FBTyw4SUFBOEksK0JBQStCLGlCQUFpQiwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSxnRUFBZ0UsRUFBRSxpRUFBaUUsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSxpRUFBaUUsRUFBRSxnRUFBZ0UsRUFBRSxnRUFBZ0UsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwyREFBMkQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSxpRUFBaUUsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSwyREFBMkQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwyREFBMkQsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSxnRUFBZ0UsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSxpRUFBaUUsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwyREFBMkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwyREFBMkQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwwREFBMEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSxnRUFBZ0UsRUFBRSw2REFBNkQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw2REFBNkQsRUFBRSxnRUFBZ0UsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwyREFBMkQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSw4REFBOEQsRUFBRSw2REFBNkQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFBK0QsRUFBRSxnRUFBZ0UsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw4REFBOEQsRUFBRSw0REFBNEQsRUFBRSw2REFBNkQsRUFBRSw4REFBOEQsRUFBRSwrREFBK0QsRUFBRSwrREFB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QUF3Rix5REFBeUQsQ0FBQyxtQkFBbUIsR0FBRyxpQkFBaUIsSUFBSSxpQkFBaUIsWUFBWSx3QkFBd0IsQ0FBQyx5QkFBeUIsSUFBSSxrQkFBa0IsSUFBSSxnQkFBZ0IsSUFBSSx1QkFBdUIsY0FBYyxFQUFFLE1BQU0seUZBQXlGLG9EQUFvRCxvQkFBb0IsWUFBWSxHQUFHLGlEQUFpRCxvQkFBb0IsQ0FBQyx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZnQtZ2FsbGVyeS8uL25vZGVfbW9kdWxlcy9AcmVhY3QtdGhyZWUvZHJlaS9pbmRleC5janMuanM/ZDEyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZT1yZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzXCIpLHQ9cmVxdWlyZShcInJlYWN0XCIpLHI9cmVxdWlyZShcInJlYWN0LWRvbS9jbGllbnRcIiksbj1yZXF1aXJlKFwidGhyZWVcIiksYT1yZXF1aXJlKFwiQHJlYWN0LXRocmVlL2ZpYmVyXCIpLG89cmVxdWlyZShcInp1c3RhbmRcIiksaT1yZXF1aXJlKFwicmVhY3QtbWVyZ2UtcmVmc1wiKSxzPXJlcXVpcmUoXCJtYWF0aFwiKSxsPXJlcXVpcmUoXCJAcmVhY3Qtc3ByaW5nL3RocmVlXCIpLGM9cmVxdWlyZShcIkB1c2UtZ2VzdHVyZS9yZWFjdFwiKSx1PXJlcXVpcmUoXCJ6dXN0YW5kL21pZGRsZXdhcmVcIiksZD1yZXF1aXJlKFwidGhyZWUtc3RkbGliXCIpLG09cmVxdWlyZShcInp1c3RhbmQvc2hhbGxvd1wiKSxmPXJlcXVpcmUoXCJ0cm9pa2EtdGhyZWUtdGV4dFwiKSxwPXJlcXVpcmUoXCJzdXNwZW5kLXJlYWN0XCIpLGg9cmVxdWlyZShcIm1lc2hsaW5lXCIpLHk9cmVxdWlyZShcImxvZGFzaC5waWNrXCIpLHg9cmVxdWlyZShcImxvZGFzaC5vbWl0XCIpLHY9cmVxdWlyZShcImNhbWVyYS1jb250cm9sc1wiKSxnPXJlcXVpcmUoXCJAbWVkaWFwaXBlL3Rhc2tzLXZpc2lvblwiKSx6PXJlcXVpcmUoXCJzdGF0cy5qc1wiKSx3PXJlcXVpcmUoXCJzdGF0cy1nbFwiKSxiPXJlcXVpcmUoXCJkZXRlY3QtZ3B1XCIpLEU9cmVxdWlyZShcInRocmVlLW1lc2gtYnZoXCIpLE09cmVxdWlyZShcInV1aWRcIiksUz1yZXF1aXJlKFwicmVhY3QtY29tcG9zZXJcIiksQz1yZXF1aXJlKFwibG9kYXNoLmNsYW1wXCIpO2Z1bmN0aW9uIFAoZSl7cmV0dXJuIGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZcImRlZmF1bHRcImluIGU/ZTp7ZGVmYXVsdDplfX1mdW5jdGlvbiBUKGUpe2lmKGUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgdD1PYmplY3QuY3JlYXRlKG51bGwpO3JldHVybiBlJiZPYmplY3Qua2V5cyhlKS5mb3JFYWNoKChmdW5jdGlvbihyKXtpZihcImRlZmF1bHRcIiE9PXIpe3ZhciBuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxyKTtPYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLG4uZ2V0P246e2VudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGVbcl19fSl9fSkpLHQuZGVmYXVsdD1lLE9iamVjdC5mcmVlemUodCl9dmFyIFI9UChlKSxrPVQodCksRj1UKHIpLEQ9VChuKSxMPVAobyksQT1QKGkpLF89UChtKSxPPVAoeSksTj1QKHgpLEI9UCh2KSxJPVAoeiksVT1QKHcpLFY9UChTKSxqPVAoQyk7Y29uc3QgVz1uZXcgbi5WZWN0b3IzLEc9bmV3IG4uVmVjdG9yMyxIPW5ldyBuLlZlY3RvcjM7ZnVuY3Rpb24gJChlLHQscil7Y29uc3Qgbj1XLnNldEZyb21NYXRyaXhQb3NpdGlvbihlLm1hdHJpeFdvcmxkKTtuLnByb2plY3QodCk7Y29uc3QgYT1yLndpZHRoLzIsbz1yLmhlaWdodC8yO3JldHVybltuLngqYSthLC1uLnkqbytvXX1jb25zdCBxPWU9Pk1hdGguYWJzKGUpPDFlLTEwPzA6ZTtmdW5jdGlvbiBYKGUsdCxyPVwiXCIpe2xldCBuPVwibWF0cml4M2QoXCI7Zm9yKGxldCByPTA7MTYhPT1yO3IrKyluKz1xKHRbcl0qZS5lbGVtZW50c1tyXSkrKDE1IT09cj9cIixcIjpcIilcIik7cmV0dXJuIHIrbn1jb25zdCBZPShlPT50PT5YKHQsZSkpKFsxLC0xLDEsMSwxLC0xLDEsMSwxLC0xLDEsMSwxLC0xLDEsMV0pLEs9KGU9PihlLHQpPT57cmV0dXJuIFgoZSxbMS8ocj10KSwxL3IsMS9yLDEsLTEvciwtMS9yLC0xL3IsLTEsMS9yLDEvciwxL3IsMSwxLDEsMSwxXSxcInRyYW5zbGF0ZSgtNTAlLC01MCUpXCIpO3ZhciByfSkoKTtjb25zdCBRPWsuZm9yd2FyZFJlZigoKHtjaGlsZHJlbjplLGVwczp0PS4wMDEsc3R5bGU6cixjbGFzc05hbWU6byxwcmVwZW5kOmksY2VudGVyOnMsZnVsbHNjcmVlbjpsLHBvcnRhbDpjLGRpc3RhbmNlRmFjdG9yOnUsc3ByaXRlOmQ9ITEsdHJhbnNmb3JtOm09ITEsb2NjbHVkZTpmLG9uT2NjbHVkZTpwLGNhc3RTaGFkb3c6aCxyZWNlaXZlU2hhZG93OnksbWF0ZXJpYWw6eCxnZW9tZXRyeTp2LHpJbmRleFJhbmdlOmc9WzE2Nzc3MjcxLDBdLGNhbGN1bGF0ZVBvc2l0aW9uOno9JCxhczp3PVwiZGl2XCIsd3JhcHBlckNsYXNzOmIscG9pbnRlckV2ZW50czpFPVwiYXV0b1wiLC4uLk19LFMpPT57Y29uc3R7Z2w6QyxjYW1lcmE6UCxzY2VuZTpULHNpemU6RCxyYXljYXN0ZXI6TCxldmVudHM6QSx2aWV3cG9ydDpffT1hLnVzZVRocmVlKCksW09dPWsudXNlU3RhdGUoKCgpPT5kb2N1bWVudC5jcmVhdGVFbGVtZW50KHcpKSksTj1rLnVzZVJlZigpLEI9ay51c2VSZWYobnVsbCksST1rLnVzZVJlZigwKSxVPWsudXNlUmVmKFswLDBdKSxWPWsudXNlUmVmKG51bGwpLGo9ay51c2VSZWYobnVsbCksWD0obnVsbD09Yz92b2lkIDA6Yy5jdXJyZW50KXx8QS5jb25uZWN0ZWR8fEMuZG9tRWxlbWVudC5wYXJlbnROb2RlLFE9ay51c2VSZWYobnVsbCksWj1rLnVzZVJlZighMSksSj1rLnVzZU1lbW8oKCgpPT5mJiZcImJsZW5kaW5nXCIhPT1mfHxBcnJheS5pc0FycmF5KGYpJiZmLmxlbmd0aCYmZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZcImN1cnJlbnRcImluIGV9KGZbMF0pKSxbZl0pO2sudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2NvbnN0IGU9Qy5kb21FbGVtZW50O2YmJlwiYmxlbmRpbmdcIj09PWY/KGUuc3R5bGUuekluZGV4PWAke01hdGguZmxvb3IoZ1swXS8yKX1gLGUuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiLGUuc3R5bGUucG9pbnRlckV2ZW50cz1cIm5vbmVcIik6KGUuc3R5bGUuekluZGV4PW51bGwsZS5zdHlsZS5wb3NpdGlvbj1udWxsLGUuc3R5bGUucG9pbnRlckV2ZW50cz1udWxsKX0pLFtmXSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57aWYoQi5jdXJyZW50KXtjb25zdCBlPU4uY3VycmVudD1GLmNyZWF0ZVJvb3QoTyk7aWYoVC51cGRhdGVNYXRyaXhXb3JsZCgpLG0pTy5zdHlsZS5jc3NUZXh0PVwicG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3BvaW50ZXItZXZlbnRzOm5vbmU7b3ZlcmZsb3c6aGlkZGVuO1wiO2Vsc2V7Y29uc3QgZT16KEIuY3VycmVudCxQLEQpO08uc3R5bGUuY3NzVGV4dD1gcG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3RyYW5zZm9ybTp0cmFuc2xhdGUzZCgke2VbMF19cHgsJHtlWzFdfXB4LDApO3RyYW5zZm9ybS1vcmlnaW46MCAwO2B9cmV0dXJuIFgmJihpP1gucHJlcGVuZChPKTpYLmFwcGVuZENoaWxkKE8pKSwoKT0+e1gmJlgucmVtb3ZlQ2hpbGQoTyksZS51bm1vdW50KCl9fX0pLFtYLG1dKSxrLnVzZUxheW91dEVmZmVjdCgoKCk9PntiJiYoTy5jbGFzc05hbWU9Yil9KSxbYl0pO2NvbnN0IGVlPWsudXNlTWVtbygoKCk9Pm0/e3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6MCxsZWZ0OjAsd2lkdGg6RC53aWR0aCxoZWlnaHQ6RC5oZWlnaHQsdHJhbnNmb3JtU3R5bGU6XCJwcmVzZXJ2ZS0zZFwiLHBvaW50ZXJFdmVudHM6XCJub25lXCJ9Ontwb3NpdGlvbjpcImFic29sdXRlXCIsdHJhbnNmb3JtOnM/XCJ0cmFuc2xhdGUzZCgtNTAlLC01MCUsMClcIjpcIm5vbmVcIiwuLi5sJiZ7dG9wOi1ELmhlaWdodC8yLGxlZnQ6LUQud2lkdGgvMix3aWR0aDpELndpZHRoLGhlaWdodDpELmhlaWdodH0sLi4ucn0pLFtyLHMsbCxELG1dKSx0ZT1rLnVzZU1lbW8oKCgpPT4oe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixwb2ludGVyRXZlbnRzOkV9KSksW0VdKTtrLnVzZUxheW91dEVmZmVjdCgoKCk9Pnt2YXIgdCxuOyhaLmN1cnJlbnQ9ITEsbSk/bnVsbD09KHQ9Ti5jdXJyZW50KXx8dC5yZW5kZXIoay5jcmVhdGVFbGVtZW50KFwiZGl2XCIse3JlZjpWLHN0eWxlOmVlfSxrLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7cmVmOmosc3R5bGU6dGV9LGsuY3JlYXRlRWxlbWVudChcImRpdlwiLHtyZWY6UyxjbGFzc05hbWU6byxzdHlsZTpyLGNoaWxkcmVuOmV9KSkpKTpudWxsPT0obj1OLmN1cnJlbnQpfHxuLnJlbmRlcihrLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7cmVmOlMsc3R5bGU6ZWUsY2xhc3NOYW1lOm8sY2hpbGRyZW46ZX0pKX0pKTtjb25zdCByZT1rLnVzZVJlZighMCk7YS51c2VGcmFtZSgoZT0+e2lmKEIuY3VycmVudCl7UC51cGRhdGVNYXRyaXhXb3JsZCgpLEIuY3VycmVudC51cGRhdGVXb3JsZE1hdHJpeCghMCwhMSk7Y29uc3QgZT1tP1UuY3VycmVudDp6KEIuY3VycmVudCxQLEQpO2lmKG18fE1hdGguYWJzKEkuY3VycmVudC1QLnpvb20pPnR8fE1hdGguYWJzKFUuY3VycmVudFswXS1lWzBdKT50fHxNYXRoLmFicyhVLmN1cnJlbnRbMV0tZVsxXSk+dCl7Y29uc3QgdD1mdW5jdGlvbihlLHQpe2NvbnN0IHI9Vy5zZXRGcm9tTWF0cml4UG9zaXRpb24oZS5tYXRyaXhXb3JsZCksbj1HLnNldEZyb21NYXRyaXhQb3NpdGlvbih0Lm1hdHJpeFdvcmxkKSxhPXIuc3ViKG4pLG89dC5nZXRXb3JsZERpcmVjdGlvbihIKTtyZXR1cm4gYS5hbmdsZVRvKG8pPk1hdGguUEkvMn0oQi5jdXJyZW50LFApO2xldCByPSExO0omJihBcnJheS5pc0FycmF5KGYpP3I9Zi5tYXAoKGU9PmUuY3VycmVudCkpOlwiYmxlbmRpbmdcIiE9PWYmJihyPVtUXSkpO2NvbnN0IGE9cmUuY3VycmVudDtpZihyKXtjb25zdCBlPWZ1bmN0aW9uKGUsdCxyLG4pe2NvbnN0IGE9Vy5zZXRGcm9tTWF0cml4UG9zaXRpb24oZS5tYXRyaXhXb3JsZCksbz1hLmNsb25lKCk7by5wcm9qZWN0KHQpLHIuc2V0RnJvbUNhbWVyYShvLHQpO2NvbnN0IGk9ci5pbnRlcnNlY3RPYmplY3RzKG4sITApO2lmKGkubGVuZ3RoKXtjb25zdCBlPWlbMF0uZGlzdGFuY2U7cmV0dXJuIGEuZGlzdGFuY2VUbyhyLnJheS5vcmlnaW4pPGV9cmV0dXJuITB9KEIuY3VycmVudCxQLEwscik7cmUuY3VycmVudD1lJiYhdH1lbHNlIHJlLmN1cnJlbnQ9IXQ7YSE9PXJlLmN1cnJlbnQmJihwP3AoIXJlLmN1cnJlbnQpOk8uc3R5bGUuZGlzcGxheT1yZS5jdXJyZW50P1wiYmxvY2tcIjpcIm5vbmVcIik7Y29uc3Qgbz1NYXRoLmZsb29yKGdbMF0vMiksaT1mP0o/W2dbMF0sb106W28tMSwwXTpnO2lmKE8uc3R5bGUuekluZGV4PWAke2Z1bmN0aW9uKGUsdCxyKXtpZih0IGluc3RhbmNlb2Ygbi5QZXJzcGVjdGl2ZUNhbWVyYXx8dCBpbnN0YW5jZW9mIG4uT3J0aG9ncmFwaGljQ2FtZXJhKXtjb25zdCBuPVcuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKGUubWF0cml4V29ybGQpLGE9Ry5zZXRGcm9tTWF0cml4UG9zaXRpb24odC5tYXRyaXhXb3JsZCksbz1uLmRpc3RhbmNlVG8oYSksaT0oclsxXS1yWzBdKS8odC5mYXItdC5uZWFyKSxzPXJbMV0taSp0LmZhcjtyZXR1cm4gTWF0aC5yb3VuZChpKm8rcyl9fShCLmN1cnJlbnQsUCxpKX1gLG0pe2NvbnN0W2UsdF09W0Qud2lkdGgvMixELmhlaWdodC8yXSxyPVAucHJvamVjdGlvbk1hdHJpeC5lbGVtZW50c1s1XSp0LHtpc09ydGhvZ3JhcGhpY0NhbWVyYTpuLHRvcDphLGxlZnQ6byxib3R0b206aSxyaWdodDpzfT1QLGw9WShQLm1hdHJpeFdvcmxkSW52ZXJzZSksYz1uP2BzY2FsZSgke3J9KXRyYW5zbGF0ZSgke3EoLShzK28pLzIpfXB4LCR7cSgoYStpKS8yKX1weClgOmB0cmFuc2xhdGVaKCR7cn1weClgO2xldCBtPUIuY3VycmVudC5tYXRyaXhXb3JsZDtkJiYobT1QLm1hdHJpeFdvcmxkSW52ZXJzZS5jbG9uZSgpLnRyYW5zcG9zZSgpLmNvcHlQb3NpdGlvbihtKS5zY2FsZShCLmN1cnJlbnQuc2NhbGUpLG0uZWxlbWVudHNbM109bS5lbGVtZW50c1s3XT1tLmVsZW1lbnRzWzExXT0wLG0uZWxlbWVudHNbMTVdPTEpLE8uc3R5bGUud2lkdGg9RC53aWR0aCtcInB4XCIsTy5zdHlsZS5oZWlnaHQ9RC5oZWlnaHQrXCJweFwiLE8uc3R5bGUucGVyc3BlY3RpdmU9bj9cIlwiOmAke3J9cHhgLFYuY3VycmVudCYmai5jdXJyZW50JiYoVi5jdXJyZW50LnN0eWxlLnRyYW5zZm9ybT1gJHtjfSR7bH10cmFuc2xhdGUoJHtlfXB4LCR7dH1weClgLGouY3VycmVudC5zdHlsZS50cmFuc2Zvcm09SyhtLDEvKCh1fHwxMCkvNDAwKSkpfWVsc2V7Y29uc3QgdD12b2lkIDA9PT11PzE6ZnVuY3Rpb24oZSx0KXtpZih0IGluc3RhbmNlb2Ygbi5PcnRob2dyYXBoaWNDYW1lcmEpcmV0dXJuIHQuem9vbTtpZih0IGluc3RhbmNlb2Ygbi5QZXJzcGVjdGl2ZUNhbWVyYSl7Y29uc3Qgcj1XLnNldEZyb21NYXRyaXhQb3NpdGlvbihlLm1hdHJpeFdvcmxkKSxuPUcuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHQubWF0cml4V29ybGQpLGE9dC5mb3YqTWF0aC5QSS8xODAsbz1yLmRpc3RhbmNlVG8obik7cmV0dXJuIDEvKDIqTWF0aC50YW4oYS8yKSpvKX1yZXR1cm4gMX0oQi5jdXJyZW50LFApKnU7Ty5zdHlsZS50cmFuc2Zvcm09YHRyYW5zbGF0ZTNkKCR7ZVswXX1weCwke2VbMV19cHgsMCkgc2NhbGUoJHt0fSlgfVUuY3VycmVudD1lLEkuY3VycmVudD1QLnpvb219fWlmKCFKJiZRLmN1cnJlbnQmJiFaLmN1cnJlbnQpaWYobSl7aWYoVi5jdXJyZW50KXtjb25zdCBlPVYuY3VycmVudC5jaGlsZHJlblswXTtpZihudWxsIT1lJiZlLmNsaWVudFdpZHRoJiZudWxsIT1lJiZlLmNsaWVudEhlaWdodCl7Y29uc3R7aXNPcnRob2dyYXBoaWNDYW1lcmE6dH09UDtpZih0fHx2KU0uc2NhbGUmJihBcnJheS5pc0FycmF5KE0uc2NhbGUpP00uc2NhbGUgaW5zdGFuY2VvZiBuLlZlY3RvcjM/US5jdXJyZW50LnNjYWxlLmNvcHkoTS5zY2FsZS5jbG9uZSgpLmRpdmlkZVNjYWxhcigxKSk6US5jdXJyZW50LnNjYWxlLnNldCgxL00uc2NhbGVbMF0sMS9NLnNjYWxlWzFdLDEvTS5zY2FsZVsyXSk6US5jdXJyZW50LnNjYWxlLnNldFNjYWxhcigxL00uc2NhbGUpKTtlbHNle2NvbnN0IHQ9KHV8fDEwKS80MDAscj1lLmNsaWVudFdpZHRoKnQsbj1lLmNsaWVudEhlaWdodCp0O1EuY3VycmVudC5zY2FsZS5zZXQocixuLDEpfVouY3VycmVudD0hMH19fWVsc2V7Y29uc3QgdD1PLmNoaWxkcmVuWzBdO2lmKG51bGwhPXQmJnQuY2xpZW50V2lkdGgmJm51bGwhPXQmJnQuY2xpZW50SGVpZ2h0KXtjb25zdCBlPTEvXy5mYWN0b3Iscj10LmNsaWVudFdpZHRoKmUsbj10LmNsaWVudEhlaWdodCplO1EuY3VycmVudC5zY2FsZS5zZXQocixuLDEpLFouY3VycmVudD0hMH1RLmN1cnJlbnQubG9va0F0KGUuY2FtZXJhLnBvc2l0aW9uKX19KSk7Y29uc3QgbmU9ay51c2VNZW1vKCgoKT0+KHt2ZXJ0ZXhTaGFkZXI6bT92b2lkIDA6J1xcbiAgICAgICAgICAvKlxcbiAgICAgICAgICAgIFRoaXMgc2hhZGVyIGlzIGZyb20gdGhlIFRIUkVFXFwncyBTcHJpdGVNYXRlcmlhbC5cXG4gICAgICAgICAgICBXZSBuZWVkIHRvIHR1cm4gdGhlIGJhY2tpbmcgcGxhbmUgaW50byBhIFNwcml0ZVxcbiAgICAgICAgICAgIChtYWtlIGl0IGFsd2F5cyBmYWNlIHRoZSBjYW1lcmEpIGlmIFwidHJhbnNmcm9tXCIgXFxuICAgICAgICAgICAgaXMgZmFsc2UuIFxcbiAgICAgICAgICAqL1xcbiAgICAgICAgICAjaW5jbHVkZSA8Y29tbW9uPlxcblxcbiAgICAgICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICAgICAgdmVjMiBjZW50ZXIgPSB2ZWMyKDAuLCAxLik7XFxuICAgICAgICAgICAgZmxvYXQgcm90YXRpb24gPSAwLjA7XFxuICAgICAgICAgICAgXFxuICAgICAgICAgICAgLy8gVGhpcyBpcyBzb21ld2hhdCBhcmJpdHJhcnksIGJ1dCBpdCBzZWVtcyB0byB3b3JrIHdlbGxcXG4gICAgICAgICAgICAvLyBOZWVkIHRvIGZpZ3VyZSBvdXQgaG93IHRvIGRlcml2ZSB0aGlzIGR5bmFtaWNhbGx5IGlmIGl0IGV2ZW4gbWF0dGVyc1xcbiAgICAgICAgICAgIGZsb2F0IHNpemUgPSAwLjAzO1xcblxcbiAgICAgICAgICAgIHZlYzQgbXZQb3NpdGlvbiA9IG1vZGVsVmlld01hdHJpeCAqIHZlYzQoIDAuMCwgMC4wLCAwLjAsIDEuMCApO1xcbiAgICAgICAgICAgIHZlYzIgc2NhbGU7XFxuICAgICAgICAgICAgc2NhbGUueCA9IGxlbmd0aCggdmVjMyggbW9kZWxNYXRyaXhbIDAgXS54LCBtb2RlbE1hdHJpeFsgMCBdLnksIG1vZGVsTWF0cml4WyAwIF0ueiApICk7XFxuICAgICAgICAgICAgc2NhbGUueSA9IGxlbmd0aCggdmVjMyggbW9kZWxNYXRyaXhbIDEgXS54LCBtb2RlbE1hdHJpeFsgMSBdLnksIG1vZGVsTWF0cml4WyAxIF0ueiApICk7XFxuXFxuICAgICAgICAgICAgYm9vbCBpc1BlcnNwZWN0aXZlID0gaXNQZXJzcGVjdGl2ZU1hdHJpeCggcHJvamVjdGlvbk1hdHJpeCApO1xcbiAgICAgICAgICAgIGlmICggaXNQZXJzcGVjdGl2ZSApIHNjYWxlICo9IC0gbXZQb3NpdGlvbi56O1xcblxcbiAgICAgICAgICAgIHZlYzIgYWxpZ25lZFBvc2l0aW9uID0gKCBwb3NpdGlvbi54eSAtICggY2VudGVyIC0gdmVjMiggMC41ICkgKSApICogc2NhbGUgKiBzaXplO1xcbiAgICAgICAgICAgIHZlYzIgcm90YXRlZFBvc2l0aW9uO1xcbiAgICAgICAgICAgIHJvdGF0ZWRQb3NpdGlvbi54ID0gY29zKCByb3RhdGlvbiApICogYWxpZ25lZFBvc2l0aW9uLnggLSBzaW4oIHJvdGF0aW9uICkgKiBhbGlnbmVkUG9zaXRpb24ueTtcXG4gICAgICAgICAgICByb3RhdGVkUG9zaXRpb24ueSA9IHNpbiggcm90YXRpb24gKSAqIGFsaWduZWRQb3NpdGlvbi54ICsgY29zKCByb3RhdGlvbiApICogYWxpZ25lZFBvc2l0aW9uLnk7XFxuICAgICAgICAgICAgbXZQb3NpdGlvbi54eSArPSByb3RhdGVkUG9zaXRpb247XFxuXFxuICAgICAgICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbXZQb3NpdGlvbjtcXG4gICAgICAgICAgfVxcbiAgICAgICcsZnJhZ21lbnRTaGFkZXI6XCJcXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApO1xcbiAgICAgICAgfVxcbiAgICAgIFwifSkpLFttXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsUi5kZWZhdWx0KHt9LE0se3JlZjpCfSksZiYmIUomJmsuY3JlYXRlRWxlbWVudChcIm1lc2hcIix7Y2FzdFNoYWRvdzpoLHJlY2VpdmVTaGFkb3c6eSxyZWY6UX0sdnx8ay5jcmVhdGVFbGVtZW50KFwicGxhbmVHZW9tZXRyeVwiLG51bGwpLHh8fGsuY3JlYXRlRWxlbWVudChcInNoYWRlck1hdGVyaWFsXCIse3NpZGU6bi5Eb3VibGVTaWRlLHZlcnRleFNoYWRlcjpuZS52ZXJ0ZXhTaGFkZXIsZnJhZ21lbnRTaGFkZXI6bmUuZnJhZ21lbnRTaGFkZXJ9KSkpfSkpO2xldCBaPTA7Y29uc3QgSj1MLmRlZmF1bHQoKGU9PihuLkRlZmF1bHRMb2FkaW5nTWFuYWdlci5vblN0YXJ0PSh0LHIsbik9PntlKHthY3RpdmU6ITAsaXRlbTp0LGxvYWRlZDpyLHRvdGFsOm4scHJvZ3Jlc3M6KHItWikvKG4tWikqMTAwfSl9LG4uRGVmYXVsdExvYWRpbmdNYW5hZ2VyLm9uTG9hZD0oKT0+e2Uoe2FjdGl2ZTohMX0pfSxuLkRlZmF1bHRMb2FkaW5nTWFuYWdlci5vbkVycm9yPXQ9PmUoKGU9Pih7ZXJyb3JzOlsuLi5lLmVycm9ycyx0XX0pKSksbi5EZWZhdWx0TG9hZGluZ01hbmFnZXIub25Qcm9ncmVzcz0odCxyLG4pPT57cj09PW4mJihaPW4pLGUoe2FjdGl2ZTohMCxpdGVtOnQsbG9hZGVkOnIsdG90YWw6bixwcm9ncmVzczooci1aKS8obi1aKSoxMDB8fDEwMH0pfSx7ZXJyb3JzOltdLGFjdGl2ZTohMSxwcm9ncmVzczowLGl0ZW06XCJcIixsb2FkZWQ6MCx0b3RhbDowfSkpKSxlZT1lPT5gTG9hZGluZyAke2UudG9GaXhlZCgyKX0lYDtjb25zdCB0ZT17Y29udGFpbmVyOntwb3NpdGlvbjpcImFic29sdXRlXCIsdG9wOjAsbGVmdDowLHdpZHRoOlwiMTAwJVwiLGhlaWdodDpcIjEwMCVcIixiYWNrZ3JvdW5kOlwiIzE3MTcxN1wiLGRpc3BsYXk6XCJmbGV4XCIsYWxpZ25JdGVtczpcImNlbnRlclwiLGp1c3RpZnlDb250ZW50OlwiY2VudGVyXCIsdHJhbnNpdGlvbjpcIm9wYWNpdHkgMzAwbXMgZWFzZVwiLHpJbmRleDoxZTN9LGlubmVyOnt3aWR0aDoxMDAsaGVpZ2h0OjMsYmFja2dyb3VuZDpcIiMyNzI3MjdcIix0ZXh0QWxpZ246XCJjZW50ZXJcIn0sYmFyOntoZWlnaHQ6Myx3aWR0aDpcIjEwMCVcIixiYWNrZ3JvdW5kOlwid2hpdGVcIix0cmFuc2l0aW9uOlwidHJhbnNmb3JtIDIwMG1zXCIsdHJhbnNmb3JtT3JpZ2luOlwibGVmdCBjZW50ZXJcIn0sZGF0YTp7ZGlzcGxheTpcImlubGluZS1ibG9ja1wiLHBvc2l0aW9uOlwicmVsYXRpdmVcIixmb250VmFyaWFudE51bWVyaWM6XCJ0YWJ1bGFyLW51bXNcIixtYXJnaW5Ub3A6XCIwLjhlbVwiLGNvbG9yOlwiI2YwZjBmMFwiLGZvbnRTaXplOlwiMC42ZW1cIixmb250RmFtaWx5OictYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiSW50ZXJcIiwgXCJTZWdvZSBVSVwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFJvYm90bywgVWJ1bnR1LCBzYW5zLXNlcmlmLCBcIkFwcGxlIENvbG9yIEVtb2ppXCIsIFwiU2Vnb2UgVUkgRW1vamlcIiwgXCJTZWdvZSBVSSBTeW1ib2xcIicsd2hpdGVTcGFjZTpcIm5vd3JhcFwifX0scmU9ay5jcmVhdGVDb250ZXh0KG51bGwpO2Z1bmN0aW9uIG5lKCl7cmV0dXJuIGsudXNlQ29udGV4dChyZSl9Y29uc3QgYWU9ay5mb3J3YXJkUmVmKCgoe2NoaWxkcmVuOmV9LHQpPT57Y29uc3Qgcj1rLnVzZVJlZihudWxsKSxuPW5lKCkse3dpZHRoOm8saGVpZ2h0Oml9PWEudXNlVGhyZWUoKGU9PmUudmlld3BvcnQpKTtyZXR1cm4gYS51c2VGcmFtZSgoKCk9PntyLmN1cnJlbnQucG9zaXRpb24ueD1uLmhvcml6b250YWw/LW8qKG4ucGFnZXMtMSkqbi5vZmZzZXQ6MCxyLmN1cnJlbnQucG9zaXRpb24ueT1uLmhvcml6b250YWw/MDppKihuLnBhZ2VzLTEpKm4ub2Zmc2V0fSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpBLmRlZmF1bHQoW3Qscl0pfSxlKX0pKSxvZT1rLmZvcndhcmRSZWYoKCh7Y2hpbGRyZW46ZSxzdHlsZTp0LC4uLnJ9LG4pPT57Y29uc3Qgbz1uZSgpLGk9ay51c2VSZWYobnVsbCkse3dpZHRoOnMsaGVpZ2h0Omx9PWEudXNlVGhyZWUoKGU9PmUuc2l6ZSkpLGM9ay51c2VDb250ZXh0KGEuY29udGV4dCksdT1rLnVzZU1lbW8oKCgpPT5GLmNyZWF0ZVJvb3Qoby5maXhlZCkpLFtvLmZpeGVkXSk7cmV0dXJuIGEudXNlRnJhbWUoKCgpPT57by5kZWx0YT5vLmVwcyYmKGkuY3VycmVudC5zdHlsZS50cmFuc2Zvcm09YHRyYW5zbGF0ZTNkKCR7by5ob3Jpem9udGFsPy1zKihvLnBhZ2VzLTEpKm8ub2Zmc2V0OjB9cHgsJHtvLmhvcml6b250YWw/MDpsKihvLnBhZ2VzLTEpKi1vLm9mZnNldH1weCwwKWApfSkpLHUucmVuZGVyKGsuY3JlYXRlRWxlbWVudChcImRpdlwiLFIuZGVmYXVsdCh7cmVmOkEuZGVmYXVsdChbbixpXSksc3R5bGU6ey4uLnQscG9zaXRpb246XCJhYnNvbHV0ZVwiLHRvcDowLGxlZnQ6MCx3aWxsQ2hhbmdlOlwidHJhbnNmb3JtXCJ9fSxyKSxrLmNyZWF0ZUVsZW1lbnQocmUuUHJvdmlkZXIse3ZhbHVlOm99LGsuY3JlYXRlRWxlbWVudChhLmNvbnRleHQuUHJvdmlkZXIse3ZhbHVlOmN9LGUpKSkpLG51bGx9KSksaWU9ay5mb3J3YXJkUmVmKCgoe2h0bWw6ZSwuLi50fSxyKT0+e2NvbnN0IG49ZT9vZTphZTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KG4sUi5kZWZhdWx0KHtyZWY6cn0sdCkpfSkpO2NvbnN0IHNlPWsuY3JlYXRlQ29udGV4dChudWxsKTtjb25zdCBsZT1rLmNyZWF0ZUNvbnRleHQoW10pO2NvbnN0IGNlPWsuZm9yd2FyZFJlZigoZnVuY3Rpb24oe2ZvbGxvdzplPSEwLGxvY2tYOnQ9ITEsbG9ja1k6cj0hMSxsb2NrWjpuPSExLC4uLm99LGkpe2NvbnN0IHM9ay51c2VSZWYoKTtyZXR1cm4gYS51c2VGcmFtZSgoKHtjYW1lcmE6YX0pPT57aWYoIWV8fCFzLmN1cnJlbnQpcmV0dXJuO2NvbnN0IG89cy5jdXJyZW50LnJvdGF0aW9uLmNsb25lKCk7YS5nZXRXb3JsZFF1YXRlcm5pb24ocy5jdXJyZW50LnF1YXRlcm5pb24pLHQmJihzLmN1cnJlbnQucm90YXRpb24ueD1vLngpLHImJihzLmN1cnJlbnQucm90YXRpb24ueT1vLnkpLG4mJihzLmN1cnJlbnQucm90YXRpb24uej1vLnopfSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsUi5kZWZhdWx0KHtyZWY6QS5kZWZhdWx0KFtzLGldKX0sbykpfSkpLHVlPWsuZm9yd2FyZFJlZigoKHtjaGlsZHJlbjplLGRlcHRoOnQ9LTEsLi4ucn0sbik9Pntjb25zdCBvPWsudXNlUmVmKG51bGwpO3JldHVybiBhLnVzZUZyYW1lKCgoe2NhbWVyYTplfSk9PntvLmN1cnJlbnQucXVhdGVybmlvbi5jb3B5KGUucXVhdGVybmlvbiksby5jdXJyZW50LnBvc2l0aW9uLmNvcHkoZS5wb3NpdGlvbil9KSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjpBLmRlZmF1bHQoW24sb10pfSxyKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtcInBvc2l0aW9uLXpcIjotdH0sZSkpfSkpLGRlPWsuZm9yd2FyZFJlZigoZnVuY3Rpb24oe3BvaW50czplLGNvbG9yOnQ9XCJibGFja1wiLHZlcnRleENvbG9yczpyLGxpbmV3aWR0aDpvLGxpbmVXaWR0aDppLHNlZ21lbnRzOnMsZGFzaGVkOmwsLi4uY30sdSl7Y29uc3QgbT1hLnVzZVRocmVlKChlPT5lLnNpemUpKSxmPWsudXNlTWVtbygoKCk9PnM/bmV3IGQuTGluZVNlZ21lbnRzMjpuZXcgZC5MaW5lMiksW3NdKSxbcF09ay51c2VTdGF0ZSgoKCk9Pm5ldyBkLkxpbmVNYXRlcmlhbCkpLGg9ay51c2VNZW1vKCgoKT0+e2NvbnN0IHQ9cz9uZXcgZC5MaW5lU2VnbWVudHNHZW9tZXRyeTpuZXcgZC5MaW5lR2VvbWV0cnksYT1lLm1hcCgoZT0+e2NvbnN0IHQ9QXJyYXkuaXNBcnJheShlKTtyZXR1cm4gZSBpbnN0YW5jZW9mIG4uVmVjdG9yMz9bZS54LGUueSxlLnpdOmUgaW5zdGFuY2VvZiBuLlZlY3RvcjI/W2UueCxlLnksMF06dCYmMz09PWUubGVuZ3RoP1tlWzBdLGVbMV0sZVsyXV06dCYmMj09PWUubGVuZ3RoP1tlWzBdLGVbMV0sMF06ZX0pKTtpZih0LnNldFBvc2l0aW9ucyhhLmZsYXQoKSkscil7Y29uc3QgZT1yLm1hcCgoZT0+ZSBpbnN0YW5jZW9mIG4uQ29sb3I/ZS50b0FycmF5KCk6ZSkpO3Quc2V0Q29sb3JzKGUuZmxhdCgpKX1yZXR1cm4gdH0pLFtlLHMscl0pO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PntmLmNvbXB1dGVMaW5lRGlzdGFuY2VzKCl9KSxbZSxmXSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57bD9wLmRlZmluZXMuVVNFX0RBU0g9XCJcIjpkZWxldGUgcC5kZWZpbmVzLlVTRV9EQVNILHAubmVlZHNVcGRhdGU9ITB9KSxbbCxwXSksay51c2VFZmZlY3QoKCgpPT4oKT0+aC5kaXNwb3NlKCkpLFtoXSksay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHtvYmplY3Q6ZixyZWY6dX0sYyksay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIse29iamVjdDpoLGF0dGFjaDpcImdlb21ldHJ5XCJ9KSxrLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIixSLmRlZmF1bHQoe29iamVjdDpwLGF0dGFjaDpcIm1hdGVyaWFsXCIsY29sb3I6dCx2ZXJ0ZXhDb2xvcnM6Qm9vbGVhbihyKSxyZXNvbHV0aW9uOlttLndpZHRoLG0uaGVpZ2h0XSxsaW5ld2lkdGg6bnVsbCE9bz9vOmksZGFzaGVkOmx9LGMpKSl9KSksbWU9bmV3IG4uVmVjdG9yMyxmZT1rLmZvcndhcmRSZWYoKGZ1bmN0aW9uKHtzdGFydDplPVswLDAsMF0sZW5kOnQ9WzAsMCwwXSxtaWQ6cixzZWdtZW50czphPTIwLC4uLm99LGkpe2NvbnN0IHM9ay51c2VSZWYobnVsbCksW2xdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5RdWFkcmF0aWNCZXppZXJDdXJ2ZTModm9pZCAwLHZvaWQgMCx2b2lkIDApKSksYz1rLnVzZUNhbGxiYWNrKCgoZSx0LHIsYT0yMCk9PihlIGluc3RhbmNlb2Ygbi5WZWN0b3IzP2wudjAuY29weShlKTpsLnYwLnNldCguLi5lKSx0IGluc3RhbmNlb2Ygbi5WZWN0b3IzP2wudjIuY29weSh0KTpsLnYyLnNldCguLi50KSxyIGluc3RhbmNlb2Ygbi5WZWN0b3IzP2wudjEuY29weShyKTpBcnJheS5pc0FycmF5KHIpP2wudjEuc2V0KC4uLnIpOmwudjEuY29weShsLnYwLmNsb25lKCkuYWRkKGwudjIuY2xvbmUoKS5zdWIobC52MCkpLmFkZChtZS5zZXQoMCxsLnYwLnktbC52Mi55LDApKSksbC5nZXRQb2ludHMoYSkpKSxbXSk7ay51c2VMYXlvdXRFZmZlY3QoKCgpPT57cy5jdXJyZW50LnNldFBvaW50cz0oZSx0LHIpPT57Y29uc3Qgbj1jKGUsdCxyKTtzLmN1cnJlbnQuZ2VvbWV0cnkmJnMuY3VycmVudC5nZW9tZXRyeS5zZXRQb3NpdGlvbnMobi5tYXAoKGU9PmUudG9BcnJheSgpKSkuZmxhdCgpKX19KSxbXSk7Y29uc3QgdT1rLnVzZU1lbW8oKCgpPT5jKGUsdCxyLGEpKSxbZSx0LHIsYV0pO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoZGUsUi5kZWZhdWx0KHtyZWY6QS5kZWZhdWx0KFtzLGldKSxwb2ludHM6dX0sbykpfSkpLHBlPWsuZm9yd2FyZFJlZigoZnVuY3Rpb24oe3N0YXJ0OmUsZW5kOnQsbWlkQTpyLG1pZEI6YSxzZWdtZW50czpvPTIwLC4uLml9LHMpe2NvbnN0IGw9ay51c2VNZW1vKCgoKT0+e2NvbnN0IGk9ZSBpbnN0YW5jZW9mIG4uVmVjdG9yMz9lOm5ldyBuLlZlY3RvcjMoLi4uZSkscz10IGluc3RhbmNlb2Ygbi5WZWN0b3IzP3Q6bmV3IG4uVmVjdG9yMyguLi50KSxsPXIgaW5zdGFuY2VvZiBuLlZlY3RvcjM/cjpuZXcgbi5WZWN0b3IzKC4uLnIpLGM9YSBpbnN0YW5jZW9mIG4uVmVjdG9yMz9hOm5ldyBuLlZlY3RvcjMoLi4uYSk7cmV0dXJuIG5ldyBuLkN1YmljQmV6aWVyQ3VydmUzKGksbCxjLHMpLmdldFBvaW50cyhvKX0pLFtlLHQscixhLG9dKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KGRlLFIuZGVmYXVsdCh7cmVmOnMscG9pbnRzOmx9LGkpKX0pKSxoZT1rLmZvcndhcmRSZWYoKGZ1bmN0aW9uKHtwb2ludHM6ZSxjbG9zZWQ6dD0hMSxjdXJ2ZVR5cGU6cj1cImNlbnRyaXBldGFsXCIsdGVuc2lvbjphPS41LHNlZ21lbnRzOm89MjAsdmVydGV4Q29sb3JzOmksLi4uc30sbCl7Y29uc3QgYz1rLnVzZU1lbW8oKCgpPT57Y29uc3Qgbz1lLm1hcCgoZT0+ZSBpbnN0YW5jZW9mIG4uVmVjdG9yMz9lOm5ldyBuLlZlY3RvcjMoLi4uZSkpKTtyZXR1cm4gbmV3IG4uQ2F0bXVsbFJvbUN1cnZlMyhvLHQscixhKX0pLFtlLHQscixhXSksdT1rLnVzZU1lbW8oKCgpPT5jLmdldFBvaW50cyhvKSksW2Msb10pLGQ9ay51c2VNZW1vKCgoKT0+e2lmKCFpfHxpLmxlbmd0aDwyKXJldHVybjtpZihpLmxlbmd0aD09PW8rMSlyZXR1cm4gaTtjb25zdCBlPWkubWFwKChlPT5lIGluc3RhbmNlb2Ygbi5Db2xvcj9lOm5ldyBuLkNvbG9yKC4uLmUpKSk7dCYmZS5wdXNoKGVbMF0uY2xvbmUoKSk7Y29uc3Qgcj1bZVswXV0sYT1vLyhlLmxlbmd0aC0xKTtmb3IobGV0IHQ9MTt0PG87dCsrKXtjb25zdCBuPXQlYS9hLG89TWF0aC5mbG9vcih0L2EpO3IucHVzaChlW29dLmNsb25lKCkubGVycChlW28rMV0sbikpfXJldHVybiByLnB1c2goZVtlLmxlbmd0aC0xXSkscn0pLFtpLG9dKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KGRlLFIuZGVmYXVsdCh7cmVmOmwscG9pbnRzOnUsdmVydGV4Q29sb3JzOmR9LHMpKX0pKSx5ZT1rLmZvcndhcmRSZWYoKCh7dXJsOmUsZGlzdGFuY2U6dD0xLGxvb3A6cj0hMCxhdXRvcGxheTpvLC4uLml9LHMpPT57Y29uc3QgbD1rLnVzZVJlZigpLGM9YS51c2VUaHJlZSgoKHtjYW1lcmE6ZX0pPT5lKSksW3VdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5BdWRpb0xpc3RlbmVyKSksZD1hLnVzZUxvYWRlcihuLkF1ZGlvTG9hZGVyLGUpO3JldHVybiBrLnVzZUVmZmVjdCgoKCk9Pntjb25zdCBlPWwuY3VycmVudDtlJiYoZS5zZXRCdWZmZXIoZCksZS5zZXRSZWZEaXN0YW5jZSh0KSxlLnNldExvb3AociksbyYmIWUuaXNQbGF5aW5nJiZlLnBsYXkoKSl9KSxbZCxjLHQscl0pLGsudXNlRWZmZWN0KCgoKT0+e2NvbnN0IGU9bC5jdXJyZW50O3JldHVybiBjLmFkZCh1KSwoKT0+e2MucmVtb3ZlKHUpLGUmJihlLmlzUGxheWluZyYmZS5zdG9wKCksZS5zb3VyY2UmJmUuc291cmNlLl9jb25uZWN0ZWQmJmUuZGlzY29ubmVjdCgpKX19KSxbXSksay5jcmVhdGVFbGVtZW50KFwicG9zaXRpb25hbEF1ZGlvXCIsUi5kZWZhdWx0KHtyZWY6QS5kZWZhdWx0KFtsLHNdKSxhcmdzOlt1XX0saSkpfSkpLHhlPWsuZm9yd2FyZFJlZigoKHtzZGZHbHlwaFNpemU6ZT02NCxhbmNob3JYOnQ9XCJjZW50ZXJcIixhbmNob3JZOnI9XCJtaWRkbGVcIixmb250Om4sZm9udFNpemU6bz0xLGNoaWxkcmVuOmksY2hhcmFjdGVyczpzLG9uU3luYzpsLC4uLmN9LHUpPT57Y29uc3QgZD1hLnVzZVRocmVlKCgoe2ludmFsaWRhdGU6ZX0pPT5lKSksW21dPWsudXNlU3RhdGUoKCgpPT5uZXcgZi5UZXh0KSksW2gseV09ay51c2VNZW1vKCgoKT0+e2NvbnN0IGU9W107bGV0IHQ9XCJcIjtyZXR1cm4gay5DaGlsZHJlbi5mb3JFYWNoKGksKHI9PntcInN0cmluZ1wiPT10eXBlb2Ygcnx8XCJudW1iZXJcIj09dHlwZW9mIHI/dCs9cjplLnB1c2gocil9KSksW2UsdF19KSxbaV0pO3JldHVybiBwLnN1c3BlbmQoKCgpPT5uZXcgUHJvbWlzZSgoZT0+Zi5wcmVsb2FkRm9udCh7Zm9udDpuLGNoYXJhY3RlcnM6c30sZSkpKSksW1widHJvaWthLXRleHRcIixuLHNdKSxrLnVzZUxheW91dEVmZmVjdCgoKCk9PnttLnN5bmMoKCgpPT57ZCgpLGwmJmwobSl9KSl9KSksay51c2VFZmZlY3QoKCgpPT4oKT0+bS5kaXNwb3NlKCkpLFttXSksay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHtvYmplY3Q6bSxyZWY6dSxmb250Om4sdGV4dDp5LGFuY2hvclg6dCxhbmNob3JZOnIsZm9udFNpemU6byxzZGZHbHlwaFNpemU6ZX0sYyksaCl9KSk7bGV0IHZlPW51bGw7YXN5bmMgZnVuY3Rpb24gZ2UoZSl7dmV8fCh2ZT1uZXcgZC5Gb250TG9hZGVyKTtsZXQgdD1cInN0cmluZ1wiPT10eXBlb2YgZT9hd2FpdChhd2FpdCBmZXRjaChlKSkuanNvbigpOmU7cmV0dXJuIHZlLnBhcnNlKHQpfWZ1bmN0aW9uIHplKGUpe3JldHVybiBwLnN1c3BlbmQoZ2UsW2VdKX16ZS5wcmVsb2FkPWU9PnAucHJlbG9hZChnZSxbZV0pLHplLmNsZWFyPWU9PnAuY2xlYXIoW2VdKTtjb25zdCB3ZT1bXCJzdHJpbmdcIixcIm51bWJlclwiXSxiZT1rLmZvcndhcmRSZWYoKCh7Zm9udDplLGxldHRlclNwYWNpbmc6cj0wLGxpbmVIZWlnaHQ6bj0xLHNpemU6bz0xLGhlaWdodDppPS4yLGJldmVsVGhpY2tuZXNzOnM9LjEsYmV2ZWxTaXplOmw9LjAxLGJldmVsRW5hYmxlZDpjPSExLGJldmVsT2Zmc2V0OnU9MCxiZXZlbFNlZ21lbnRzOm09NCxjdXJ2ZVNlZ21lbnRzOmY9OCxzbW9vdGg6cCxjaGlsZHJlbjpoLC4uLnl9LHgpPT57ay51c2VNZW1vKCgoKT0+YS5leHRlbmQoe1JlbmFtZWRUZXh0R2VvbWV0cnk6ZC5UZXh0R2VvbWV0cnl9KSksW10pO2NvbnN0IHY9ay51c2VSZWYobnVsbCksZz16ZShlKSx6PXQudXNlTWVtbygoKCk9Pih7Zm9udDpnLHNpemU6byxoZWlnaHQ6aSxiZXZlbFRoaWNrbmVzczpzLGJldmVsU2l6ZTpsLGJldmVsRW5hYmxlZDpjLGJldmVsU2VnbWVudHM6bSxiZXZlbE9mZnNldDp1LGN1cnZlU2VnbWVudHM6ZixsZXR0ZXJTcGFjaW5nOnIsbGluZUhlaWdodDpufSkpLFtnLG8saSxzLGwsYyxtLHUsZixyLG5dKSxbdywuLi5iXT10LnVzZU1lbW8oKCgpPT4oZT0+e2xldCB0PVwiXCI7Y29uc3Qgcj1bXTtyZXR1cm4gay5DaGlsZHJlbi5mb3JFYWNoKGUsKGU9Pnt3ZS5pbmNsdWRlcyh0eXBlb2YgZSk/dCs9ZStcIlwiOnIucHVzaChlKX0pKSxbdCwuLi5yXX0pKGgpKSxbaF0pLEU9ay51c2VNZW1vKCgoKT0+W3csel0pLFt3LHpdKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57cCYmKHYuY3VycmVudC5nZW9tZXRyeT1kLm1lcmdlVmVydGljZXModi5jdXJyZW50Lmdlb21ldHJ5LHApLHYuY3VycmVudC5nZW9tZXRyeS5jb21wdXRlVmVydGV4Tm9ybWFscygpKX0pLFtFLHBdKSxrLnVzZUltcGVyYXRpdmVIYW5kbGUoeCwoKCk9PnYuY3VycmVudCksW10pLGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIixSLmRlZmF1bHQoe30seSx7cmVmOnZ9KSxrLmNyZWF0ZUVsZW1lbnQoXCJyZW5hbWVkVGV4dEdlb21ldHJ5XCIse2FyZ3M6RX0pLGIpfSkpLEVlPWsuZm9yd2FyZFJlZigoKHtjaGlsZHJlbjplLG11bHRpc2FtcGluZzp0PTgscmVuZGVySW5kZXg6cj0xLGRpc2FibGVSZW5kZXI6byxkaXNhYmxlR2FtbWE6aSxkaXNhYmxlUmVuZGVyUGFzczpzLGRlcHRoQnVmZmVyOmw9ITAsc3RlbmNpbEJ1ZmZlcjpjPSExLGFuaXNvdHJvcHk6dT0xLGVuY29kaW5nOm0sdHlwZTpmLC4uLnB9LGgpPT57ay51c2VNZW1vKCgoKT0+YS5leHRlbmQoe0VmZmVjdENvbXBvc2VyOmQuRWZmZWN0Q29tcG9zZXIsUmVuZGVyUGFzczpkLlJlbmRlclBhc3MsU2hhZGVyUGFzczpkLlNoYWRlclBhc3N9KSksW10pO2NvbnN0IHk9ay51c2VSZWYoKSx7c2NlbmU6eCxjYW1lcmE6dixnbDpnLHNpemU6eix2aWV3cG9ydDp3fT1hLnVzZVRocmVlKCksW2JdPWsudXNlU3RhdGUoKCgpPT57Y29uc3QgZT1uZXcgbi5XZWJHTFJlbmRlclRhcmdldCh6LndpZHRoLHouaGVpZ2h0LHt0eXBlOmZ8fG4uSGFsZkZsb2F0VHlwZSxmb3JtYXQ6bi5SR0JBRm9ybWF0LGRlcHRoQnVmZmVyOmwsc3RlbmNpbEJ1ZmZlcjpjLGFuaXNvdHJvcHk6dX0pO3JldHVybiBmPT09bi5VbnNpZ25lZEJ5dGVUeXBlJiZudWxsIT1tJiYoXCJjb2xvclNwYWNlXCJpbiBlP2UudGV4dHVyZS5jb2xvclNwYWNlPW06ZS50ZXh0dXJlLmVuY29kaW5nPW0pLGUuc2FtcGxlcz10LGV9KSk7ay51c2VFZmZlY3QoKCgpPT57dmFyIGUsdDtudWxsPT0oZT15LmN1cnJlbnQpfHxlLnNldFNpemUoei53aWR0aCx6LmhlaWdodCksbnVsbD09KHQ9eS5jdXJyZW50KXx8dC5zZXRQaXhlbFJhdGlvKHcuZHByKX0pLFtnLHosdy5kcHJdKSxhLnVzZUZyYW1lKCgoKT0+e3ZhciBlO298fG51bGw9PShlPXkuY3VycmVudCl8fGUucmVuZGVyKCl9KSxyKTtjb25zdCBFPVtdO3JldHVybiBzfHxFLnB1c2goay5jcmVhdGVFbGVtZW50KFwicmVuZGVyUGFzc1wiLHtrZXk6XCJyZW5kZXJwYXNzXCIsYXR0YWNoOmBwYXNzZXMtJHtFLmxlbmd0aH1gLGFyZ3M6W3gsdl19KSksaXx8RS5wdXNoKGsuY3JlYXRlRWxlbWVudChcInNoYWRlclBhc3NcIix7YXR0YWNoOmBwYXNzZXMtJHtFLmxlbmd0aH1gLGtleTpcImdhbW1hcGFzc1wiLGFyZ3M6W2QuR2FtbWFDb3JyZWN0aW9uU2hhZGVyXX0pKSxrLkNoaWxkcmVuLmZvckVhY2goZSwoZT0+e2UmJkUucHVzaChrLmNsb25lRWxlbWVudChlLHtrZXk6RS5sZW5ndGgsYXR0YWNoOmBwYXNzZXMtJHtFLmxlbmd0aH1gfSkpfSkpLGsuY3JlYXRlRWxlbWVudChcImVmZmVjdENvbXBvc2VyXCIsUi5kZWZhdWx0KHtyZWY6QS5kZWZhdWx0KFtoLHldKSxhcmdzOltnLGJdfSxwKSxFKX0pKTtsZXQgTWU9ZnVuY3Rpb24oZSl7cmV0dXJuIGUuTGluZWFyPVwibGluZWFyXCIsZS5SYWRpYWw9XCJyYWRpYWxcIixlfSh7fSk7ZnVuY3Rpb24gU2UoZSx0LHIsbil7Y29uc3QgYT1jbGFzcyBleHRlbmRzIEQuU2hhZGVyTWF0ZXJpYWx7Y29uc3RydWN0b3IoYT17fSl7Y29uc3Qgbz1PYmplY3QuZW50cmllcyhlKTtzdXBlcih7dW5pZm9ybXM6by5yZWR1Y2UoKChlLFt0LHJdKT0+KHsuLi5lLC4uLkQuVW5pZm9ybXNVdGlscy5jbG9uZSh7W3RdOnt2YWx1ZTpyfX0pfSkpLHt9KSx2ZXJ0ZXhTaGFkZXI6dCxmcmFnbWVudFNoYWRlcjpyfSksdGhpcy5rZXk9XCJcIixvLmZvckVhY2goKChbZV0pPT5PYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxlLHtnZXQ6KCk9PnRoaXMudW5pZm9ybXNbZV0udmFsdWUsc2V0OnQ9PnRoaXMudW5pZm9ybXNbZV0udmFsdWU9dH0pKSksT2JqZWN0LmFzc2lnbih0aGlzLGEpLG4mJm4odGhpcyl9fTtyZXR1cm4gYS5rZXk9RC5NYXRoVXRpbHMuZ2VuZXJhdGVVVUlEKCksYX1jb25zdCBDZT1lPT5lPT09T2JqZWN0KGUpJiYhQXJyYXkuaXNBcnJheShlKSYmXCJmdW5jdGlvblwiIT10eXBlb2YgZTtmdW5jdGlvbiBQZShlLHIpe2NvbnN0IG89YS51c2VUaHJlZSgoZT0+ZS5nbCkpLGk9YS51c2VMb2FkZXIobi5UZXh0dXJlTG9hZGVyLENlKGUpP09iamVjdC52YWx1ZXMoZSk6ZSk7aWYodC51c2VMYXlvdXRFZmZlY3QoKCgpPT57bnVsbD09cnx8cihpKX0pLFtyXSksdC51c2VFZmZlY3QoKCgpPT57aWYoXCJpbml0VGV4dHVyZVwiaW4gbyl7KEFycmF5LmlzQXJyYXkoaSk/aTpbaV0pLmZvckVhY2goby5pbml0VGV4dHVyZSl9fSksW28saV0pLENlKGUpKXtjb25zdCB0PU9iamVjdC5rZXlzKGUpLHI9e307cmV0dXJuIHQuZm9yRWFjaCgoZT0+T2JqZWN0LmFzc2lnbihyLHtbZV06aVt0LmluZGV4T2YoZSldfSkpKSxyfXJldHVybiBpfVBlLnByZWxvYWQ9ZT0+YS51c2VMb2FkZXIucHJlbG9hZChuLlRleHR1cmVMb2FkZXIsZSksUGUuY2xlYXI9ZT0+YS51c2VMb2FkZXIuY2xlYXIobi5UZXh0dXJlTG9hZGVyLGUpO2NvbnN0IFRlPXBhcnNlSW50KG4uUkVWSVNJT04ucmVwbGFjZSgvXFxEKy9nLFwiXCIpKSxSZT1TZSh7Y29sb3I6bmV3IEQuQ29sb3IoXCJ3aGl0ZVwiKSxzY2FsZTpbMSwxXSxpbWFnZUJvdW5kczpbMSwxXSxtYXA6bnVsbCx6b29tOjEsZ3JheXNjYWxlOjAsb3BhY2l0eToxfSxcIlxcbiAgdmFyeWluZyB2ZWMyIHZVdjtcXG4gIHZvaWQgbWFpbigpIHtcXG4gICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmlld01hdHJpeCAqIG1vZGVsTWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4pO1xcbiAgICB2VXYgPSB1djtcXG4gIH1cXG5cIixgXFxuICAvLyBtb3N0bHkgZnJvbSBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9zdGF0aWNvL2RmNjRjNWQxNjczNjJlY2Y3YjM0ZmNhMGIxNDU5YTQ0XFxuICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgdW5pZm9ybSB2ZWMyIHNjYWxlO1xcbiAgdW5pZm9ybSB2ZWMyIGltYWdlQm91bmRzO1xcbiAgdW5pZm9ybSB2ZWMzIGNvbG9yO1xcbiAgdW5pZm9ybSBzYW1wbGVyMkQgbWFwO1xcbiAgdW5pZm9ybSBmbG9hdCB6b29tO1xcbiAgdW5pZm9ybSBmbG9hdCBncmF5c2NhbGU7XFxuICB1bmlmb3JtIGZsb2F0IG9wYWNpdHk7XFxuICBjb25zdCB2ZWMzIGx1bWEgPSB2ZWMzKC4yOTksIDAuNTg3LCAwLjExNCk7XFxuICB2ZWM0IHRvR3JheXNjYWxlKHZlYzQgY29sb3IsIGZsb2F0IGludGVuc2l0eSkge1xcbiAgICByZXR1cm4gdmVjNChtaXgoY29sb3IucmdiLCB2ZWMzKGRvdChjb2xvci5yZ2IsIGx1bWEpKSwgaW50ZW5zaXR5KSwgY29sb3IuYSk7XFxuICB9XFxuICB2ZWMyIGFzcGVjdCh2ZWMyIHNpemUpIHtcXG4gICAgcmV0dXJuIHNpemUgLyBtaW4oc2l6ZS54LCBzaXplLnkpO1xcbiAgfVxcbiAgdm9pZCBtYWluKCkge1xcbiAgICB2ZWMyIHMgPSBhc3BlY3Qoc2NhbGUpO1xcbiAgICB2ZWMyIGkgPSBhc3BlY3QoaW1hZ2VCb3VuZHMpO1xcbiAgICBmbG9hdCBycyA9IHMueCAvIHMueTtcXG4gICAgZmxvYXQgcmkgPSBpLnggLyBpLnk7XFxuICAgIHZlYzIgbmV3ID0gcnMgPCByaSA/IHZlYzIoaS54ICogcy55IC8gaS55LCBzLnkpIDogdmVjMihzLngsIGkueSAqIHMueCAvIGkueCk7XFxuICAgIHZlYzIgb2Zmc2V0ID0gKHJzIDwgcmkgPyB2ZWMyKChuZXcueCAtIHMueCkgLyAyLjAsIDAuMCkgOiB2ZWMyKDAuMCwgKG5ldy55IC0gcy55KSAvIDIuMCkpIC8gbmV3O1xcbiAgICB2ZWMyIHV2ID0gdlV2ICogcyAvIG5ldyArIG9mZnNldDtcXG4gICAgdmVjMiB6VXYgPSAodXYgLSB2ZWMyKDAuNSwgMC41KSkgLyB6b29tICsgdmVjMigwLjUsIDAuNSk7XFxuICAgIGdsX0ZyYWdDb2xvciA9IHRvR3JheXNjYWxlKHRleHR1cmUyRChtYXAsIHpVdikgKiB2ZWM0KGNvbG9yLCBvcGFjaXR5KSwgZ3JheXNjYWxlKTtcXG4gICAgXFxuICAgICNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cXG4gICAgI2luY2x1ZGUgPCR7VGU+PTE1ND9cImNvbG9yc3BhY2VfZnJhZ21lbnRcIjpcImVuY29kaW5nc19mcmFnbWVudFwifT5cXG4gIH1cXG5gKSxrZT1rLmZvcndhcmRSZWYoKCh7Y2hpbGRyZW46ZSxjb2xvcjp0LHNlZ21lbnRzOnI9MSxzY2FsZTpuPTEsem9vbTpvPTEsZ3JheXNjYWxlOmk9MCxvcGFjaXR5OnM9MSx0ZXh0dXJlOmwsdG9uZU1hcHBlZDpjLHRyYW5zcGFyZW50OnUsLi4uZH0sbSk9PnthLmV4dGVuZCh7SW1hZ2VNYXRlcmlhbDpSZX0pO2NvbnN0IGY9QXJyYXkuaXNBcnJheShuKT9bblswXSxuWzFdXTpbbixuXSxwPVtsLmltYWdlLndpZHRoLGwuaW1hZ2UuaGVpZ2h0XTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLFIuZGVmYXVsdCh7cmVmOm0sc2NhbGU6QXJyYXkuaXNBcnJheShuKT9bLi4ubiwxXTpufSxkKSxrLmNyZWF0ZUVsZW1lbnQoXCJwbGFuZUdlb21ldHJ5XCIse2FyZ3M6WzEsMSxyLHJdfSksay5jcmVhdGVFbGVtZW50KFwiaW1hZ2VNYXRlcmlhbFwiLHtjb2xvcjp0LG1hcDpsLHpvb206byxncmF5c2NhbGU6aSxvcGFjaXR5OnMsc2NhbGU6ZixpbWFnZUJvdW5kczpwLHRvbmVNYXBwZWQ6Yyx0cmFuc3BhcmVudDp1fSksZSl9KSksRmU9ay5mb3J3YXJkUmVmKCgoe3VybDplLC4uLnR9LHIpPT57Y29uc3Qgbj1QZShlKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KGtlLFIuZGVmYXVsdCh7fSx0LHt0ZXh0dXJlOm4scmVmOnJ9KSl9KSksRGU9ay5mb3J3YXJkUmVmKCgoe3VybDplLC4uLnR9LHIpPT5rLmNyZWF0ZUVsZW1lbnQoa2UsUi5kZWZhdWx0KHt9LHQse3JlZjpyfSkpKSksTGU9ay5mb3J3YXJkUmVmKCgoZSx0KT0+e2lmKGUudXJsKXJldHVybiBrLmNyZWF0ZUVsZW1lbnQoRmUsUi5kZWZhdWx0KHt9LGUse3JlZjp0fSkpO2lmKGUudGV4dHVyZSlyZXR1cm4gay5jcmVhdGVFbGVtZW50KERlLFIuZGVmYXVsdCh7fSxlLHtyZWY6dH0pKTt0aHJvdyBuZXcgRXJyb3IoXCI8SW1hZ2UgLz4gcmVxdWlyZXMgYSB1cmwgb3IgdGV4dHVyZVwiKX0pKSxBZT1rLmZvcndhcmRSZWYoKCh7dXNlckRhdGE6ZSxjaGlsZHJlbjp0LGdlb21ldHJ5OnIsdGhyZXNob2xkOm49MTUsY29sb3I6YT1cImJsYWNrXCIsLi4ub30saSk9Pntjb25zdCBzPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9Pntjb25zdCBlPXMuY3VycmVudC5wYXJlbnQ7aWYoZSl7Y29uc3QgdD1yfHxlLmdlb21ldHJ5O3Q9PT1zLmN1cnJlbnQudXNlckRhdGEuY3VycmVudEdlb20mJm49PT1zLmN1cnJlbnQudXNlckRhdGEuY3VycmVudFRocmVzaG9sZHx8KHMuY3VycmVudC51c2VyRGF0YS5jdXJyZW50R2VvbT10LHMuY3VycmVudC51c2VyRGF0YS5jdXJyZW50VGhyZXNob2xkPW4scy5jdXJyZW50Lmdlb21ldHJ5PW5ldyBELkVkZ2VzR2VvbWV0cnkodCxuKSl9fSkpLGsudXNlSW1wZXJhdGl2ZUhhbmRsZShpLCgoKT0+cy5jdXJyZW50KSksay5jcmVhdGVFbGVtZW50KFwibGluZVNlZ21lbnRzXCIsUi5kZWZhdWx0KHtyZWY6cyxyYXljYXN0OigpPT5udWxsfSxvKSx0fHxrLmNyZWF0ZUVsZW1lbnQoXCJsaW5lQmFzaWNNYXRlcmlhbFwiLHtjb2xvcjphfSkpfSkpLF9lPVNlKHtzY3JlZW5zcGFjZTohMSxjb2xvcjpuZXcgRC5Db2xvcihcImJsYWNrXCIpLG9wYWNpdHk6MSx0aGlja25lc3M6LjA1LHNpemU6bmV3IEQuVmVjdG9yMn0sXCIjaW5jbHVkZSA8Y29tbW9uPlxcbiAgICNpbmNsdWRlIDxtb3JwaHRhcmdldF9wYXJzX3ZlcnRleD5cXG4gICAjaW5jbHVkZSA8c2tpbm5pbmdfcGFyc192ZXJ0ZXg+XFxuICAgdW5pZm9ybSBmbG9hdCB0aGlja25lc3M7XFxuICAgdW5pZm9ybSBmbG9hdCBzY3JlZW5zcGFjZTtcXG4gICB1bmlmb3JtIHZlYzIgc2l6ZTtcXG4gICB2b2lkIG1haW4oKSB7XFxuICAgICAjaWYgZGVmaW5lZCAoVVNFX1NLSU5OSU5HKVxcblxcdCAgICAgI2luY2x1ZGUgPGJlZ2lubm9ybWFsX3ZlcnRleD5cXG4gICAgICAgI2luY2x1ZGUgPG1vcnBobm9ybWFsX3ZlcnRleD5cXG4gICAgICAgI2luY2x1ZGUgPHNraW5iYXNlX3ZlcnRleD5cXG4gICAgICAgI2luY2x1ZGUgPHNraW5ub3JtYWxfdmVydGV4PlxcbiAgICAgICAjaW5jbHVkZSA8ZGVmYXVsdG5vcm1hbF92ZXJ0ZXg+XFxuICAgICAjZW5kaWZcXG4gICAgICNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XFxuXFx0ICAgI2luY2x1ZGUgPG1vcnBodGFyZ2V0X3ZlcnRleD5cXG5cXHQgICAjaW5jbHVkZSA8c2tpbm5pbmdfdmVydGV4PlxcbiAgICAgI2luY2x1ZGUgPHByb2plY3RfdmVydGV4PlxcbiAgICAgdmVjNCB0Tm9ybWFsID0gdmVjNChub3JtYWwsIDAuMCk7XFxuICAgICB2ZWM0IHRQb3NpdGlvbiA9IHZlYzQodHJhbnNmb3JtZWQsIDEuMCk7XFxuICAgICAjaWZkZWYgVVNFX0lOU1RBTkNJTkdcXG4gICAgICAgdE5vcm1hbCA9IGluc3RhbmNlTWF0cml4ICogdE5vcm1hbDtcXG4gICAgICAgdFBvc2l0aW9uID0gaW5zdGFuY2VNYXRyaXggKiB0UG9zaXRpb247XFxuICAgICAjZW5kaWZcXG4gICAgIGlmIChzY3JlZW5zcGFjZSA9PSAwLjApIHtcXG4gICAgICAgdmVjMyBuZXdQb3NpdGlvbiA9IHRQb3NpdGlvbi54eXogKyB0Tm9ybWFsLnh5eiAqIHRoaWNrbmVzcztcXG4gICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNChuZXdQb3NpdGlvbiwgMS4wKTsgXFxuICAgICB9IGVsc2Uge1xcbiAgICAgICB2ZWM0IGNsaXBQb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB0UG9zaXRpb247XFxuICAgICAgIHZlYzQgY2xpcE5vcm1hbCA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB0Tm9ybWFsO1xcbiAgICAgICB2ZWMyIG9mZnNldCA9IG5vcm1hbGl6ZShjbGlwTm9ybWFsLnh5KSAqIHRoaWNrbmVzcyAvIHNpemUgKiBjbGlwUG9zaXRpb24udyAqIDIuMDtcXG4gICAgICAgY2xpcFBvc2l0aW9uLnh5ICs9IG9mZnNldDtcXG4gICAgICAgZ2xfUG9zaXRpb24gPSBjbGlwUG9zaXRpb247XFxuICAgICB9XFxuICAgfVwiLGB1bmlmb3JtIHZlYzMgY29sb3I7XFxuICAgdW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcbiAgIHZvaWQgbWFpbigpe1xcbiAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgb3BhY2l0eSk7XFxuICAgICAjaW5jbHVkZSA8dG9uZW1hcHBpbmdfZnJhZ21lbnQ+XFxuICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgIH1gKTtjb25zdCBPZT17d2lkdGg6LjIsbGVuZ3RoOjEsZGVjYXk6MSxsb2NhbDohMSxzdHJpZGU6MCxpbnRlcnZhbDoxfSxOZT0oZSx0PTEpPT4oZS5zZXQoZS5zdWJhcnJheSh0KSksZS5maWxsKC0xLzAsLXQpLGUpO2Z1bmN0aW9uIEJlKGUsdCl7Y29uc3R7bGVuZ3RoOnIsbG9jYWw6byxkZWNheTppLGludGVydmFsOnMsc3RyaWRlOmx9PXsuLi5PZSwuLi50fSxjPWsudXNlUmVmKCksW3VdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKSk7ay51c2VMYXlvdXRFZmZlY3QoKCgpPT57ZSYmKGMuY3VycmVudD1GbG9hdDMyQXJyYXkuZnJvbSh7bGVuZ3RoOjEwKnIqM30sKCh0LHIpPT5lLnBvc2l0aW9uLmdldENvbXBvbmVudChyJTMpKSkpfSksW3IsZV0pO2NvbnN0IGQ9ay51c2VSZWYobmV3IG4uVmVjdG9yMyksbT1rLnVzZVJlZigwKTtyZXR1cm4gYS51c2VGcmFtZSgoKCk9PntpZihlJiZjLmN1cnJlbnQpe2lmKDA9PT1tLmN1cnJlbnQpe2xldCB0O28/dD1lLnBvc2l0aW9uOihlLmdldFdvcmxkUG9zaXRpb24odSksdD11KTtjb25zdCByPTEqaTtmb3IobGV0IGU9MDtlPHI7ZSsrKXQuZGlzdGFuY2VUbyhkLmN1cnJlbnQpPGx8fChOZShjLmN1cnJlbnQsMyksYy5jdXJyZW50LnNldCh0LnRvQXJyYXkoKSxjLmN1cnJlbnQubGVuZ3RoLTMpKTtkLmN1cnJlbnQuY29weSh0KX1tLmN1cnJlbnQrKyxtLmN1cnJlbnQ9bS5jdXJyZW50JXN9fSkpLGN9Y29uc3QgSWU9ay5mb3J3YXJkUmVmKCgoZSx0KT0+e2NvbnN0e2NoaWxkcmVuOnJ9PWUse3dpZHRoOm8sbGVuZ3RoOmksZGVjYXk6cyxsb2NhbDpsLHN0cmlkZTpjLGludGVydmFsOnV9PXsuLi5PZSwuLi5lfSx7Y29sb3I6ZD1cImhvdHBpbmtcIixhdHRlbnVhdGlvbjptLHRhcmdldDpmfT1lLHA9YS51c2VUaHJlZSgoZT0+ZS5zaXplKSkseT1hLnVzZVRocmVlKChlPT5lLnNjZW5lKSkseD1rLnVzZVJlZihudWxsKSxbdixnXT1rLnVzZVN0YXRlKG51bGwpLHo9QmUodix7bGVuZ3RoOmksZGVjYXk6cyxsb2NhbDpsLHN0cmlkZTpjLGludGVydmFsOnV9KTtrLnVzZUVmZmVjdCgoKCk9Pntjb25zdCBlPShudWxsPT1mP3ZvaWQgMDpmLmN1cnJlbnQpfHx4LmN1cnJlbnQuY2hpbGRyZW4uZmluZCgoZT0+ZSBpbnN0YW5jZW9mIG4uT2JqZWN0M0QpKTtlJiZnKGUpfSksW3osZl0pO2NvbnN0IHc9ay51c2VNZW1vKCgoKT0+bmV3IGguTWVzaExpbmVHZW9tZXRyeSksW10pLGI9ay51c2VNZW1vKCgoKT0+e3ZhciBlO2NvbnN0IHQ9bmV3IGguTWVzaExpbmVNYXRlcmlhbCh7bGluZVdpZHRoOi4xKm8sY29sb3I6ZCxzaXplQXR0ZW51YXRpb246MSxyZXNvbHV0aW9uOm5ldyBuLlZlY3RvcjIocC53aWR0aCxwLmhlaWdodCl9KTtsZXQgYTtpZihyKWlmKEFycmF5LmlzQXJyYXkocikpYT1yLmZpbmQoKGU9Pntjb25zdCB0PWU7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQudHlwZSYmXCJtZXNoTGluZU1hdGVyaWFsXCI9PT10LnR5cGV9KSk7ZWxzZXtjb25zdCBlPXI7XCJzdHJpbmdcIj09dHlwZW9mIGUudHlwZSYmXCJtZXNoTGluZU1hdGVyaWFsXCI9PT1lLnR5cGUmJihhPWUpfXJldHVyblwib2JqZWN0XCI9PXR5cGVvZihudWxsPT0oZT1hKT92b2lkIDA6ZS5wcm9wcykmJnQuc2V0VmFsdWVzKGEucHJvcHMpLHR9KSxbbyxkLHAscl0pO3JldHVybiBrLnVzZUVmZmVjdCgoKCk9PntiLnVuaWZvcm1zLnJlc29sdXRpb24udmFsdWUuc2V0KHAud2lkdGgscC5oZWlnaHQpfSksW3BdKSxhLnVzZUZyYW1lKCgoKT0+e3ouY3VycmVudCYmdy5zZXRQb2ludHMoei5jdXJyZW50LG0pfSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsbnVsbCxhLmNyZWF0ZVBvcnRhbChrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIse3JlZjp0LGdlb21ldHJ5OncsbWF0ZXJpYWw6Yn0pLHkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjp4fSxyKSl9KSk7ZnVuY3Rpb24gVWUoZSx0PTE2LHIsYSxvKXtjb25zdFtpLHNdPWsudXNlU3RhdGUoKCgpPT57Y29uc3QgZT1BcnJheS5mcm9tKHtsZW5ndGg6dH0sKCgpPT5bMSwwLDAsMCwwLDEsMCwwLDAsMCwxLDAsMCwwLDAsMV0pKS5mbGF0KCk7cmV0dXJuIG5ldyBuLkluc3RhbmNlZEJ1ZmZlckF0dHJpYnV0ZShGbG9hdDMyQXJyYXkuZnJvbShlKSwxNil9KSk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2lmKHZvaWQgMD09PWUuY3VycmVudClyZXR1cm47Y29uc3QgbD1uZXcgZC5NZXNoU3VyZmFjZVNhbXBsZXIoZS5jdXJyZW50KTthJiZsLnNldFdlaWdodEF0dHJpYnV0ZShhKSxsLmJ1aWxkKCk7Y29uc3QgYz1uZXcgbi5WZWN0b3IzLHU9bmV3IG4uVmVjdG9yMyxtPW5ldyBuLkNvbG9yLGY9bmV3IG4uT2JqZWN0M0Q7ZS5jdXJyZW50LnVwZGF0ZU1hdHJpeFdvcmxkKCEwKTtmb3IobGV0IG49MDtuPHQ7bisrKWwuc2FtcGxlKGMsdSxtKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiByP3Ioe2R1bW15OmYsc2FtcGxlZE1lc2g6ZS5jdXJyZW50LHBvc2l0aW9uOmMsbm9ybWFsOnUsY29sb3I6bX0sbik6Zi5wb3NpdGlvbi5jb3B5KGMpLGYudXBkYXRlTWF0cml4KCksbnVsbCE9byYmby5jdXJyZW50JiZvLmN1cnJlbnQuc2V0TWF0cml4QXQobixmLm1hdHJpeCksZi5tYXRyaXgudG9BcnJheShpLmFycmF5LDE2Km4pO251bGwhPW8mJm8uY3VycmVudCYmKG8uY3VycmVudC5pbnN0YW5jZU1hdHJpeC5uZWVkc1VwZGF0ZT0hMCksaS5uZWVkc1VwZGF0ZT0hMCxzKGkuY2xvbmUoKSl9KSxbZSxvLGEsdCxyXSksaX1jb25zdCBWZT1rLmZvcndhcmRSZWYoKCh7aXNDaGlsZDplPSExLG9iamVjdDp0LGNoaWxkcmVuOnIsZGVlcDpuLGNhc3RTaGFkb3c6YSxyZWNlaXZlU2hhZG93Om8saW5qZWN0Omksa2V5czpzLC4uLmx9LGMpPT57dmFyIHU7Y29uc3QgbT17a2V5czpzLGRlZXA6bixpbmplY3Q6aSxjYXN0U2hhZG93OmEscmVjZWl2ZVNoYWRvdzpvfTtpZih0PWsudXNlTWVtbygoKCk9PntpZighMT09PWUmJiFBcnJheS5pc0FycmF5KHQpKXtsZXQgZT0hMTtpZih0LnRyYXZlcnNlKCh0PT57dC5pc1NraW5uZWRNZXNoJiYoZT0hMCl9KSksZSlyZXR1cm4gZC5Ta2VsZXRvblV0aWxzLmNsb25lKHQpfXJldHVybiB0fSksW3QsZV0pLEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsUi5kZWZhdWx0KHt9LGwse3JlZjpjfSksdC5tYXAoKGU9PmsuY3JlYXRlRWxlbWVudChWZSxSLmRlZmF1bHQoe2tleTplLnV1aWQsb2JqZWN0OmV9LG0pKSkpLHIpO2NvbnN0e2NoaWxkcmVuOmYsLi4ucH09ZnVuY3Rpb24oZSx7a2V5czp0PVtcIm5lYXJcIixcImZhclwiLFwiY29sb3JcIixcImRpc3RhbmNlXCIsXCJkZWNheVwiLFwicGVudW1icmFcIixcImFuZ2xlXCIsXCJpbnRlbnNpdHlcIixcInNrZWxldG9uXCIsXCJ2aXNpYmxlXCIsXCJjYXN0U2hhZG93XCIsXCJyZWNlaXZlU2hhZG93XCIsXCJtb3JwaFRhcmdldERpY3Rpb25hcnlcIixcIm1vcnBoVGFyZ2V0SW5mbHVlbmNlc1wiLFwibmFtZVwiLFwiZ2VvbWV0cnlcIixcIm1hdGVyaWFsXCIsXCJwb3NpdGlvblwiLFwicm90YXRpb25cIixcInNjYWxlXCIsXCJ1cFwiLFwidXNlckRhdGFcIixcImJpbmRNb2RlXCIsXCJiaW5kTWF0cml4XCIsXCJiaW5kTWF0cml4SW52ZXJzZVwiLFwic2tlbGV0b25cIl0sZGVlcDpyLGluamVjdDpuLGNhc3RTaGFkb3c6YSxyZWNlaXZlU2hhZG93Om99KXtsZXQgaT1PLmRlZmF1bHQoZSx0KTtyZXR1cm4gciYmKGkuZ2VvbWV0cnkmJlwibWF0ZXJpYWxzT25seVwiIT09ciYmKGkuZ2VvbWV0cnk9aS5nZW9tZXRyeS5jbG9uZSgpKSxpLm1hdGVyaWFsJiZcImdlb21ldHJpZXNPbmx5XCIhPT1yJiYoaS5tYXRlcmlhbD1pLm1hdGVyaWFsLmNsb25lKCkpKSxuJiYoaT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP3suLi5pLGNoaWxkcmVuOm4oZSl9OmsuaXNWYWxpZEVsZW1lbnQobik/ey4uLmksY2hpbGRyZW46bn06ey4uLmksLi4ubn0pLGUgaW5zdGFuY2VvZiBELk1lc2gmJihhJiYoaS5jYXN0U2hhZG93PSEwKSxvJiYoaS5yZWNlaXZlU2hhZG93PSEwKSksaX0odCxtKSxoPXQudHlwZVswXS50b0xvd2VyQ2FzZSgpK3QudHlwZS5zbGljZSgxKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KGgsUi5kZWZhdWx0KHt9LHAsbCx7cmVmOmN9KSwobnVsbD09KHU9dCk/dm9pZCAwOnUuY2hpbGRyZW4pLm1hcCgoZT0+XCJCb25lXCI9PT1lLnR5cGU/ay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHtrZXk6ZS51dWlkLG9iamVjdDplfSxtKSk6ay5jcmVhdGVFbGVtZW50KFZlLFIuZGVmYXVsdCh7a2V5OmUudXVpZCxvYmplY3Q6ZX0sbSx7aXNDaGlsZDohMH0pKSkpLHIsZil9KSksamU9ay5jcmVhdGVDb250ZXh0KG51bGwpLFdlPWsuZm9yd2FyZFJlZigoKHtyZXNvbHV0aW9uOmU9MjgsbWF4UG9seUNvdW50OnQ9MWU0LGVuYWJsZVV2czpyPSExLGVuYWJsZUNvbG9yczpuPSExLGNoaWxkcmVuOm8sLi4uaX0scyk9Pntjb25zdCBsPWsudXNlUmVmKG51bGwpLGM9ay51c2VNZW1vKCgoKT0+bmV3IGQuTWFyY2hpbmdDdWJlcyhlLG51bGwscixuLHQpKSxbZSx0LHIsbl0pLHU9ay51c2VNZW1vKCgoKT0+KHtnZXRQYXJlbnQ6KCk9Pmx9KSksW10pO3JldHVybiBhLnVzZUZyYW1lKCgoKT0+e2MudXBkYXRlKCksYy5yZXNldCgpfSksLTEpLGsuY3JlYXRlRWxlbWVudChrLkZyYWdtZW50LG51bGwsay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHtvYmplY3Q6YyxyZWY6QS5kZWZhdWx0KFtsLHNdKX0saSksay5jcmVhdGVFbGVtZW50KGplLlByb3ZpZGVyLHt2YWx1ZTp1fSxvKSkpfSkpLEdlPWsuZm9yd2FyZFJlZigoKHtzdHJlbmd0aDplPS41LHN1YnRyYWN0OnQ9MTIsY29sb3I6ciwuLi5ufSxvKT0+e2NvbnN0e2dldFBhcmVudDppfT1rLnVzZUNvbnRleHQoamUpLHM9ay51c2VNZW1vKCgoKT0+aSgpKSxbaV0pLGw9ay51c2VSZWYoKSxjPW5ldyBELlZlY3RvcjM7cmV0dXJuIGEudXNlRnJhbWUoKG49PntzLmN1cnJlbnQmJmwuY3VycmVudCYmKGwuY3VycmVudC5nZXRXb3JsZFBvc2l0aW9uKGMpLHMuY3VycmVudC5hZGRCYWxsKC41Ky41KmMueCwuNSsuNSpjLnksLjUrLjUqYy56LGUsdCxyKSl9KSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjpBLmRlZmF1bHQoW28sbF0pfSxuKSl9KSksSGU9ay5mb3J3YXJkUmVmKCgoe3BsYW5lVHlwZTplPVwieFwiLHN0cmVuZ3RoOnQ9LjUsc3VidHJhY3Q6cj0xMiwuLi5ufSxvKT0+e2NvbnN0e2dldFBhcmVudDppfT1rLnVzZUNvbnRleHQoamUpLHM9ay51c2VNZW1vKCgoKT0+aSgpKSxbaV0pLGw9ay51c2VSZWYoKSxjPWsudXNlTWVtbygoKCk9PlwieFwiPT09ZT9cImFkZFBsYW5lWFwiOlwieVwiPT09ZT9cImFkZFBsYW5lWVwiOlwiYWRkUGxhbmVaXCIpLFtlXSk7cmV0dXJuIGEudXNlRnJhbWUoKCgpPT57cy5jdXJyZW50JiZsLmN1cnJlbnQmJnMuY3VycmVudFtjXSh0LHIpfSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsUi5kZWZhdWx0KHtyZWY6QS5kZWZhdWx0KFtvLGxdKX0sbikpfSkpO2Z1bmN0aW9uICRlKGU9WzAsMCwwXSl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpfShlKT9lOmUgaW5zdGFuY2VvZiBELlZlY3RvcjN8fGUgaW5zdGFuY2VvZiBELkV1bGVyP1tlLngsZS55LGUuel06W2UsZSxlXX1jb25zdCBxZT1rLmZvcndhcmRSZWYoKGZ1bmN0aW9uKHtkZWJ1ZzplLGRlcHRoVGVzdDp0PSExLHBvbHlnb25PZmZzZXRGYWN0b3I6cj0tMTAsbWFwOm4sbWVzaDpvLGNoaWxkcmVuOmkscG9zaXRpb246cyxyb3RhdGlvbjpsLHNjYWxlOmMsLi4udX0sbSl7Y29uc3QgZj1rLnVzZVJlZihudWxsKTtrLnVzZUltcGVyYXRpdmVIYW5kbGUobSwoKCk9PmYuY3VycmVudCkpO2NvbnN0IHA9ay51c2VSZWYobnVsbCk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2NvbnN0IGU9KG51bGw9PW8/dm9pZCAwOm8uY3VycmVudCl8fGYuY3VycmVudC5wYXJlbnQsdD1mLmN1cnJlbnQ7aWYoIShlIGluc3RhbmNlb2YgRC5NZXNoKSl0aHJvdyBuZXcgRXJyb3IoJ0RlY2FsIG11c3QgaGF2ZSBhIE1lc2ggYXMgcGFyZW50IG9yIHNwZWNpZnkgaXRzIFwibWVzaFwiIHByb3AnKTtjb25zdCByPXtwb3NpdGlvbjpuZXcgRC5WZWN0b3IzLHJvdGF0aW9uOm5ldyBELkV1bGVyLHNjYWxlOm5ldyBELlZlY3RvcjMoMSwxLDEpfTtpZihlKXthLmFwcGx5UHJvcHMocix7cG9zaXRpb246cyxzY2FsZTpjfSk7Y29uc3Qgbj1lLm1hdHJpeFdvcmxkLmNsb25lKCk7aWYoZS5tYXRyaXhXb3JsZC5pZGVudGl0eSgpLGwmJlwibnVtYmVyXCIhPXR5cGVvZiBsKWEuYXBwbHlQcm9wcyhyLHtyb3RhdGlvbjpsfSk7ZWxzZXtjb25zdCB0PW5ldyBELk9iamVjdDNEO3QucG9zaXRpb24uY29weShyLnBvc2l0aW9uKSx0Lmxvb2tBdChlLnBvc2l0aW9uKSxcIm51bWJlclwiPT10eXBlb2YgbCYmdC5yb3RhdGVaKGwpLGEuYXBwbHlQcm9wcyhyLHtyb3RhdGlvbjp0LnJvdGF0aW9ufSl9cmV0dXJuIHQuZ2VvbWV0cnk9bmV3IGQuRGVjYWxHZW9tZXRyeShlLHIucG9zaXRpb24sci5yb3RhdGlvbixyLnNjYWxlKSxwLmN1cnJlbnQmJihhLmFwcGx5UHJvcHMocC5jdXJyZW50LHIpLHAuY3VycmVudC50cmF2ZXJzZSgoZT0+ZS5yYXljYXN0PSgpPT5udWxsKSkpLGUubWF0cml4V29ybGQ9biwoKT0+e3QuZ2VvbWV0cnkuZGlzcG9zZSgpfX19KSxbbywuLi4kZShzKSwuLi4kZShjKSwuLi4kZShsKV0pLGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIixSLmRlZmF1bHQoe3JlZjpmLFwibWF0ZXJpYWwtdHJhbnNwYXJlbnRcIjohMCxcIm1hdGVyaWFsLXBvbHlnb25PZmZzZXRcIjohMCxcIm1hdGVyaWFsLXBvbHlnb25PZmZzZXRGYWN0b3JcIjpyLFwibWF0ZXJpYWwtZGVwdGhUZXN0XCI6dCxcIm1hdGVyaWFsLW1hcFwiOm59LHUpLGksZSYmay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHtyZWY6cH0say5jcmVhdGVFbGVtZW50KFwiYm94R2VvbWV0cnlcIixudWxsKSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoTm9ybWFsTWF0ZXJpYWxcIix7d2lyZWZyYW1lOiEwfSksay5jcmVhdGVFbGVtZW50KFwiYXhlc0hlbHBlclwiLG51bGwpKSl9KSksWGU9dC5mb3J3YXJkUmVmKChmdW5jdGlvbih7c3JjOmUsc2tpcEZpbGw6cixza2lwU3Ryb2tlczpvLGZpbGxNYXRlcmlhbDppLHN0cm9rZU1hdGVyaWFsOnMsZmlsbE1lc2hQcm9wczpsLHN0cm9rZU1lc2hQcm9wczpjLC4uLnV9LG0pe2NvbnN0IGY9YS51c2VMb2FkZXIoZC5TVkdMb2FkZXIsZS5zdGFydHNXaXRoKFwiPHN2Z1wiKT9gZGF0YTppbWFnZS9zdmcreG1sO3V0ZjgsJHtlfWA6ZSkscD10LnVzZU1lbW8oKCgpPT5vP1tdOmYucGF0aHMubWFwKChlPT57dmFyIHQ7cmV0dXJuIHZvaWQgMD09PShudWxsPT0odD1lLnVzZXJEYXRhKT92b2lkIDA6dC5zdHlsZS5zdHJva2UpfHxcIm5vbmVcIj09PWUudXNlckRhdGEuc3R5bGUuc3Ryb2tlP251bGw6ZS5zdWJQYXRocy5tYXAoKHQ9PmQuU1ZHTG9hZGVyLnBvaW50c1RvU3Ryb2tlKHQuZ2V0UG9pbnRzKCksZS51c2VyRGF0YS5zdHlsZSkpKX0pKSksW2Ysb10pO3JldHVybiB0LnVzZUVmZmVjdCgoKCk9PigpPT5wLmZvckVhY2goKGU9PmUmJmUubWFwKChlPT5lLmRpc3Bvc2UoKSkpKSkpLFtwXSksay5jcmVhdGVFbGVtZW50KFwib2JqZWN0M0RcIixSLmRlZmF1bHQoe3JlZjptfSx1KSxrLmNyZWF0ZUVsZW1lbnQoXCJvYmplY3QzRFwiLHtzY2FsZTpbMSwtMSwxXX0sZi5wYXRocy5tYXAoKChlLGEpPT57dmFyIHUsbTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KHQuRnJhZ21lbnQse2tleTphfSwhciYmdm9pZCAwIT09KG51bGw9PSh1PWUudXNlckRhdGEpP3ZvaWQgMDp1LnN0eWxlLmZpbGwpJiZcIm5vbmVcIiE9PWUudXNlckRhdGEuc3R5bGUuZmlsbCYmZC5TVkdMb2FkZXIuY3JlYXRlU2hhcGVzKGUpLm1hcCgoKHQscik9PmsuY3JlYXRlRWxlbWVudChcIm1lc2hcIixSLmRlZmF1bHQoe2tleTpyfSxsKSxrLmNyZWF0ZUVsZW1lbnQoXCJzaGFwZUdlb21ldHJ5XCIse2FyZ3M6W3RdfSksay5jcmVhdGVFbGVtZW50KFwibWVzaEJhc2ljTWF0ZXJpYWxcIixSLmRlZmF1bHQoe2NvbG9yOmUudXNlckRhdGEuc3R5bGUuZmlsbCxvcGFjaXR5OmUudXNlckRhdGEuc3R5bGUuZmlsbE9wYWNpdHksdHJhbnNwYXJlbnQ6ITAsc2lkZTpuLkRvdWJsZVNpZGUsZGVwdGhXcml0ZTohMX0saSkpKSkpLCFvJiZ2b2lkIDAhPT0obnVsbD09KG09ZS51c2VyRGF0YSk/dm9pZCAwOm0uc3R5bGUuc3Ryb2tlKSYmXCJub25lXCIhPT1lLnVzZXJEYXRhLnN0eWxlLnN0cm9rZSYmZS5zdWJQYXRocy5tYXAoKCh0LHIpPT5rLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIsUi5kZWZhdWx0KHtrZXk6cixnZW9tZXRyeTpwW2FdW3JdfSxjKSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoQmFzaWNNYXRlcmlhbFwiLFIuZGVmYXVsdCh7Y29sb3I6ZS51c2VyRGF0YS5zdHlsZS5zdHJva2Usb3BhY2l0eTplLnVzZXJEYXRhLnN0eWxlLnN0cm9rZU9wYWNpdHksdHJhbnNwYXJlbnQ6ITAsc2lkZTpuLkRvdWJsZVNpZGUsZGVwdGhXcml0ZTohMX0scykpKSkpKX0pKSkpfSkpO2xldCBZZT1udWxsLEtlPVwiaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZHJhY28vdmVyc2lvbmVkL2RlY29kZXJzLzEuNS41L1wiO2Z1bmN0aW9uIFFlKGUsdCxyKXtyZXR1cm4gbj0+e3ImJnIobiksZSYmKFllfHwoWWU9bmV3IGQuRFJBQ09Mb2FkZXIpLFllLnNldERlY29kZXJQYXRoKFwic3RyaW5nXCI9PXR5cGVvZiBlP2U6S2UpLG4uc2V0RFJBQ09Mb2FkZXIoWWUpKSx0JiZuLnNldE1lc2hvcHREZWNvZGVyKFwiZnVuY3Rpb25cIj09dHlwZW9mIGQuTWVzaG9wdERlY29kZXI/ZC5NZXNob3B0RGVjb2RlcigpOmQuTWVzaG9wdERlY29kZXIpfX1mdW5jdGlvbiBaZShlLHQ9ITAscj0hMCxuKXtyZXR1cm4gYS51c2VMb2FkZXIoZC5HTFRGTG9hZGVyLGUsUWUodCxyLG4pKX1aZS5wcmVsb2FkPShlLHQ9ITAscj0hMCxuKT0+YS51c2VMb2FkZXIucHJlbG9hZChkLkdMVEZMb2FkZXIsZSxRZSh0LHIsbikpLFplLmNsZWFyPWU9PmEudXNlTG9hZGVyLmNsZWFyKGQuR0xURkxvYWRlcixlKSxaZS5zZXREZWNvZGVyUGF0aD1lPT57S2U9ZX07Y29uc3QgSmU9ay5mb3J3YXJkUmVmKCgoe3NyYzplLC4uLnR9LHIpPT57Y29uc3R7c2NlbmU6bn09WmUoZSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChWZSxSLmRlZmF1bHQoe3JlZjpyfSx0LHtvYmplY3Q6bn0pKX0pKTtmdW5jdGlvbiBldChlLHQscil7Y29uc3Qgbj1hLnVzZVRocmVlKChlPT5lLnNpemUpKSxvPWEudXNlVGhyZWUoKGU9PmUudmlld3BvcnQpKSxpPVwibnVtYmVyXCI9PXR5cGVvZiBlP2U6bi53aWR0aCpvLmRwcixzPVwibnVtYmVyXCI9PXR5cGVvZiB0P3Q6bi5oZWlnaHQqby5kcHIsbD0oXCJudW1iZXJcIj09dHlwZW9mIGU/cjplKXx8e30se3NhbXBsZXM6Yz0wLGRlcHRoOnUsLi4uZH09bCxtPWsudXNlTWVtbygoKCk9Pntjb25zdCBlPW5ldyBELldlYkdMUmVuZGVyVGFyZ2V0KGkscyx7bWluRmlsdGVyOkQuTGluZWFyRmlsdGVyLG1hZ0ZpbHRlcjpELkxpbmVhckZpbHRlcix0eXBlOkQuSGFsZkZsb2F0VHlwZSwuLi5kfSk7cmV0dXJuIHUmJihlLmRlcHRoVGV4dHVyZT1uZXcgRC5EZXB0aFRleHR1cmUoaSxzLEQuRmxvYXRUeXBlKSksZS5zYW1wbGVzPWMsZX0pLFtdKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57bS5zZXRTaXplKGkscyksYyYmKG0uc2FtcGxlcz1jKX0pLFtjLG0saSxzXSksay51c2VFZmZlY3QoKCgpPT4oKT0+bS5kaXNwb3NlKCkpLFtdKSxtfWNvbnN0IHR0PWsuZm9yd2FyZFJlZigoKHtlbnZNYXA6ZSxyZXNvbHV0aW9uOnQ9MjU2LGZyYW1lczpyPTEvMCxjaGlsZHJlbjpuLG1ha2VEZWZhdWx0Om8sLi4uaX0scyk9Pntjb25zdCBsPWEudXNlVGhyZWUoKCh7c2V0OmV9KT0+ZSkpLGM9YS51c2VUaHJlZSgoKHtjYW1lcmE6ZX0pPT5lKSksdT1hLnVzZVRocmVlKCgoe3NpemU6ZX0pPT5lKSksZD1rLnVzZVJlZihudWxsKSxtPWsudXNlUmVmKG51bGwpLGY9ZXQodCk7ay51c2VMYXlvdXRFZmZlY3QoKCgpPT57aS5tYW51YWx8fGQuY3VycmVudC51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCl9KSxbdSxpXSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57ZC5jdXJyZW50LnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKX0pKSxrLnVzZUxheW91dEVmZmVjdCgoKCk9PntpZihvKXtjb25zdCBlPWM7cmV0dXJuIGwoKCgpPT4oe2NhbWVyYTpkLmN1cnJlbnR9KSkpLCgpPT5sKCgoKT0+KHtjYW1lcmE6ZX0pKSl9fSksW2QsbyxsXSk7bGV0IHA9MCxoPW51bGw7Y29uc3QgeT1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuO3JldHVybiBhLnVzZUZyYW1lKCh0PT57eSYmKHI9PT0xLzB8fHA8cikmJihtLmN1cnJlbnQudmlzaWJsZT0hMSx0LmdsLnNldFJlbmRlclRhcmdldChmKSxoPXQuc2NlbmUuYmFja2dyb3VuZCxlJiYodC5zY2VuZS5iYWNrZ3JvdW5kPWUpLHQuZ2wucmVuZGVyKHQuc2NlbmUsZC5jdXJyZW50KSx0LnNjZW5lLmJhY2tncm91bmQ9aCx0LmdsLnNldFJlbmRlclRhcmdldChudWxsKSxtLmN1cnJlbnQudmlzaWJsZT0hMCxwKyspfSkpLGsuY3JlYXRlRWxlbWVudChrLkZyYWdtZW50LG51bGwsay5jcmVhdGVFbGVtZW50KFwib3J0aG9ncmFwaGljQ2FtZXJhXCIsUi5kZWZhdWx0KHtsZWZ0OnUud2lkdGgvLTIscmlnaHQ6dS53aWR0aC8yLHRvcDp1LmhlaWdodC8yLGJvdHRvbTp1LmhlaWdodC8tMixyZWY6QS5kZWZhdWx0KFtkLHNdKX0saSksIXkmJm4pLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjptfSx5JiZuKGYudGV4dHVyZSkpKX0pKSxydD1rLmZvcndhcmRSZWYoKCh7ZW52TWFwOmUscmVzb2x1dGlvbjp0PTI1NixmcmFtZXM6cj0xLzAsbWFrZURlZmF1bHQ6bixjaGlsZHJlbjpvLC4uLml9LHMpPT57Y29uc3QgbD1hLnVzZVRocmVlKCgoe3NldDplfSk9PmUpKSxjPWEudXNlVGhyZWUoKCh7Y2FtZXJhOmV9KT0+ZSkpLHU9YS51c2VUaHJlZSgoKHtzaXplOmV9KT0+ZSkpLGQ9ay51c2VSZWYobnVsbCksbT1rLnVzZVJlZihudWxsKSxmPWV0KHQpO2sudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2kubWFudWFsfHwoZC5jdXJyZW50LmFzcGVjdD11LndpZHRoL3UuaGVpZ2h0KX0pLFt1LGldKSxrLnVzZUxheW91dEVmZmVjdCgoKCk9PntkLmN1cnJlbnQudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpfSkpO2xldCBwPTAsaD1udWxsO2NvbnN0IHk9XCJmdW5jdGlvblwiPT10eXBlb2YgbztyZXR1cm4gYS51c2VGcmFtZSgodD0+e3kmJihyPT09MS8wfHxwPHIpJiYobS5jdXJyZW50LnZpc2libGU9ITEsdC5nbC5zZXRSZW5kZXJUYXJnZXQoZiksaD10LnNjZW5lLmJhY2tncm91bmQsZSYmKHQuc2NlbmUuYmFja2dyb3VuZD1lKSx0LmdsLnJlbmRlcih0LnNjZW5lLGQuY3VycmVudCksdC5zY2VuZS5iYWNrZ3JvdW5kPWgsdC5nbC5zZXRSZW5kZXJUYXJnZXQobnVsbCksbS5jdXJyZW50LnZpc2libGU9ITAscCsrKX0pKSxrLnVzZUxheW91dEVmZmVjdCgoKCk9PntpZihuKXtjb25zdCBlPWM7cmV0dXJuIGwoKCgpPT4oe2NhbWVyYTpkLmN1cnJlbnR9KSkpLCgpPT5sKCgoKT0+KHtjYW1lcmE6ZX0pKSl9fSksW2QsbixsXSksay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxrLmNyZWF0ZUVsZW1lbnQoXCJwZXJzcGVjdGl2ZUNhbWVyYVwiLFIuZGVmYXVsdCh7cmVmOkEuZGVmYXVsdChbZCxzXSl9LGkpLCF5JiZvKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtyZWY6bX0seSYmbyhmLnRleHR1cmUpKSl9KSk7ZnVuY3Rpb24gbnQoe3Jlc29sdXRpb246ZT0yNTYsbmVhcjpyPS4xLGZhcjpvPTFlMyxlbnZNYXA6aSxmb2c6c309e30pe2NvbnN0IGw9YS51c2VUaHJlZSgoKHtnbDplfSk9PmUpKSxjPWEudXNlVGhyZWUoKCh7c2NlbmU6ZX0pPT5lKSksdT10LnVzZU1lbW8oKCgpPT57Y29uc3QgdD1uZXcgbi5XZWJHTEN1YmVSZW5kZXJUYXJnZXQoZSk7cmV0dXJuIHQudGV4dHVyZS50eXBlPW4uSGFsZkZsb2F0VHlwZSx0fSksW2VdKTt0LnVzZUVmZmVjdCgoKCk9PigpPT57dS5kaXNwb3NlKCl9KSxbdV0pO2NvbnN0IGQ9dC51c2VNZW1vKCgoKT0+bmV3IEQuQ3ViZUNhbWVyYShyLG8sdSkpLFtyLG8sdV0pO2xldCBtLGY7Y29uc3QgcD1rLnVzZUNhbGxiYWNrKCgoKT0+e209Yy5mb2csZj1jLmJhY2tncm91bmQsYy5iYWNrZ3JvdW5kPWl8fGYsYy5mb2c9c3x8bSxkLnVwZGF0ZShsLGMpLGMuZm9nPW0sYy5iYWNrZ3JvdW5kPWZ9KSxbbCxjLGRdKTtyZXR1cm57ZmJvOnUsY2FtZXJhOmQsdXBkYXRlOnB9fWNvbnN0IGF0PWsuZm9yd2FyZFJlZigoKGUsdCk9Pntjb25zdHtjYW1lcmE6cixvbkNoYW5nZTpuLG1ha2VEZWZhdWx0Om8sLi4uaX09ZSxzPWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSksbD1hLnVzZVRocmVlKChlPT5lLmludmFsaWRhdGUpKSxjPWEudXNlVGhyZWUoKGU9PmUuZ2V0KSksdT1hLnVzZVRocmVlKChlPT5lLnNldCkpLG09cnx8cyxmPWsudXNlTWVtbygoKCk9Pm5ldyBkLkRldmljZU9yaWVudGF0aW9uQ29udHJvbHMobSkpLFttXSk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+e2NvbnN0IGU9ZT0+e2woKSxuJiZuKGUpfTtyZXR1cm4gbnVsbD09Znx8bnVsbD09Zi5hZGRFdmVudExpc3RlbmVyfHxmLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixlKSwoKT0+bnVsbD09Znx8bnVsbD09Zi5yZW1vdmVFdmVudExpc3RlbmVyP3ZvaWQgMDpmLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixlKX0pLFtuLGYsbF0pLGEudXNlRnJhbWUoKCgpPT5udWxsPT1mP3ZvaWQgMDpmLnVwZGF0ZSgpKSwtMSksay51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT1mO3JldHVybiBudWxsPT1lfHxlLmNvbm5lY3QoKSwoKT0+bnVsbD09ZT92b2lkIDA6ZS5kaXNwb3NlKCl9KSxbZl0pLGsudXNlRWZmZWN0KCgoKT0+e2lmKG8pe2NvbnN0IGU9YygpLmNvbnRyb2xzO3JldHVybiB1KHtjb250cm9sczpmfSksKCk9PnUoe2NvbnRyb2xzOmV9KX19KSxbbyxmXSksZj9rLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIixSLmRlZmF1bHQoe3JlZjp0LG9iamVjdDpmfSxpKSk6bnVsbH0pKSxvdD1rLmZvcndhcmRSZWYoKCh7ZG9tRWxlbWVudDplLC4uLnR9LHIpPT57Y29uc3R7b25DaGFuZ2U6bixtYWtlRGVmYXVsdDpvLC4uLml9PXQscz1hLnVzZVRocmVlKChlPT5lLmludmFsaWRhdGUpKSxsPWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSksYz1hLnVzZVRocmVlKChlPT5lLmdsKSksdT1hLnVzZVRocmVlKChlPT5lLmV2ZW50cykpLG09YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSxmPWEudXNlVGhyZWUoKGU9PmUuc2V0KSkscD1lfHx1LmNvbm5lY3RlZHx8Yy5kb21FbGVtZW50LGg9ay51c2VNZW1vKCgoKT0+bmV3IGQuRmx5Q29udHJvbHMobCkpLFtsXSk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+KGguY29ubmVjdChwKSwoKT0+e2guZGlzcG9zZSgpfSkpLFtwLGgsc10pLGsudXNlRWZmZWN0KCgoKT0+e2NvbnN0IGU9ZT0+e3MoKSxuJiZuKGUpfTtyZXR1cm4gbnVsbD09aC5hZGRFdmVudExpc3RlbmVyfHxoLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixlKSwoKT0+bnVsbD09aC5yZW1vdmVFdmVudExpc3RlbmVyP3ZvaWQgMDpoLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixlKX0pLFtuLHNdKSxrLnVzZUVmZmVjdCgoKCk9PntpZihvKXtjb25zdCBlPW0oKS5jb250cm9scztyZXR1cm4gZih7Y29udHJvbHM6aH0pLCgpPT5mKHtjb250cm9sczplfSl9fSksW28saF0pLGEudXNlRnJhbWUoKChlLHQpPT5oLnVwZGF0ZSh0KSkpLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7cmVmOnIsb2JqZWN0OmgsYXJnczpbbCxwXX0saSkpfSkpLGl0PWsuZm9yd2FyZFJlZigoKGU9e2VuYWJsZURhbXBpbmc6ITB9LHQpPT57Y29uc3R7ZG9tRWxlbWVudDpyLGNhbWVyYTpuLG1ha2VEZWZhdWx0Om8sb25DaGFuZ2U6aSxvblN0YXJ0OnMsb25FbmQ6bCwuLi5jfT1lLHU9YS51c2VUaHJlZSgoZT0+ZS5pbnZhbGlkYXRlKSksbT1hLnVzZVRocmVlKChlPT5lLmNhbWVyYSkpLGY9YS51c2VUaHJlZSgoZT0+ZS5nbCkpLHA9YS51c2VUaHJlZSgoZT0+ZS5ldmVudHMpKSxoPWEudXNlVGhyZWUoKGU9PmUuc2V0KSkseT1hLnVzZVRocmVlKChlPT5lLmdldCkpLHg9cnx8cC5jb25uZWN0ZWR8fGYuZG9tRWxlbWVudCx2PW58fG0sZz1rLnVzZU1lbW8oKCgpPT5uZXcgZC5NYXBDb250cm9scyh2KSksW3ZdKTtyZXR1cm4gay51c2VFZmZlY3QoKCgpPT57Zy5jb25uZWN0KHgpO2NvbnN0IGU9ZT0+e3UoKSxpJiZpKGUpfTtyZXR1cm4gZy5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSkscyYmZy5hZGRFdmVudExpc3RlbmVyKFwic3RhcnRcIixzKSxsJiZnLmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRcIixsKSwoKT0+e2cuZGlzcG9zZSgpLGcucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLGUpLHMmJmcucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN0YXJ0XCIscyksbCYmZy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kXCIsbCl9fSksW2kscyxsLGcsdSx4XSksay51c2VFZmZlY3QoKCgpPT57aWYobyl7Y29uc3QgZT15KCkuY29udHJvbHM7cmV0dXJuIGgoe2NvbnRyb2xzOmd9KSwoKT0+aCh7Y29udHJvbHM6ZX0pfX0pLFtvLGddKSxhLnVzZUZyYW1lKCgoKT0+Zy51cGRhdGUoKSksLTEpLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7cmVmOnQsb2JqZWN0OmcsZW5hYmxlRGFtcGluZzohMH0sYykpfSkpLHN0PWsuZm9yd2FyZFJlZigoKHttYWtlRGVmYXVsdDplLGNhbWVyYTp0LHJlZ3Jlc3M6cixkb21FbGVtZW50Om4sZW5hYmxlRGFtcGluZzpvPSEwLGtleUV2ZW50czppPSExLG9uQ2hhbmdlOnMsb25TdGFydDpsLG9uRW5kOmMsLi4udX0sbSk9Pntjb25zdCBmPWEudXNlVGhyZWUoKGU9PmUuaW52YWxpZGF0ZSkpLHA9YS51c2VUaHJlZSgoZT0+ZS5jYW1lcmEpKSxoPWEudXNlVGhyZWUoKGU9PmUuZ2wpKSx5PWEudXNlVGhyZWUoKGU9PmUuZXZlbnRzKSkseD1hLnVzZVRocmVlKChlPT5lLnNldEV2ZW50cykpLHY9YS51c2VUaHJlZSgoZT0+ZS5zZXQpKSxnPWEudXNlVGhyZWUoKGU9PmUuZ2V0KSksej1hLnVzZVRocmVlKChlPT5lLnBlcmZvcm1hbmNlKSksdz10fHxwLGI9bnx8eS5jb25uZWN0ZWR8fGguZG9tRWxlbWVudCxFPWsudXNlTWVtbygoKCk9Pm5ldyBkLk9yYml0Q29udHJvbHModykpLFt3XSk7cmV0dXJuIGEudXNlRnJhbWUoKCgpPT57RS5lbmFibGVkJiZFLnVwZGF0ZSgpfSksLTEpLGsudXNlRWZmZWN0KCgoKT0+KGkmJkUuY29ubmVjdCghMD09PWk/YjppKSxFLmNvbm5lY3QoYiksKCk9PntFLmRpc3Bvc2UoKX0pKSxbaSxiLHIsRSxmXSksay51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT1lPT57ZigpLHImJnoucmVncmVzcygpLHMmJnMoZSl9LHQ9ZT0+e2wmJmwoZSl9LG49ZT0+e2MmJmMoZSl9O3JldHVybiBFLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixlKSxFLmFkZEV2ZW50TGlzdGVuZXIoXCJzdGFydFwiLHQpLEUuYWRkRXZlbnRMaXN0ZW5lcihcImVuZFwiLG4pLCgpPT57RS5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RhcnRcIix0KSxFLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRcIixuKSxFLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixlKX19KSxbcyxsLGMsRSxmLHhdKSxrLnVzZUVmZmVjdCgoKCk9PntpZihlKXtjb25zdCBlPWcoKS5jb250cm9scztyZXR1cm4gdih7Y29udHJvbHM6RX0pLCgpPT52KHtjb250cm9sczplfSl9fSksW2UsRV0pLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7cmVmOm0sb2JqZWN0OkUsZW5hYmxlRGFtcGluZzpvfSx1KSl9KSksbHQ9ay5mb3J3YXJkUmVmKCgoe21ha2VEZWZhdWx0OmUsY2FtZXJhOnQsZG9tRWxlbWVudDpyLHJlZ3Jlc3M6bixvbkNoYW5nZTpvLG9uU3RhcnQ6aSxvbkVuZDpzLC4uLmx9LGMpPT57Y29uc3R7aW52YWxpZGF0ZTp1LGNhbWVyYTptLGdsOmYsZXZlbnRzOnAsc2V0OmgsZ2V0OnkscGVyZm9ybWFuY2U6eCx2aWV3cG9ydDp2fT1hLnVzZVRocmVlKCksZz10fHxtLHo9cnx8cC5jb25uZWN0ZWR8fGYuZG9tRWxlbWVudCx3PWsudXNlTWVtbygoKCk9Pm5ldyBkLlRyYWNrYmFsbENvbnRyb2xzKGcpKSxbZ10pO3JldHVybiBhLnVzZUZyYW1lKCgoKT0+e3cuZW5hYmxlZCYmdy51cGRhdGUoKX0pLC0xKSxrLnVzZUVmZmVjdCgoKCk9Pih3LmNvbm5lY3QoeiksKCk9Pnt3LmRpc3Bvc2UoKX0pKSxbeixuLHcsdV0pLGsudXNlRWZmZWN0KCgoKT0+e2NvbnN0IGU9ZT0+e3UoKSxuJiZ4LnJlZ3Jlc3MoKSxvJiZvKGUpfTtyZXR1cm4gdy5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSksaSYmdy5hZGRFdmVudExpc3RlbmVyKFwic3RhcnRcIixpKSxzJiZ3LmFkZEV2ZW50TGlzdGVuZXIoXCJlbmRcIixzKSwoKT0+e2kmJncucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN0YXJ0XCIsaSkscyYmdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZW5kXCIscyksdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSl9fSksW28saSxzLHcsdV0pLGsudXNlRWZmZWN0KCgoKT0+e3cuaGFuZGxlUmVzaXplKCl9KSxbdl0pLGsudXNlRWZmZWN0KCgoKT0+e2lmKGUpe2NvbnN0IGU9eSgpLmNvbnRyb2xzO3JldHVybiBoKHtjb250cm9sczp3fSksKCk9Pmgoe2NvbnRyb2xzOmV9KX19KSxbZSx3XSksay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHtyZWY6YyxvYmplY3Q6d30sbCkpfSkpLGN0PXQuZm9yd2FyZFJlZigoKHtjYW1lcmE6ZSxtYWtlRGVmYXVsdDpyLHJlZ3Jlc3M6bixkb21FbGVtZW50Om8sb25DaGFuZ2U6aSxvblN0YXJ0OnMsb25FbmQ6bCwuLi5jfSx1KT0+e2NvbnN0IG09YS51c2VUaHJlZSgoZT0+ZS5pbnZhbGlkYXRlKSksZj1hLnVzZVRocmVlKChlPT5lLmNhbWVyYSkpLHA9YS51c2VUaHJlZSgoZT0+ZS5nbCkpLGg9YS51c2VUaHJlZSgoZT0+ZS5ldmVudHMpKSx5PWEudXNlVGhyZWUoKGU9PmUuc2V0KSkseD1hLnVzZVRocmVlKChlPT5lLmdldCkpLHY9YS51c2VUaHJlZSgoZT0+ZS5wZXJmb3JtYW5jZSkpLGc9ZXx8Zix6PW98fGguY29ubmVjdGVkfHxwLmRvbUVsZW1lbnQsdz10LnVzZU1lbW8oKCgpPT5uZXcgZC5BcmNiYWxsQ29udHJvbHMoZykpLFtnXSk7cmV0dXJuIGEudXNlRnJhbWUoKCgpPT57dy5lbmFibGVkJiZ3LnVwZGF0ZSgpfSksLTEpLHQudXNlRWZmZWN0KCgoKT0+KHcuY29ubmVjdCh6KSwoKT0+e3cuZGlzcG9zZSgpfSkpLFt6LG4sdyxtXSksdC51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT1lPT57bSgpLG4mJnYucmVncmVzcygpLGkmJmkoZSl9O3JldHVybiB3LmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIixlKSxzJiZ3LmFkZEV2ZW50TGlzdGVuZXIoXCJzdGFydFwiLHMpLGwmJncuYWRkRXZlbnRMaXN0ZW5lcihcImVuZFwiLGwpLCgpPT57dy5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSkscyYmdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic3RhcnRcIixzKSxsJiZ3LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJlbmRcIixsKX19KSxbaSxzLGxdKSx0LnVzZUVmZmVjdCgoKCk9PntpZihyKXtjb25zdCBlPXgoKS5jb250cm9scztyZXR1cm4geSh7Y29udHJvbHM6d30pLCgpPT55KHtjb250cm9sczplfSl9fSksW3Isd10pLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7cmVmOnUsb2JqZWN0Ond9LGMpKX0pKSx1dD1rLmZvcndhcmRSZWYoKCh7Y2hpbGRyZW46ZSxkb21FbGVtZW50OnQsb25DaGFuZ2U6cixvbk1vdXNlRG93bjpuLG9uTW91c2VVcDpvLG9uT2JqZWN0Q2hhbmdlOmksb2JqZWN0OnMsbWFrZURlZmF1bHQ6bCwuLi5jfSx1KT0+e2NvbnN0IG09W1wiZW5hYmxlZFwiLFwiYXhpc1wiLFwibW9kZVwiLFwidHJhbnNsYXRpb25TbmFwXCIsXCJyb3RhdGlvblNuYXBcIixcInNjYWxlU25hcFwiLFwic3BhY2VcIixcInNpemVcIixcInNob3dYXCIsXCJzaG93WVwiLFwic2hvd1pcIl0se2NhbWVyYTpmLC4uLnB9PWMsaD1PLmRlZmF1bHQocCxtKSx5PU4uZGVmYXVsdChwLG0pLHg9YS51c2VUaHJlZSgoZT0+ZS5jb250cm9scykpLHY9YS51c2VUaHJlZSgoZT0+ZS5nbCkpLGc9YS51c2VUaHJlZSgoZT0+ZS5ldmVudHMpKSx6PWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSksdz1hLnVzZVRocmVlKChlPT5lLmludmFsaWRhdGUpKSxiPWEudXNlVGhyZWUoKGU9PmUuZ2V0KSksRT1hLnVzZVRocmVlKChlPT5lLnNldCkpLE09Znx8eixTPXR8fGcuY29ubmVjdGVkfHx2LmRvbUVsZW1lbnQsQz1rLnVzZU1lbW8oKCgpPT5uZXcgZC5UcmFuc2Zvcm1Db250cm9scyhNLFMpKSxbTSxTXSksUD1rLnVzZVJlZigpO2sudXNlTGF5b3V0RWZmZWN0KCgoKT0+KHM/Qy5hdHRhY2gocyBpbnN0YW5jZW9mIEQuT2JqZWN0M0Q/czpzLmN1cnJlbnQpOlAuY3VycmVudCBpbnN0YW5jZW9mIEQuT2JqZWN0M0QmJkMuYXR0YWNoKFAuY3VycmVudCksKCk9PntDLmRldGFjaCgpfSkpLFtzLGUsQ10pLGsudXNlRWZmZWN0KCgoKT0+e2lmKHgpe2NvbnN0IGU9ZT0+eC5lbmFibGVkPSFlLnZhbHVlO3JldHVybiBDLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnZ2luZy1jaGFuZ2VkXCIsZSksKCk9PkMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImRyYWdnaW5nLWNoYW5nZWRcIixlKX19KSxbQyx4XSk7Y29uc3QgVD1rLnVzZVJlZigpLEY9ay51c2VSZWYoKSxMPWsudXNlUmVmKCksQT1rLnVzZVJlZigpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PntULmN1cnJlbnQ9cn0pLFtyXSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57Ri5jdXJyZW50PW59KSxbbl0pLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e0wuY3VycmVudD1vfSksW29dKSxrLnVzZUxheW91dEVmZmVjdCgoKCk9PntBLmN1cnJlbnQ9aX0pLFtpXSksay51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT1lPT57dygpLG51bGw9PVQuY3VycmVudHx8VC5jdXJyZW50KGUpfSx0PWU9Pm51bGw9PUYuY3VycmVudD92b2lkIDA6Ri5jdXJyZW50KGUpLHI9ZT0+bnVsbD09TC5jdXJyZW50P3ZvaWQgMDpMLmN1cnJlbnQoZSksbj1lPT5udWxsPT1BLmN1cnJlbnQ/dm9pZCAwOkEuY3VycmVudChlKTtyZXR1cm4gQy5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSksQy5hZGRFdmVudExpc3RlbmVyKFwibW91c2VEb3duXCIsdCksQy5hZGRFdmVudExpc3RlbmVyKFwibW91c2VVcFwiLHIpLEMuYWRkRXZlbnRMaXN0ZW5lcihcIm9iamVjdENoYW5nZVwiLG4pLCgpPT57Qy5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSksQy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2VEb3duXCIsdCksQy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2VVcFwiLHIpLEMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9iamVjdENoYW5nZVwiLG4pfX0pLFt3LENdKSxrLnVzZUVmZmVjdCgoKCk9PntpZihsKXtjb25zdCBlPWIoKS5jb250cm9scztyZXR1cm4gRSh7Y29udHJvbHM6Q30pLCgpPT5FKHtjb250cm9sczplfSl9fSksW2wsQ10pLEM/ay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxrLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIixSLmRlZmF1bHQoe3JlZjp1LG9iamVjdDpDfSxoKSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjpQfSx5KSxlKSk6bnVsbH0pKSxkdD1rLmZvcndhcmRSZWYoKCh7ZG9tRWxlbWVudDplLHNlbGVjdG9yOnQsb25DaGFuZ2U6cixvbkxvY2s6bixvblVubG9jazpvLGVuYWJsZWQ6aT0hMCxtYWtlRGVmYXVsdDpzLC4uLmx9LGMpPT57Y29uc3R7Y2FtZXJhOnUsLi4ubX09bCxmPWEudXNlVGhyZWUoKGU9PmUuc2V0RXZlbnRzKSkscD1hLnVzZVRocmVlKChlPT5lLmdsKSksaD1hLnVzZVRocmVlKChlPT5lLmNhbWVyYSkpLHk9YS51c2VUaHJlZSgoZT0+ZS5pbnZhbGlkYXRlKSkseD1hLnVzZVRocmVlKChlPT5lLmV2ZW50cykpLHY9YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSxnPWEudXNlVGhyZWUoKGU9PmUuc2V0KSksej11fHxoLHc9ZXx8eC5jb25uZWN0ZWR8fHAuZG9tRWxlbWVudCxiPWsudXNlTWVtbygoKCk9Pm5ldyBkLlBvaW50ZXJMb2NrQ29udHJvbHMoeikpLFt6XSk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+e2lmKGkpe2IuY29ubmVjdCh3KTtjb25zdCBlPXYoKS5ldmVudHMuY29tcHV0ZTtyZXR1cm4gZih7Y29tcHV0ZShlLHQpe2NvbnN0IHI9dC5zaXplLndpZHRoLzIsbj10LnNpemUuaGVpZ2h0LzI7dC5wb2ludGVyLnNldChyL3Quc2l6ZS53aWR0aCoyLTEsLW4vdC5zaXplLmhlaWdodCoyKzEpLHQucmF5Y2FzdGVyLnNldEZyb21DYW1lcmEodC5wb2ludGVyLHQuY2FtZXJhKX19KSwoKT0+e2IuZGlzY29ubmVjdCgpLGYoe2NvbXB1dGU6ZX0pfX19KSxbaSxiXSksay51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT1lPT57eSgpLHImJnIoZSl9O2IuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLGUpLG4mJmIuYWRkRXZlbnRMaXN0ZW5lcihcImxvY2tcIixuKSxvJiZiLmFkZEV2ZW50TGlzdGVuZXIoXCJ1bmxvY2tcIixvKTtjb25zdCBhPSgpPT5iLmxvY2soKSxpPXQ/QXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHQpKTpbZG9jdW1lbnRdO3JldHVybiBpLmZvckVhY2goKGU9PmUmJmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsYSkpKSwoKT0+e2IucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLGUpLG4mJmIuYWRkRXZlbnRMaXN0ZW5lcihcImxvY2tcIixuKSxvJiZiLmFkZEV2ZW50TGlzdGVuZXIoXCJ1bmxvY2tcIixvKSxpLmZvckVhY2goKGU9PmU/ZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIixhKTp2b2lkIDApKX19KSxbcixuLG8sdCxiLHldKSxrLnVzZUVmZmVjdCgoKCk9PntpZihzKXtjb25zdCBlPXYoKS5jb250cm9scztyZXR1cm4gZyh7Y29udHJvbHM6Yn0pLCgpPT5nKHtjb250cm9sczplfSl9fSksW3MsYl0pLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7cmVmOmMsb2JqZWN0OmJ9LG0pKX0pKSxtdD1rLmZvcndhcmRSZWYoKCh7ZG9tRWxlbWVudDplLG1ha2VEZWZhdWx0OnQsLi4ucn0sbik9Pntjb25zdCBvPWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSksaT1hLnVzZVRocmVlKChlPT5lLmdsKSkscz1hLnVzZVRocmVlKChlPT5lLmV2ZW50cykpLGw9YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSxjPWEudXNlVGhyZWUoKGU9PmUuc2V0KSksdT1lfHxzLmNvbm5lY3RlZHx8aS5kb21FbGVtZW50LFttXT1rLnVzZVN0YXRlKCgoKT0+bmV3IGQuRmlyc3RQZXJzb25Db250cm9scyhvLHUpKSk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+e2lmKHQpe2NvbnN0IGU9bCgpLmNvbnRyb2xzO3JldHVybiBjKHtjb250cm9sczptfSksKCk9PmMoe2NvbnRyb2xzOmV9KX19KSxbdCxtXSksYS51c2VGcmFtZSgoKGUsdCk9PnttLnVwZGF0ZSh0KX0pLC0xKSxtP2suY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7cmVmOm4sb2JqZWN0Om19LHIpKTpudWxsfSkpLGZ0PXQuZm9yd2FyZFJlZigoKGUscik9Pnt0LnVzZU1lbW8oKCgpPT57Y29uc3QgZT17Qm94MzpuLkJveDMsTWF0aFV0aWxzOntjbGFtcDpuLk1hdGhVdGlscy5jbGFtcH0sTWF0cml4NDpuLk1hdHJpeDQsUXVhdGVybmlvbjpuLlF1YXRlcm5pb24sUmF5Y2FzdGVyOm4uUmF5Y2FzdGVyLFNwaGVyZTpuLlNwaGVyZSxTcGhlcmljYWw6bi5TcGhlcmljYWwsVmVjdG9yMjpuLlZlY3RvcjIsVmVjdG9yMzpuLlZlY3RvcjMsVmVjdG9yNDpuLlZlY3RvcjR9O0IuZGVmYXVsdC5pbnN0YWxsKHtUSFJFRTplfSksYS5leHRlbmQoe0NhbWVyYUNvbnRyb2xzSW1wbDpCLmRlZmF1bHR9KX0pLFtdKTtjb25zdHtjYW1lcmE6byxkb21FbGVtZW50OmksbWFrZURlZmF1bHQ6cyxvblN0YXJ0Omwsb25FbmQ6YyxvbkNoYW5nZTp1LHJlZ3Jlc3M6ZCwuLi5tfT1lLGY9YS51c2VUaHJlZSgoZT0+ZS5jYW1lcmEpKSxwPWEudXNlVGhyZWUoKGU9PmUuZ2wpKSxoPWEudXNlVGhyZWUoKGU9PmUuaW52YWxpZGF0ZSkpLHk9YS51c2VUaHJlZSgoZT0+ZS5ldmVudHMpKSx4PWEudXNlVGhyZWUoKGU9PmUuc2V0RXZlbnRzKSksdj1hLnVzZVRocmVlKChlPT5lLnNldCkpLGc9YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSx6PWEudXNlVGhyZWUoKGU9PmUucGVyZm9ybWFuY2UpKSx3PW98fGYsYj1pfHx5LmNvbm5lY3RlZHx8cC5kb21FbGVtZW50LEU9dC51c2VNZW1vKCgoKT0+bmV3IEIuZGVmYXVsdCh3KSksW3ddKTtyZXR1cm4gYS51c2VGcmFtZSgoKGUsdCk9PntFLmVuYWJsZWQmJkUudXBkYXRlKHQpfSksLTEpLHQudXNlRWZmZWN0KCgoKT0+KEUuY29ubmVjdChiKSwoKT0+e0UuZGlzY29ubmVjdCgpfSkpLFtiLEVdKSx0LnVzZUVmZmVjdCgoKCk9Pntjb25zdCBlPWU9PntoKCksZCYmei5yZWdyZXNzKCksdSYmdShlKX0sdD1lPT57bCYmbChlKX0scj1lPT57YyYmYyhlKX07cmV0dXJuIEUuYWRkRXZlbnRMaXN0ZW5lcihcInVwZGF0ZVwiLGUpLEUuYWRkRXZlbnRMaXN0ZW5lcihcImNvbnRyb2xzdGFydFwiLHQpLEUuYWRkRXZlbnRMaXN0ZW5lcihcImNvbnRyb2xlbmRcIixyKSxFLmFkZEV2ZW50TGlzdGVuZXIoXCJjb250cm9sXCIsZSksRS5hZGRFdmVudExpc3RlbmVyKFwidHJhbnNpdGlvbnN0YXJ0XCIsZSksRS5hZGRFdmVudExpc3RlbmVyKFwid2FrZVwiLGUpLCgpPT57RS5yZW1vdmVFdmVudExpc3RlbmVyKFwidXBkYXRlXCIsZSksRS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY29udHJvbHN0YXJ0XCIsdCksRS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY29udHJvbGVuZFwiLHIpLEUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNvbnRyb2xcIixlKSxFLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0cmFuc2l0aW9uc3RhcnRcIixlKSxFLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ3YWtlXCIsZSl9fSksW0UsbCxjLGgseCxkLHVdKSx0LnVzZUVmZmVjdCgoKCk9PntpZihzKXtjb25zdCBlPWcoKS5jb250cm9scztyZXR1cm4gdih7Y29udHJvbHM6RX0pLCgpPT52KHtjb250cm9sczplfSl9fSksW3MsRV0pLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7cmVmOnIsb2JqZWN0OkV9LG0pKX0pKTtmdW5jdGlvbiBwdChlLHIpe2NvbnN0e3Vuc3VzcGVuZDpuLHN0YXJ0Om8sY3Jvc3NPcmlnaW46aSxtdXRlZDpzLGxvb3A6bCwuLi5jfT17dW5zdXNwZW5kOlwibG9hZGVkbWV0YWRhdGFcIixjcm9zc09yaWdpbjpcIkFub255bW91c1wiLG11dGVkOiEwLGxvb3A6ITAsc3RhcnQ6ITAscGxheXNJbmxpbmU6ITAsLi4ucn0sdT1hLnVzZVRocmVlKChlPT5lLmdsKSksZD1wLnN1c3BlbmQoKCgpPT5uZXcgUHJvbWlzZSgoKHQscik9Pntjb25zdCBhPU9iamVjdC5hc3NpZ24oZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInZpZGVvXCIpLHtzcmM6XCJzdHJpbmdcIj09dHlwZW9mIGUmJmV8fHZvaWQgMCxzcmNPYmplY3Q6ZSBpbnN0YW5jZW9mIE1lZGlhU3RyZWFtJiZlfHx2b2lkIDAsY3Jvc3NPcmlnaW46aSxsb29wOmwsbXV0ZWQ6cywuLi5jfSksbz1uZXcgRC5WaWRlb1RleHR1cmUoYSk7XCJjb2xvclNwYWNlXCJpbiBvP28uY29sb3JTcGFjZT11Lm91dHB1dENvbG9yU3BhY2U6by5lbmNvZGluZz11Lm91dHB1dEVuY29kaW5nLGEuYWRkRXZlbnRMaXN0ZW5lcihuLCgoKT0+dChvKSkpfSkpKSxbZV0pO3JldHVybiB0LnVzZUVmZmVjdCgoKCk9PntvJiZkLmltYWdlLnBsYXkoKX0pLFtkLG9dKSxkfWNvbnN0IGh0PW5ldyBELlZlY3RvcjMoMCwwLC0xKSx5dD1mdW5jdGlvbigpe2NvbnN0IGU9bmV3IEQuVmVjdG9yMyx0PW5ldyBELlZlY3RvcjMscj1uZXcgRC5WZWN0b3IzLG49bmV3IEQuVmVjdG9yMyxhPW5ldyBELlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKG8saSxzLGwpe3JldHVybiBlLmNvcHkobyksdC5jb3B5KGkpLHIuY29weShzKSxuLmNvcHkodCkuc3ViKGUpLGEuY29weShyKS5zdWIoZSksbC5jcm9zc1ZlY3RvcnMoYSxuKS5ub3JtYWxpemUoKX19KCk7Y29uc3QgeHQ9ay5mb3J3YXJkUmVmKCgoe3BvaW50czplPXp0LlNBTVBMRV9GQUNFTEFORE1BUktFUl9SRVNVTFQuZmFjZUxhbmRtYXJrc1swXSxmYWNlOnQsZmFjaWFsVHJhbnNmb3JtYXRpb25NYXRyaXg6cixmYWNlQmxlbmRzaGFwZXM6bixvZmZzZXQ6byxvZmZzZXRTY2FsYXI6aT04MCx3aWR0aDpzLGhlaWdodDpsLGRlcHRoOmM9MSx2ZXJ0aWNhbFRyaTp1PVsxNTksMzg2LDE1Ml0sb3JpZ2luOmQsZXllczptPSEwLGV5ZXNBc09yaWdpbjpmPSExLGRlYnVnOnA9ITEsY2hpbGRyZW46aCwuLi55fSx4KT0+e3ZhciB2O3QmJihlPXQua2V5cG9pbnRzLGNvbnNvbGUud2FybihcIkZhY2VtZXNoIGBmYWNlYCBwcm9wIGlzIGRlcHJlY2F0ZWQ6IHVzZSBgcG9pbnRzYCBpbnN0ZWFkXCIpKTtjb25zdCBnPWsudXNlUmVmKG51bGwpLHo9ay51c2VSZWYobnVsbCksdz1rLnVzZVJlZihudWxsKSxiPWsudXNlUmVmKG51bGwpLEU9ay51c2VSZWYobnVsbCksTT1rLnVzZVJlZihudWxsKSxTPWsudXNlUmVmKG51bGwpLFtDXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuVmVjdG9yMykpLFtQXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuT2JqZWN0M0QpKSxbVF09ay51c2VTdGF0ZSgoKCk9Pm5ldyBELlF1YXRlcm5pb24pKSxbUl09ay51c2VTdGF0ZSgoKCk9Pm5ldyBELlZlY3RvcjMpKSx7aW52YWxpZGF0ZTpGfT1hLnVzZVRocmVlKCk7ay51c2VFZmZlY3QoKCgpPT57dmFyIGU7bnVsbD09KGU9RS5jdXJyZW50KXx8ZS5nZW9tZXRyeS5zZXRJbmRleCh6dC5UUklBTkdVTEFUSU9OKX0pLFtdKTtjb25zdFtMXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuVmVjdG9yMykpO2sudXNlRWZmZWN0KCgoKT0+e3ZhciB0LGE7Y29uc3QgaD1udWxsPT0odD1FLmN1cnJlbnQpP3ZvaWQgMDp0Lmdlb21ldHJ5O2lmKCFoKXJldHVybjt2YXIgeSx4OyhoLnNldEZyb21Qb2ludHMoZSksaC5zZXREcmF3UmFuZ2UoMCx6dC5UUklBTkdVTEFUSU9OLmxlbmd0aCkscik/KFAubWF0cml4LmZyb21BcnJheShyLmRhdGEpLFAubWF0cml4LmRlY29tcG9zZShQLnBvc2l0aW9uLFAucXVhdGVybmlvbixQLnNjYWxlKSxQLnJvdGF0aW9uLnkqPS0xLFAucm90YXRpb24ueio9LTEsVC5zZXRGcm9tRXVsZXIoUC5yb3RhdGlvbiksbz8oUC5wb3NpdGlvbi55Kj0tMSxQLnBvc2l0aW9uLnoqPS0xLG51bGw9PSh5PWcuY3VycmVudCl8fHkucG9zaXRpb24uY29weShQLnBvc2l0aW9uLmRpdmlkZVNjYWxhcihpKSkpOm51bGw9PSh4PWcuY3VycmVudCl8fHgucG9zaXRpb24uc2V0KDAsMCwwKSk6KHl0KGVbdVswXV0sZVt1WzFdXSxlW3VbMl1dLEMpLFQuc2V0RnJvbVVuaXRWZWN0b3JzKGh0LEMpKTtjb25zdCB2PVQuY2xvbmUoKS5pbnZlcnQoKTtpZihoLmNvbXB1dGVCb3VuZGluZ0JveCgpLHAmJkYoKSxoLmNlbnRlcigpLGguYXBwbHlRdWF0ZXJuaW9uKHYpLG51bGw9PShhPWIuY3VycmVudCl8fGEuc2V0Um90YXRpb25Gcm9tUXVhdGVybmlvbihUKSxtKWlmKG4pe2lmKE0uY3VycmVudCYmUy5jdXJyZW50JiZ3LmN1cnJlbnQpaWYoZil7Y29uc3QgZT1NLmN1cnJlbnQuX2NvbXB1dGVTcGhlcmUoaCksdD1TLmN1cnJlbnQuX2NvbXB1dGVTcGhlcmUoaCkscj1mdW5jdGlvbihlLHQpe3JldHVybiBlLmNsb25lKCkuYWRkKHQpLm11bHRpcGx5U2NhbGFyKC41KX0oZS5jZW50ZXIsdC5jZW50ZXIpO2Q9ci5uZWdhdGUoKSxNLmN1cnJlbnQuX3VwZGF0ZShoLG4sZSksUy5jdXJyZW50Ll91cGRhdGUoaCxuLHQpfWVsc2UgTS5jdXJyZW50Ll91cGRhdGUoaCxuKSxTLmN1cnJlbnQuX3VwZGF0ZShoLG4pfWVsc2UgY29uc29sZS53YXJuKFwiRmFjZW1lc2ggYGV5ZXNgIG9wdGlvbiBvbmx5IHdvcmtzIGlmIGBmYWNlQmxlbmRzaGFwZXNgIGlzIHByb3ZpZGVkOiBza2lwcGluZy5cIik7aWYody5jdXJyZW50KXtpZih2b2lkIDAhPT1kKWlmKFwibnVtYmVyXCI9PXR5cGVvZiBkKXtjb25zdCBlPWguZ2V0QXR0cmlidXRlKFwicG9zaXRpb25cIik7Ui5zZXQoLWUuZ2V0WChkKSwtZS5nZXRZKGQpLC1lLmdldFooZCkpfWVsc2UgZC5pc1ZlY3RvcjMmJlIuY29weShkKTtlbHNlIFIuc2V0U2NhbGFyKDApO3cuY3VycmVudC5wb3NpdGlvbi5jb3B5KFIpfWlmKHouY3VycmVudCl7bGV0IGU9MTsoc3x8bHx8YykmJihoLmJvdW5kaW5nQm94LmdldFNpemUoTCkscyYmKGU9cy9MLngpLGwmJihlPWwvTC55KSxjJiYoZT1jL0wueikpLHouY3VycmVudC5zY2FsZS5zZXRTY2FsYXIoMSE9PWU/ZToxKX1oLmNvbXB1dGVWZXJ0ZXhOb3JtYWxzKCksaC5hdHRyaWJ1dGVzLnBvc2l0aW9uLm5lZWRzVXBkYXRlPSEwfSksW2UscixuLFAsbyxpLHMsbCxjLHUsZCxtLHAsRixDLFQsTCxSXSk7Y29uc3QgQT1rLnVzZU1lbW8oKCgpPT4oe291dGVyUmVmOmIsbWVzaFJlZjpFLGV5ZVJpZ2h0UmVmOk0sZXllTGVmdFJlZjpTfSkpLFtdKTtrLnVzZUltcGVyYXRpdmVIYW5kbGUoeCwoKCk9PkEpLFtBXSk7Y29uc3RbX109ay51c2VTdGF0ZSgoKCk9Pm5ldyBELlZlY3RvcjMpKSxPPW51bGw9PSh2PUUuY3VycmVudCk/dm9pZCAwOnYuZ2VvbWV0cnkuYm91bmRpbmdCb3gsTj0obnVsbD09Tz92b2lkIDA6Ty5nZXRTaXplKF8pLnopfHwxO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7cmVmOmd9LGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpifSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtyZWY6en0scD9rLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLGsuY3JlYXRlRWxlbWVudChcImF4ZXNIZWxwZXJcIix7YXJnczpbTl19KSxrLmNyZWF0ZUVsZW1lbnQoZGUse3BvaW50czpbWzAsMCwwXSxbMCwwLC1OXV0sY29sb3I6NjU1MzV9KSk6bnVsbCxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtyZWY6d30sbSYmbiYmay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7bmFtZTpcImV5ZXNcIn0say5jcmVhdGVFbGVtZW50KGd0LHtzaWRlOlwibGVmdFwiLHJlZjpNLGRlYnVnOnB9KSxrLmNyZWF0ZUVsZW1lbnQoZ3Qse3NpZGU6XCJyaWdodFwiLHJlZjpTLGRlYnVnOnB9KSksay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHtyZWY6RSxuYW1lOlwiZmFjZVwifSxoLHA/ay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxPJiZrLmNyZWF0ZUVsZW1lbnQoXCJib3gzSGVscGVyXCIse2FyZ3M6W09dfSkpOm51bGwpKSkpKSl9KSksdnQ9e2NvbnRvdXJMYW5kbWFya3M6e3JpZ2h0OlszMywxMzMsMTU5LDE0NSwxNTNdLGxlZnQ6WzI2MywzNjIsMzg2LDM3NCwzODBdfSxibGVuZHNoYXBlczp7cmlnaHQ6WzE0LDE2LDE4LDEyXSxsZWZ0OlsxMywxNSwxNywxMV19LGNvbG9yOntyaWdodDpcInJlZFwiLGxlZnQ6XCIjMDBmZjAwXCJ9LGZvdjp7aG9yaXpvbnRhbDoxMDAsdmVydGljYWw6OTB9fSxndD1rLmZvcndhcmRSZWYoKCh7c2lkZTplLGRlYnVnOnQ9ITB9LHIpPT57Y29uc3Qgbj1rLnVzZVJlZihudWxsKSxhPWsudXNlUmVmKG51bGwpLFtvXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuU3BoZXJlKSksaT1rLnVzZUNhbGxiYWNrKCh0PT57Y29uc3Qgcj10LmdldEF0dHJpYnV0ZShcInBvc2l0aW9uXCIpLG49dnQuY29udG91ckxhbmRtYXJrc1tlXS5tYXAoKGU9Pm5ldyBELlZlY3RvcjMoci5nZXRYKGUpLHIuZ2V0WShlKSxyLmdldFooZSkpKSk7cmV0dXJuIG8uY2VudGVyLnNldCgwLDAsMCksbi5mb3JFYWNoKChlPT5vLmNlbnRlci5hZGQoZSkpKSxvLmNlbnRlci5kaXZpZGVTY2FsYXIobi5sZW5ndGgpLG8ucmFkaXVzPW5bMF0uc3ViKG5bMV0pLmxlbmd0aCgpLzIsb30pLFtvLGVdKSxbc109ay51c2VTdGF0ZSgoKCk9Pm5ldyBELkV1bGVyKSksbD1rLnVzZUNhbGxiYWNrKCgodCxyLG8pPT57dmFyIGw7bi5jdXJyZW50JiYobnVsbCE9PShsPW8pJiZ2b2lkIDAhPT1sfHwobz1pKHQpKSxuLmN1cnJlbnQucG9zaXRpb24uY29weShvLmNlbnRlciksbi5jdXJyZW50LnNjYWxlLnNldFNjYWxhcihvLnJhZGl1cykpO2lmKHImJmEuY3VycmVudCl7Y29uc3QgdD12dC5ibGVuZHNoYXBlc1tlXSxuPXIuY2F0ZWdvcmllc1t0WzBdXS5zY29yZSxvPXIuY2F0ZWdvcmllc1t0WzFdXS5zY29yZSxpPXIuY2F0ZWdvcmllc1t0WzJdXS5zY29yZSxsPXIuY2F0ZWdvcmllc1t0WzNdXS5zY29yZSxjPS41Kih2dC5mb3YuaG9yaXpvbnRhbCpELk1hdGhVdGlscy5ERUcyUkFEKSoobC1pKSx1PS41Kih2dC5mb3YudmVydGljYWwqRC5NYXRoVXRpbHMuREVHMlJBRCkqKG4tbykqKFwibGVmdFwiPT09ZT8xOi0xKTtzLnNldChjLHUsMCksYS5jdXJyZW50LnNldFJvdGF0aW9uRnJvbUV1bGVyKHMpfX0pLFtpLGUsc10pLGM9ay51c2VNZW1vKCgoKT0+KHtleWVNZXNoUmVmOm4saXJpc0RpclJlZjphLF9jb21wdXRlU3BoZXJlOmksX3VwZGF0ZTpsfSkpLFtpLGxdKTtrLnVzZUltcGVyYXRpdmVIYW5kbGUociwoKCk9PmMpLFtjXSk7Y29uc3QgdT12dC5jb2xvcltlXTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixudWxsLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpufSx0JiZrLmNyZWF0ZUVsZW1lbnQoXCJheGVzSGVscGVyXCIsbnVsbCksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7cmVmOmF9LGsuY3JlYXRlRWxlbWVudChrLkZyYWdtZW50LG51bGwsdCYmay5jcmVhdGVFbGVtZW50KGRlLHtwb2ludHM6W1swLDAsMF0sWzAsMCwtMl1dLGxpbmVXaWR0aDoxLGNvbG9yOnV9KSkpKSl9KSksenQ9e1RSSUFOR1VMQVRJT046WzEyNywzNCwxMzksMTEsMCwzNywyMzIsMjMxLDEyMCw3MiwzNywzOSwxMjgsMTIxLDQ3LDIzMiwxMjEsMTI4LDEwNCw2OSw2NywxNzUsMTcxLDE0OCwxNTcsMTU0LDE1NSwxMTgsNTAsMTAxLDczLDM5LDQwLDksMTUxLDEwOCw0OCwxMTUsMTMxLDE5NCwyMDQsMjExLDc0LDQwLDE4NSw4MCw0MiwxODMsNDAsOTIsMTg2LDIzMCwyMjksMTE4LDIwMiwyMTIsMjE0LDgzLDE4LDE3LDc2LDYxLDE0NiwxNjAsMjksMzAsNTYsMTU3LDE3MywxMDYsMjA0LDE5NCwxMzUsMjE0LDE5MiwyMDMsMTY1LDk4LDIxLDcxLDY4LDUxLDQ1LDQsMTQ0LDI0LDIzLDc3LDE0Niw5MSwyMDUsNTAsMTg3LDIwMSwyMDAsMTgsOTEsMTA2LDE4Miw5MCw5MSwxODEsODUsODQsMTcsMjA2LDIwMywzNiwxNDgsMTcxLDE0MCw5Miw0MCwzOSwxOTMsMTg5LDI0NCwxNTksMTU4LDI4LDI0NywyNDYsMTYxLDIzNiwzLDE5Niw1NCw2OCwxMDQsMTkzLDE2OCw4LDExNywyMjgsMzEsMTg5LDE5Myw1NSw5OCw5Nyw5OSwxMjYsNDcsMTAwLDE2Niw3OSwyMTgsMTU1LDE1NCwyNiwyMDksNDksMTMxLDEzNSwxMzYsMTUwLDQ3LDEyNiwyMTcsMjIzLDUyLDUzLDQ1LDUxLDEzNCwyMTEsMTcwLDE0MCw2Nyw2OSwxMDgsNDMsMTA2LDkxLDIzMCwxMTksMTIwLDIyNiwxMzAsMjQ3LDYzLDUzLDUyLDIzOCwyMCwyNDIsNDYsNzAsMTU2LDc4LDYyLDk2LDQ2LDUzLDYzLDE0MywzNCwyMjcsMTczLDE1NSwxMzMsMTIzLDExNywxMTEsNDQsMTI1LDE5LDIzNiwxMzQsNTEsMjE2LDIwNiwyMDUsMTU0LDE1MywyMiwzOSwzNywxNjcsMjAwLDIwMSwyMDgsMzYsMTQyLDEwMCw1NywyMTIsMjAyLDIwLDYwLDk5LDI4LDE1OCwxNTcsMzUsMjI2LDExMywxNjAsMTU5LDI3LDIwNCwyMDIsMjEwLDExMywyMjUsNDYsNDMsMjAyLDIwNCw2Miw3Niw3NywxMzcsMTIzLDExNiw0MSwzOCw3MiwyMDMsMTI5LDE0Miw2NCw5OCwyNDAsNDksMTAyLDY0LDQxLDczLDc0LDIxMiwyMTYsMjA3LDQyLDc0LDE4NCwxNjksMTcwLDIxMSwxNzAsMTQ5LDE3NiwxMDUsNjYsNjksMTIyLDYsMTY4LDEyMywxNDcsMTg3LDk2LDc3LDkwLDY1LDU1LDEwNyw4OSw5MCwxODAsMTAxLDEwMCwxMjAsNjMsMTA1LDEwNCw5MywxMzcsMjI3LDE1LDg2LDg1LDEyOSwxMDIsNDksMTQsODcsODYsNTUsOCw5LDEwMCw0NywxMjEsMTQ1LDIzLDIyLDg4LDg5LDE3OSw2LDEyMiwxOTYsODgsOTUsOTYsMTM4LDE3MiwxMzYsMjE1LDU4LDE3MiwxMTUsNDgsMjE5LDQyLDgwLDgxLDE5NSwzLDUxLDQzLDE0Niw2MSwxNzEsMTc1LDE5OSw4MSw4MiwzOCw1Myw0NiwyMjUsMTQ0LDE2MywxMTAsMjQ2LDMzLDcsNTIsNjUsNjYsMjI5LDIyOCwxMTcsMzQsMTI3LDIzNCwxMDcsMTA4LDY5LDEwOSwxMDgsMTUxLDQ4LDY0LDIzNSw2Miw3OCwxOTEsMTI5LDIwOSwxMjYsMTExLDM1LDE0MywxNjMsMTYxLDI0NiwxMTcsMTIzLDUwLDIyMiw2NSw1MiwxOSwxMjUsMTQxLDIyMSw1NSw2NSwzLDE5NSwxOTcsMjUsNywzMywyMjAsMjM3LDQ0LDcwLDcxLDEzOSwxMjIsMTkzLDI0NSwyNDcsMTMwLDMzLDcxLDIxLDE2MiwxNTMsMTU4LDE1OSwxNzAsMTY5LDE1MCwxODgsMTc0LDE5NiwyMTYsMTg2LDkyLDE0NCwxNjAsMTYxLDIsOTcsMTY3LDE0MSwxMjUsMjQxLDE2NCwxNjcsMzcsNzIsMzgsMTIsMTQ1LDE1OSwxNjAsMzgsODIsMTMsNjMsNjgsNzEsMjI2LDM1LDExMSwxNTgsMTUzLDE1NCwxMDEsNTAsMjA1LDIwNiw5MiwxNjUsMjA5LDE5OCwyMTcsMTY1LDE2Nyw5NywyMjAsMTE1LDIxOCwxMzMsMTEyLDI0MywyMzksMjM4LDI0MSwyMTQsMTM1LDE2OSwxOTAsMTczLDEzMywxNzEsMjA4LDMyLDEyNSw0NCwyMzcsODYsODcsMTc4LDg1LDg2LDE3OSw4NCw4NSwxODAsODMsODQsMTgxLDIwMSw4MywxODIsMTM3LDkzLDEzMiw3Niw2MiwxODMsNjEsNzYsMTg0LDU3LDYxLDE4NSwyMTIsNTcsMTg2LDIxNCwyMDcsMTg3LDM0LDE0MywxNTYsNzksMjM5LDIzNywxMjMsMTM3LDE3Nyw0NCwxLDQsMjAxLDE5NCwzMiw2NCwxMDIsMTI5LDIxMywyMTUsMTM4LDU5LDE2NiwyMTksMjQyLDk5LDk3LDIsOTQsMTQxLDc1LDU5LDIzNSwyNCwxMTAsMjI4LDI1LDEzMCwyMjYsMjMsMjQsMjI5LDIyLDIzLDIzMCwyNiwyMiwyMzEsMTEyLDI2LDIzMiwxODksMTkwLDI0MywyMjEsNTYsMTkwLDI4LDU2LDIyMSwyNywyOCwyMjIsMjksMjcsMjIzLDMwLDI5LDIyNCwyNDcsMzAsMjI1LDIzOCw3OSwyMCwxNjYsNTksNzUsNjAsNzUsMjQwLDE0NywxNzcsMjE1LDIwLDc5LDE2NiwxODcsMTQ3LDIxMywxMTIsMjMzLDI0NCwyMzMsMTI4LDI0NSwxMjgsMTE0LDE4OCwxMTQsMjE3LDE3NCwxMzEsMTE1LDIyMCwyMTcsMTk4LDIzNiwxOTgsMTMxLDEzNCwxNzcsMTMyLDU4LDE0MywzNSwxMjQsMTEwLDE2Myw3LDIyOCwxMTAsMjUsMzU2LDM4OSwzNjgsMTEsMzAyLDI2Nyw0NTIsMzUwLDM0OSwzMDIsMzAzLDI2OSwzNTcsMzQzLDI3Nyw0NTIsNDUzLDM1NywzMzMsMzMyLDI5NywxNzUsMTUyLDM3NywzODQsMzk4LDM4MiwzNDcsMzQ4LDMzMCwzMDMsMzA0LDI3MCw5LDMzNiwzMzcsMjc4LDI3OSwzNjAsNDE4LDI2Miw0MzEsMzA0LDQwOCw0MDksMzEwLDQxNSw0MDcsMjcwLDQwOSw0MTAsNDUwLDM0OCwzNDcsNDIyLDQzMCw0MzQsMzEzLDMxNCwxNywzMDYsMzA3LDM3NSwzODcsMzg4LDI2MCwyODYsNDE0LDM5OCwzMzUsNDA2LDQxOCwzNjQsMzY3LDQxNiw0MjMsMzU4LDMyNywyNTEsMjg0LDI5OCwyODEsNSw0LDM3MywzNzQsMjUzLDMwNywzMjAsMzIxLDQyNSw0MjcsNDExLDQyMSwzMTMsMTgsMzIxLDQwNSw0MDYsMzIwLDQwNCw0MDUsMzE1LDE2LDE3LDQyNiw0MjUsMjY2LDM3Nyw0MDAsMzY5LDMyMiwzOTEsMjY5LDQxNyw0NjUsNDY0LDM4NiwyNTcsMjU4LDQ2NiwyNjAsMzg4LDQ1NiwzOTksNDE5LDI4NCwzMzIsMzMzLDQxNywyODUsOCwzNDYsMzQwLDI2MSw0MTMsNDQxLDI4NSwzMjcsNDYwLDMyOCwzNTUsMzcxLDMyOSwzOTIsNDM5LDQzOCwzODIsMzQxLDI1Niw0MjksNDIwLDM2MCwzNjQsMzk0LDM3OSwyNzcsMzQzLDQzNyw0NDMsNDQ0LDI4MywyNzUsNDQwLDM2Myw0MzEsMjYyLDM2OSwyOTcsMzM4LDMzNywyNzMsMzc1LDMyMSw0NTAsNDUxLDM0OSw0NDYsMzQyLDQ2NywyOTMsMzM0LDI4Miw0NTgsNDYxLDQ2MiwyNzYsMzUzLDM4MywzMDgsMzI0LDMyNSwyNzYsMzAwLDI5MywzNzIsMzQ1LDQ0NywzODIsMzk4LDM2MiwzNTIsMzQ1LDM0MCwyNzQsMSwxOSw0NTYsMjQ4LDI4MSw0MzYsNDI3LDQyNSwzODEsMjU2LDI1MiwyNjksMzkxLDM5MywyMDAsMTk5LDQyOCwyNjYsMzMwLDMyOSwyODcsMjczLDQyMiwyNTAsNDYyLDMyOCwyNTgsMjg2LDM4NCwyNjUsMzUzLDM0MiwzODcsMjU5LDI1Nyw0MjQsNDMxLDQzMCwzNDIsMzUzLDI3NiwyNzMsMzM1LDQyNCwyOTIsMzI1LDMwNywzNjYsNDQ3LDM0NSwyNzEsMzAzLDMwMiw0MjMsMjY2LDM3MSwyOTQsNDU1LDQ2MCwyNzksMjc4LDI5NCwyNzEsMjcyLDMwNCw0MzIsNDM0LDQyNywyNzIsNDA3LDQwOCwzOTQsNDMwLDQzMSwzOTUsMzY5LDQwMCwzMzQsMzMzLDI5OSwzNTEsNDE3LDE2OCwzNTIsMjgwLDQxMSwzMjUsMzE5LDMyMCwyOTUsMjk2LDMzNiwzMTksNDAzLDQwNCwzMzAsMzQ4LDM0OSwyOTMsMjk4LDMzMywzMjMsNDU0LDQ0NywxNSwxNiwzMTUsMzU4LDQyOSwyNzksMTQsMTUsMzE2LDI4NSwzMzYsOSwzMjksMzQ5LDM1MCwzNzQsMzgwLDI1MiwzMTgsNDAyLDQwMyw2LDE5Nyw0MTksMzE4LDMxOSwzMjUsMzY3LDM2NCwzNjUsNDM1LDM2NywzOTcsMzQ0LDQzOCw0MzksMjcyLDI3MSwzMTEsMTk1LDUsMjgxLDI3MywyODcsMjkxLDM5Niw0MjgsMTk5LDMxMSwyNzEsMjY4LDI4Myw0NDQsNDQ1LDM3MywyNTQsMzM5LDI2Myw0NjYsMjQ5LDI4MiwzMzQsMjk2LDQ0OSwzNDcsMzQ2LDI2NCw0NDcsNDU0LDMzNiwyOTYsMjk5LDMzOCwxMCwxNTEsMjc4LDQzOSw0NTUsMjkyLDQwNyw0MTUsMzU4LDM3MSwzNTUsMzQwLDM0NSwzNzIsMzkwLDI0OSw0NjYsMzQ2LDM0NywyODAsNDQyLDQ0MywyODIsMTksOTQsMzcwLDQ0MSw0NDIsMjk1LDI0OCw0MTksMTk3LDI2MywyNTUsMzU5LDQ0MCwyNzUsMjc0LDMwMCwzODMsMzY4LDM1MSw0MTIsNDY1LDI2Myw0NjcsNDY2LDMwMSwzNjgsMzg5LDM4MCwzNzQsMzg2LDM5NSwzNzgsMzc5LDQxMiwzNTEsNDE5LDQzNiw0MjYsMzIyLDM3MywzOTAsMzg4LDIsMTY0LDM5MywzNzAsNDYyLDQ2MSwxNjQsMCwyNjcsMzAyLDExLDEyLDM3NCwzNzMsMzg3LDI2OCwxMiwxMywyOTMsMzAwLDMwMSw0NDYsMjYxLDM0MCwzODUsMzg0LDM4MSwzMzAsMjY2LDQyNSw0MjYsNDIzLDM5MSw0MjksMzU1LDQzNywzOTEsMzI3LDMyNiw0NDAsNDU3LDQzOCwzNDEsMzgyLDM2Miw0NTksNDU3LDQ2MSw0MzQsNDMwLDM5NCw0MTQsNDYzLDM2MiwzOTYsMzY5LDI2MiwzNTQsNDYxLDQ1NywzMTYsNDAzLDQwMiwzMTUsNDA0LDQwMywzMTQsNDA1LDQwNCwzMTMsNDA2LDQwNSw0MjEsNDE4LDQwNiwzNjYsNDAxLDM2MSwzMDYsNDA4LDQwNywyOTEsNDA5LDQwOCwyODcsNDEwLDQwOSw0MzIsNDM2LDQxMCw0MzQsNDE2LDQxMSwyNjQsMzY4LDM4MywzMDksNDM4LDQ1NywzNTIsMzc2LDQwMSwyNzQsMjc1LDQsNDIxLDQyOCwyNjIsMjk0LDMyNywzNTgsNDMzLDQxNiwzNjcsMjg5LDQ1NSw0MzksNDYyLDM3MCwzMjYsMiwzMjYsMzcwLDMwNSw0NjAsNDU1LDI1NCw0NDksNDQ4LDI1NSwyNjEsNDQ2LDI1Myw0NTAsNDQ5LDI1Miw0NTEsNDUwLDI1Niw0NTIsNDUxLDM0MSw0NTMsNDUyLDQxMyw0NjQsNDYzLDQ0MSw0MTMsNDE0LDI1OCw0NDIsNDQxLDI1Nyw0NDMsNDQyLDI1OSw0NDQsNDQzLDI2MCw0NDUsNDQ0LDQ2NywzNDIsNDQ1LDQ1OSw0NTgsMjUwLDI4OSwzOTIsMjkwLDI5MCwzMjgsNDYwLDM3Niw0MzMsNDM1LDI1MCwyOTAsMzkyLDQxMSw0MTYsNDMzLDM0MSw0NjMsNDY0LDQ1Myw0NjQsNDY1LDM1Nyw0NjUsNDEyLDM0Myw0MTIsMzk5LDM2MCwzNjMsNDQwLDQzNywzOTksNDU2LDQyMCw0NTYsMzYzLDQwMSw0MzUsMjg4LDM3MiwzODMsMzUzLDMzOSwyNTUsMjQ5LDQ0OCwyNjEsMjU1LDEzMywyNDMsMTkwLDEzMywxNTUsMTEyLDMzLDI0NiwyNDcsMzMsMTMwLDI1LDM5OCwzODQsMjg2LDM2MiwzOTgsNDE0LDM2Miw0NjMsMzQxLDI2MywzNTksNDY3LDI2MywyNDksMjU1LDQ2Niw0NjcsMjYwLDc1LDYwLDE2NiwyMzgsMjM5LDc5LDE2MiwxMjcsMTM5LDcyLDExLDM3LDEyMSwyMzIsMTIwLDczLDcyLDM5LDExNCwxMjgsNDcsMjMzLDIzMiwxMjgsMTAzLDEwNCw2NywxNTIsMTc1LDE0OCwxNzMsMTU3LDE1NSwxMTksMTE4LDEwMSw3NCw3Myw0MCwxMDcsOSwxMDgsNDksNDgsMTMxLDMyLDE5NCwyMTEsMTg0LDc0LDE4NSwxOTEsODAsMTgzLDE4NSw0MCwxODYsMTE5LDIzMCwxMTgsMjEwLDIwMiwyMTQsODQsODMsMTcsNzcsNzYsMTQ2LDE2MSwxNjAsMzAsMTkwLDU2LDE3MywxODIsMTA2LDE5NCwxMzgsMTM1LDE5MiwxMjksMjAzLDk4LDU0LDIxLDY4LDUsNTEsNCwxNDUsMTQ0LDIzLDkwLDc3LDkxLDIwNywyMDUsMTg3LDgzLDIwMSwxOCwxODEsOTEsMTgyLDE4MCw5MCwxODEsMTYsODUsMTcsMjA1LDIwNiwzNiwxNzYsMTQ4LDE0MCwxNjUsOTIsMzksMjQ1LDE5MywyNDQsMjcsMTU5LDI4LDMwLDI0NywxNjEsMTc0LDIzNiwxOTYsMTAzLDU0LDEwNCw1NSwxOTMsOCwxMTEsMTE3LDMxLDIyMSwxODksNTUsMjQwLDk4LDk5LDE0MiwxMjYsMTAwLDIxOSwxNjYsMjE4LDExMiwxNTUsMjYsMTk4LDIwOSwxMzEsMTY5LDEzNSwxNTAsMTE0LDQ3LDIxNywyMjQsMjIzLDUzLDIyMCw0NSwxMzQsMzIsMjExLDE0MCwxMDksNjcsMTA4LDE0Niw0Myw5MSwyMzEsMjMwLDEyMCwxMTMsMjI2LDI0NywxMDUsNjMsNTIsMjQxLDIzOCwyNDIsMTI0LDQ2LDE1Niw5NSw3OCw5Niw3MCw0Niw2MywxMTYsMTQzLDIyNywxMTYsMTIzLDExMSwxLDQ0LDE5LDMsMjM2LDUxLDIwNywyMTYsMjA1LDI2LDE1NCwyMiwxNjUsMzksMTY3LDE5OSwyMDAsMjA4LDEwMSwzNiwxMDAsNDMsNTcsMjAyLDI0MiwyMCw5OSw1NiwyOCwxNTcsMTI0LDM1LDExMywyOSwxNjAsMjcsMjExLDIwNCwyMTAsMTI0LDExMyw0NiwxMDYsNDMsMjA0LDk2LDYyLDc3LDIyNywxMzcsMTE2LDczLDQxLDcyLDM2LDIwMywxNDIsMjM1LDY0LDI0MCw0OCw0OSw2NCw0Miw0MSw3NCwyMTQsMjEyLDIwNywxODMsNDIsMTg0LDIxMCwxNjksMjExLDE0MCwxNzAsMTc2LDEwNCwxMDUsNjksMTkzLDEyMiwxNjgsNTAsMTIzLDE4Nyw4OSw5Niw5MCw2Niw2NSwxMDcsMTc5LDg5LDE4MCwxMTksMTAxLDEyMCw2OCw2MywxMDQsMjM0LDkzLDIyNywxNiwxNSw4NSwyMDksMTI5LDQ5LDE1LDE0LDg2LDEwNyw1NSw5LDEyMCwxMDAsMTIxLDE1MywxNDUsMjIsMTc4LDg4LDE3OSwxOTcsNiwxOTYsODksODgsOTYsMTM1LDEzOCwxMzYsMTM4LDIxNSwxNzIsMjE4LDExNSwyMTksNDEsNDIsODEsNSwxOTUsNTEsNTcsNDMsNjEsMjA4LDE3MSwxOTksNDEsODEsMzgsMjI0LDUzLDIyNSwyNCwxNDQsMTEwLDEwNSw1Miw2NiwxMTgsMjI5LDExNywyMjcsMzQsMjM0LDY2LDEwNyw2OSwxMCwxMDksMTUxLDIxOSw0OCwyMzUsMTgzLDYyLDE5MSwxNDIsMTI5LDEyNiwxMTYsMTExLDE0Myw3LDE2MywyNDYsMTE4LDExNyw1MCwyMjMsMjIyLDUyLDk0LDE5LDE0MSwyMjIsMjIxLDY1LDE5NiwzLDE5Nyw0NSwyMjAsNDQsMTU2LDcwLDEzOSwxODgsMTIyLDI0NSwxMzksNzEsMTYyLDE0NSwxNTMsMTU5LDE0OSwxNzAsMTUwLDEyMiwxODgsMTk2LDIwNiwyMTYsOTIsMTYzLDE0NCwxNjEsMTY0LDIsMTY3LDI0MiwxNDEsMjQxLDAsMTY0LDM3LDExLDcyLDEyLDE0NCwxNDUsMTYwLDEyLDM4LDEzLDcwLDYzLDcxLDMxLDIyNiwxMTEsMTU3LDE1OCwxNTQsMzYsMTAxLDIwNSwyMDMsMjA2LDE2NSwxMjYsMjA5LDIxNyw5OCwxNjUsOTcsMjM3LDIyMCwyMTgsMjM3LDIzOSwyNDEsMjEwLDIxNCwxNjksMTQwLDE3MSwzMiwyNDEsMTI1LDIzNywxNzksODYsMTc4LDE4MCw4NSwxNzksMTgxLDg0LDE4MCwxODIsODMsMTgxLDE5NCwyMDEsMTgyLDE3NywxMzcsMTMyLDE4NCw3NiwxODMsMTg1LDYxLDE4NCwxODYsNTcsMTg1LDIxNiwyMTIsMTg2LDE5MiwyMTQsMTg3LDEzOSwzNCwxNTYsMjE4LDc5LDIzNywxNDcsMTIzLDE3Nyw0NSw0NCw0LDIwOCwyMDEsMzIsOTgsNjQsMTI5LDE5MiwyMTMsMTM4LDIzNSw1OSwyMTksMTQxLDI0Miw5Nyw5NywyLDE0MSwyNDAsNzUsMjM1LDIyOSwyNCwyMjgsMzEsMjUsMjI2LDIzMCwyMywyMjksMjMxLDIyLDIzMCwyMzIsMjYsMjMxLDIzMywxMTIsMjMyLDI0NCwxODksMjQzLDE4OSwyMjEsMTkwLDIyMiwyOCwyMjEsMjIzLDI3LDIyMiwyMjQsMjksMjIzLDIyNSwzMCwyMjQsMTEzLDI0NywyMjUsOTksNjAsMjQwLDIxMywxNDcsMjE1LDYwLDIwLDE2NiwxOTIsMTg3LDIxMywyNDMsMTEyLDI0NCwyNDQsMjMzLDI0NSwyNDUsMTI4LDE4OCwxODgsMTE0LDE3NCwxMzQsMTMxLDIyMCwxNzQsMjE3LDIzNiwyMzYsMTk4LDEzNCwyMTUsMTc3LDU4LDE1NiwxNDMsMTI0LDI1LDExMCw3LDMxLDIyOCwyNSwyNjQsMzU2LDM2OCwwLDExLDI2Nyw0NTEsNDUyLDM0OSwyNjcsMzAyLDI2OSwzNTAsMzU3LDI3NywzNTAsNDUyLDM1NywyOTksMzMzLDI5NywzOTYsMTc1LDM3NywzODEsMzg0LDM4MiwyODAsMzQ3LDMzMCwyNjksMzAzLDI3MCwxNTEsOSwzMzcsMzQ0LDI3OCwzNjAsNDI0LDQxOCw0MzEsMjcwLDMwNCw0MDksMjcyLDMxMCw0MDcsMzIyLDI3MCw0MTAsNDQ5LDQ1MCwzNDcsNDMyLDQyMiw0MzQsMTgsMzEzLDE3LDI5MSwzMDYsMzc1LDI1OSwzODcsMjYwLDQyNCwzMzUsNDE4LDQzNCwzNjQsNDE2LDM5MSw0MjMsMzI3LDMwMSwyNTEsMjk4LDI3NSwyODEsNCwyNTQsMzczLDI1MywzNzUsMzA3LDMyMSwyODAsNDI1LDQxMSwyMDAsNDIxLDE4LDMzNSwzMjEsNDA2LDMyMSwzMjAsNDA1LDMxNCwzMTUsMTcsNDIzLDQyNiwyNjYsMzk2LDM3NywzNjksMjcwLDMyMiwyNjksNDEzLDQxNyw0NjQsMzg1LDM4NiwyNTgsMjQ4LDQ1Niw0MTksMjk4LDI4NCwzMzMsMTY4LDQxNyw4LDQ0OCwzNDYsMjYxLDQxNyw0MTMsMjg1LDMyNiwzMjcsMzI4LDI3NywzNTUsMzI5LDMwOSwzOTIsNDM4LDM4MSwzODIsMjU2LDI3OSw0MjksMzYwLDM2NSwzNjQsMzc5LDM1NSwyNzcsNDM3LDI4Miw0NDMsMjgzLDI4MSwyNzUsMzYzLDM5NSw0MzEsMzY5LDI5OSwyOTcsMzM3LDMzNSwyNzMsMzIxLDM0OCw0NTAsMzQ5LDM1OSw0NDYsNDY3LDI4MywyOTMsMjgyLDI1MCw0NTgsNDYyLDMwMCwyNzYsMzgzLDI5MiwzMDgsMzI1LDI4MywyNzYsMjkzLDI2NCwzNzIsNDQ3LDM0NiwzNTIsMzQwLDM1NCwyNzQsMTksMzYzLDQ1NiwyODEsNDI2LDQzNiw0MjUsMzgwLDM4MSwyNTIsMjY3LDI2OSwzOTMsNDIxLDIwMCw0MjgsMzcxLDI2NiwzMjksNDMyLDI4Nyw0MjIsMjkwLDI1MCwzMjgsMzg1LDI1OCwzODQsNDQ2LDI2NSwzNDIsMzg2LDM4NywyNTcsNDIyLDQyNCw0MzAsNDQ1LDM0MiwyNzYsNDIyLDI3Myw0MjQsMzA2LDI5MiwzMDcsMzUyLDM2NiwzNDUsMjY4LDI3MSwzMDIsMzU4LDQyMywzNzEsMzI3LDI5NCw0NjAsMzMxLDI3OSwyOTQsMzAzLDI3MSwzMDQsNDM2LDQzMiw0MjcsMzA0LDI3Miw0MDgsMzk1LDM5NCw0MzEsMzc4LDM5NSw0MDAsMjk2LDMzNCwyOTksNiwzNTEsMTY4LDM3NiwzNTIsNDExLDMwNywzMjUsMzIwLDI4NSwyOTUsMzM2LDMyMCwzMTksNDA0LDMyOSwzMzAsMzQ5LDMzNCwyOTMsMzMzLDM2NiwzMjMsNDQ3LDMxNiwxNSwzMTUsMzMxLDM1OCwyNzksMzE3LDE0LDMxNiw4LDI4NSw5LDI3NywzMjksMzUwLDI1MywzNzQsMjUyLDMxOSwzMTgsNDAzLDM1MSw2LDQxOSwzMjQsMzE4LDMyNSwzOTcsMzY3LDM2NSwyODgsNDM1LDM5NywyNzgsMzQ0LDQzOSwzMTAsMjcyLDMxMSwyNDgsMTk1LDI4MSwzNzUsMjczLDI5MSwxNzUsMzk2LDE5OSwzMTIsMzExLDI2OCwyNzYsMjgzLDQ0NSwzOTAsMzczLDMzOSwyOTUsMjgyLDI5Niw0NDgsNDQ5LDM0NiwzNTYsMjY0LDQ1NCwzMzcsMzM2LDI5OSwzMzcsMzM4LDE1MSwyOTQsMjc4LDQ1NSwzMDgsMjkyLDQxNSw0MjksMzU4LDM1NSwyNjUsMzQwLDM3MiwzODgsMzkwLDQ2NiwzNTIsMzQ2LDI4MCwyOTUsNDQyLDI4MiwzNTQsMTksMzcwLDI4NSw0NDEsMjk1LDE5NSwyNDgsMTk3LDQ1Nyw0NDAsMjc0LDMwMSwzMDAsMzY4LDQxNywzNTEsNDY1LDI1MSwzMDEsMzg5LDM4NSwzODAsMzg2LDM5NCwzOTUsMzc5LDM5OSw0MTIsNDE5LDQxMCw0MzYsMzIyLDM4NywzNzMsMzg4LDMyNiwyLDM5MywzNTQsMzcwLDQ2MSwzOTMsMTY0LDI2NywyNjgsMzAyLDEyLDM4NiwzNzQsMzg3LDMxMiwyNjgsMTMsMjk4LDI5MywzMDEsMjY1LDQ0NiwzNDAsMzgwLDM4NSwzODEsMjgwLDMzMCw0MjUsMzIyLDQyNiwzOTEsNDIwLDQyOSw0MzcsMzkzLDM5MSwzMjYsMzQ0LDQ0MCw0MzgsNDU4LDQ1OSw0NjEsMzY0LDQzNCwzOTQsNDI4LDM5NiwyNjIsMjc0LDM1NCw0NTcsMzE3LDMxNiw0MDIsMzE2LDMxNSw0MDMsMzE1LDMxNCw0MDQsMzE0LDMxMyw0MDUsMzEzLDQyMSw0MDYsMzIzLDM2NiwzNjEsMjkyLDMwNiw0MDcsMzA2LDI5MSw0MDgsMjkxLDI4Nyw0MDksMjg3LDQzMiw0MTAsNDI3LDQzNCw0MTEsMzcyLDI2NCwzODMsNDU5LDMwOSw0NTcsMzY2LDM1Miw0MDEsMSwyNzQsNCw0MTgsNDIxLDI2MiwzMzEsMjk0LDM1OCw0MzUsNDMzLDM2NywzOTIsMjg5LDQzOSwzMjgsNDYyLDMyNiw5NCwyLDM3MCwyODksMzA1LDQ1NSwzMzksMjU0LDQ0OCwzNTksMjU1LDQ0NiwyNTQsMjUzLDQ0OSwyNTMsMjUyLDQ1MCwyNTIsMjU2LDQ1MSwyNTYsMzQxLDQ1Miw0MTQsNDEzLDQ2MywyODYsNDQxLDQxNCwyODYsMjU4LDQ0MSwyNTgsMjU3LDQ0MiwyNTcsMjU5LDQ0MywyNTksMjYwLDQ0NCwyNjAsNDY3LDQ0NSwzMDksNDU5LDI1MCwzMDUsMjg5LDI5MCwzMDUsMjkwLDQ2MCw0MDEsMzc2LDQzNSwzMDksMjUwLDM5MiwzNzYsNDExLDQzMyw0NTMsMzQxLDQ2NCwzNTcsNDUzLDQ2NSwzNDMsMzU3LDQxMiw0MzcsMzQzLDM5OSwzNDQsMzYwLDQ0MCw0MjAsNDM3LDQ1NiwzNjAsNDIwLDM2MywzNjEsNDAxLDI4OCwyNjUsMzcyLDM1MywzOTAsMzM5LDI0OSwzMzksNDQ4LDI1NV0sU0FNUExFX0ZBQ0U6e2tleXBvaW50czpbe3g6MzU2LjI4MDQ0MTI4NDE3OTcseToyOTUuMTk2MDU2MzY1OTY2OCx6Oi0yMy43ODY0NDk0MzIzNzMwNDcsbmFtZTpcImxpcHNcIn0se3g6MzU0Ljg4NTk0MDU1MTc1NzgseToyNjQuNjk1MjA1Njg4NDc2NTYsejotMzYuNzE4NDM1Mjg3NDc1NTg2fSx7eDozNTUuMjE4MDg2MjQyNjc1OCx5OjI3NS4zMzYwMzY2ODIxMjg5LHo6LTIxLjE4MzcxMjQ4MjQ1MjM5M30se3g6MzQ3LjM0OTg1MzUxNTYyNSx5OjI0Mi40NDAwMjM0MjIyNDEyLHo6LTI1LjA5MzY1NTU4NjI0MjY3Nn0se3g6MzU0LjQwMTM1OTU1ODEwNTQ3LHk6MjU2LjY3OTMzNDY0MDUwMjkzLHo6LTM4LjIzNTcyNjM1NjUwNjM1fSx7eDozNTMuNzY4OTk3MTkyMzgyOCx5OjI0Ny41NDg4NjYyNzE5NzI2Nix6Oi0zNC41NDc1NDM1MjU2OTU4fSx7eDozNTIuMTI4ODI5OTU2MDU0Nyx5OjIyNy4zNDMxMjA1NzQ5NTExNyx6Oi0xMy4wOTUzODYwMjgyODk3OTV9LHt4OjMwMy41MDEzMTk4ODUyNTM5LHk6MjM0LjY3MDAyODY4NjUyMzQ0LHo6MTIuNTAwMTQxODU5MDU0NTY1LG5hbWU6XCJyaWdodEV5ZVwifSx7eDozNTEuMDkzNzg4MTQ2OTcyNjYseToyMTEuODc1NDcyMDY4Nzg2NjIsejotNi40MTM0NzE2OTg3NjA5ODZ9LHt4OjM1MC43MTE1OTM2Mjc5Mjk3LHk6MjAyLjEyNTE2MzA3ODMwODEsejotNi40MTM0NzE2OTg3NjA5ODZ9LHt4OjM0OC4zMzY2Nzc1NTEyNjk1Myx5OjE2OC43NzQxNzU2NDM5MjA5LHo6Ni40ODM1MDAwMDM4MTQ2OTcsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM1Ni40ODA2MzY1OTY2Nzk3LHk6Mjk5LjI5OTUzNTc1MTM0MjgsejotMjMuMTQ0NTE5MzI5MDcxMDQ1fSx7eDozNTYuNTUxMTcwMzQ5MTIxMSx5OjMwMi42NjE0NjY1OTg1MTA3NCx6Oi0yMS4wMjAzMTIzMDkyNjUxMzd9LHt4OjM1Ni42MjM5NTQ3NzI5NDkyLHk6MzA0LjE1MzYzMzExNzY3NTgsejotMTguMTM3NDU5NzU0OTQzODQ4LG5hbWU6XCJsaXBzXCJ9LHt4OjM1Ni41ODA3MzQyNTI5Mjk3LHk6MzA1LjE4NDA1OTE0MzA2NjQsejotMTguNzY3NzE5MjY4Nzk4ODI4LG5hbWU6XCJsaXBzXCJ9LHt4OjM1Ni44MjQxNTAwODU0NDkyLHk6MzA4LjI1NzExMjUwMzA1MTc2LHo6LTIwLjE2ODI5NDkwNjYxNjIxfSx7eDozNTcuMTEzMDM3MTA5Mzc1LHk6MzEyLjI2Mjc3MzUxMzc5Mzk1LHo6LTIyLjEwNTc1ODE5MDE1NTAzfSx7eDozNTcuMzQ5NjI0NjMzNzg5MDYseTozMTcuMTEyMzIxODUzNjM3Nyx6Oi0yMS44MzczMTU1NTkzODcyMDcsbmFtZTpcImxpcHNcIn0se3g6MzU3LjY2NTg2MzAzNzEwOTQseTozMjUuNTEwMzY4MzQ3MTY3OTcsejotMTYuMjcwMDI0Nzc2NDU4NzR9LHt4OjM1NS4wMjAxNDE2MDE1NjI1LHk6MjY5LjM2Mjc5Mjk2ODc1LHo6LTMzLjczMDU0MDI3NTU3MzczfSx7eDozNDguNTIzNzUwMzA1MTc1OCx5OjI3MC4zMzQxMTAyNjAwMDk3Nyx6Oi0yNC45MzAyNTMwMjg4Njk2M30se3g6Mjc5Ljk3MzMxNjE5MjYyNjk1LHk6MjEzLjI0MTc2Nzg4MzMwMDc4LHo6NDcuNzU5NjQyNjAxMDEzMTg0LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozMjIuNjY1MjkwODMyNTE5NTMseToyMzguNTAyNzI2NTU0ODcwNix6OjUuNTM1MTkzMDg1NjcwNDcxfSx7eDozMTYuMDk4MzY1NzgzNjkxNCx5OjIzOS45NDQ4OTY2OTc5OTgwNSx6OjUuNzc3Mzc2Mjk0MTM2MDQ3fSx7eDozMDkuOTQzMTYxMDEwNzQyMix5OjI0MC4yNDUxODk2NjY3NDgwNSx6OjcuNTEwNTg5MzYxMTkwNzk2fSx7eDozMDEuMzE5OTQyNDc0MzY1MjMseToyMzcuODYxMzg1MzQ1NDU4OTgsejoxMy4xMTg3MjgzOTkyNzY3MzN9LHt4OjMyOC4xNDI2NjIwNDgzMzk4NCx5OjIzNS44MDQ5Njc4ODAyNDkwMix6OjYuNjQ2OTAwMTc3MDAxOTUzfSx7eDozMTMuNzMyNjQzMTI3NDQxNCx5OjIyMi4xMTE2MTEzNjYyNzE5Nyx6OjMuOTg4NzIzNzU0ODgyODEyNX0se3g6MzIwLjQ1MTk2NTMzMjAzMTI1LHk6MjIxLjg3NzI5MzU4NjczMDk2LHo6NC42MDE0NzYxOTI0NzQzNjV9LHt4OjMwNy4zNTY3OTYyNjQ2NDg0NCx5OjIyMy42Mzc5Mzg0OTk0NTA2OCx6OjUuOTMyMDIzNTI1MjM4MDM3fSx7eDozMDMuMDAzMTIwNDIyMzYzMyx5OjIyNi4zNzQzNzgyMDQzNDU3LHo6OC40NzkzMjEwMDI5NjAyMDV9LHt4OjI5Ni44MDAyMzE5MzM1OTM3NSx5OjI0Mi45NDI5OTEyNTY3MTM4Nyx6OjE1LjkzMTU1MjY0ODU0NDMxMn0se3g6MzMyLjIzNTI5ODE1NjczODMseTozNDAuNzczNDEwNzk3MTE5MTQsejotMTAuMTY1ODQ4NzMxOTk0NjI5fSx7eDozMDEuMzg1ODc5NTE2NjAxNTYseToyMzMuNDY0NDc5NDQ2NDExMTMsejoxNC43NjQ0MDU0ODg5Njc4OTYsbmFtZTpcInJpZ2h0RXllXCJ9LHt4OjI3OS4wMTQ3MDE4NDMyNjE3LHk6MjQ0LjM3MTU1NzIzNTcxNzc3LHo6NDUuNzc1NDk0NTc1NTAwNDl9LHt4OjI4OS42MDU0ODQwMDg3ODkwNix5OjIzOS4xODA3NDYwNzg0OTEyLHo6MjMuMTkxMjA0MDcxMDQ0OTIyfSx7eDozMjAuMzIyNTcwODAwNzgxMjUseToyNjcuMTI5Mjc4MTgyOTgzNCx6Oi00Ljk1NDUzNzc0OTI5MDQ2Nn0se3g6MzQ3LjY0NTgzNTg3NjQ2NDg0LHk6Mjk0LjQ5NTUwNjI4NjYyMTEsejotMjMuMDYyODIwNDM0NTcwMzEyLG5hbWU6XCJsaXBzXCJ9LHt4OjM0OS4yODEzODczMjkxMDE1Nix5OjMwMy4xMDk1ODg2MjMwNDY5LHo6LTIwLjIzODMyMzIxMTY2OTkyMn0se3g6MzM4Ljk0NTMxMjUseToyOTguMTkxODYyMTA2MzIzMjQsejotMTkuNDU2MzM2NDk4MjYwNDk4LG5hbWU6XCJsaXBzXCJ9LHt4OjMzMy4zNjc4ODE3NzQ5MDIzNCx5OjMwMi42NzA2NzkwOTI0MDcyLHo6LTE0Ljc3NjA3NzI3MDUwNzgxMixuYW1lOlwibGlwc1wifSx7eDozNDIuODkxODgzODUwMDk3NjYseTozMDQuMzU2MTM2MzIyMDIxNSx6Oi0xNy43NTIzMDE2OTI5NjI2NDZ9LHt4OjMzNy43Mzc1MDMwNTE3NTc4LHk6MzA2LjAwOTgzNjE5Njg5OTQsejotMTMuNDEwNTE1Nzg1MjE3Mjg1fSx7eDozMjUuNjE1OTIxMDIwNTA3OCx5OjMxNi4yMjk5NTM3NjU4NjkxNCx6Oi02LjY4MTkxNDkyNTU3NTI1Nn0se3g6MzQ5LjAxMDQ2NzUyOTI5NjkseToyNjQuOTgxODUxNTc3NzU4OCx6Oi0zNi4yNzQ5MTk1MDk4ODc2OTV9LHt4OjM0Ny43MTM4OTAwNzU2ODM2LHk6MjU3LjU2NjQ4MDYzNjU5NjcsejotMzcuNjc1NDk1MTQ3NzA1MDh9LHt4OjI5MS43OTM1NzUyODY4NjUyMyx5OjIxOC44ODE3MTY3MjgyMTA0NSx6OjExLjU3ODA5NDk1OTI1OTAzMyxuYW1lOlwicmlnaHRFeWVicm93XCJ9LHt4OjMzMi4yNjg5NDM3ODY2MjExLHk6MjQ3LjU2OTQ2NTYzNzIwNzAzLHo6LTMuMzczMDUzOTY3OTUyNzI4M30se3g6MzMyLjAwNzQ0NjI4OTA2MjUseToyNjcuMTIwMTIyOTA5NTQ1OSx6Oi0xOS45Njk4NzkzODg4MDkyMDR9LHt4OjMzMS4yNzk1MjU3NTY4MzU5NCx5OjI2My42OTY3NjU4OTk2NTgyLHo6LTE3LjQ3MjE4NjA4ODU2MjAxfSx7eDozMDEuMDQzNzM5MzE4ODQ3NjYseToyNjkuNTY1NTI1MDU0OTMxNjQsejozLjYxODE1NDgyMzc4MDA2fSx7eDozNDcuNDg2MzgxNTMwNzYxNyx5OjI0OS4wNzA2NDQzNzg2NjIxLHo6LTMyLjYzMzQyMTQyMTA1MTAyNX0se3g6MzA3LjI2MTE4MDg3NzY4NTU1LHk6MjA4LjI2NDY4OTQ0NTQ5NTYsejoxLjE1OTEyMjY2MDc1NjExMTEsbmFtZTpcInJpZ2h0RXllYnJvd1wifSx7eDoyOTcuOTE5MTk3MDgyNTE5NTMseToyMTIuMjI2MDQ3NTE1ODY5MTQsejo1LjkxNDUxNjQ0ODk3NDYwOSxuYW1lOlwicmlnaHRFeWVicm93XCJ9LHt4OjI4NS4xNjUxMzgyNDQ2Mjg5LHk6MTk3Ljk4NDUwNDY5OTcwNzAzLHo6MzYuMzkxNjM3MzI1Mjg2ODY1LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozMzcuMDQwOTc3NDc4MDI3MzQseToyMTEuMjUyMjk4MzU1MTAyNTQsejotNC41NDg5NTQ2NjU2NjA4NTh9LHt4OjMyNi41OTEyNjI4MTczODI4LHk6MjIzLjE2Njk4NTUxMTc3OTc5LHo6Ni42NzAyNDM3NDAwODE3ODd9LHt4OjMyMC4wNTY2NDgyNTQzOTQ1Myx5OjMwOS41ODM0MjU1MjE4NTA2LHo6LTQuMDU1ODM1MDA4NjIxMjE2fSx7eDoyODkuNjg2NjIyNjE5NjI4OSx5OjMxNC42MTczOTU0MDEwMDEsejo1My44NzU0ODkyMzQ5MjQzMTYsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjMzNy40MjU2ODk2OTcyNjU2LHk6MjcwLjg3NTUzMDI0MjkxOTksejotMTcuNjcwNjAxNjA2MzY5MDJ9LHt4OjM0My42OTkyMjYzNzkzOTQ1Myx5OjI3My4wMDAwNDAwNTQzMjEzLHo6LTE4Ljc1NjA0ODY3OTM1MTgwN30se3g6MzI3LjQyNDI0MDExMjMwNDcseTozMDkuMjIzOTk1MjA4NzQwMjMsejotNC43MDM2MDEwMDI2OTMxNzYsbmFtZTpcImxpcHNcIn0se3g6MzMwLjM3MjIwMDAxMjIwNzAzLHk6MzA4LjMzMjMwMDE4NjE1NzIsejotNi40NDI2NDk5NjA1MTc4ODN9LHt4OjI5My44NzAyNzc0MDQ3ODUxNix5OjIwNy43OTYxODI2MzI0NDYzLHo6OS44MjE1Mzk1MjEyMTczNDYsbmFtZTpcInJpZ2h0RXllYnJvd1wifSx7eDozMzIuMTE0MzcyMjUzNDE3OTcseToyNzEuMjI4MTIyNzExMTgxNjQsejotMTYuNjQzNTEyMjQ4OTkyOTJ9LHt4OjMyMC4xMTk3ODE0OTQxNDA2LHk6MjA3LjQwMzY2NDU4ODkyODIyLHo6LTIuNDgxNjQ1NjQzNzExMDksbmFtZTpcInJpZ2h0RXllYnJvd1wifSx7eDozMTguNTk1NzUyNzE2MDY0NDUseToyMDEuMDc0NDM4MDk1MDkyNzcsejotMy4xMTA0NDYwMzU4NjE5NjksbmFtZTpcInJpZ2h0RXllYnJvd1wifSx7eDozMTAuNzIzMDM3NzE5NzI2NTYseToxNzUuNzUwNzUxNDk1MzYxMzMsejoxMy4zMjg4MTU2OTg2MjM2NTcsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjI4OS42NzU3ODg4NzkzOTQ1Myx5OjIwMi4yOTgzNTUxMDI1MzkwNix6OjIxLjM3MDQ1NjIxODcxOTQ4Mn0se3g6MzE1LjMwODc5OTc0MzY1MjM0LHk6MTg3LjM1MjYwMDA5NzY1NjI1LHo6NS4wMzA0MDI1NDExNjA1ODM1fSx7eDoyODcuODkzNjc2NzU3ODEyNSx5OjIxNi41NDc5MzczOTMxODg0OCx6OjE3LjgxMDY1ODIxNjQ3NjQ0LG5hbWU6XCJyaWdodEV5ZWJyb3dcIn0se3g6MjgzLjkzOTE4OTkxMDg4ODcseToyMTUuMDExNDI1MDE4MzEwNTUsejozMi4wNDk4NDkwMzMzNTU3MX0se3g6MzQ4LjM1MzMwOTYzMTM0NzY2LHk6Mjk5LjQxNTU3ODg0MjE2MzEsejotMjIuNDc5MjQ1NjYyNjg5MjF9LHt4OjM0MS4xNzkwNDY2MzA4NTk0LHk6MzAxLjgyMjE4NTUxNjM1NzQsejotMTguOTc3ODA1Mzc2MDUyODU2fSx7eDozMzUuNjk3MTM1OTI1MjkyOTcseTozMDQuNDI2Njg5MTQ3OTQ5Mix6Oi0xNC42ODI3MDY1OTQ0NjcxNjN9LHt4OjMzOS40NjE1MTczMzM5ODQ0LHk6MjcyLjM2NTQzNjU1Mzk1NTEsejotMTYuMzg2NzQwMjA3NjcyMTJ9LHt4OjMyOC45OTYwMDk4MjY2NjAxNix5OjMwOC44NjY4NTM3MTM5ODkyNix6Oi01LjYxNjg5Mzc2ODMxMDU0N30se3g6MzMyLjAwMzEzNTY4MTE1MjM0LHk6MzA5LjE4NzU3NDM4NjU5NjcsejotMTAuMzM1MDg0MTk5OTA1Mzk2fSx7eDozMzEuMDA2ODEzMDQ5MzE2NCx5OjMwNy45Mjc0MzY4Mjg2MTMzLHo6LTYuNjgxOTE0OTI1NTc1MjU2LG5hbWU6XCJsaXBzXCJ9LHt4OjM0MS4xMzc5MjQxOTQzMzU5NCx5OjI2Ni40ODc2OTM3ODY2MjExLHo6LTI2LjU2NDI1OTUyOTExMzc3fSx7eDozMzkuMDI5NTAyODY4NjUyMzQseTozMDUuNjY2MzcwMzkxODQ1Nyx6Oi0xMi4zMzY3NDE2ODU4NjczMSxuYW1lOlwibGlwc1wifSx7eDozNDQuMjI5MzU0ODU4Mzk4NDQseTozMDQuOTQ1Mjc4MTY3NzI0Nix6Oi0xNS4xNjEyMzUzMzI0ODkwMTQsbmFtZTpcImxpcHNcIn0se3g6MzUwLjE4NDQwMjQ2NTgyMDMseTozMDQuMzc0MzAzODE3NzQ5LHo6LTE3LjUzMDU0MzgwNDE2ODcsbmFtZTpcImxpcHNcIn0se3g6MzQ4LjUyNjMwNjE1MjM0Mzc1LHk6MzI1Ljk1NjIzMDE2MzU3NDIsejotMTYuMTY0OTgyMzE4ODc4MTc0fSx7eDozNDguNjU4MTgwMjM2ODE2NCx5OjMxNy4xNjI0MTgzNjU0Nzg1LHo6LTIxLjUxMDUxMjgyODgyNjkwNCxuYW1lOlwibGlwc1wifSx7eDozNDguOTc2NjMxMTY0NTUwOCx5OjMxMi4xOTIzMDY1MTg1NTQ3LHo6LTIxLjcwODkyOTUzODcyNjgwN30se3g6MzQ5LjI0Mjc0NDQ0NTgwMDgseTozMDguMDY2MDgyMDAwNzMyNCx6Oi0xOS42NDMwNzkwNDI0MzQ2OTJ9LHt4OjM0OS42NzQ5MTE0OTkwMjM0NCx5OjMwNS40Mjc0NzQ5NzU1ODU5NCx6Oi0xOC4xNjA4MDMzMTgwMjM2OCxuYW1lOlwibGlwc1wifSx7eDozMzcuOTU1ODk0NDcwMjE0ODQseTozMDYuNjUzNTk0OTcwNzAzMSx6Oi0xMi44MDM1OTg2NDIzNDkyNDMsbmFtZTpcImxpcHNcIn0se3g6MzM3LjA2ODc4NjYyMTA5Mzc1LHk6MzA3LjYzMTY5Mjg4NjM1MjU0LHo6LTE0LjI3NDIwMzc3NzMxMzIzMn0se3g6MzM1Ljc3NDQ5Nzk4NTgzOTg0LHk6MzA5Ljg0NDk1MTYyOTYzODcsejotMTUuNjk4MTI0MTcwMzAzMzQ1fSx7eDozMzQuNjA5OTA5MDU3NjE3Mix5OjMxMi43OTk3MDE2OTA2NzM4LHo6LTE0Ljc2NDQwNTQ4ODk2Nzg5NixuYW1lOlwibGlwc1wifSx7eDozMjcuMjMzMDg1NjMyMzI0Mix5OjI5My44MDg2NjA1MDcyMDIxNSx6Oi0xMS44NjQwNDcwNTA0NzYwNzR9LHt4OjI4MC45NzY3OTEzODE4MzU5NCx5OjI3OS43OTkyODk3MDMzNjkxNCx6OjY4LjkwODM0MzMxNTEyNDUxLG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozNTUuMTM4NDM1MzYzNzY5NTMseToyNzEuNzg3NTY3MTM4NjcxOSx6Oi0yNS4zNTA0Mjc2Mjc1NjM0Nzd9LHt4OjMzNC43MjM1ODcwMzYxMzI4LHk6MzA3LjQ2NTYzOTExNDM3OTksejotOS4zMDIxNTg5NTE3NTkzMzgsbmFtZTpcImxpcHNcIn0se3g6MzMzLjUyOTM5NjA1NzEyODkseTozMDcuODk3ODI1MjQxMDg4ODcsejotMTAuMjAwODYyODg0NTIxNDg0fSx7eDozNDYuMjk2ODgyNjI5Mzk0NTMseToyNzYuNDI1NjI4NjYyMTA5NCx6Oi0xOS43NDgxMjI2OTIxMDgxNTR9LHt4OjMzNS4xNjI0Njc5NTY1NDI5Nyx5OjI3Ni4yMjA5Nzk2OTA1NTE3Nix6Oi0xMi4zMTMzOTgxMjI3ODc0NzZ9LHt4OjM0NS4wOTEzMjM4NTI1MzkwNix5OjI3NC43MDgyOTk2MzY4NDA4LHo6LTE5LjMwNDYwNTcyMjQyNzM2OH0se3g6MzI1LjQyNjc4ODMzMDA3ODEseToyNTIuOTUxMzA3Mjk2NzUyOTMsejotMS42NjYxMDE5NjIzMjc5NTcyfSx7eDozMTUuMzQ3ODQzMTcwMTY2LHk6MjU5LjA1MjAwOTU4MjUxOTUzLHo6LS4yNTYwNDI4MTU3NDQ4NzY4Nn0se3g6MzMwLjQ0OTMzMzE5MDkxNzk3LHk6MjY3Ljc1NzAxNTIyODI3MTUsejotMTQuMDE3NDMyOTI4MDg1MzI3fSx7eDoyOTQuOTY3Njg5NTE0MTYwMTYseToxODUuMjYwMDE5MzAyMzY4MTYsejoyMy45MDMxNjQ4NjM1ODY0MjYsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjI5OS42MzUzMTQ5NDE0MDYyNSx5OjE5Mi43OTEzNzYxMTM4OTE2LHo6MTIuNjQwMTk4NDY5MTYxOTg3fSx7eDozMDQuNTQ1MjExNzkxOTkyMix5OjIwMi40MTQyODM3NTI0NDE0LHo6My4yNDQ2Njc2NDkyNjkxMDQsbmFtZTpcInJpZ2h0RXllYnJvd1wifSx7eDozMzEuNjkxNTUxMjA4NDk2MSx5OjMyMC4wNDY3ODcyNjE5NjI5LHo6LTEwLjYzMjcwNTY4ODQ3NjU2Mn0se3g6MzM0LjU5MTE0MDc0NzA3MDMseToyMDEuMjc1NjY4MTQ0MjI2MDcsejotNi4xMzMzNTYwOTQzNjAzNTIsbmFtZTpcInJpZ2h0RXllYnJvd1wifSx7eDozMzEuNDgxNTkwMjcwOTk2MSx5OjE4NS40NDE4MDg3MDA1NjE1Mix6Oi42NjI3MjA1MDE0MjI4ODIxfSx7eDozMjguMDU4MTY2NTAzOTA2MjUseToxNzAuODM4NTQ2NzUyOTI5Nyx6OjcuMzU4ODYwMzczNDk3MDA5LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozMDQuNDk3NjQyNTE3MDg5ODQseToyMzkuNzYyOTc4NTUzNzcxOTcsejoxMC4zODc2MDU0Mjg2OTU2Nzl9LHt4OjI5MC42MzgyMTc5MjYwMjU0LHk6MjQ4Ljg1MjU3NzIwOTQ3MjY2LHo6MTkuMDM2MTY0MjgzNzUyNDR9LHt4OjMzMS41NjgyNjAxOTI4NzExLHk6MjMzLjIwNzI3MzQ4MzI3NjM3LHo6Ny44MzczOTAzMDM2MTE3NTV9LHt4OjI5NS41MTE1NTA5MDMzMjAzLHk6MjI4Ljk4MzQ0NTE2NzU0MTUsejoxNC40MTQyNjE1Nzk1MTM1NX0se3g6MzM2Ljk0MzMyMTIyODAyNzM0LHk6MjQxLjgyNTkzMzQ1NjQyMDksejotNS4yNzg0MjEwNDQzNDk2N30se3g6MzM2LjI3OTIyMDU4MTA1NDcseToyNjIuNzA0OTkyMjk0MzExNSx6Oi0yNi4xMjA3NDM3NTE1MjU4OH0se3g6Mjg0LjQxMDI0NzgwMjczNDQseToyNTUuMzI2MjcxMDU3MTI4OSx6OjI1LjQ2NzE0MDY3NDU5MTA2NH0se3g6Mjk1LjE0MjA1OTMyNjE3MTkseToyNTMuMDI2NTUyMjAwMzE3MzgsejoxMi40MzAxMTIzNjE5MDc5NTl9LHt4OjMwMy41MTk2MTEzNTg2NDI2LHk6MjU0LjIwNzAzODg3OTM5NDUzLHo6Ni4xMzkxOTEzODkwODM4NjJ9LHt4OjMxNS43MzQ1MDA4ODUwMDk3Nyx5OjI1MS42NDc5OTY5MDI0NjU4Mix6OjMuMzc4ODg5ODU4NzIyNjg2OH0se3g6MzI0LjY5NjYxNzEyNjQ2NDg0LHk6MjQ3LjU2NDk0NTIyMDk0NzI3LHo6Mi4zMzI4MzQ0NTIzOTA2NzA4fSx7eDozMzEuNTc5NzA0Mjg0NjY3OTcseToyNDMuMDIyNDEzMjUzNzg0MTgsejoxLjE0MjM0NDg0NzMyMTUxMDN9LHt4OjM0NS42MjEwNzA4NjE4MTY0LHk6MjI5Ljk5NzY2MzQ5NzkyNDgsejotMTAuODI1Mjg1OTExNTYwMDU5fSx7eDoyODYuMjY2NDQxMzQ1MjE0ODQseToyNzAuMzc5OTE1MjM3NDI2NzYsejoyMS43MDg5Mjk1Mzg3MjY4MDd9LHt4OjI5MC4yNTI1NTIwMzI0NzA3LHk6MjI4LjQ5MjEzNjAwMTU4NjksejoxNy43MTcyODc1NDA0MzU3OX0se3g6MzUxLjY1MzY3MTI2NDY0ODQ0LHk6MjY5LjM0MDA3NjQ0NjUzMzIsejotMzMuNDUwNDI0NjcxMTczMDk2fSx7eDozMzMuMTM3ODkzNjc2NzU3OCx5OjI1My44ODM4ODYzMzcyODAyNyx6Oi03LjIzMDQ3Mzc1Njc5MDE2MX0se3g6Mjc3LjgzMTg5NzczNTU5NTcseToyNDYuOTUzMzE1NzM0ODYzMjgsejo2OC4yMDgwNTU0OTYyMTU4MixuYW1lOlwiZmFjZU92YWxcIn0se3g6MzM2LjY2ODA5MDgyMDMxMjUseToyMzguMTAwMDM3NTc0NzY4MDcsejouNzY4ODU3ODk2MzI3OTcyNH0se3g6MzI5Ljk1ODAwMDE4MzEwNTQ3LHk6MjY5LjE4MzIzNTE2ODQ1NzAzLHo6LTcuMjA3MTMwNzg5NzU2Nzc1fSx7eDoyOTkuMTc0OTE5MTI4NDE3OTcseToyMzQuMTMzMjQzNTYwNzkxMDIsejoxNS45NTQ4OTUwMTk1MzEyNX0se3g6MzM1LjYxNzI5NDMxMTUyMzQ0LHk6MjU4LjcxNzUyNzM4OTUyNjM3LHo6LTIzLjAxNjEzMzMwODQxMDY0NX0se3g6Mjg0LjEwNzkzMzA0NDQzMzYseToyOTcuMDM0MzQ5NDQxNTI4Myx6OjYzLjI1OTM0ODg2OTMyMzczLG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozMzEuNDQ1NDI2OTQwOTE3OTcseToyMzAuNjg5MjQ0MjcwMzI0Nyx6OjkuOTI2NTgyNTc0ODQ0MzYsbmFtZTpcInJpZ2h0RXllXCJ9LHt4OjM0MS40MTUzNjcxMjY0NjQ4NCx5OjI1My4wMTI2NDc2Mjg3ODQxOCx6Oi0yOS4wMzg2MTA0NTgzNzQwMjN9LHt4OjMwMy41NDcyODY5ODczMDQ3LHk6MzI3LjU4OTY3Mzk5NTk3MTcsejoxNi43MjUyMTIzMzU1ODY1NDh9LHt4OjMwNC43NzU2NTc2NTM4MDg2LHk6MzM3LjQzODk0NTc3MDI2MzcsejoyNy4zODEyNjI3NzkyMzU4NCxuYW1lOlwiZmFjZU92YWxcIn0se3g6MjgwLjgwNTAxNTU2Mzk2NDg0LHk6Mjc1LjMyMDUwMTMyNzUxNDY1LHo6NDUuMDc1MjA2NzU2NTkxOH0se3g6Mjk1LjQzNTgyOTE2MjU5NzY2LHk6MzE4LjQ1MDE2NDc5NDkyMTksejoyNi4yNjA4MDAzNjE2MzMzfSx7eDoyODEuNDMwMzIwNzM5NzQ2MSx5OjIyOC43MzU1NjYxMzkyMjEyLHo6NDAuOTQzNTA4MTQ4MTkzMzZ9LHt4OjMzMS4yNTQ5NTkxMDY0NDUzLHk6MzQ5LjQyMTY1Mzc0NzU1ODYsejotNy4zNzYzNjc0NDk3NjA0Mzd9LHt4OjM1Mi40MjQ3NzQxNjk5MjE5LHk6MjcxLjczMzAwNzQzMTAzMDMsejotMjQuOTUzNTk2NTkxOTQ5NDYzfSx7eDozMjcuNTY3MjkxMjU5NzY1Nix5OjI2MC40MTkwMDYzNDc2NTYyNSx6Oi01LjQ1NjQxMDY0NjQzODU5OX0se3g6Mjg0LjU0MzI0NzIyMjkwMDQseToyNDEuNzY0NzkzMzk1OTk2MSx6OjI5LjY2ODg2OTk3MjIyOTAwNH0se3g6MzEwLHk6MjM1LjY2MTc0NTA3MTQxMTEzLHo6OC41MDI2NjM5Njk5OTM1OTEsbmFtZTpcInJpZ2h0RXllXCJ9LHt4OjMxNS43MDcxMTEzNTg2NDI2LHk6MjM1Ljc1NzI2MDMyMjU3MDgsejo2LjkzODY4NzU2Mjk0MjUwNSxuYW1lOlwicmlnaHRFeWVcIn0se3g6MzMwLjQxMDg4MTA0MjQ4MDQ3LHk6MzExLjA0MTQzMTQyNzAwMTk1LHo6LTkuMzI1NTAyNTE0ODM5MTcyLG5hbWU6XCJsaXBzXCJ9LHt4OjI4OC41Mzc3NTAyNDQxNDA2LHk6Mjg1LjMxOTgzMzc1NTQ5MzE2LHo6MjEuODM3MzE1NTU5Mzg3MjA3fSx7eDozNDQuNTUwMzk5NzgwMjczNDQseTozNTkuNDMwMDg0MjI4NTE1Nix6Oi02LjcwNTI1Nzg5MjYwODY0MyxuYW1lOlwiZmFjZU92YWxcIn0se3g6MzIzLjQxODgwNzk4MzM5ODQ0LHk6MzUxLjY3MzYyMjEzMTM0NzY2LHo6Ny44MDIzNzU1NTUwMzg0NTIsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjMxNC42NDA4ODQzOTk0MTQwNix5OjM0Ni4xMTg5NDYwNzU0Mzk0NSx6OjE2LjM2MzM5NzgzNjY4NTE4LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozNDkuNDk0NTUyNjEyMzA0Nyx5OjE4NC44NDM0ODI5NzExOTE0LHo6LS4yMTg0NzUyNzQ3NDE2NDk2M30se3g6MzU5LjI0Njk0MDYxMjc5Mjk3LHk6MzU5LjgzNDg5MDM2NTYwMDYsejotOC40MDM0NTYyMTEwOTAwODgsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjMyMS4yNjE4MjU1NjE1MjM0NCx5OjIzNC42NDQ5MjMyMTAxNDQwNCx6OjYuOTA5NTA4NzA1MTM5MTYsbmFtZTpcInJpZ2h0RXllXCJ9LHt4OjMyNi4zMTgzNTkzNzUseToyMzIuOTAyNTAzMDEzNjEwODQsejo4LjAyOTk2OTMzNDYwMjM1NixuYW1lOlwicmlnaHRFeWVcIn0se3g6MzI5LjYyMTE2MjQxNDU1MDgseToyMzEuNjE5NTc3NDA3ODM2OSx6OjkuNzIyMzMxNzYyMzEzODQzLG5hbWU6XCJyaWdodEV5ZVwifSx7eDoyODUuOTM5ODA3ODkxODQ1Nyx5OjIyOC4yMzUxMzAzMTAwNTg2LHo6MjQuNjUwMTM5ODA4NjU0Nzg1fSx7eDozMjUuNzkyODg0ODI2NjYwMTYseToyMjcuODgwMDc3MzYyMDYwNTUsejo3LjQ2OTczODcyMTg0NzUzNCxuYW1lOlwicmlnaHRFeWVcIn0se3g6MzIwLjE2OTk0NDc2MzE4MzYseToyMjcuNTkzNDg4NjkzMjM3Myx6OjYuMTY4MzcwODQyOTMzNjU1LG5hbWU6XCJyaWdodEV5ZVwifSx7eDozMTQuODU0MDg3ODI5NTg5ODQseToyMjcuODUyODI2MTE4NDY5MjQsejo2LjI2NzU3ODAwNTc5MDcxMDQsbmFtZTpcInJpZ2h0RXllXCJ9LHt4OjMwOS4zMDg0OTA3NTMxNzM4LHk6MjI5LjE1MTY4NzYyMjA3MDMsejo3LjcwMzE2ODM5MjE4MTM5NjUsbmFtZTpcInJpZ2h0RXllXCJ9LHt4OjMwNS41NjIxMzM3ODkwNjI1LHk6MjMwLjkyMzY2MjE4NTY2ODk1LHo6OS43MjIzMzE3NjIzMTM4NDMsbmFtZTpcInJpZ2h0RXllXCJ9LHt4OjI3Ny44NjgxOTQ1ODAwNzgxLHk6MjI4LjUzNTQyMzI3ODgwODYsejo1OS43MTEyMjc0MTY5OTIxOSxuYW1lOlwiZmFjZU92YWxcIn0se3g6MzA2LjE0NDQ2NjQwMDE0NjUseToyMzUuMTk1NDY5ODU2MjYyMix6OjEwLjYwMzUyODAyMjc2NjExMyxuYW1lOlwicmlnaHRFeWVcIn0se3g6MzU1LjQ0Nzg0NTQ1ODk4NDQseToyODEuOTYyMTA4NjEyMDYwNTUsejotMjAuNTY1MTIzNTU4MDQ0NDM0fSx7eDozMzMuMDI2NjE4OTU3NTE5NTMseToyODguMDEwNTQwMDA4NTQ0OSx6Oi0xNC43MjkzOTEzMzY0NDEwNH0se3g6MzM3LjE1NzI4NzU5NzY1NjI1LHk6MjY5LjIwNTk1MTY5MDY3MzgsejotMTkuODQxNDk0NTYwMjQxN30se3g6MzQ1Ljk4OTgzNzY0NjQ4NDQseToyODMuNTQ1MzEyODgxNDY5Nyx6Oi0yMC40ODM0MjQ2NjM1NDM3fSx7eDozNTEuNDg5NjM5MjgyMjI2NTYseToyMTkuOTg5MTYxNDkxMzk0MDQsejotNy4wMzc4OTQ3MjU3OTk1NjA1fSx7eDozMTIuMzk1NzQ0MzIzNzMwNDcseTozMzYuNTA2MjgwODk5MDQ3ODUsejo4LjY3MTkwMDAzMzk1MDgwNn0se3g6MzIxLjMyMTUyNTU3MzczMDQ3LHk6MzQzLjE3NTUyNTY2NTI4MzIsejouOTA2NzI3MTY0OTgzNzQ5NH0se3g6MzQzLjc4Mzc5ODIxNzc3MzQ0LHk6MzUzLjI5NzU5NTk3Nzc4MzIsejotMTQuMzU1OTA1MDU1OTk5NzU2fSx7eDoyOTYuODc5MTM4OTQ2NTMzMix5OjMyNy45MTQ5NzIzMDUyOTc4NSx6OjQxLjAxMzUzNjQ1MzI0NzA3LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozMjkuNjkzOTQ2ODM4Mzc4OSx5OjIyOS4yNzg5NzQ1MzMwODEwNSx6OjguOTM0NTA4NTYyMDg4MDEzLG5hbWU6XCJyaWdodEV5ZVwifSx7eDozNDEuNjkwNTIxMjQwMjM0NCx5OjI0MS40MDczNjU3OTg5NTAyLHo6LTE0LjU4OTMzMzUzNDI0MDcyM30se3g6MzU5LjAzMDc5OTg2NTcyMjY2LHk6MzUzLjQ4ODU5Nzg2OTg3MzA1LHo6LTE1LjgwMzE2NjYyNzg4MzkxMX0se3g6MzMzLjE4NjE4Nzc0NDE0MDYseTozNTYuNDMyMTMyNzIwOTQ3MjcsejotMS4wMjM0NDE3NzY2MzMyNjI2LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDoyODMuOTc0ODM4MjU2ODM1OTQseToyOTEuNDMxODY1NjkyMTM4Nyx6OjQxLjk0NzI1NTEzNDU4MjUyfSx7eDozNDMuMzM3NzA3NTE5NTMxMjUseTozMDUuODMwMTM1MzQ1NDU5LHo6LTE1Ljc1NjQ4MDY5MzgxNzEzOSxuYW1lOlwibGlwc1wifSx7eDozNDIuNDAyODM5NjYwNjQ0NTMseTozMDcuNzQ1Mzg5OTM4MzU0NSx6Oi0xNy40MDIxNTc3ODM1MDgzfSx7eDozNDEuNTM2MjE2NzM1ODM5ODQseTozMTEuMDU5NTcwMzEyNSx6Oi0xOS4wNDc4MzQ4NzMxOTk0NjN9LHt4OjM0MC45MTA3MjA4MjUxOTUzLHk6MzE1LjQ4Mzc3MDM3MDQ4MzQsejotMTguNTU3NjMzMTYxNTQ0OCxuYW1lOlwibGlwc1wifSx7eDozMzkuMTQ3ODcyOTI0ODA0Nyx5OjMyMy40MjIzMzY1NzgzNjkxNCx6Oi0xNC4zNjc1NzY4Mzc1Mzk2NzN9LHt4OjMzMy4zMjAxNTk5MTIxMDk0LHk6MzA3LjQ0MDYzMzc3MzgwMzcsejotOS42MTcyODg3MDg2ODY4Mjl9LHt4OjMzMS4yNDExMTE3NTUzNzExLHk6MzA2Ljk4MTE4MjA5ODM4ODcsejotOS42Njk4MDk5Mzc0NzcxMTJ9LHt4OjMyOS4yMzI1NTkyMDQxMDE1Nix5OjMwNi4wNTA4MzQ2NTU3NjE3LHo6LTkuNTgyMjczOTYwMTEzNTI1LG5hbWU6XCJsaXBzXCJ9LHt4OjMyMi40NTg2NDg2ODE2NDA2LHk6MzAxLjMzMzIzNjY5NDMzNTk0LHo6LTcuNzIwNjc1NDY4NDQ0ODI0fSx7eDoyOTcuMTcxMjExMjQyNjc1OCx5OjI4Ni45NTUyODAzMDM5NTUxLHo6OC4yNDAwNTU0NDE4NTYzODR9LHt4OjM0MS4zMDYwNzYwNDk4MDQ3LHk6MjM1LjQ0MzIyMDEzODU0OTgsejotNy41MDQ3NTM0NzA0MjA4Mzd9LHt4OjMzNi45MzE4Mzg5ODkyNTc4LHk6MjI0LjM0NTE5NzY3NzYxMjMsejo1LjgyOTg5ODExODk3Mjc3OH0se3g6MzMyLjY1MzIzNjM4OTE2MDE2LHk6MjI2LjcwNDAzOTU3MzY2OTQzLHo6OC4xMDU4MzQxMjY0NzI0NzN9LHt4OjMzNC42NzM1NzYzNTQ5ODA0Nyx5OjMwNi40Mzk3NjIxMTU0Nzg1LHo6LTguOTgxMTkzOTAwMTA4MzM3LG5hbWU6XCJsaXBzXCJ9LHt4OjI5Ny40NjAxOTM2MzQwMzMyLHk6MzA2LjI5MjEwNDcyMTA2OTM0LHo6MTUuNDc2MzY1MDg5NDE2NTA0fSx7eDozNDIuOTExOTExMDEwNzQyMix5OjIyMi4zNzA3NzcxMzAxMjY5NSx6Oi0yLjc1NDQ2NjIzNTYzNzY2NX0se3g6MzM1LjQ2Mjk4OTgwNzEyODkseTozMzIuMjAyNTAxMjk2OTk3MDcsejotMTEuODIzMTk2NDExMTMyODEyfSx7eDozNTMuMjQxMjMzODI1NjgzNix5OjI0MC41NjMzOTI2MzkxNjAxNix6Oi0yNy4xNDc4MzE5MTY4MDkwODJ9LHt4OjM0Ni4zMDgwNTk2OTIzODI4LHk6MjM2LjQxNDQ2NTkwNDIzNTg0LHo6LTE4LjQ1MjU4OTUxMTg3MTMzOH0se3g6MzUyLjY0NzUxNDM0MzI2MTcseToyMzQuMTQyMDU1NTExNDc0Nix6Oi0xOS43NDgxMjI2OTIxMDgxNTR9LHt4OjMzNy4zMjA5NzYyNTczMjQyLHk6MjUzLjM5OTM3MjEwMDgzMDA4LHo6LTE2LjAyNDkyNDUxNjY3Nzg1Nn0se3g6MzU4LjYxMjIxMzEzNDc2NTYseTozNDQuOTA4NjE4OTI3MDAxOTUsejotMTguNTkyNjQ3MzE0MDcxNjU1fSx7eDozNTguMTExNzI0ODUzNTE1Nix5OjMzNC42NDk5MDYxNTg0NDcyNyx6Oi0xNy40OTU1Mjg0NTk1NDg5NX0se3g6MzQ2LjQ0NTA0NTQ3MTE5MTQseTozMzUuMDMyMTEwMjE0MjMzNCx6Oi0xNi4zMjgzODI0OTIwNjU0M30se3g6MzE5LjE3NjQwNjg2MDM1MTU2LHk6MzIwLjI4MzM5Mzg1OTg2MzMsejotMy4yNzY3NjQ0NTI0NTc0Mjh9LHt4OjMyNS4yNTQwNTg4Mzc4OTA2LHk6Mjc2LjIzNjk3MjgwODgzNzksejotNi40NjAxNTcwMzY3ODEzMTF9LHt4OjMyNi43MjE0NTg0MzUwNTg2LHk6MzI3LjM5Mzk1MTQxNjAxNTYsejotNy40MTcyMTc0OTMwNTcyNTF9LHt4OjMxMC43MTkwMTMyMTQxMTEzLHk6Mjc3LjIyNjUxNDgxNjI4NDIsejotMy41NDUyMDgyNzUzMTgxNDU4fSx7eDozMTkuNzgzNTU0MDc3MTQ4NDQseToyODQuODIzODE4MjA2Nzg3MSx6Oi02LjQ1NDMyMTE0NjAxMTM1MjV9LHt4OjMwNS43NzM5ODMwMDE3MDkseToyOTAuODM1ODAwMTcwODk4NDQsejouMDY5MDcxMzgwNDIxNTE5Mjh9LHt4OjM0NC40MDAxNzcwMDE5NTMxLHk6MzQ0Ljg1NDA4NzgyOTU4OTg0LHo6LTE2Ljk0Njk3MDIyNDM4MDQ5M30se3g6MzMzLjE4Nzk0MjUwNDg4MjgseToyNTguNzQyNTYxMzQwMzMyMDMsejotMTEuOTA0ODk2NDk3NzI2NDR9LHt4OjMxMy44MDU5ODA2ODIzNzMwNSx5OjMyNy4wODkxOTUyNTE0NjQ4NCx6OjIuMjI3NzkxMjQ5NzUyMDQ0N30se3g6MzIyLjk2Mzc5MDg5MzU1NDcseTozMzQuNjgxOTQ5NjE1NDc4NSx6Oi0zLjM2NDMwMDQyOTgyMTAxNDR9LHt4OjMxMy40MDU1NTE5MTA0MDA0LHk6MzExLjIxNjY2OTA4MjY0MTYsejotMS4xMTc1NDI5ODIxMDE0NDA0fSx7eDoyOTEuMDg2NTc4MzY5MTQwNix5OjI5OC4yODMxMDAxMjgxNzM4LHo6MjIuNDY3NTc1MDczMjQyMTg4fSx7eDozMDUuNjU4MDkyNDk4Nzc5Myx5OjMxMy4zNzA3OTA0ODE1Njc0LHo6NS41NjE0NTM3MDAwNjU2MTN9LHt4OjI4OC4yMzc2MDk4NjMyODEyNSx5OjMwNS45OTQxODY0MDEzNjcyLHo6MzYuNzY1MTIyNDEzNjM1MjU0fSx7eDozMTUuMTA2OTI1OTY0MzU1NDcseToyOTYuMjY5OTEyNzE5NzI2NTYsejotNC42MDQzOTM4Mzk4MzYxMjF9LHt4OjMzNy41MDUxODc5ODgyODEyNSx5OjI0Ny41OTQ0NDIzNjc1NTM3LHo6LTEwLjU5NzY5MTUzNTk0OTcwN30se3g6MzM4Ljg0NTA2MjI1NTg1OTQseToyNjUuNDc3NzgxMjk1Nzc2MzcsejotMjcuNzc4MDkxNDMwNjY0MDYyfSx7eDozMzQuMjUyNTQ4MjE3NzczNDQseToyNjkuMDY3MTkyMDc3NjM2Nyx6Oi0yMC45Mzg2MTEwMzA1Nzg2MTN9LHt4OjM0MS42NDUxMjYzNDI3NzM0NCx5OjI1OS42Mzg3MTk1NTg3MTU4LHo6LTMyLjE4OTkwNTY0MzQ2MzEzNX0se3g6MzMxLjQ0MDgxMTE1NzIyNjU2LHk6MjE5LjA5NzYwOTUxOTk1ODUsejo0LjIwNzU2MzY5ODI5MTc3OX0se3g6MzIwLjU2MzM5MjYzOTE2MDE2LHk6MjE2LjQ5NjU4MjAzMTI1LHo6Mi45MzA5OTczMTIwNjg5Mzl9LHt4OjMxMS4yMTkxMjAwMjU2MzQ3Nyx5OjIxNi41Nzg1MzYwMzM2MzAzNyx6OjIuOTY3NDcwNTg2Mjk5ODk2Mn0se3g6MzAzLjQ2MjU2MjU2MTAzNTE2LHk6MjE4LjU0NjE0NzM0NjQ5NjU4LHo6NS4zNTcyMDM0ODM1ODE1NDN9LHt4OjI5Ny45OTk5OTIzNzA2MDU0Nyx5OjIyMi41MDUyMDIyOTMzOTYsejo5LjMyNTUwMjUxNDgzOTE3Mn0se3g6Mjk0LjkzODM5MjYzOTE2MDE2LHk6MjM2LjM5NjU0MTU5NTQ1ODk4LHo6MTguNTM0Mjg5NTk4NDY0OTY2fSx7eDoyNzguODc0ODkzMTg4NDc2NTYseToyNTkuNzA5NTU4NDg2OTM4NSx6OjQ1LjY4MjEyMDMyMzE4MTE1fSx7eDozMDAuMzc4MjY1MzgwODU5NCx5OjI0NS4zODU5MzI5MjIzNjMyOCx6OjEyLjI3ODM4Mjc3ODE2NzcyNX0se3g6MzA3LjA2MzQ4NDE5MTg5NDUzLHk6MjQ2LjM2ODU3OTg2NDUwMTk1LHo6OC4xNjQxOTEyNDYwMzI3MTV9LHt4OjMxNS41MjI5MTg3MDExNzE5LHk6MjQ1LjM5NDk3Mzc1NDg4Mjgsejo1LjUwMzA5NzE3NjU1MTgxOX0se3g6MzIzLjcxMzk1MTExMDgzOTg0LHk6MjQyLjc1MTc4OTA5MzAxNzU4LHo6NC42MzM1NzIzOTk2MTYyNDE1fSx7eDozMzAuMjc4NTg3MzQxMzA4Nix5OjIzOS4zNDY1ODUyNzM3NDI2OCx6OjQuOTM3MDMwNjczMDI3MDM5fSx7eDozMzQuNjk4MjE5Mjk5MzE2NCx5OjIzNi4wNDYwMzc2NzM5NTAyLHo6NC44MjMyMzM3ODMyNDUwODd9LHt4OjI3OS4zNDEyMjA4NTU3MTI5LHk6MjYzLjUxOTYxMTM1ODY0MjYsejo3MC45MTU4MzcyODc5MDI4MyxuYW1lOlwiZmFjZU92YWxcIn0se3g6MzM0LjY1OTcyOTAwMzkwNjI1LHk6MjcxLjY2NDg1Nzg2NDM3OTksejotMTcuNzc1NjQ0MDYzOTQ5NTg1fSx7eDozNDIuMDU2NzcwMzI0NzA3MDMseToyNDYuOTk4NDYyNjc3MDAxOTUsejotMjAuODQ1MjM5MTYyNDQ1MDd9LHt4OjM0NC4wMzU3OTcxMTkxNDA2LHk6MjY0LjU3MDE1MDM3NTM2NjIsejotMzIuOTM2ODgwNTg4NTMxNDk0fSx7eDozNDguMjU1MzEwMDU4NTkzNzUseToyNjguNjY0NTAzMDk3NTM0Mix6Oi0zMC42OTU5NjA1MjE2OTc5OTh9LHt4OjM0NC4xMjIyNzYzMDYxNTIzNCx5OjI2Ni4zNDIxMjQ5Mzg5NjQ4NCx6Oi0yOS44MDg5MjY1ODIzMzY0MjZ9LHt4OjMzNy4xMjMxODQyMDQxMDE1Nix5OjI3NC4yNTU2ODU4MDYyNzQ0LHo6LTE1Ljc2ODE1MjQ3NTM1NzA1Nn0se3g6MzQ5LjQ5MDQ3MDg4NjIzMDQ3LHk6MjY5LjA3MTY4Mzg4MzY2Nyx6Oi0zMi41MTY3MDgzNzQwMjM0NH0se3g6MzUwLjE2ODMwNDQ0MzM1OTQseToyNzEuNDY5MTM1Mjg0NDIzOCx6Oi0yNC45MzAyNTMwMjg4Njk2M30se3g6MzMzLjk2MzQ3MDQ1ODk4NDQseToyMzAuNTY2MzkxOTQ0ODg1MjUsejo4Ljg5OTQ5MzgxMzUxNDcxfSx7eDozMzguMjE0Nzk3OTczNjMyOCx5OjIzMS40ODA3ODkxODQ1NzAzLHo6NC42NzE1MDQ3OTU1NTEzfSx7eDozNDAuNDcxMjY3NzAwMTk1Myx5OjIzMS43NDQ2MzI3MjA5NDcyNyx6Oi0uMzQ5OTYxNjY4MjUyOTQ0OTV9LHt4OjMwMy4yODk3NTY3NzQ5MDIzNCx5OjIzMi4yNDk4MDM1NDMwOTA4Mix6OjExLjkxNjU2ODI3OTI2NjM1NyxuYW1lOlwicmlnaHRFeWVcIn0se3g6Mjk5LjQ2NDkxMjQxNDU1MDgseToyMjkuNTM4NDI2Mzk5MjMwOTYsejoxMi4zMjUwNjk5MDQzMjczOTN9LHt4OjM1OS4wOTYxODM3NzY4NTU0Nyx5OjI0MS43NzM0OTA5MDU3NjE3Mix6Oi0yNC42NTAxMzk4MDg2NTQ3ODV9LHt4OjM5OS40NjIxNjU4MzI1MTk1Myx5OjIyOS44OTUwMzg2MDQ3MzYzMyx6OjE1LjkxOTg4MDg2NzAwNDM5NSxuYW1lOlwibGVmdEV5ZVwifSx7eDozNjEuMzg5MTk4MzAzMjIyNjYseToyNjkuNjEyOTg5NDI1NjU5Mix6Oi0yNC41MTAwODA4MTQzNjE1NzJ9LHt4OjQxNi45OTczMzczNDEzMDg2LHk6MjA2LjA4OTU1MzgzMzAwNzgsejo1My4yNjg1NzU2NjgzMzQ5NixuYW1lOlwiZmFjZU92YWxcIn0se3g6MzgxLjMyMTc5MjYwMjUzOTA2LHk6MjM1LjU0NzY0NzQ3NjE5NjMsejo3LjYyMTQ2ODMwNTU4Nzc2ODZ9LHt4OjM4Ny44MDY4NTQyNDgwNDY5LHk6MjM2LjI1OTU4NDQyNjg3OTg4LHo6OC4zNDUwOTkwOTE1Mjk4NDZ9LHt4OjM5My45NTc1MTk1MzEyNSx5OjIzNS44NjYwMzY0MTUxMDAxLHo6MTAuNDc1MTQyMDAyMTA1NzEzfSx7eDo0MDEuODQ2MDA4MzAwNzgxMjUseToyMzIuNzcwMTk1MDA3MzI0MjIsejoxNi43NjAyMjY0ODgxMTM0MDN9LHt4OjM3NS43MDU2ODA4NDcxNjc5Nyx5OjIzMy40ODQ1NjM4Mjc1MTQ2NSx6OjguMjM0MjIwMTQ3MTMyODc0fSx7eDozODguMTc3NTI4MzgxMzQ3NjYseToyMTguOTQ3MTc2OTMzMjg4NTcsejo2LjgxMDMwMDk0NjIzNTY1N30se3g6MzgxLjY0OTI4NDM2Mjc5Mjk3LHk6MjE5LjI2NTY2NjAwNzk5NTYsejo2LjcxMTA5Mzc4MzM3ODYwMX0se3g6Mzk0LjQ3NjA1MTMzMDU2NjQseToyMTkuNjY4MjExOTM2OTUwNjgsejo5LjE3Mzc3MzUyNzE0NTM4Nn0se3g6Mzk4Ljg4NDM1MzYzNzY5NTMseToyMjEuODgzNzAyMjc4MTM3Mix6OjEyLjAzMzI4MjUxODM4Njg0fSx7eDo0MDYuNTQ1NDg2NDUwMTk1Myx5OjIzNy4xMjE1Njc3MjYxMzUyNSx6OjE5LjcxMzEwODUzOTU4MTN9LHt4OjM4My44NzQ0NzM1NzE3NzczNCx5OjMzNy42OTMyOTA3MTA0NDkyLHo6LTguNjMxMDQ5OTkwNjUzOTkyfSx7eDo0MDEuMjY4MjM0MjUyOTI5Nyx5OjIyOC41OTE2NTY2ODQ4NzU1LHo6MTguMzU5MjE3NjQzNzM3NzkzLG5hbWU6XCJsZWZ0RXllXCJ9LHt4OjQyMi4wNDQ5NDQ3NjMxODM2LHk6MjM2LjczOTM0OTM2NTIzNDM4LHo6NTEuMTY3NzEyMjExNjA4ODl9LHt4OjQxMi42OTE1MzU5NDk3MDcwMyx5OjIzMi44MDE5ODA5NzIyOTAwNCx6OjI3LjUyMTMxOTM4OTM0MzI2fSx7eDozODcuMzQ5Nzc3MjIxNjc5Nyx5OjI2My4yOTgzOTcwNjQyMDksejotMi44NjA5Njg0MTA5Njg3ODA1fSx7eDozNjQuNTEyNDA1Mzk1NTA3OCx5OjI5My4zOTIyMTAwMDY3MTM4Nyx6Oi0yMi4zOTc1NDY3NjgxODg0NzcsbmFtZTpcImxpcHNcIn0se3g6MzYzLjYyOTg3NTE4MzEwNTQ3LHk6MzAyLjEyOTE0NDY2ODU3OTEsejotMTkuNjQzMDc5MDQyNDM0NjkyfSx7eDozNzMuMjMzNDUxODQzMjYxNyx5OjI5NS44NjQ3MDYwMzk0Mjg3LHo6LTE4LjEyNTc4OTE2NTQ5NjgyNixuYW1lOlwibGlwc1wifSx7eDozNzguODMzNjU2MzExMDM1MTYseToyOTkuNTE3Nzc0NTgxOTA5Mix6Oi0xMy4xNTM3NDM3NDM4OTY0ODQsbmFtZTpcImxpcHNcIn0se3g6MzY5LjkxNDc3OTY2MzA4NTk0LHk6MzAyLjU3MDQwMDIzODAzNzEsejotMTYuNjU1MTgyODM4NDM5OTR9LHt4OjM3NC45MTY3MjUxNTg2OTE0LHk6MzAzLjU0MTY2MDMwODgzNzksejotMTEuOTYzMjUzMDIxMjQwMjM0fSx7eDozODcuNTg4ODgyNDQ2Mjg5MDYseTozMTIuMjcxNjk5OTA1Mzk1NSx6Oi00LjY4MDI1ODYzMTcwNjIzOH0se3g6MzYwLjY2MzUyODQ0MjM4MjgseToyNjQuMzE5ODY4MDg3NzY4NTUsejotMzUuOTQ4MTE2Nzc5MzI3Mzl9LHt4OjM2MS4wNDU2NDY2Njc0ODA0Nyx5OjI1Ni44MjI1ODYwNTk1NzAzLHo6LTM3LjI3ODY2NDExMjA5MTA2NH0se3g6NDA4LjM4NTU0MzgyMzI0MjIseToyMTMuNTIwODg5MjgyMjI2NTYsejoxNS43NTY0ODA2OTM4MTcxMzksbmFtZTpcImxlZnRFeWVicm93XCJ9LHt4OjM3My4yOTQ2MDE0NDA0Mjk3LHk6MjQ1LjM4MTAxMTk2Mjg5MDYyLHo6LTEuOTMxNjI3ODM5ODAzNjk1N30se3g6Mzc2LjgzODYwNzc4ODA4NTk0LHk6MjY0LjM3MjExMDM2NjgyMTMsejotMTguNTEwOTQ3MjI3NDc4MDI3fSx7eDozNzYuOTU0NjEyNzMxOTMzNix5OjI2MS4wMDEwNTI4NTY0NDUzLHo6LTE1Ljk4OTkwOTE3MjA1ODEwNX0se3g6NDA2LjE0OTgyNjA0OTgwNDcseToyNjMuNTAzMDE3NDI1NTM3MSx6OjcuMDcyOTA4ODc4MzI2NDE2fSx7eDozNjAuMDcyMDU5NjMxMzQ3NjYseToyNDguMzYzMTcwNjIzNzc5Myx6Oi0zMi4xNjY1NjQ0NjQ1NjkwOX0se3g6MzkzLjExMTE5MDc5NTg5ODQ0LHk6MjA1LjEwNDczMjUxMzQyNzczLHo6My43Nzg2MzczNDk2MDU1NjAzLG5hbWU6XCJsZWZ0RXllYnJvd1wifSx7eDo0MDIuMTI3OTE0NDI4NzEwOTQseToyMDcuODkwMDA5ODgwMDY1OTIsejo5LjM4Mzg1OTYzNDM5OTQxNCxuYW1lOlwibGVmdEV5ZWJyb3dcIn0se3g6NDEwLjg2OTMzMTM1OTg2MzMseToxOTEuNjE4MjI3OTU4Njc5Mix6OjQxLjI3MDMwODQ5NDU2Nzg3LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozNjQuOTUwOTgxMTQwMTM2Nyx5OjIxMC40MDQ4MzQ3NDczMTQ0NSx6Oi0zLjc1ODIxMjYyNTk4MDM3N30se3g6Mzc1Ljk0NDQ0Mjc0OTAyMzQ0LHk6MjIxLjEzMzE4NDQzMjk4MzQsejo4LjM2ODQ0MjA1ODU2MzIzMn0se3g6MzkyLjE5MDQ3NTQ2Mzg2NzIseTozMDUuMDM2MDI5ODE1NjczOCx6Oi0xLjc1MjE3OTExNjAxMDY2Nn0se3g6NDE5LjUwMjI1ODMwMDc4MTI1LHk6MzA3LjI1NTkyNjEzMjIwMjE1LHo6NTguOTY0MjUyNDcxOTIzODMsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM3Mi4wMDI3MTYwNjQ0NTMxLHk6MjY4LjcyMTI2NTc5Mjg0NjcsejotMTYuNjMxODQwNDY3NDUzMDAzfSx7eDozNjYuMTYxNDIyNzI5NDkyMix5OjI3MS42MjM3NDQ5NjQ1OTk2LHo6LTE4LjIxOTE1OTg0MTUzNzQ3Nn0se3g6Mzg1LjAwOTM4NDE1NTI3MzQ0LHk6MzA1LjM4NjMzMzQ2NTU3NjIsejotMi41Njc3MjI3OTczOTM3OTl9LHt4OjM4MS45OTc3MTg4MTEwMzUxNix5OjMwNC45NzIzNzIwNTUwNTM3LHo6LTQuNTc1MjE1MjgwMDU2fSx7eDo0MDUuMDc4MTI1LHk6MjAzLjIxMjE2NTgzMjUxOTUzLHo6MTMuNzEzOTczNzYwNjA0ODU4LG5hbWU6XCJsZWZ0RXllYnJvd1wifSx7eDozNzcuMTMyMDcyNDQ4NzMwNDcseToyNjguNDcxMDEyMTE1NDc4NSx6Oi0xNS4yNjYyNzg5ODIxNjI0NzZ9LHt4OjM4MC45NzEzMzYzNjQ3NDYxLHk6MjA1LjM2OTgwNjI4OTY3Mjg1LHo6LS43MjUwODk5MDc2NDYxNzkyLG5hbWU6XCJsZWZ0RXllYnJvd1wifSx7eDozODEuNzc4ODMxNDgxOTMzNix5OjE5OC45MjY4Mzk4Mjg0OTEyLHo6LTEuMTg0NjUzODYzMzEwODE0LG5hbWU6XCJsZWZ0RXllYnJvd1wifSx7eDozODUuNTIwNDc3Mjk0OTIxOSx5OjE3Mi4xNDg0Mzc1LHo6MTYuMDQ4MjY4MDc5NzU3NjksbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjQwNy45NDE4OTQ1MzEyNSx5OjE5Ni43NjIzNjE1MjY0ODkyNix6OjI1LjcyMzkxNTEwMDA5NzY1Nn0se3g6MzgzLjAzODkwMjI4MjcxNDg0LHk6MTg0LjUxNTc1Mjc5MjM1ODQsejo3LjM5Mzg3NDUyNjAyMzg2NX0se3g6NDExLjYxNzgxMzExMDM1MTU2LHk6MjEwLjc5MjQxNzUyNjI0NTEyLHo6MjIuMzE1ODQ1NDg5NTAxOTUzLG5hbWU6XCJsZWZ0RXllYnJvd1wifSx7eDo0MTQuMzA4NzAwNTYxNTIzNDQseToyMDguNDY0MzAzMDE2NjYyNix6OjM3LjAyMTg5NDQ1NDk1NjA1NX0se3g6MzY0LjI4NzIyMzgxNTkxNzk3LHk6Mjk4LjM1Nzc3MjgyNzE0ODQ0LHo6LTIxLjg2MDY1NjczODI4MTI1fSx7eDozNzEuMzY4MjU1NjE1MjM0NCx5OjI5OS43ODg0ODQ1NzMzNjQyNix6Oi0xNy44MzQwMDE3Nzk1NTYyNzR9LHt4OjM3Ni44ODIwMTkwNDI5Njg3NSx5OjMwMS42Njk2MDcxNjI0NzU2LHo6LTEzLjE1Mzc0Mzc0Mzg5NjQ4NH0se3g6MzcwLjIxOTM4MzIzOTc0NjEseToyNzAuNDkwOTUxNTM4MDg1OTQsejotMTUuNTY5NzM2OTU3NTUwMDQ5fSx7eDozODMuNTA4MTEwMDQ2Mzg2Nyx5OjMwNS4yNzI2MzY0MTM1NzQyLHo6LTMuNjczNTk0Mjk1OTc4NTQ2fSx7eDozODAuNzM3NjA5ODYzMjgxMjUseTozMDUuOTY4Njk0Njg2ODg5NjUsejotOC42NjAyMjgyNTI0MTA4ODl9LHt4OjM4MS4yMzM0NDQyMTM4NjcyLHk6MzA0LjYzNTc0NDA5NDg0ODYzLHo6LTQuODIwMzE2MTM1ODgzMzMxLG5hbWU6XCJsaXBzXCJ9LHt4OjM2OC4xNjk4OTg5ODY4MTY0LHk6MjY0Ljg4ODQ5NjM5ODkyNTgsejotMjUuNjUzODg2Nzk1MDQzOTQ1fSx7eDozNzMuNTA4NzIwMzk3OTQ5Mix5OjMwMy40MjMzODU2MjAxMTcyLHo6LTEwLjk1OTUwNzIyNjk0Mzk3LG5hbWU6XCJsaXBzXCJ9LHt4OjM2OC40NTQ0MzcyNTU4NTk0LHk6MzAzLjI5NjAxMjg3ODQxNzk3LHo6LTE0LjE2OTE2MTMxOTczMjY2NixuYW1lOlwibGlwc1wifSx7eDozNjIuNzY1NTQxMDc2NjYwMTYseTozMDMuNTczNTYwNzE0NzIxNyx6Oi0xNi45MTE5NTYwNzE4NTM2MzgsbmFtZTpcImxpcHNcIn0se3g6MzY2LjYwOTgwMjI0NjA5Mzc1LHk6MzI0Ljg4NzA2NTg4NzQ1MTIsejotMTUuNjE2NDIyODkxNjE2ODIxfSx7eDozNjUuNzA2NzEwODE1NDI5Nyx5OjMxNS45NTY3ODMyOTQ2Nzc3Myx6Oi0yMC45MDM1OTY4NzgwNTE3NTgsbmFtZTpcImxpcHNcIn0se3g6MzY1LjAwODM5MjMzMzk4NDQseTozMTEuMjIzMjIwODI1MTk1Myx6Oi0yMS4wNjY5OTk0MzU0MjQ4MDV9LHt4OjM2NC4xNTA4MTAyNDE2OTkyLHk6MzA3LjA1ODM0Mzg4NzMyOTEsejotMTguOTA3Nzc3MDcwOTk5MTQ2fSx7eDozNjMuMzc1MTI5Njk5NzA3MDMseTozMDQuNTcyMTQzNTU0Njg3NSx6Oi0xNy40MjU1MDAxNTQ0OTUyNCxuYW1lOlwibGlwc1wifSx7eDozNzQuNTgwMDc4MTI1LHk6MzA0LjMwNTk1Mzk3OTQ5MjIsejotMTEuNDAzMDIzMDA0NTMxODYsbmFtZTpcImxpcHNcIn0se3g6Mzc1LjU1MzYyNzAxNDE2MDE2LHk6MzA1LjA5OTgwMjAxNzIxMTksejotMTIuODYxOTU3NTUwMDQ4ODI4fSx7eDozNzcuMjQzNzI4NjM3Njk1Myx5OjMwNy4xNjc0MzQ2OTIzODI4LHo6LTE0LjIxNTg0NzI1Mzc5OTQzOH0se3g6Mzc4LjY4NTg3NDkzODk2NDg0LHk6MzA5LjkwMTU3MTI3MzgwMzcsejotMTMuMjIzNzcyMDQ4OTUwMTk1LG5hbWU6XCJsaXBzXCJ9LHt4OjM4My44OTkyNjkxMDQwMDM5LHk6MjkwLjI5NjI5NzA3MzM2NDI2LHo6LTkuOTczMjY5MTA0OTU3NTh9LHt4OjQyMy4zODcxODQxNDMwNjY0LHk6MjcxLjkxNjg4NTM3NTk3NjU2LHo6NzQuMzcwNTg5MjU2Mjg2NjIsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM3Ny42ODA0MzUxODA2NjQwNix5OjMwNC42MjIwOTcwMTUzODA4Nix6Oi03LjYwMzk2MTIyOTMyNDM0MSxuYW1lOlwibGlwc1wifSx7eDozNzkuMDA0Mjg3NzE5NzI2NTYseTozMDQuOTMxNDU5NDI2ODc5OSx6Oi04LjU3ODUyODE2NTgxNzI2fSx7eDozNjQuMDAyNzk5OTg3NzkyOTcseToyNzUuMjgxMzkxMTQzNzk4OCx6Oi0xOS4yNTc5MjA5ODA0NTM0OX0se3g6Mzc0LjY4MjMxMjAxMTcxODc1LHk6MjczLjgyNTU1OTYxNjA4ODg3LHo6LTExLjI4MDQ3MjI3ODU5NDk3fSx7eDozNjUuMDM1NDc2Njg0NTcwMyx5OjI3My40NTQ4NTY4NzI1NTg2LHo6LTE4Ljc5MTA2MjgzMTg3ODY2Mn0se3g6MzgwLjYxOTAxMDkyNTI5Mjk3LHk6MjQ5Ljg4NDgwNTY3OTMyMTMsejouMTU1MDExNjc2MjUxODg4Mjh9LHt4OjM5MS4xNDE1ODYzMDM3MTA5NCx5OjI1NC43OTM0NjI3NTMyOTU5LHo6Mi4wOTA2NTE1NDE5NDgzMTg1fSx7eDozNzguMTc2MTE2OTQzMzU5NCx5OjI2NC45NjEyMjM2MDIyOTQ5LHo6LTEyLjYwNTE4NDMxNjYzNTEzMn0se3g6NDAwLjk1NDA1NTc4NjEzMjgseToxNzkuOTk1OTIzMDQyMjk3MzYsejoyNy44MjQ3Nzg1NTY4MjM3MyxuYW1lOlwiZmFjZU92YWxcIn0se3g6Mzk4LjAwMzg4MzM2MTgxNjQseToxODguNTA2NTY1MDkzOTk0MTQsejoxNi4wOTQ5NTI4MjE3MzE1Njd9LHt4OjM5NC44NzE3NDk4Nzc5Mjk3LHk6MTk5LjAzNTk1OTI0Mzc3NDQsejo2LjIyNjcyNzM2NjQ0NzQ0OSxuYW1lOlwibGVmdEV5ZWJyb3dcIn0se3g6MzgyLjEwOTI2MDU1OTA4MjAzLHk6MzE2LjgzOTI2NTgyMzM2NDI2LHo6LTguOTQ2MTc5NzQ3NTgxNDgyfSx7eDozNjYuNTE1ODg0Mzk5NDE0MDYseToyMDAuMzI1ODM3MTM1MzE0OTQsejotNS4yNDYzMjQ1MzkxODQ1NyxuYW1lOlwibGVmdEV5ZWJyb3dcIn0se3g6MzY3LjQ4OTM1Njk5NDYyODkseToxODMuODcyMTA4NDU5NDcyNjYsejoxLjkwMzkwODEwMzcwNDQ1MjV9LHt4OjM2OC42MjQzNDM4NzIwNzAzLHk6MTY4LjgxMjc1NjUzODM5MTEsejo4LjczNjA5MzA0NDI4MTAwNixuYW1lOlwiZmFjZU92YWxcIn0se3g6Mzk4Ljk2MTc1Mzg0NTIxNDg0LHk6MjM0Ljk2NzUxNzg1Mjc4MzIsejoxMy43MTM5NzM3NjA2MDQ4NTh9LHt4OjQxMi45NjQ1NTM4MzMwMDc4LHk6MjQyLjIzMDQyNDg4MDk4MTQ1LHo6MjMuMjcyOTA1MzQ5NzMxNDQ1fSx7eDozNzIuMDUyNTc0MTU3NzE0ODQseToyMzEuNDE5MTkxMzYwNDczNjMsejo5LjIyNjI5NDc1NTkzNTY2OX0se3g6NDA2LjA3MjIzNTEwNzQyMTkseToyMjMuNTg5NjU4NzM3MTgyNjIsejoxOC4zNzA4OTA2MTczNzA2MDV9LHt4OjM2OC4yNzQ0MjE2OTE4OTQ1Myx5OjI0MC4yMDM5MzM3MTU4MjAzLHo6LTQuMTY2NzEzNjU0OTk0OTY1fSx7eDozNzIuMzU3NTIxMDU3MTI4OSx5OjI2MC42NjQ0MjQ4OTYyNDAyMyx6Oi0yNC45NzY5NDAxNTUwMjkyOTd9LHt4OjQxOS4yMjQ0MzM4OTg5MjU4LHk6MjQ3LjkwNzkyNDY1MjA5OTYsejozMC4yOTkxMjcxMDE4OTgxOTN9LHt4OjQwOS40Mzg4NTgwMzIyMjY1Nix5OjI0Ni42MDkxMzQ2NzQwNzIyNyx6OjE2LjM5ODQxMTk4OTIxMjAzNn0se3g6NDAxLjY5MTM5ODYyMDYwNTQ3LHk6MjQ4Ljc2MzI4NDY4MzIyNzU0LHo6OS4zOTU1MzE0MTU5MzkzMzF9LHt4OjM4OS43NjA4MTg0ODE0NDUzLHk6MjQ3LjU2OTE1MDkyNDY4MjYyLHo6NS44NDE1NjkzMDQ0NjYyNDh9LHt4OjM4MC41NDYxODgzNTQ0OTIyLHk6MjQ0LjU1OTg0MTE1NjAwNTg2LHo6NC4yNjMwMDM0Njg1MTM0ODl9LHt4OjM3My4yNTgxNzEwODE1NDI5Nyx5OjI0MC44MDIxNDUwMDQyNzI0Nix6OjIuNTM1NjI2MjkyMjI4Njk4N30se3g6MzU4Ljc3MDg2NjM5NDA0Mjk3LHk6MjI5LjM1NjE1MDYyNzEzNjIzLHo6LTEwLjM4NzYwNTQyODY5NTY3OX0se3g6NDE5LjU3OTM5MTQ3OTQ5MjIseToyNjIuODQ3ODcxNzgwMzk1NSx6OjI2LjUxNzU3MjQwMjk1NDF9LHt4OjQxMC44ODA4ODk4OTI1NzgxLHk6MjIyLjUxMzcyODE0MTc4NDY3LHo6MjIuMTk5MTMwMDU4Mjg4NTc0fSx7eDozNTguNDU3MTQ1NjkwOTE3OTcseToyNjguOTE0NjcwOTQ0MjEzODcsejotMzMuMTcwMzA5MDY2NzcyNDZ9LHt4OjM3My40MTI5MzMzNDk2MDk0LHk6MjUxLjYzODU4NDEzNjk2MjksejotNS43NzE1NDA0MDMzNjYwODl9LHt4OjQyMi41NDA4MTcyNjA3NDIyLHk6MjM5LjIzOTE5Njc3NzM0Mzc1LHo6NzQuMDQzNzg4OTA5OTEyMTEsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM2Ny44MTcxOTIwNzc2MzY3LHk6MjM2LjU4MDQwNTIzNTI5MDUzLHo6MS44MjA3NDg4OTU0MDY3MjN9LHt4OjM3OC41MTk1OTIyODUxNTYyNSx5OjI2Ni4yNTMyMzI5NTU5MzI2LHo6LTUuNzQ4MTk4MDMyMzc5MTV9LHt4OjQwMy4zNDcyNDQyNjI2OTUzLHk6MjI5LjA1MTEyMjY2NTQwNTI3LHo6MTkuNjg5NzY0OTc2NTAxNDY1fSx7eDozNzIuMzQ4NDAzOTMwNjY0MDYseToyNTYuNjQ1MTE2ODA2MDMwMyx6Oi0yMS44NzIzMjk3MTE5MTQwNjJ9LHt4OjQyMi41NDU2NjE5MjYyNjk1Myx5OjI4OS4xNTg3ODI5NTg5ODQ0LHo6NjguNjc0OTEyNDUyNjk3NzUsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM3MS45Mjk3NDA5MDU3NjE3LHk6MjI4LjkwMTE2MjE0NzUyMTk3LHo6MTEuNDMyMjAxODYyMzM1MjA1LG5hbWU6XCJsZWZ0RXllXCJ9LHt4OjM2Ni4yMTM2MDc3ODgwODU5NCx5OjI1MS42MTU4OTYyMjQ5NzU2LHo6LTI4LjE5ODI2MzY0NTE3MjEyfSx7eDo0MDkuMTU3MTgwNzg2MTMyOCx5OjMyMS4zMTU2MjIzMjk3MTE5LHo6MjAuMjI2NjUyNjIyMjIyOX0se3g6NDA4LjUyOTQzNDIwNDEwMTU2LHk6MzMxLjQ0MjM4NDcxOTg0ODYzLHo6MzEuMDkyNzg5MTczMTI2MjIsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjQyNC4yNzg4MzE0ODE5MzM2LHk6MjY3LjE5OTIzMDE5NDA5MTgsejo1MC40Njc0MjQzOTI3MDAxOTV9LHt4OjQxNS42MDM1MjMyNTQzOTQ1Myx5OjMxMS42NTI4NjA2NDE0Nzk1LHo6MzAuNTc5MjQyNzA2Mjk4ODI4fSx7eDo0MTguMTI3OTM3MzE2ODk0NTMseToyMjEuNTk5MjczNjgxNjQwNjIsejo0Ni4yNjU2OTc0NzkyNDgwNX0se3g6Mzg1LjY4Mjg2ODk1NzUxOTUzLHk6MzQ2LjAxODQ5NTU1OTY5MjQsejotNS43MDE1MTE1MDIyNjU5M30se3g6MzU3LjgyOTM2MDk2MTkxNDA2LHk6MjcxLjM3NTgzNzMyNjA0OTgsejotMjQuODM2ODgxMTYwNzM2MDg0fSx7eDozNzkuNTg4NjIzMDQ2ODc1LHk6MjU3LjUwNzE3MTYzMDg1OTQsejotMy43NTUyOTQ2ODA1OTUzOTh9LHt4OjQxNy40NTkyNTkwMzMyMDMxLHk6MjM0LjcxOTQ4MTQ2ODIwMDY4LHo6MzQuNTQ3NTQzNTI1Njk1OH0se3g6MzkzLjQ2ODQzNzE5NDgyNDIseToyMzEuNTg5Njc5NzE4MDE3NTgsejoxMS40MDg4NTk0OTEzNDgyNjcsbmFtZTpcImxlZnRFeWVcIn0se3g6Mzg3Ljg4NjQyODgzMzAwNzgseToyMzIuMTQyNDU3OTYyMDM2MTMsejo5LjUxODA4MjE0MTg3NjIyLG5hbWU6XCJsZWZ0RXllXCJ9LHt4OjM4Mi40OTgxNjg5NDUzMTI1LHk6MzA3LjU2NTQ4ODgxNTMwNzYsejotNy41MjIyNjA1NDY2ODQyNjUsbmFtZTpcImxpcHNcIn0se3g6NDE5LjAwMTY5MzcyNTU4NTk0LHk6Mjc3LjgzMzI4MDU2MzM1NDUsejoyNi40MjQyMDI5MTkwMDYzNDh9LHt4OjM3My42Mjk1MzE4NjAzNTE1Nix5OjM1Ny42Mzc1MTAyOTk2ODI2LHo6LTUuNzU5ODY5MjE3ODcyNjIsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM5Mi44NzA4MjY3MjExOTE0LHk6MzQ3LjcyNDQ2NjMyMzg1MjU0LHo6MTAuMTU0MTc2OTUwNDU0NzEyLG5hbWU6XCJmYWNlT3ZhbFwifSx7eDo0MDAuMzk1MzU1MjI0NjA5NCx5OjM0MS4wMDA1MTg3OTg4MjgxLHo6MTkuMzk3OTc4NzgyNjUzODEsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM4Mi4yNTQ0MDk3OTAwMzkwNix5OjIzMS42NjkzNTkyMDcxNTMzMix6OjguOTk4NzAwOTc2MzcxNzY1LG5hbWU6XCJsZWZ0RXllXCJ9LHt4OjM3Ny4xNDU1MDAxODMxMDU0Nyx5OjIzMC40MjI4Njg3Mjg2Mzc3LHo6OS44MDQwMzI0NDQ5NTM5MTgsbmFtZTpcImxlZnRFeWVcIn0se3g6MzczLjgzNTg2ODgzNTQ0OTIseToyMjkuNjQ5NTA1NjE1MjM0MzgsejoxMS4yOTIxNDQwNjAxMzQ4ODgsbmFtZTpcImxlZnRFeWVcIn0se3g6NDE0LjU3OTQ2Nzc3MzQzNzUseToyMjEuNjc4OTEwMjU1NDMyMTMsejoyOS40MTIwOTc5MzA5MDgyMDN9LHt4OjM3Ny4wMDY3MjE0OTY1ODIwMyx5OjIyNS42NjIwMTIxMDAyMTk3Myx6OjkuMzYwNTE3MjYzNDEyNDc2LG5hbWU6XCJsZWZ0RXllXCJ9LHt4OjM4Mi4yOTUzMDMzNDQ3MjY1Nix5OjIyNC44NDMxMTU4MDY1Nzk2LHo6OC4zMjE3NTYxMjQ0OTY0NixuYW1lOlwibGVmdEV5ZVwifSx7eDozODcuNTEzMzUxNDQwNDI5Nyx5OjIyNC40OTUwNzIzNjQ4MDcxMyx6OjguOTE3MDAwODg5Nzc4MTM3LG5hbWU6XCJsZWZ0RXllXCJ9LHt4OjM5My4xNTkwNjUyNDY1ODIwMyx5OjIyNS4yNDc5NTA1NTM4OTQwNCx6OjEwLjczNzc0OTMzODE1MDAyNCxuYW1lOlwibGVmdEV5ZVwifSx7eDozOTcuMDU1NTQ5NjIxNTgyMDMseToyMjYuNTUzNTkyNjgxODg0NzcsejoxMy4wMDIwMTUzNTIyNDkxNDYsbmFtZTpcImxlZnRFeWVcIn0se3g6NDIwLjUyOTkzNzc0NDE0MDYseToyMjEuMDE0NjY2NTU3MzEyLHo6NjUuNDA2OTA0MjIwNTgxMDUsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjM5Ny4wNjkyMDYyMzc3OTI5Nyx5OjIzMC42NjYxNTU4MTUxMjQ1LHo6MTMuODA3MzQ1NjI4NzM4NDAzLG5hbWU6XCJsZWZ0RXllXCJ9LHt4OjM3Ny45NDY0NzIxNjc5Njg3NSx5OjI4NS4xNjQ3MDkwOTExODY1LHo6LTEzLjMwNTQ3MjEzNTU0MzgyM30se3g6MzcyLjExMTg5MjcwMDE5NTMseToyNjcuMTI2NzMxODcyNTU4Nix6Oi0xOC44Mzc3NDc1NzM4NTI1NH0se3g6MzY0Ljk5Njg3MTk0ODI0MjIseToyODIuMjQ0MTE5NjQ0MTY1MDQsejotMTkuODE4MTUwOTk3MTYxODY1fSx7eDo0MDEuOTczODc2OTUzMTI1LHk6MzMxLjIwMTMxNDkyNjE0NzQ2LHo6MTEuNTY2NDI0MzY5ODEyMDEyfSx7eDozOTQuMzA4MzE5MDkxNzk2OSx5OjMzOC44NjY5Mzk1NDQ2Nzc3Myx6OjMuMTQyNTQyNTQxMDI3MDY5fSx7eDozNzMuOTgyMDg2MTgxNjQwNix5OjM1MS40NTA0NjIzNDEzMDg2LHo6LTEzLjUwMzg4NzY1MzM1MDgzfSx7eDo0MTQuMzg4ODg1NDk4MDQ2OSx5OjMyMS4yNDczNTgzMjIxNDM1NSx6OjQ1LjUxODcyMjUzNDE3OTY5LG5hbWU6XCJmYWNlT3ZhbFwifSx7eDozNzMuNDQyMzQ0NjY1NTI3MzQseToyMjcuMzMxNjMzNTY3ODEwMDYsejoxMC42MjY4NzAzOTM3NTMwNTIsbmFtZTpcImxlZnRFeWVcIn0se3g6MzY0LjA3MzE0MzAwNTM3MTEseToyNDAuMzE1Mzk5MTY5OTIxODgsejotMTMuODA3MzQ1NjI4NzM4NDAzfSx7eDozODQuMjY1ODIzMzY0MjU3OCx5OjM1My4zNzkzMDY3OTMyMTI5LHo6LjczODU4NTA2OTc3NTU4MTQsbmFtZTpcImZhY2VPdmFsXCJ9LHt4OjQyMy4yMDUyNjEyMzA0Njg3NSx5OjI4My41MTc2MTgxNzkzMjEzLHo6NDcuMTUyNzI0MjY2MDUyMjQ2fSx7eDozNjkuNDI3OTg2MTQ1MDE5NTMseTozMDQuMDg5ODg5NTI2MzY3Mix6Oi0xNC42NDc2OTEyNDk4NDc0MTIsbmFtZTpcImxpcHNcIn0se3g6MzcwLjYzODEyMjU1ODU5Mzc1LHk6MzA1LjkwMDUxNjUxMDAwOTc3LHo6LTE2LjIxMTY2ODI1Mjk0NDk0Nn0se3g6MzcxLjkxMTkyNjI2OTUzMTI1LHk6MzA5LjAxNjc3MTMxNjUyODMsejotMTcuODQ1NjczNTYxMDk2MTl9LHt4OjM3My4wNTgzOTUzODU3NDIyLHk6MzEzLjM1NDUzOTg3MTIxNTgsejotMTcuMzc4ODE1NDEyNTIxMzYyLG5hbWU6XCJsaXBzXCJ9LHt4OjM3NS4zOTkwNTU0ODA5NTcwMyx5OjMyMS4wOTI4OTE2OTMxMTUyMyx6Oi0xMy4xMTg3MjgzOTkyNzY3MzN9LHt4OjM3OS4yNTY3ODI1MzE3MzgzLHk6MzA0LjM1ODI1MzQ3OTAwMzksejotNy45MjQ5MjYyODA5NzUzNDJ9LHt4OjM4MS4xODc5NzMwMjI0NjA5NCx5OjMwMy43MDMxMzY0NDQwOTE4LHo6LTcuODQzMjI2MTk0MzgxNzE0fSx7eDozODMuMDkxODUwMjgwNzYxNyx5OjMwMi40ODg0NjA1NDA3NzE1LHo6LTcuNjUwNjQ2NTY3MzQ0NjY1NSxuYW1lOlwibGlwc1wifSx7eDozODkuMDk0NjE5NzUwOTc2NTYseToyOTcuMTQ3NTMxNTA5Mzk5NCx6Oi01LjU0OTc4MjUxNDU3MjE0MzZ9LHt4OjQxMS42NDA4OTIwMjg4MDg2LHk6MjgwLjI0ODk4NTI5MDUyNzM0LHo6MTIuMDIxNjExOTI4OTM5ODJ9LHt4OjM2My4zMTEwODA5MzI2MTcyLHk6MjM0LjI3NjIwODg3NzU2MzQ4LHo6LTYuNzc1Mjg2NzkzNzA4ODAxfSx7eDozNjYuMDQ3NDM5NTc1MTk1Myx5OjIyMy4yOTg3MjEzMTM0NzY1Nix6OjYuODI3ODA4NjE4NTQ1NTMyfSx7eDozNzAuMzQ0Mjc2NDI4MjIyNjYseToyMjUuMTQ1NzExODk4ODAzNyx6OjkuNTU4OTMxNTg5MTI2NTg3fSx7eDozNzcuNTM3MTU1MTUxMzY3Mix5OjMwMy42MDA3OTc2NTMxOTgyNCx6Oi03LjM1ODg2MDM3MzQ5NzAwOSxuYW1lOlwibGlwc1wifSx7eDo0MTIuOTU1NzgwMDI5Mjk2OSx5OjI5OS41MzU3OTkwMjY0ODkyNix6OjE5LjM5Nzk3ODc4MjY1MzgxfSx7eDozNjAuMDgxMDI0MTY5OTIxOSx5OjIyMS43MjAxMjMyOTEwMTU2Mix6Oi0yLjE1MzM4NTcyODU5NzY0MX0se3g6Mzc5LjgyNzg0MjcxMjQwMjM0LHk6MzI5LjQ3NzIzMzg4NjcxODc1LHo6LTEwLjQ4MDk3ODQ4ODkyMjEyfSx7eDozNTkuMDg0Nzc3ODMyMDMxMjUseToyMzUuNzkxMTQ5MTM5NDA0Myx6Oi0xOC4wNzkxMDIwMzkzMzcxNTh9LHt4OjM2OS42Njg4NDYxMzAzNzExLHk6MjUxLjU0MDc5NDM3MjU1ODYsejotMTQuOTYyODIxMDA2Nzc0OTAyfSx7eDozNjkuNTU1NTExNDc0NjA5NCx5OjMzMy41MzA3MzEyMDExNzE5LHo6LTE1LjY3NDc4MDYwNzIyMzUxfSx7eDozOTQuMDE5MzE3NjI2OTUzMSx5OjMxNS42OTczMTcxMjM0MTMxLHo6LS45OTIwNzQ3NTc4MTQ0MDczfSx7eDozODMuNzg5OTc4MDI3MzQzNzUseToyNzIuNzI2ODY5NTgzMTI5OSx6Oi00LjY4OTAxMjE2OTgzNzk1Mn0se3g6Mzg3LjY3NzY1MDQ1MTY2MDE2LHk6MzIzLjY3MjI3NTU0MzIxMjksejotNS42NDAyMzYxMzkyOTc0ODV9LHt4OjM5Ny44NzY5MzAyMzY4MTY0LHk6MjcyLjEzMzEyMTQ5MDQ3ODUsejotLjkzOTU1MzE1NjQ5NTA5NDN9LHt4OjM4OS44NzQ3NjM0ODg3Njk1Myx5OjI4MC41NjMwMTExNjk0MzM2LHo6LTQuMjkyMTgyMDI4MjkzNjF9LHt4OjQwMy44Mzg4ODI0NDYyODkwNix5OjI4NS4xMTY3ODY5NTY3ODcxLHo6My4wMjI5MTAwNTg0OTgzODI2fSx7eDozNzIuNTQ2NzMwMDQxNTAzOSx5OjM0My4xMDcwMzI3NzU4Nzg5LHo6LTE2LjE1MzMxMDUzNzMzODI1N30se3g6Mzc0LjExMTI1MTgzMTA1NDcseToyNTYuMzcyMTQ2NjA2NDQ1Myx6Oi0xMC41NzQzNDkxNjQ5NjI3Njl9LHt4OjM5OS43Mzc4NTQwMDM5MDYyNSx5OjMyMS43NzUxNTk4MzU4MTU0Myx6OjQuODQ5NDk0Njk1NjYzNDUyfSx7eDozOTIuMDMzNjUzMjU5Mjc3MzQseTozMzAuNTY0NDc5ODI3ODgwODYsejotMS4zNDA3NTk4NDM1ODc4NzU0fSx7eDozOTguNTkxMzQ2NzQwNzIyNjYseTozMDUuOTM5MDI1ODc4OTA2MjUsejoxLjUxNzI5MDYyMTk5NTkyNn0se3g6NDE3Ljk1OTk3NjE5NjI4OTA2LHk6MjkwLjk3MTY5ODc2MDk4NjMsejoyNi44OTEwNTk4NzU0ODgyOH0se3g6NDA2LjA0NTQxNzc4NTY0NDUzLHk6MzA3LjM1MTU0MTUxOTE2NTA0LHo6OC42NjYwNjQxNDMxODA4NDd9LHt4OjQyMC43NTMyODgyNjkwNDI5Nyx5OjI5OC40MDc1MjYwMTYyMzUzNSx6OjQxLjc4Mzg1MjU3NzIwOTQ3fSx7eDozOTUuNDUyMjcwNTA3ODEyNSx5OjI5MS40MTUzNTc1ODk3MjE3LHo6LTIuMTc1MjY5NzIyOTM4NTM3Nn0se3g6MzY4LjY0NTIxMDI2NjExMzMseToyNDUuODg4Mjk5OTQyMDE2Nix6Oi05LjQ1Mzg4ODUzNTQ5OTU3M30se3g6MzcwLjM0OTAwNjY1MjgzMjAzLHk6MjYzLjU2NjkwNDA2Nzk5MzE2LHo6LTI2Ljc1MTAwMzI2NTM4MDg2fSx7eDozNzQuOTg0Nzc5MzU3OTEwMTYseToyNjYuNjEyNjM0NjU4ODEzNSx6Oi0xOS43NzE0NjYyNTUxODc5OX0se3g6MzY2Ljk5ODQwNTQ1NjU0Mjk3LHk6MjU4LjEyMTQwNDY0NzgyNzE1LHo6LTMxLjM3MjkwNDc3NzUyNjg1NX0se3g6MzcxLjAwNjE2NDU1MDc4MTI1LHk6MjE3LjYzNDc5NzA5NjI1MjQ0LHo6NS42MDUyMjE5ODY3NzA2M30se3g6MzgxLjMwNTc3MDg3NDAyMzQ0LHk6MjE0LjE0MDg3Mjk1NTMyMjI3LHo6NC45ODM3MTYzMDkwNzA1ODd9LHt4OjM5MC4xNDk2MTI0MjY3NTc4LHk6MjEzLjM4MjIxNTQ5OTg3NzkzLHo6NS41OTM1NTA4MDEyNzcxNjF9LHt4OjM5Ny43Njk2OTkwOTY2Nzk3LHk6MjE0LjM2NTk3ODI0MDk2Njgsejo4LjU3ODUyODE2NTgxNzI2fSx7eDo0MDMuMTY1MjA2OTA5MTc5Nyx5OjIxNy42NTUwOTYwNTQwNzcxNSx6OjEzLjAxMzY4NTk0MTY5NjE2N30se3g6NDA3LjM1NTE5NDA5MTc5NjkseToyMzAuNzI1MjUwMjQ0MTQwNjIsejoyMi40NDQyMzE1MTAxNjIzNTR9LHt4OjQyNC4wODc2NzcwMDE5NTMxLHk6MjUxLjc4MzkyNDEwMjc4MzIsejo1MS4xNjc3MTIyMTE2MDg4OX0se3g6NDAzLjUwMTk2ODM4Mzc4OTA2LHk6MjM5Ljg4NzU3NjEwMzIxMDQ1LHo6MTUuODAzMTY2NjI3ODgzOTExfSx7eDozOTcuMzE3MTk5NzA3MDMxMjUseToyNDEuNDk4MDYwMjI2NDQwNDMsejoxMS4yMzM3ODc1MzY2MjEwOTR9LHt4OjM4OC45OTQyNTUwNjU5MTc5Nyx5OjI0MS40MzY2OTEyODQxNzk3LHo6Ny45NDgyNjkyNDgwMDg3Mjh9LHt4OjM4MC43ODA0NDg5MTM1NzQyLHk6MjM5Ljc4MDc4ODQyMTYzMDg2LHo6Ni42MDAyMTQ4Mzg5ODE2Mjh9LHt4OjM3NC4wMTMzNjY2OTkyMTg3NSx5OjIzNy4xMTk0NjQ4NzQyNjc1OCx6OjYuMzQ5Mjc4MDkyMzg0MzM4fSx7eDozNjkuMzkxMjUwNjEwMzUxNTYseToyMzQuMzUzNTEzNzE3NjUxMzcsejo1Ljk4NzQ2MjQwMTM5MDA3Nn0se3g6NDIyLjk3MzA5ODc1NDg4MjgseToyNTUuNzY0NTUxMTYyNzE5NzMsejo3Ni42MTE1MDkzMjMxMjAxMixuYW1lOlwiZmFjZU92YWxcIn0se3g6Mzc0LjczOTE1MTAwMDk3NjU2LHk6MjY5LjI0MjE0MzYzMDk4MTQ1LHo6LTE2LjYwODQ5ODA5NjQ2NjA2NH0se3g6MzY0LjYxNjgxMzY1OTY2Nzk3LHk6MjQ1LjcxMDg4NzkwODkzNTU1LHo6LTIwLjAyODIzODI5NjUwODc5fSx7eDozNjUuMzgzNDUzMzY5MTQwNix5OjI2My4zNDE3NDE1NjE4ODk2NSx6Oi0zMi4zMjk5NjQ2Mzc3NTYzNX0se3g6MzYxLjU4MjUyNzE2MDY0NDUzLHk6MjY3LjgyNzM2Nzc4MjU5MjgsejotMzAuMzQ1ODE2NjEyMjQzNjUyfSx7eDozNjUuMzcyMDg1NTcxMjg5MDYseToyNjUuMDI0OTY3MTkzNjAzNSx6Oi0yOS4xNzg2NjcwNjg0ODE0NDV9LHt4OjM3Mi43MjYwNTg5NTk5NjA5NCx5OjI3Mi4wNTEzNTM0NTQ1ODk4NCx6Oi0xNC44MzQ0MzQ5ODYxMTQ1MDJ9LHt4OjM2MC40ODYxNDUwMTk1MzEyNSx5OjI2OC4zNDgyNzQyMzA5NTcwMyx6Oi0zMi4xODk5MDU2NDM0NjMxMzV9LHt4OjM1OS45NTE2Mjk2Mzg2NzE5LHk6MjcwLjgwNDkyMDE5NjUzMzIsejotMjQuNjUwMTM5ODA4NjU0Nzg1fSx7eDozNjkuNTA0OTI4NTg4ODY3Mix5OjIyOS4wMTk0NTExNDEzNTc0Mix6OjEwLjEwNzQ4OTgyNDI5NTA0NH0se3g6MzY1LjU0NDc3NjkxNjUwMzkseToyMzAuMjQwOTY0ODg5NTI2Mzcsejo1LjU5MzU1MDgwMTI3NzE2MX0se3g6MzYzLjUwNjY5ODYwODM5ODQ0LHk6MjMwLjYyMDgzNzIxMTYwODksejouNDM2MjIxMDYzMTM3MDU0NDR9LHt4OjM5OS4zNTI5NTEwNDk4MDQ3LHk6MjI3LjY1Njc3NDUyMDg3NDAyLHo6MTUuMzU5NjUwODUwMjk2MDIsbmFtZTpcImxlZnRFeWVcIn0se3g6NDAyLjU2OTMxMzA0OTMxNjQseToyMjQuNjAxOTAyOTYxNzMwOTYsejoxNS45MzE1NTI2NDg1NDQzMTJ9XSxib3g6e3hNaW46Mjc3LjgzMTg5NzczNTU5NTcseU1pbjoxNjguNzc0MTc1NjQzOTIwOSx4TWF4OjQyNC4yNzg4MzE0ODE5MzM2LHlNYXg6MzU5LjgzNDg5MDM2NTYwMDYsd2lkdGg6MTQ2LjQ0NjkzMzc0NjMzNzksaGVpZ2h0OjE5MS4wNjA3MTQ3MjE2Nzk3fX0sU0FNUExFX0ZBQ0VMQU5ETUFSS0VSX1JFU1VMVDp7ZmFjZUxhbmRtYXJrczpbW3t4Oi41NzYwNzc3NTkyNjU4OTk3LHk6Ljg2MzkwNzAzOTE2NTQ5NjgsejotLjAzMDk5Nzk1NjE3MTYzMTgxM30se3g6LjU3MjA5NDczODQ4MzQyOSx5Oi43ODg2Mjg5MzU4MTM5MDM4LHo6LS4wNzE4OTYyNDAxMTUxNjU3MX0se3g6LjU3MjM1NTE1MTE3NjQ1MjYseTouODA3NTM4MjcwOTUwMzE3NCx6Oi0uMDM1NzgxNjg4OTg4MjA4Nzd9LHt4Oi41NTQ4NDIwNTQ4NDM5MDI2LHk6LjcxODgzNjU0NTk0NDIxMzksejotLjA1Nzc4Nzg3NjU3NjE4NTIyNn0se3g6LjU3MDYwNzc4MTQxMDIxNzMseTouNzY3NDk3NDc5OTE1NjE4OSx6Oi0uMDc3NDAzOTk5ODY1MDU1MDh9LHt4Oi41NjgxMzc4MjQ1MzUzNjk5LHk6LjczODc3NjgwMzAxNjY2MjYsejotLjA3MzU2Mjg0NTU4NzczMDQxfSx7eDouNTYyMTUzNTE4MTk5OTIwNyx5Oi42NjgxMTY1MDk5MTQzOTgyLHo6LS4wNDE4OTg3NDk3Njg3MzM5OH0se3g6LjQ2NjEzNTgyOTY4NzExODUzLHk6LjY2Nzk4MTIwNzM3MDc1ODEsejouMDExMjg5NjgxMzA3OTcxNDc4fSx7eDouNTU3OTkzMjkyODA4NTMyNyx5Oi42MTc0MTA2NTk3OTAwMzkxLHo6LS4wMzUwMjgyMTU0OTc3MzIxNn0se3g6LjU1NjM0NTE2NDc3NTg0ODQseTouNTkwNTYwMDE5MDE2MjY1OSx6Oi0uMDM5Mjg2NTg3Mzg3MzIzMzh9LHt4Oi41NDg3ODMyNDI3MDI0ODQxLHk6LjQ5MDA1NzI1OTc5ODA0OTksejotLjAyOTg5ODkzNzc5MTU4NTkyMn0se3g6LjU3NjU1NDQxNzYxMDE2ODUseTouODY5MjE0NDc1MTU0ODc2Nyx6Oi0uMDI4MzE0Mjc3NTI5NzE2NDl9LHt4Oi41NzcxMTE0MjMwMTU1OTQ1LHk6Ljg3MzY0NDIzMjc0OTkzOSx6Oi0uMDIzNDU3Nzk5MTA2ODM2MzJ9LHt4Oi41NzcxOTA1Nzc5ODM4NTYyLHk6Ljg3NzAxNjAwNzkwMDIzOCx6Oi0uMDE2NjU4Njg5ODI2NzI2OTEzfSx7eDouNTc3ODA1ODc2NzMxODcyNix5Oi44NzcwMTE2NTY3NjExNjk0LHo6LS4wMTQ1MDU0OTI1MjMzMTI1Njl9LHt4Oi41NzgzNzY2NTA4MTAyNDE3LHk6Ljg4MzUwMDA5OTE4MjEyODksejotLjAxNTk5NjQwMjEyOTUzMDkwN30se3g6LjU3OTI0NDAxNzYwMTAxMzIseTouODkxMzgxMDg0OTE4OTc1OCx6Oi0uMDE5MjQ1NzkyMTgwMjk5NzZ9LHt4Oi41Nzk2NzY4MDY5MjY3MjczLHk6Ljg5OTYzMzQ2NzE5NzQxODIsejotLjAxODI2MTcxMjA0NDQ3NzQ2M30se3g6LjU4MTcyODgxNjAzMjQwOTcseTouOTI1NTgxMzk1NjI2MDY4MSx6Oi0uMDA3MTI2ODQ5MTQ0Njk3MTg5fSx7eDouNTcyNjU5MjU0MDc0MDk2Nyx5Oi43OTkyNDczMjQ0NjY3MDUzLHo6LS4wNjQzNTIxMzk4MzA1ODkzfSx7eDouNTU3OTQxOTEzNjA0NzM2Myx5Oi43OTk2OTg5NDg4NjAxNjg1LHo6LS4wNDU2NjY4NDM2NTI3MjUyMn0se3g6LjQyMTYxOTk4MTUyNzMyODUseTouNTk1ODc2Mjc2NDkzMDcyNSx6Oi4wNjc3NjQ5NjAyMjkzOTY4Mn0se3g6LjUwNTIyNjk2OTcxODkzMzEseTouNjc5NjUzOTQyNTg0OTkxNSx6Oi0uMDAxMDczNzc4MjU3NzA1MjcxMn0se3g6LjQ5MjQzMDI2OTcxODE3MDE3LHk6LjY4Mzg4NjU4NzYxOTc4MTUsejotLjAwMDUyMjczMjQ0MzY0MTg3MTJ9LHt4Oi40Nzk2OTcwNzg0NjY0MTU0LHk6LjY4NTYyOTAxMDIwMDUwMDUsejouMDAyNjg0MjQ1ODE3MzYzMjYyfSx7eDouNDYxODM1NjIyNzg3NDc1Nix5Oi42NzY0NTY5ODc4NTc4MTg2LHo6LjAxMzQzOTYyMjcwNzY2NDk2N30se3g6LjUxNjAzODA2MDE4ODI5MzUseTouNjczNzI4MjI3NjE1MzU2NCx6Oi0xNzYwNzM0ODEyNzA1Nzc3NmUtMjF9LHt4Oi40ODA3MDk2MTIzNjk1MzczNSx5Oi42MjU1ODcwNDYxNDYzOTI4LHo6LS4wMDgzMzk2NzQyMTIwMzg1MTd9LHt4Oi40OTcxOTc4MDY4MzUxNzQ1Nix5Oi42MjU2ODA4MDQyNTI2MjQ1LHo6LS4wMDgwMjc5NTU4ODk3MDE4NDN9LHt4Oi40NjY3NDM0NjkyMzgyODEyNSx5Oi42MzE3NjIzODUzNjgzNDcyLHo6LS4wMDQ0NjAxOTk3MzYwNTg3MTJ9LHt4Oi40NTgyNDkyNzA5MTU5ODUxLHk6LjY0MTExODA0OTYyMTU4Mix6Oi4wMDExOTA1NjEzMzU1MzM4NTczfSx7eDouNDU0MDg2NjkxMTQxMTI4NTQseTouNjkxMTQ1ODk2OTExNjIxMSx6Oi4wMjA1MTQ3NDg5OTA1MzU3MzZ9LHt4Oi41MzUzMTIyOTQ5NjAwMjIseTouOTYxOTk4NjQxNDkwOTM2Myx6Oi4wMTI0OTk0NjI4MTMxMzg5NjJ9LHt4Oi40NjA4NDYwMDY4NzAyNjk4LHk6LjY2Mjg3MjU1Mjg3MTcwNDEsejouMDE1MTc1NjQyNDQ1NjgzNDh9LHt4Oi40MjA2NzMxOTE1NDczOTM4LHk6LjY4Mjg0NTgzMDkxNzM1ODQsejouMDc4NDg2NDg3MjY5NDAxNTV9LHt4Oi40MzkwNjI0NDYzNTU4MTk3LHk6LjY3OTYxMDY2OTYxMjg4NDUsejouMDMyODMxNDIyOTg0NjAwMDd9LHt4Oi41MDI5OTY4NjE5MzQ2NjE5LHk6Ljc3MDE1NzAzOTE2NTQ5NjgsejotLjAwOTczNDQ4MTU3MzEwNDg1OH0se3g6LjU1OTUwMjcyMDgzMjgyNDcseTouODYwNzMyMzE2OTcwODI1Mix6Oi0uMDMwMDQzMjU1NTM3NzQ4MzM3fSx7eDouNTYyMTI2OTk0MTMyOTk1Nix5Oi44NzM4Mzc0NzEwMDgzMDA4LHo6LS4wMjE3MDk1Nzk5NzQ0MTI5MTh9LHt4Oi41NDUxNDk5ODE5NzU1NTU0LHk6Ljg2NTUyNzMzMTgyOTA3MSx6Oi0uMDIyMDE0MDc3NzUyODI4NTk4fSx7eDouNTM1MTE4NDAxMDUwNTY3Nix5Oi44NzA1MDk4MDMyOTUxMzU1LHo6LS4wMTE2MDI4MDAzMzk0NjAzNzN9LHt4Oi41NDk1MDE0MTkwNjczODI4LHk6Ljg3NDQ5NTYyNTQ5NTkxMDYsejotLjAxNjQ5MDk0MzcyOTg3NzQ3Mn0se3g6LjUzOTUxNzA0NTAyMTA1NzEseTouODc1OTQ0MDc3OTY4NTk3NCx6Oi0uMDA3MzMzMzYyOTQwNjk4ODYyfSx7eDouNTE4MzYyNDAyOTE1OTU0Nix5Oi44OTU5NzU0NzA1NDI5MDc3LHo6LjAxMDUyMDc3MzkzOTc4ODM0Mn0se3g6LjU2MDQzNDkzNzQ3NzExMTgseTouNzg5NTQ0OTk5NTk5NDU2OCx6Oi0uMDcwODIwMzc2Mjc2OTY5OTF9LHt4Oi41NTczODEyNzIzMTU5NzkseTouNzY4NzQ4OTk4NjQxOTY3OCx6Oi0uMDc1OTA1ODg5MjcyNjg5ODJ9LHt4Oi40NDMyOTAxNDQyMDUwOTM0LHk6LjYzMDg4OTc3MzM2ODgzNTQsejouMDAyNzE1MzI1NDQ4NjYyMDQyNn0se3g6LjUyNTgzMjUzMzgzNjM2NDcseTouNzE1MTIyNTgwNTI4MjU5Myx6Oi0uMDE0Njc2NTE4NzM4MjY5ODA2fSx7eDouNTI3MTgyNzU3ODU0NDYxNyx5Oi43ODMzMTE2MDU0NTM0OTEyLHo6LS4wMzc2NDMzMjA4NTg0Nzg1NDZ9LHt4Oi41MjU3MzgyOTg4OTI5NzQ5LHk6Ljc3MTc4MTYyMzM2MzQ5NDksejotLjAzNDAxOTIwOTQ0NDUyMjg2fSx7eDouNDY1MTY0MDk1MTYzMzQ1MzQseTouNzcwNTEwNjczNTIyOTQ5Mix6Oi4wMDY1NzQ3NzYwMjM2MjYzMjc1fSx7eDouNTU1ODg5MzA4NDUyNjA2Mix5Oi43NDIwOTk3NjE5NjI4OTA2LHo6LS4wNjk0NDk1MjkwNTE3ODA3fSx7eDouNDcyMDQwODMyMDQyNjk0MSx5Oi42MDY2MDM4NjA4NTUxMDI1LHo6LS4wMjEyMDQzNTYxMDQxMzU1MTN9LHt4Oi40NTQzMjU3MzU1NjkwMDAyNCx5Oi42MTU4NTQwODQ0OTE3Mjk3LHo6LS4wMTEwNTQ2ODQ0MDgwMDkwNTJ9LHt4Oi40MzA1MTUxNDAyOTUwMjg3LHk6LjU2MDgwNTM4MDM0NDM5MDksejouMDM5NjgzMDI5MDU1NTk1NH0se3g6LjUzMTA4NjU2NDA2NDAyNTkseTouNjE1NzQ4NDY1MDYxMTg3Nyx6Oi0uMDMwODExNzYwNTc0NTc5MjR9LHt4Oi41MTE0NjY2MjIzNTI2MDAxLHk6LjYzMjk3NDkyMjY1NzAxMjksejotLjAwMzM1OTk4MjA0NTM2NzM2fSx7eDouNTA2NDM1NzUxOTE0OTc4LHk6Ljg3ODY1NDM2MDc3MTE3OTIsejouMDEyOTgwODc2NDkwNDczNzQ3fSx7eDouNDQ4MDQ3MjIwNzA2OTM5Nyx5Oi44NjQwNjEzNTU1OTA4MjAzLHo6LjEyNTY5NjUxMDA3NjUyMjgzfSx7eDouNTM3MjA1ODE1MzE1MjQ2Nix5Oi43OTQyNTgxMTc2NzU3ODEyLHo6LS4wMzE2ODM2MTYzNDAxNjAzN30se3g6LjU0ODgzNzk1OTc2NjM4NzkseTouODAwMTYzMDMwNjI0Mzg5Nix6Oi0uMDMyODA5MTc5Mjc2MjI3OTV9LHt4Oi41MjEzMzg4MjA0NTc0NTg1LHk6Ljg3OTQzODE2MTg0OTk3NTYsejouMDExODkyNjA2NTA0MjYxNDk0fSx7eDouNTI0MjA1NTY1NDUyNTc1Nyx5Oi44Nzg5MjIyMjQwNDQ3OTk4LHo6LjAwODM3MDIyNTMxNzc3NjIwM30se3g6LjQ0NzcxNzUxNzYxNDM2NDYseTouNjAzOTk1MDI1MTU3OTI4NSx6Oi0uMDA1MDc5OTk3MjM3NzcxNzQ5NX0se3g6LjUyNjk2NDAwODgwODEzNix5Oi43OTE2NzQ4NTIzNzEyMTU4LHo6LS4wMjk2ODYxNDE3NTkxNTcxOH0se3g6LjQ5NzEyNTU2NjAwNTcwNjgseTouNjA1MDcwNjUwNTc3NTQ1Mix6Oi0uMDI4MTc1Njc4MTA0MTYyMjE2fSx7eDouNDkzODExOTA1Mzg0MDYzNyx5Oi41ODgyNDUzOTE4NDU3MDMxLHo6LS4wMzIxMDk0MTMyOTU5ODQyN30se3g6LjQ3NTcxNDM1NTcwNzE2ODYseTouNTA5NDg3OTg2NTY0NjM2Mix6Oi0uMDEzMDA3MzA4MzU2NDYzOTF9LHt4Oi40Mzk0NzI4MjQzMzUwOTgyNyx5Oi41ODE2NjQ4MDA2NDM5MjA5LHo6LjAxNDE1MTc3NDM0NjgyODQ2fSx7eDouNDg1NjY0MDM5ODUwMjM1LHk6LjU0Nzc4NjQxNDYyMzI2MDUsejotLjAyMzY4NTMzMjM4NzY4NTc3Nn0se3g6LjQzNjM1OTMxNjExMDYxMDk2LHk6LjYyMjY0MzgyODM5MjAyODgsejouMDEzNjA2MTQ4NzcxOTQxNjYyfSx7eDouNDI5MTAyNTEwMjEzODUxOTMseTouNjEwMjcyNjQ1OTUwMzE3NCx6Oi4wMzkyNjU2NDAwNzk5NzUxM30se3g6LjU2MDU0MDI1ODg4NDQyOTkseTouODY4MDA5OTI0ODg4NjEwOCx6Oi0uMDI3MzE4MTU5MTE4Mjk0NzE2fSx7eDouNTQ3NDgxNjU2MDc0NTIzOSx5Oi44NzAyODYxMDcwNjMyOTM1LHo6LS4wMTk2ODYzNjczNjI3Mzc2NTZ9LHt4Oi41MzczMDIxMzY0MjEyMDM2LHk6Ljg3Mjg4Mzg1NjI5NjUzOTMsejotLjAxMDQ4NDkyODI2NTIxMzk2Nn0se3g6LjU0MDczNTEyNTU0MTY4Nyx5Oi43OTc5MTY3MTAzNzY3Mzk1LHo6LS4wMjkwNzMyNTMyNzM5NjM5Mjh9LHt4Oi41MjI4NTg1MDA0ODA2NTE5LHk6Ljg3OTEzNTc4NzQ4NzAzLHo6LjAwOTkxNTEwOTcyMzgwNjM4MX0se3g6LjUzMDQ5NzY3MDE3MzY0NSx5Oi44ODE1MjUzOTczMDA3MjAyLHo6LjAwMjA1MjQ3ODQ5MjI1OTk3OTJ9LHt4Oi41MjU5OTEyNjEwMDU0MDE2LHk6Ljg3OTA1NTI2MTYxMTkzODUsejouMDA3ODk1OTcwNzE3MDcyNDg3fSx7eDouNTQzMzkwNjMxNjc1NzIwMix5Oi43ODgyMzEwNzQ4MTAwMjgxLHo6LS4wNTEyMTkwNTM1NjY0NTU4NH0se3g6LjU0MTM4ODIxMzYzNDQ5MSx5Oi44Nzc3MjE5NjUzMTI5NTc4LHo6LS4wMDQ2NjgwNDQzOTIwMTk1MX0se3g6LjU1MTU4MjIxNzIxNjQ5MTcseTouODc2NzAyMzA4NjU0Nzg1Mix6Oi0uMDEwNDc1OTQ2NTkwMzA0Mzc1fSx7eDouNTYzNzAwMzc3OTQxMTMxNix5Oi44NzcwNTk4MTczMTQxNDgsejotLjAxNTI3MzYyNTAzMTExMzYyNX0se3g6LjU2NDAyOTkzMjAyMjA5NDcseTouOTI2MzQyMzA4NTIxMjcwOCx6Oi0uMDA2NTg3MjQ5NjkyNTI5NDR9LHt4Oi41NjQyMzAwMjQ4MTQ2MDU3LHk6Ljg5OTMwNzQ4OTM5NTE0MTYsejotLjAxNzY1MzQ4MDE3MjE1NzI4OH0se3g6LjU2MzczMzYzNzMzMjkxNjMseTouODkxMDM2MDkzMjM1MDE1OSx6Oi0uMDE4NTI4MDcwMzAwODE3NDl9LHt4Oi41NjM3MTM0MzEzNTgzMzc0LHk6Ljg4MzcyNzY2OTcxNTg4MTMsejotLjAxNDgyNTkyNTIzMDk3OTkyfSx7eDouNTY0MjA1NTI3MzA1NjAzLHk6Ljg3Njg5NjQ0MDk4MjgxODYsejotLjAxMzMxMTU1MDAyMTE3MTU3fSx7eDouNTQxOTg2NzYzNDc3MzI1NCx5Oi44Nzc4MzczNTk5MDUyNDI5LHo6LS4wMDM3NzIwMzk0MzIwNzg2fSx7eDouNTQwNDQ2ODc3NDc5NTUzMix5Oi44ODA2OTYxNzc0ODI2MDUsejotLjAwNTYxMDM1NDI0NDcwOTAxNX0se3g6LjUzOTIzMzg2MzM1MzcyOTIseTouODg0NTcyMTQ4MzIzMDU5MSx6Oi0uMDA3MzUyMDI1NzEzNzcxNTgyfSx7eDouNTM4NDY5NjcyMjAzMDY0LHk6Ljg4OTExNzM2MDExNTA1MTMsejotLjAwNTE1NDk5MTk4ODA5MjY2MX0se3g6LjUxODkyNTAxMTE1Nzk4OTUseTouODQ1Mjc0MTUwMzcxNTUxNSx6Oi0uMDA5NzU1MDcwMzIxMjYxODgzfSx7eDouNDI1ODk3NTA4ODU5NjM0NCx5Oi43NjYyMjgwNzk3OTU4Mzc0LHo6LjEzODczNTExNTUyODEwNjd9LHt4Oi41NzI1NzI1MjkzMTU5NDg1LHk6LjgwNDE1NzI1NzA4MDA3ODEsejotLjA0NTgzOTA3ODcyNDM4NDMxfSx7eDouNTM0MjA2MTUxOTYyMjgwMyx5Oi44Nzg1ODMzMTIwMzQ2MDY5LHo6LjAwMjY1OTk3NDE1NDA4NDkyMX0se3g6LjUzMjQwMzExMTQ1NzgyNDcseTouODgwNDA3MTU0NTYwMDg5MSx6Oi4wMDE3ODMyMDAzMDY4MTc4ODkyfSx7eDouNTUzODgxODgzNjIxMjE1OCx5Oi44MDc4NDA3NjQ1MjI1NTI1LHo6LS4wMzI1NDUzOTg5MjA3NzQ0Nn0se3g6LjUzMjU0MzE4MjM3MzA0NjkseTouODAyNjgzMjkzODE5NDI3NSx6Oi0uMDE5MTQwMzczOTE1NDMzODg0fSx7eDouNTUxNDA3Njk0ODE2NTg5NCx5Oi44MDQzOTAzMTEyNDExNDk5LHo6LS4wMzMxMzUzNTQ1MTg4OTAzOH0se3g6LjUxMzE4NTYyMDMwNzkyMjQseTouNzI4NDc3MTgwMDA0MTE5OSx6Oi0uMDA5Mzk5ODUzNjQ2NzU1MjE5fSx7eDouNDkzMzE1MDQxMDY1MjE2MDYseTouNzQ0Mzk4MDU3NDYwNzg0OSx6Oi0uMDA1MjI1MjMwOTM5Njg2Mjk4fSx7eDouNTIzOTYxNzgyNDU1NDQ0Myx5Oi43ODA3NDUxNDg2NTg3NTI0LHo6LS4wMjU4ODEwMjc4MDI4MjQ5NzR9LHt4Oi40NDczNjA2MDUwMDE0NDk2LHk6LjUzMTU4MjcxMzEyNzEzNjIsejouMDExMTY0Nzg2Mjk0MTAyNjY5fSx7eDouNDU3MTg3NTkyOTgzMjQ1ODUseTouNTYwNDk0MTI0ODg5MzczOCx6Oi0uMDA1OTQzMzAxNTk5NDcyNzYxfSx7eDouNDY3MDAwNTczODczNTE5OSx5Oi41OTA5MzI3MjY4NjAwNDY0LHo6LS4wMTk2ODE3NjEwNDEyODM2MDd9LHt4Oi41MzExNTcwMTY3NTQxNTA0LHk6LjkwNzYyNjE1MjAzODU3NDIsejouMDAzODk0NzYzNTMzMDI1OTh9LHt4Oi41MjQ5OTIzNDY3NjM2MTA4LHk6LjU4OTM1NjM2MjgxOTY3MTYsejotLjAzNzk4MTkxOTk0NDI4NjM0Nn0se3g6LjUxNjY5MzIzNDQ0MzY2NDYseTouNTQyOTU1MTAwNTM2MzQ2NCx6Oi0uMDMzMTk3MDQxNjAwOTQyNjF9LHt4Oi41MDg1MDMwMTk4MDk3MjI5LHk6LjQ5Njc2MjA2NzA3OTU0NDA3LHo6LS4wMjY5MTI3NTI1Mzg5MTk0NX0se3g6LjQ2ODc3MjAyMzkxNjI0NDUseTouNjgzNDU2NTk5NzEyMzcxOCx6Oi4wMDgxMTM1MDYyNTAwODM0NDd9LHt4Oi40NDI2NDE0OTY2NTgzMjUyLHk6LjcwNjk1MzE2NzkxNTM0NDIsejouMDI4NTc3MjcxODQ4OTE3MDA3fSx7eDouNTIzMDM3Mzc0MDE5NjIyOCx5Oi42Njc1NzEzNjU4MzMyODI1LHo6LjAwMTc3Mzc3MjQxMTk3OTczNX0se3g6LjQ0ODEyNDAyMTI5MTczMjgseTouNjUyNzg3MjA4NTU3MTI4OSx6Oi4wMTI0MTQ4NTAyOTQ1ODk5OTZ9LHt4Oi41MzM5ODU2NzQzODEyNTYxLHk6LjcwMTIzNjc4NDQ1ODE2MDQsejotLjAyMDIyMDE4ODQyMzk5MTIwM30se3g6LjUzNDcyMjMyODE4NjAzNTIseTouNzc2MTE5MDUzMzYzOCx6Oi0uMDUxNDE1OTUwMDU5ODkwNzV9LHt4Oi40MzE1MDY3MjMxNjU1MTIxLHk6LjcyMTE5NTc1NzM4OTA2ODYsejouMDQzODE0MDU5MzQ2OTE0Mjl9LHt4Oi40NTIwMzM1MTk3NDQ4NzMwNSx5Oi43MjA2MTgwMDk1NjcyNjA3LHo6LjAxNzI4ODA3MDE3MjA3MTQ1N30se3g6LjQ2ODkyNDUyMjM5OTkwMjM0LHk6LjcyNjU0MzYwNTMyNzYwNjIsejouMDA1NjAyOTg4ODgwMTI3NjY4fSx7eDouNDkzMTQ2NzQ3MzUwNjkyNzUseTouNzIwMjI4MjU0Nzk1MDc0NSx6Oi0uMDAwNjQwODIwNTM3MjI4MTM3M30se3g6LjUxMDQ5MjU2MzI0NzY4MDcseTouNzA5MTgyNzM5MjU3ODEyNSx6Oi0uMDAzNjI5MTg3NTg3NjQ4NjN9LHt4Oi41MjMyMTQyMjEwMDA2NzE0LHk6LjY5ODU1Mzc0MDk3ODI0MSx6Oi0uMDA3ODc4NjcwNDY4OTI2NDN9LHt4Oi41NDk3ODgzNTU4MjczMzE1LHk6LjY3NDM2MDUxMzY4NzEzMzgsejotLjAzNjM0OTEwNjU4MDAxOX0se3g6LjQzNjU4NTAzODkwMDM3NTM3LHk6Ljc2MjcxMDAzNDg0NzI1OTUsejouMDQyNTU1MzY5NDM2NzQwODc1fSx7eDouNDM5NzY0ODg3MDk0NDk3Nyx5Oi42NTI4NjQ2MzQ5OTA2OTIxLHo6LjAxNzk1NjA5NDgxNjMyNzA5NX0se3g6LjU2NTMzMzI0NzE4NDc1MzQseTouNzk5MjgwMjg1ODM1MjY2MSx6Oi0uMDYzNjUwNTc4MjYwNDIxNzV9LHt4Oi41Mjg1NTYzNDY4OTMzMTA1LHk6LjczNjgxMDU2NDk5NDgxMix6Oi0uMDE4ODM2OTg4MTM2MTcyMjk1fSx7eDouNDE4MDY3ODcyNTI0MjYxNSx5Oi42NzkyNTYwODE1ODExMTU3LHo6LjEyMjg0Njc5NzEwODY1MDIxfSx7eDouNTMyODQyOTkzNzM2MjY3MSx5Oi42ODY1ODcyMTQ0Njk5MDk3LHo6LS4wMTA0ODQ3MjMzNzQyNDc1NTF9LHt4Oi41MjMwMjgzMTQxMTM2MTY5LHk6Ljc4MDk0MTYwNTU2NzkzMjEsejotLjAxMTkyMjM5ODU4MjEwMDg2OH0se3g6LjQ1NTE3NzEyODMxNDk3MTkseTouNjY1MDc3NTA3NDk1ODgwMSx6Oi4wMTc3NDQ5MzA0NjEwNDkwOH0se3g6LjUzMzcyMDM3NDEwNzM2MDgseTouNzYxODkyODU1MTY3Mzg4OSx6Oi0uMDQ2OTcxMDYwMzM1NjM2MTR9LHt4Oi40MzQ2Mzk3NTE5MTExNjMzMyx5Oi44MTMzNDc4MTY0NjcyODUyLHo6LjEzNTQ4NDk5MzQ1Nzc5NDJ9LHt4Oi41MjI1NzA3MjkyNTU2NzYzLHk6LjY2MDUyODM2MTc5NzMzMjgsejouMDA0OTgwNTE1Njg4NjU3NzYxfSx7eDouNTQ0MTkzMzg3MDMxNTU1Mix5Oi43NDk3MTk5NzczNzg4NDUyLHo6LS4wNjA5MTUxMjM2NzEyOTMyNn0se3g6LjQ3NzQwMDc3OTcyNDEyMTEseTouOTE1OTE4MzUwMjE5NzI2Nix6Oi4wNTk2MjI3MzQ3ODUwNzk5NTZ9LHt4Oi40ODA2ODc2MTgyNTU2MTUyMyx5Oi45MzY0OTQxNzE2MTk0MTUzLHo6LjA4NDA0OTQ0ODM3MDkzMzUzfSx7eDouNDI2ODI5MjQ4NjY2NzYzMyx5Oi43NjU3NTI4NTE5NjMwNDMyLHo6LjA5MDUxMDk3MTg0NDE5NjMyfSx7eDouNDYwNTE5MTM0OTk4MzIxNTMseTouODg4MDQ4NTg5MjI5NTgzNyx6Oi4wNzM4NDc0NDI4NjUzNzE3fSx7eDouNDI0MzQyMDY2MDQ5NTc1OCx5Oi42NDM0MzgyMjAwMjQxMDg5LHo6LjA2MjMwNTA1MTgzMzM5MTE5fSx7eDouNTM0MjE1NzQ4MzEwMDg5MSx5Oi45ODM1NjM0MjMxNTY3MzgzLHo6LjAyMTY2Mjk3MTAwNDg0MzcxMn0se3g6LjU2NjgxMDk2NTUzODAyNDkseTouODA0MjE4NzA5NDY4ODQxNix6Oi0uMDQ0OTM3MDc0MTg0NDE3NzI1fSx7eDouNTE3NjM0MTUzMzY2MDg4OSx5Oi43NTMwNTg3MzE1NTU5Mzg3LHo6LS4wMTI5Njc0NTQyNjk1MjgzODl9LHt4Oi40MzAyMDYyOTg4MjgxMjUseTouNjgzNTYwNTUwMjEyODYwMSx6Oi4wNDYxMjI4NDE1MzY5OTg3NX0se3g6LjQ3OTQyMzE5NTEyMzY3MjUseTouNjczMjExNDU1MzQ1MTUzOCx6Oi4wMDM5NzAwNDQ2NjUwMzg1ODZ9LHt4Oi40OTA3MzM0NzQ0OTMwMjY3Myx5Oi42NzIyNDM1MzU1MTg2NDYyLHo6LjAwMDg2OTI1MTQzODQxNjU0MDZ9LHt4Oi41Mjk0MTE2MTM5NDExOTI2LHk6Ljg4NDY3NzUyOTMzNTAyMix6Oi4wMDQ0MTM4OTAxODY2OTcyNDV9LHt4Oi40NDMwMTIyMzc1NDg4MjgxLHk6LjgwMjM1MzU2MDkyNDUzLHo6LjA0OTg3MjgyMzA1OTU1ODg3fSx7eDouNTYwMzgyNTQ0OTk0MzU0Mix5OjEuMDA5MjQ0MjAzNTY3NTA0OSx6Oi4wMjY0MTczNTk3MDk3Mzk2ODV9LHt4Oi41MTg2NTk4MzAwOTMzODM4LHk6Ljk4Mjg2NTk4OTIwODIyMTQsejouMDUxMzU5ODgwNzE1NjA4Nn0se3g6LjUwMTA1MzY5MDkxMDMzOTQseTouOTY0MDkzMjY3OTE3NjMzMSx6Oi4wNjU5MTU5NjQ1NDM4MTk0M30se3g6LjU1MjQ3Njk0MjUzOTIxNTEseTouNTM5NDQxNzA0NzUwMDYxLHo6LS4wMzU4MTYwNDczNDA2MzE0ODV9LHt4Oi41ODc5OTk3NjExMDQ1ODM3LHk6MS4wMDkxNDcyODY0MTUxLHo6LjAyMjg1MDY4ODU0Njg5NTk4fSx7eDouNTAxNjE5Mzk4NTkzOTAyNix5Oi42Njg0NDM3OTkwMTg4NTk5LHo6LjAwMDI4NDE1OTQxMDUxMjA3NDgzfSx7eDouNTExOTUyODE3NDQwMDMzLHk6LjY2NDIxOTczNzA1MjkxNzUsejouMDAyMTE0NDcxOTc5NDM5MjU4Nn0se3g6LjUxOTQzNDMzMjg0NzU5NTIseTouNjYyMzQ2OTU5MTE0MDc0Nyx6Oi4wMDQ2NzQxODEzNDIxMjQ5Mzl9LHt4Oi40MzIxMjMwMzUxOTI0ODk2LHk6LjY0OTYzNTU1MzM1OTk4NTQsejouMDMxMjQ2OTcxMzM4OTg3MzV9LHt4Oi41MDg2ODYzNjM2OTcwNTIseTouNjQ3OTU2NTUwMTIxMzA3NCx6Oi0uMDAwNDQ3NjU5OTg2MDkzNjQwMzN9LHt4Oi40OTYzOTg2Mjc3NTgwMjYxLHk6LjY0MzEwMzI0MTkyMDQ3MTIsejotLjAwMzI1MDc2ODg3Mzg0MDU3MDR9LHt4Oi40ODQ1NTQyMDEzNjQ1MTcyLHk6LjY0MzA3Nzg1MDM0MTc5NjksejotLjAwMjkwMzYyNDQzNzc0OTM4Nn0se3g6LjQ3MzM2MTI1MzczODQwMzMseTouNjQ3NTA2ODMzMDc2NDc3LHo6LjAwMDIzMzQ3MjQ3MDQyNjkzMTk4fSx7eDouNDY2ODY1NDUwMTQzODE0MSx5Oi42NTMzNDY1OTgxNDgzNDYsejouMDA0NzYyNTcyMjM2MzU5MTE5fSx7eDouNDE4MTUwNTE0MzY0MjQyNTUseTouNjMzNzA4MTE5MzkyMzk1LHo6LjA5ODA5NDM1OTA0MDI2MDMxfSx7eDouNDcxNTk5NDI5ODQ1ODA5OTQseTouNjcxMTQ4NTM4NTg5NDc3NSx6Oi4wMDc4NDk5MzU0NDIyMDkyNDR9LHt4Oi41NzM0Mzk2NTc2ODgxNDA5LHk6LjgyNTYxNDAzNTEyOTU0NzEsejotLjAzMTU1MjE5OTI3NDMwMTUzfSx7eDouNTMwNjUyNDAzODMxNDgxOSx5Oi44MzM3OTkwNjQxNTkzOTMzLHo6LS4wMTgzNTE0MjYzNDgwOTAxNzJ9LHt4Oi41MzcxNzI5MTM1NTEzMzA2LHk6Ljc5MTA4MzA5NzQ1Nzg4NTcsejotLjAzNzI4NjY4MDE5MTc1NTI5NX0se3g6LjU1NDk1MzQ1NTkyNDk4NzgseTouODI3NTI3NTgyNjQ1NDE2Myx6Oi0uMDMwNjY0ODI1ODExOTgyMTU1fSx7eDouNTU5NzQzMjI1NTc0NDkzNCx5Oi42NDE4NTQxNjY5ODQ1NTgxLHo6LS4wMzMxODg0NzM0MzMyNTYxNX0se3g6LjQ5NTg0ODQxNzI4MjEwNDUseTouOTQyOTU2OTI0NDM4NDc2Nix6Oi4wNDgzNDA2NzgyMTUwMjY4NTV9LHt4Oi41MTQwNTA3ODE3MjY4MzcyLHk6Ljk2MzQwMjgwNzcxMjU1NDksejouMDM1ODk4NDczMTEzNzc1MjV9LHt4Oi41NTg3NjkzNDUyODM1MDgzLHk6Ljk5NTEwOTczNjkxOTQwMzEsejouMDA5MDg3Mjg2ODg5NTUzMDd9LHt4Oi40NjQxMTE4OTQzNjkxMjUzNyx5Oi45MDUxODU1MjA2NDg5NTYzLHo6LjEwNjAxOTM1NTM1NjY5MzI3fSx7eDouNTE4MTYwOTM5MjE2NjEzOCx5Oi42NTU0MzE2ODc4MzE4Nzg3LHo6LjAwMjU0NjA3MTMwNzczMzY1NX0se3g6LjU0MzY1OTA5MDk5NTc4ODYseTouNzA4NTg0MTI5ODEwMzMzMyx6Oi0uMDM4NDQ0MzY2MzA2MDY2NTF9LHt4Oi41ODcyMTg3NjE0NDQwOTE4LHk6Ljk5NjAzODI1ODA3NTcxNDEsejouMDA2MzQyMzI3Njg3ODg5MzM3NX0se3g6LjUzNzk2NTM1NzMwMzYxOTQseTouOTk4OTEyNTcyODYwNzE3OCx6Oi4wMzYzNjMyOTk5MzYwNTYxNH0se3g6LjQzNTAzMjY5NTUzMTg0NTEseTouODA4ODU2NTQ2ODc4ODE0Nyx6Oi4wOTE0NzcwNDM5MjY3MTU4NX0se3g6LjU1MjMwODQ5OTgxMzA3OTgseTouODc3MzQyMjgzNzI1NzM4NSx6Oi0uMDA5MDY4NDg3MjEyMDYxODgyfSx7eDouNTUxMDE0OTU5ODEyMTY0Myx5Oi44ODE2OTMxODQzNzU3NjI5LHo6LS4wMTEwNDM4NTMxMjY0NjYyNzR9LHt4Oi41NTAzNzkzOTU0ODQ5MjQzLHk6Ljg4Nzc2Njk1NzI4MzAyLHo6LS4wMTM0ODc5OTQ2NzA4Njc5Mn0se3g6LjU1MDE1NDkyNDM5MjcwMDIseTouODk1NDM3MDYxNzg2NjUxNix6Oi0uMDEyMTQyMTg5Nzc4Mzg3NTQ3fSx7eDouNTQ2MDcyNzgxMDg1OTY4LHk6LjkxOTI1MjQ1NTIzNDUyNzYsejotLjAwMzE1NzU2MzA0MTg5NTYyOH0se3g6LjUzMTQ2NjE4NjA0NjYwMDMseTouODc3MTY2Njg4NDQyMjMwMix6Oi4wMDA1MDc1MTQxMDg5MDM3MDYxfSx7eDouNTI5MzMyNDU4OTcyOTMwOSx5Oi44NzYyNTQ3OTY5ODE4MTE1LHo6LjAwMDM5MTc3NzM3MTk4NzcwMDQ2fSx7eDouNTI3NTY5ODkwMDIyMjc3OCx5Oi44NzUwNjA5NzU1NTE2MDUyLHo6NDc3MzI3NTU3NzQ2MzIwOTZlLTIxfSx7eDouNTEwNDI3MTE3MzQ3NzE3Myx5Oi44NjA3MzMyMTEwNDA0OTY4LHo6LjAwMTI5MzQ2NDMzMDk1NjMzOTh9LHt4Oi40NTkzODcwMDQzNzU0NTc3Nix5Oi44MTM0OTE4MjEyODkwNjI1LHo6LjAyMzU2OTY5MDA2MzU5NTc3Mn0se3g6LjU0MTg5NDczMzkwNTc5MjIseTouNjg2NDEwMDY5NDY1NjM3Mix6Oi0uMDI3MzMzOTA5NjQ1Njc2NjEzfSx7eDouNTMxOTE0MjM0MTYxMzc3LHk6LjY0NTYxMzA3NDMwMjY3MzMsejotLjAwNTQzNDE0MDU2MzAxMTE2OX0se3g6LjUyMzY5NzAxODYyMzM1Mix5Oi42NDc4ODUyNjI5NjYxNTYsejotLjAwMDI0NjY0NjYzOTQyNTMwNzV9LHt4Oi41MzM4MTkxMzkwMDM3NTM3LHk6Ljg3ODM2ODczNTMxMzQxNTUsejouMDAyMjY4NzY4ODQ2OTg4Njc4fSx7eDouNDYyMjY2MDU3NzI5NzIxMDcseTouODYxMDI3Nzc3MTk0OTc2OCx6Oi4wNDcxODk1Mjk5ODUxODk0NH0se3g6LjU0MzQ0NDI3NTg1NjAxODEseTouNjQ1NjE4MTQwNjk3NDc5Mix6Oi0uMDIzMjczNTAxNTQ1MTkwODF9LHt4Oi41Mzk5NzU0NjQzNDQwMjQ3LHk6Ljk0MDIxOTUyMTUyMjUyMix6Oi4wMDUwNzUzNDM4ODQ1Mjc2ODN9LHt4Oi41NjYxNDU3Nzc3MDIzMzE1LHk6LjcxNDU3ODM5MDEyMTQ2LHo6LS4wNjI0MjEwMTYzOTUwOTIwMX0se3g6LjU1MjMxNDg3NzUxMDA3MDgseTouNjk3NDg3MDU2MjU1MzQwNix6Oi0uMDQ4NjMwNzAzMjQwNjMzMDF9LHt4Oi41NjM5OTU5NTczNzQ1NzI4LHk6LjY5MjMzNzgxMDk5MzE5NDYsejotLjA1MTgwNzYxMjE4MDcwOTg0fSx7eDouNTM2NzU5MjU3MzE2NTg5NCx5Oi43NDIzMjE3Mjk2NjAwMzQyLHo6LS4wMzYyMzAyNzcyNzAwNzg2Nn0se3g6LjU4NTM2ODk5MDg5ODEzMjMseTouOTc1MjA2NDk0MzMxMzU5OSx6Oi0uMDAyMzYxOTc0MjEzMjcyMzMzfSx7eDouNTgzNTIzNTExODg2NTk2Nyx5Oi45NDkzNjg1OTYwNzY5NjUzLHo6LS4wMDM5NDE3NDMxNjg5Nzk4ODN9LHt4Oi41NjE1MDE4NjA2MTg1OTEzLHk6Ljk0OTE5NDYxMDExODg2Nix6Oi0uMDAxNTk1Mzk2NTQ4NTA5NTk3OH0se3g6LjUwNjg1NjE0MzQ3NDU3ODkseTouOTA0ODIxOTMyMzE1ODI2NCx6Oi4wMTg2MjY4NDA3ODUxNDU3Nn0se3g6LjUxMzQwNjc1MzU0MDAzOTEseTouNzk3MTgyNTAwMzYyMzk2Mix6Oi0uMDA4NDg1NjYxODE5NTc3MjE3fSx7eDouNTIyMzg5NzA5OTQ5NDkzNCx5Oi45MjU1ODk5MTkwOTAyNzEsejouMDEyNDk2NTcyOTE5MTg5OTN9LHt4Oi40ODUwMDU1NTc1MzcwNzg4Nix5Oi43OTU5NDc4NDk3NTA1MTg4LHo6LS4wMDMyMDY1NzQ1OTA4NzY2OTg1fSx7eDouNTAzNzczNDUwODUxNDQwNCx5Oi44MTg0NTk2MzAwMTI1MTIyLHo6LS4wMDQ5MzIxMDM2Nzg1ODQwOTl9LHt4Oi40NzY2MzYxMTE3MzYyOTc2LHk6LjgyODgwNjQ1OTkwMzcxNyx6Oi4wMTAyNzY4ODk0Mjg0OTYzNn0se3g6LjU1ODk4MjcyOTkxMTgwNDIseTouOTc0NjU2MzQzNDYwMDgzLHo6LjAwMDk2NjY4ODYxODA2MzkyNjd9LHt4Oi41Mjk0NTgyODQzNzgwNTE4LHk6Ljc1NDEyMTY2MTE4NjIxODMsejotLjAyNTYwMzA0NjY0MDc1Mzc0Nn0se3g6LjQ5NzMwMDIwNzYxNDg5ODcseTouOTIwODk5MDkzMTUxMDkyNSx6Oi4wMzE5MzE0NTI0NTMxMzY0NDR9LHt4Oi41MTYzNTUxNTY4OTg0OTg1LHk6Ljk0MzI3OTA4NzU0MzQ4NzUsejouMDI0MzIxMzQwMDI0NDcxMjgzfSx7eDouNDkzOTk2NjIwMTc4MjIyNjYseTouODgxNDg2MjM3MDQ5MTAyOCx6Oi4wMTg2ODczOTkxMDQyMzc1NTZ9LHt4Oi40NDk0ODE2NjYwODgxMDQyNSx5Oi44MzYxMzc1OTI3OTI1MTEsejouMDU3MDIwMzQ3NTY1NDEyNTJ9LHt4Oi40Nzg5ODQ0NDUzMzM0ODA4Myx5Oi44ODM2NjEwOTEzMjc2NjcyLHo6LjAzMTUwNjk1MTg5ODMzNjQxfSx7eDouNDQ1NDQ3OTIxNzUyOTI5Nyx5Oi44NDk5NDM4MTY2NjE4MzQ3LHo6LjA4ODY4NTI1OTIyMjk4NDMxfSx7eDouNDk1NzI5NTk1NDIyNzQ0NzUseTouODQ1MjgyMzc1ODEyNTMwNSx6Oi4wMDM2MTExNjUzMzE2NzY2MDI0fSx7eDouNTM2MjUwMjMzNjUwMjA3NSx5Oi43MjIyNTg1Njc4MTAwNTg2LHo6LS4wMjc5MTIzNTIyMzQxMjUxMzd9LHt4Oi41MzkzNzcwMzM3MTA0Nzk3LHk6Ljc4NTA3MjIwNzQ1MDg2NjcsejotLjA1NDE1Mzk5NzQ1MTA2Njk3fSx7eDouNTMxMzk5NjY3MjYzMDMxLHk6Ljc4OTg0MTgzMDczMDQzODIsejotLjAzODgzMzQ2OTE1MjQ1MDU2fSx7eDouNTQ1MTYyNzM3MzY5NTM3NCx5Oi43NzE3MDM2NjA0ODgxMjg3LHo6LS4wNjQ4MDI1MzQ4NzgyNTM5NH0se3g6LjUyMDYzOTU5ODM2OTU5ODQseTouNjI4Nzc0NTgzMzM5NjkxMix6Oi0uMDEwNTIxMTM4MDg2OTE1MDE2fSx7eDouNDk3NDc4MjQ2Njg4ODQyOCx5Oi42MTkxOTM4NTE5NDc3ODQ0LHo6LS4wMTQwOTgyNDAwNjI1OTQ0MTR9LHt4Oi40Nzc0MTQ1MTg1OTQ3NDE4LHk6LjYxOTMxMzA2MTIzNzMzNTIsejotLjAxMzY0MzMzNzQxMzY2ODYzM30se3g6LjQ2MTYwOTg0MDM5MzA2NjQseTouNjI1OTg5MDE5ODcwNzU4MSx6Oi0uMDA4NDQ4MjAyMTYyOTgxMDMzfSx7eDouNDUxNjQ3ODQ3ODkwODUzOSx5Oi42MzY4NDYxODQ3MzA1Mjk4LHo6OTA1MDMwOTc0NTM2MjAyOGUtMjB9LHt4Oi40NDg1MDk2MDM3Mzg3ODQ4LHk6LjY3MTkxMjA3NDA4OTA1MDMsejouMDIyOTg0NzIwNzY2NTQ0MzQyfSx7eDouNDIxNzc2NTkyNzMxNDc1ODMseTouNzI0MDY2NzM0MzEzOTY0OCx6Oi4wODUxMTY3MzY1OTA4NjIyN30se3g6LjQ2MTYyMTUyMjkwMzQ0MjQseTouNjk4ODIzMTUzOTcyNjI1Nyx6Oi4wMTQyMzg0NzQ4OTA1ODk3MTR9LHt4Oi40NzU1Nzk4ODc2Mjg1NTUzLHk6LjcwMzQ2MDg3MjE3MzMwOTMsejouMDA2MjU1OTA5ODAwNTI5NDh9LHt4Oi40OTI0OTkyMDI0ODk4NTI5LHk6LjcwMDU4ODUyNDM0MTU4MzMsejouMDAwOTM5MTczOTczMTY1NDUyNX0se3g6LjUwODIyNTQ0MDk3OTAwMzkseTouNjkzMzg0MDUxMzIyOTM3LHo6LS4wMDA5NDY0MDM4MzAzMTIxOTI0fSx7eDouNTIwMzExMjk1OTg2MTc1NSx5Oi42ODQ5NzA3OTYxMDgyNDU4LHo6LS4wMDIyMTE0NzY5MDg5OTY3MDEyfSx7eDouNTI4Njc1OTEzODEwNzMseTouNjc3OTA3NTg2MDk3NzE3Myx6Oi0uMDAyOTYyNTM4NTA2ODM1Njk5fSx7eDouNDIxMzk1MzkxMjI1ODE0OCx5Oi43MjE5ODExNjc3OTMyNzM5LHo6LjEzNTA4OTQ1NzAzNTA2NDd9LHt4Oi41MzIwODI5NzQ5MTA3MzYxLHk6Ljc5NDg1ODk5MjA5OTc2Mix6Oi0uMDMxODE1MDMzNDA2MDE5MjF9LHt4Oi41NDUyNzk1MDI4Njg2NTIzLHk6LjcyODY1NzAwNzIxNzQwNzIsejotLjA0NzcxNTM5OTQxNDMwMDkyfSx7eDouNTQ5NjQwNzc0NzI2ODY3Nyx5Oi43ODY2OTMzMzQ1Nzk0Njc4LHo6LS4wNjQ1MjAwMzEyMTM3NjAzOH0se3g6LjU1NzA0MDI3NDE0MzIxOSx5Oi43OTYyMDg0NDEyNTc0NzY4LHo6LS4wNTgzNzM0NDM3ODIzMjk1Nn0se3g6LjU0OTE3NjgxMjE3MTkzNix5Oi43ODk1MjQ3OTM2MjQ4Nzc5LHo6LS4wNTc3NjExNDAxNjc3MTMxNjV9LHt4Oi41MzYyODkwMzYyNzM5NTYzLHk6LjgwMDU4MzY2MDYwMjU2OTYsejotLjAyNjkwMzc3NDU4OTMwMDE1Nn0se3g6LjU2MDIwMDAzNTU3MjA1Mix5Oi43OTgzNzMxMDMxNDE3ODQ3LHo6LS4wNjE3MjU1NTY4NTA0MzMzNX0se3g6LjU2MTY5NDQ0MzIyNTg2MDYseTouODAyMjc1MzU5NjMwNTg0Nyx6Oi0uMDQ1MjAwOTk5ODI2MTkyODU2fSx7eDouNTI3MzMyODQyMzUwMDA2MSx5Oi42NjExMjg0MDE3NTYyODY2LHo6LjAwMjkwMjE1MjAxNjc1ODkxODh9LHt4Oi41MzQ4NTA1Mzc3NzY5NDcseTouNjY2MDAxMjAwNjc1OTY0NCx6Oi0uMDA1MjE1NTEwMjYwMzEzNzQ5fSx7eDouNTM5NDg2MDUwNjA1NzczOSx5Oi42NzAxMzc1MjQ2MDQ3OTc0LHo6LS4wMTQ5MzE5MTcxOTA1NTE3NTh9LHt4Oi40NjM0MzA3MzI0ODg2MzIyLHk6LjY1ODI5MTc1NzEwNjc4MSx6Oi4wMDkyOTU3MTY4ODE3NTIwMTR9LHt4Oi40NTM4MzkzMDIwNjI5ODgzLHk6LjY1MTk5MzIxNTA4NDA3NTksejouMDA5MzAzMzA3MTYwNzM1MTN9LHt4Oi41Nzc2MDMxNjEzMzQ5OTE1LHk6LjcxNTkyOTg2NTgzNzA5NzIsejotLjA1NzM2NTkxMjk0NDA3ODQ0NX0se3g6LjY1MDQ4NTUxNTU5NDQ4MjQseTouNjQ2MTc3OTQ3NTIxMjA5Nyx6Oi4wMTQxODQ4MzQ0MzU1ODIxNjF9LHt4Oi41ODYwMTU0MDMyNzA3MjE0LHk6Ljc5NjIyNjYyMDY3NDEzMzMsejotLjA0NTIyODQzNjU4OTI0MTAzfSx7eDouNjg0MjA0OTM2MDI3NTI2OSx5Oi41NjMxNjM3NTczMjQyMTg4LHo6LjA3MjA3OTY3MzQwOTQ2MTk4fSx7eDouNjE1MjU2MDcxMDkwNjk4Mix5Oi42Njc0OTYyNjM5ODA4NjU1LHo6LjAwMDc1MjkyNTk4OTIxODA1NjJ9LHt4Oi42MjgwOTQ4NTE5NzA2NzI2LHk6LjY2ODQzMjY1Mjk1MDI4NjksejouMDAxNjg5MjU4NjEzNjIzNjc4N30se3g6LjY0MDg2MjUyNDUwOTQyOTkseTouNjY2Mzg5MjI2OTEzNDUyMSx6Oi4wMDUzMzEyMjY2MjQ1NDg0MzV9LHt4Oi42NTU3ODE0NDc4ODc0MjA3LHk6LjY1MzQ2Nzg5MzYwMDQ2MzksejouMDE2NDY0MTM0Njc4MjQ0NTl9LHt4Oi42MDM1NjYzNDg1NTI3MDM5LHk6LjY2Mzk3MDE3MjQwNTI0MjksejouMDAxMzc5OTYzMDEwNTQ5NTQ1M30se3g6LjYzMjkwNTMwNDQzMTkxNTMseTouNjA4MDEwNDcwODY3MTU3LHo6LS4wMDYxOTU4OTkwOTkxMTE1NTd9LHt4Oi42MTY3MjYwNDA4NDAxNDg5LHk6LjYxMTc1MzM0NDUzNTgyNzYsejotLjAwNjMxOTk1MTI2NjA1MDMzOX0se3g6LjY0NzEwMTM0MjY3ODA3MDEseTouNjExMjQ0OTc2NTIwNTM4Myx6Oi0uMDAxNzg0MzU1OTYxNzE3NjY1Mn0se3g6LjY1NjA5MDE5OTk0NzM1NzIseTouNjE4NTc3NjU5MTMwMDk2NCx6Oi4wMDQwNDcyNTczNjAwNzA5NDR9LHt4Oi42NjY2OTQ2NDExMTMyODEyLHk6LjY2NTExNzY4MTAyNjQ1ODcsejouMDIzNjQ3NTc4NDMzMTU2MDEzfSx7eDouNjMxMTM0NTEwMDQwMjgzMix5Oi45NDk1Mzk2MDE4MDI4MjU5LHo6LjAxNDAwNDA3ODY5MzY4NzkxNn0se3g6LjY1NDQ2NTU1NjE0NDcxNDQseTouNjM5NzkwMTc3MzQ1Mjc1OSx6Oi4wMTgwOTYwOTY4MTM2Nzg3NH0se3g6LjY5NjU4MDg4Njg0MDgyMDMseTouNjQ4MjY3NTA3NTUzMTAwNix6Oi4wODMwNDkwNDQwMTMwMjMzOH0se3g6LjY3OTgxNzI1OTMxMTY3Nix5Oi42NTAxODgxNDgwMjE2OTgsejouMDM2MzI2ODg4OTQ4Njc4OTd9LHt4Oi42MzM2NTE2NzM3OTM3OTI3LHk6Ljc1NDE0NTgwMTA2NzM1MjMsejotLjAwNzc0Mjc4MzUyMDM3MDcyMn0se3g6LjU5MjE3MDExOTI4NTU4MzUseTouODU2NzY2ODE5OTUzOTE4NSx6Oi0uMDI5Mzk5MTIzMDQyODIxODg0fSx7eDouNTkxNjYzNjU4NjE4OTI3LHk6Ljg3MDIxNTY1NDM3MzE2OSx6Oi0uMDIxMDM3MjkxNzM1NDEwNjl9LHt4Oi42MDY4MzY3OTU4MDY4ODQ4LHk6Ljg1ODQxOTUzNzU0NDI1MDUsejotLjAyMDY2ODA4NTY2NDUxMDcyN30se3g6LjYxNzY2MTc3NDE1ODQ3NzgseTouODYwOTY1MzcxMTMxODk3LHo6LS4wMDk3OTAwOTU1MDA2NDgwMjJ9LHt4Oi42MDQwNjM0NTEyOTAxMzA2LHk6Ljg2ODY2MTI4NDQ0NjcxNjMsejotLjAxNTI4OTU2NDYxNjk3ODE2OH0se3g6LjYxNDM3MzY4MzkyOTQ0MzQseTouODY3MTE3MDQ3MzA5ODc1NSx6Oi0uMDA1NzEyMjE2NzE5OTg1MDA4fSx7eDouNjM3MzEwNTA0OTEzMzMwMSx5Oi44ODE1NjU2OTAwNDA1ODg0LHo6LjAxMjY3MjU1MDk3NjI3NjM5OH0se3g6LjU4MzI1MDU4MjIxODE3MDIseTouNzg2NjMxMjg2MTQ0MjU2Nix6Oi0uMDcwNTE1MzQ5NTA3MzMxODV9LHt4Oi41ODM2Njc1NzYzMTMwMTg4LHk6Ljc2NTg2OTI1OTgzNDI4OTYsejotLjA3NTY2MTEwNzg5Nzc1ODQ4fSx7eDouNjcwOTUzMTU0NTYzOTAzOCx5Oi42MDQ4OTg5ODkyMDA1OTIsejouMDA1OTUxNTY1NjkwMzM4NjEyfSx7eDouNjAyOTg5MTk2Nzc3MzQzOCx5Oi43MDU2NTIxMTc3MjkxODcsejotLjAxMzM4ODI3NjEwMDE1ODY5MX0se3g6LjYxMzE2MjIxOTUyNDM4MzUseTouNzcyODM5NjA1ODA4MjU4MSx6Oi0uMDM2MjQ4NDc5MDM4NDc2OTQ0fSx7eDouNjEyMzE2MzEwNDA1NzMxMix5Oi43NjEyMDIwMzczMzQ0NDIxLHo6LS4wMzI2NDcyMTg1NTUyMTIwMn0se3g6LjY2OTYxODc4NTM4MTMxNzEseTouNzQ0NzA2OTI4NzMwMDExLHo6LjAwOTY3MzcwMjUzMDU2Mjg3OH0se3g6LjU4MDMxMDIyNTQ4Njc1NTQseTouNzM4NTk2ODU2NTk0MDg1Nyx6Oi0uMDY4OTE1MjMzMDE2MDE0MX0se3g6LjY0MDQzNDkyMDc4NzgxMTMseTouNTg3Nzk5OTY2MzM1Mjk2Nix6Oi0uMDE5Mjk3NTY5OTkwMTU4MDh9LHt4Oi42NTg4NDY3OTU1NTg5Mjk0LHk6LjU5Mjk0NTQ1NjUwNDgyMTgsejotLjAwODQ4NzI1NzE3NTE0NzUzM30se3g6LjY3MjAzMzc4Njc3MzY4MTYseTouNTMwNjMxNDIyOTk2NTIxLHo6LjA0MzQzNzQyMTMyMTg2ODg5Nn0se3g6LjU4NDMwNTQ2NTIyMTQwNSx5Oi42MDk5MDA1MzQxNTI5ODQ2LHo6LS4wMzAzMDEzNjc4NjQwMTI3MTh9LHt4Oi42MDM0MjgzNjM4MDAwNDg4LHk6LjYyMTc0NTI4ODM3MjAzOTgsejotLjAwMTk3MDE4MzgwMjc2ODU4OH0se3g6LjY0NjA5Mjc3MjQ4MzgyNTcseTouODYwODY2MzA4MjEyMjgwMyx6Oi4wMTU1NDE2MjUyMDkxNTI2OTl9LHt4Oi42OTU3ODE1Mjg5NDk3Mzc1LHk6LjgzMjYxMDMwOTEyMzk5MjksejouMTMwMTUyMzQ0NzAzNjc0MzJ9LHt4Oi42MDQzMzYyNjE3NDkyNjc2LHk6Ljc4NjE2ODI3NzI2MzY0MTQsejotLjAzMDQ3NjkwMTY4MDIzMTA5NH0se3g6LjU5NDI5MzQ3NTE1MTA2Mix5Oi43OTQyMTAzMTQ3NTA2NzE0LHo6LS4wMzIyMTg4MjEzNDY3NTk3OTZ9LHt4Oi42MzI0MDU3NTc5MDQwNTI3LHk6Ljg2NjUxMzk2NzUxNDAzODEsejouMDE0MjU1ODA2ODAzNzAzMzA4fSx7eDouNjI5NjE0NzcwNDEyNDQ1MSx5Oi44NjY3NzMzNjY5MjgxMDA2LHo6LjAxMDM4ODI4NTg1Mjk2ODY5M30se3g6LjY2MzY0NDU1MjIzMDgzNSx5Oi41Nzk4NjQyNjM1MzQ1NDU5LHo6LS4wMDIyMzAxMDcwODU3NzkzMDkzfSx7eDouNjE0MDYzMDg0MTI1NTE4OCx5Oi43ODA5Mjg4NTAxNzM5NTAyLHo6LS4wMjgzNTY3OTA1NDI2MDI1NH0se3g6LjYxNTkwODE0NTkwNDU0MSx5Oi41OTIxNjk4MjEyNjIzNTk2LHo6LS4wMjY4MDQ4NjA2ODEyOTUzOTV9LHt4Oi42MTcxODExMjIzMDMwMDkseTouNTc0ODY2MTc1NjUxNTUwMyx6Oi0uMDMwNjA2MDU1NjMyMjMzNjJ9LHt4Oi42MjIyMjA3NTQ2MjM0MTMxLHk6LjQ5MTM3NjcyNzgxOTQ0Mjc1LHo6LS4wMTExNTE2NzMyNzIyNTIwODN9LHt4Oi42NjY5MzU3NDE5MDEzOTc3LHk6LjU1NDE2MDcxNDE0OTQ3NTEsejouMDE3NDY2MTcwNzEzMzA1NDczfSx7eDouNjE4Mjk4MTcyOTUwNzQ0Nix5Oi41MzIwNDI1NjI5NjE1Nzg0LHo6LS4wMjE3OTM1OTA4NTg1Nzg2ODJ9LHt4Oi42NzYwNTU0MzEzNjU5NjY4LHk6LjU5NTA1MjE4MjY3NDQwOCx6Oi4wMTcxMTU3MDA5ODk5NjE2MjR9LHt4Oi42ODAxNDYzOTYxNjAxMjU3LHk6LjU4MDA3MjA0NTMyNjIzMjksejouMDQzMTI3MTYwNTE5MzYxNDk2fSx7eDouNTkyMjIxMDgxMjU2ODY2NSx5Oi44NjQ0MDE3NTc3MTcxMzI2LHo6LS4wMjY2Mjg5MzU3MDk1OTU2OH0se3g6LjYwNTQ1NTUxNzc2ODg1OTkseTouODYzNzg3NDcyMjQ4MDc3NCx6Oi0uMDE4MzYzNzUzMzMzNjg3NzgyfSx7eDouNjE2MTg4OTQzMzg2MDc3OSx5Oi44NjQxMTY0ODk4ODcyMzc1LHo6LS4wMDg4MDg5NDkwMzA5MzU3NjR9LHt4Oi42MDE3MjQ5ODIyNjE2NTc3LHk6Ljc5MDE0MDMzMDc5MTQ3MzQsejotLjAyODEyNjYzMDkzMjA5MjY2N30se3g6LjYzMTQ0NjEyMzEyMzE2OSx5Oi44NjY0ODE3ODEwMDU4NTk0LHo6LjAxMjExMjg2NTIyNDQ4MDYyOX0se3g6LjYyNDkxOTg5MTM1NzQyMTkseTouODcxNjUxMTEzMDMzMjk0Nyx6Oi4wMDM4ODI4MjU4NDAyNjQ1NTl9LHt4Oi42MjgxOTE1OTAzMDkxNDMxLHk6Ljg2NzMwMTg4MTMxMzMyNCx6Oi4wMDk4OTE0NDEwOTE4OTUxMDN9LHt4Oi41OTg2ODQzMTA5MTMwODU5LHk6Ljc4MTM5MzE3MDM1Njc1MDUsejotLjA1MDIyNzYxMjI1NzAwMzc4NH0se3g6LjYxMjY0MDczODQ4NzI0MzcseTouODY5Mjc1Njg5MTI1MDYxLHo6LS4wMDMxMjU1NzE0MTI5NjU2NTUzfSx7eDouNjAyNzI3MTE1MTU0MjY2NCx5Oi44NzExODQyODk0NTU0MTM4LHo6LS4wMDkzMjQxNjIyNjcxNDg0OTV9LHt4Oi41OTA4ODEzNDc2NTYyNSx5Oi44NzQyMDQ0NTY4MDYxODI5LHo6LS4wMTQ2MDg2NjA3MTI4MzgxNzN9LHt4Oi41OTg0NjA0MzU4NjczMDk2LHk6LjkyMTYxODUyMTIxMzUzMTUsejotLjAwNTk4MTk4OTY3MDU0NDg2M30se3g6LjU5NTAzOTg0NDUxMjkzOTUseTouODk2NDcwNzI1NTM2MzQ2NCx6Oi0uMDE3MDM0NzM5MjU1OTA1MTV9LHt4Oi41OTQxNTY4NjEzMDUyMzY4LHk6Ljg4ODI0MTA1MjYyNzU2MzUsejotLjAxNzc4NDc4NTQ3OTMwNzE3NX0se3g6LjU5Mjg4MDY2NjI1NTk1MDkseTouODgwMzg4MzE5NDkyMzQwMSx6Oi0uMDE0MTUzMTI4NDg5ODUxOTUyfSx7eDouNTkwOTY2MTA1NDYxMTIwNix5Oi44NzQ4MTAzOTc2MjQ5Njk1LHo6LS4wMTI2MDk5NzkxMzc3NzgyODJ9LHt4Oi42MTI4MDE2NzEwMjgxMzcyLHk6Ljg3MDI1NDU3NjIwNjIwNzMsejotLjAwMjI1NTA1NDY1NjQxNjE3Nzd9LHt4Oi42MTUwODQ2NDgxMzIzMjQyLHk6Ljg3MjY4MDQyNTY0MzkyMDksejotLjAwNDE0MDE5OTYyNzcyNzI3fSx7eDouNjE3MzA5MzkxNDk4NTY1Nyx5Oi44NzcwMTkwNDc3MzcxMjE2LHo6LS4wMDU5NzA5OTQwMTA1Njc2NjV9LHt4Oi42MTkzMzU0MTI5NzkxMjYseTouODgxNDgwMDk3NzcwNjkwOSx6Oi0uMDAzNjg2NDAyNDU4Njk3NTU3NH0se3g6LjYyOTI2Mzc1ODY1OTM2MjgseTouODMxNDU1ODI2NzU5MzM4NCx6Oi0uMDA3NzE0ODc1OTczNzYxMDgyfSx7eDouNzAyMjc1Mjc2MTg0MDgyLHk6LjczMjA2Njc1MDUyNjQyODIsejouMTQzMzYyMTM0Njk1MDUzMX0se3g6LjYyMDQ4MzUxNzY0Njc4OTYseTouODY4OTE3NzYzMjMzMTg0OCx6Oi4wMDQ0ODY5MTcwNTI0MTc5OTM1fSx7eDouNjIyMzUwODcxNTYyOTU3OCx5Oi44NzA0ODUxMjY5NzIxOTg1LHo6LjAwMzUyMDgyODkwNDU4NDA1fSx7eDouNTkwNDQ4MjYwMzA3MzEyLHk6LjgwMjk3Mjc5MzU3OTEwMTYsejotLjAzMjAwODI4NjU2NTU0MjIyfSx7eDouNjA5NzQyMzQzNDI1NzUwNyx5Oi43OTMzNzQxMjExODkxMTc0LHo6LS4wMTgwNDI1NTUwNzg4NjQwOTh9LHt4Oi41OTIyOTU3NjU4NzY3Nyx5Oi43OTkzNzY3MjYxNTA1MTI3LHo6LS4wMzI1NjQ1NjkyNjQ2NTAzNDV9LHt4Oi42MTcxMzY0MTg4MTk0Mjc1LHk6LjcxNTM3MjAyNTk2NjY0NDMsejotLjAwNzY3MjQzNzQ2NjY4MTAwNH0se3g6LjYzODk3NDc4NTgwNDc0ODUseTouNzI2MzkwNTQwNTk5ODIzLHo6LS4wMDI5OTkwNjc3NzIxNzk4NDJ9LHt4Oi42MTUxOTQwMjI2NTU0ODcxLHk6Ljc2OTQxMjEwMDMxNTA5NCx6Oi0uMDI0NDI3NTIxOTczODQ4MzQzfSx7eDouNjUyNjc3NjU1MjIwMDMxNyx5Oi41MDU4NjgxMzY4ODI3ODIsejouMDE0MTI2Mzc5OTc0MTg2NDJ9LHt4Oi42NDc1ODIyMzI5NTIxMTc5LHk6LjUzNzU0NTQ0MjU4MTE3NjgsejotLjAwMzM4OTkxMjg5MDI3MDM1MjR9LHt4Oi42NDMzMzU2NDA0MzA0NTA0LHk6LjU3MTQ1MjAyMTU5ODgxNTksejotLjAxNzQyODc5NjczODM4NjE1NH0se3g6LjYyNjk0OTY2NzkzMDYwMyx5Oi44OTYyMTE2ODM3NTAxNTI2LHo6LjAwNTYwMjczNjk1NzM3MTIzNX0se3g6LjU4Njg0MTY0Mjg1NjU5NzkseTouNTgyOTAwMjI2MTE2MTgwNCx6Oi0uMDM3Mjc3Mjk2MTg1NDkzNDd9LHt4Oi41ODc3MjI5NTcxMzQyNDY4LHk6LjUzNDUwMzU3OTEzOTcwOTUsejotLjAzMjM5Njk2NDcyODgzMjI0NX0se3g6LjU4ODcwNjYxMjU4Njk3NTEseTouNDg2NTUwODM3NzU1MjAzMjUsejotLjAyNTg1NjUzNTg4MTc1NzczNn0se3g6LjY1MDcxOTc2MTg0ODQ0OTcseTouNjYxMjI4Mjk5MTQwOTMwMix6Oi4wMTExMTQ2MTMxNTMwNDA0MDl9LHt4Oi42ODAzMDY2NzMwNDk5MjY4LHk6LjY3Nzk5MjA0NTg3OTM2NCx6Oi4wMzIxMjUzNjEyNjM3NTE5ODR9LHt4Oi41OTYzMTk0MzcwMjY5Nzc1LHk6LjY1OTg2MzIzMzU2NjI4NDIsejouMDAyOTc2OTI4MzcxOTM2MDgzfSx7eDouNjY3NTM2MTk5MDkyODY1LHk6LjYyNzQyNTU1MTQxNDQ4OTcsejouMDE1NjE4MjYxODgxMTcyNjU3fSx7eDouNTkzMDc0MDgzMzI4MjQ3MSx5Oi42OTQwMDQxNzgwNDcxODAyLHo6LS4wMTkyMTc3OTg0ODYzNTE5Njd9LHt4Oi42MDUzMzQ2Mzk1NDkyNTU0LHk6Ljc2NzY1MTc5NjM0MDk0MjQsejotLjA1MDMwODMwOTQ5NTQ0OTA2Nn0se3g6LjY5MzQ0NzM1MTQ1NTY4ODUseTouNjg4NDI5ODkyMDYzMTQwOSx6Oi4wNDc5NDQ2MjM5NzY5NDU4OH0se3g6LjY3MzgwMDc2NjQ2ODA0ODEseTouNjkzNDAxMTU3ODU1OTg3NSx6Oi4wMjA2OTcxNjE1NTUyOTAyMjJ9LHt4Oi42NTg4MDg0Njk3NzIzMzg5LHk6LjcwMzMxNDE4NTE0MjUxNzEsejouMDA4NDYyMzM0MDUxNzI4MjQ5fSx7eDouNjM0NjA3MjU1NDU4ODMxOCx5Oi43MDI5NTAyMzkxODE1MTg2LHo6LjAwMTU0MjE2NzYyMTY2NDcwM30se3g6LjYxNTc4MTY2NDg0ODMyNzYseTouNjk2NjUyNTkxMjI4NDg1MSx6Oi0uMDAyMDA5MjE4MDkzMDA3ODAzfSx7eDouNjAxNTU3NDMzNjA1MTk0MSx5Oi42ODg5Mjg0ODQ5MTY2ODcsejotLjAwNjU4ODIyNTcxODU4NzYzN30se3g6LjU3NDY4MzYwNjYyNDYwMzMseTouNjcxMTA2OTM0NTQ3NDI0Myx6Oi0uMDM1OTc1ODkyMDk2NzU3ODl9LHt4Oi42OTQ3NTIxNTY3MzQ0NjY2LHk6LjczMDk0NzkxMTczOTM0OTQsejouMDQ2NzA3OTM5MzU2NTY1NDc1fSx7eDouNjc1OTEwMTE1MjQyMDA0NCx5Oi42MjQ5MTIwODMxNDg5NTYzLHo6LjAyMTY1NDM0MTM2OTg2NzMyNX0se3g6LjU3OTQ3NzMxMDE4MDY2NDEseTouNzk3MTYxNTE5NTI3NDM1Myx6Oi0uMDYzMzkzMjY1MDA4OTI2Mzl9LHt4Oi42MDQxODQ5ODUxNjA4Mjc2LHk6LjcyNzUxNDkyMjYxODg2Nix6Oi0uMDE3NTEyNTQxMjY0Mjk1NTc4fSx7eDouNjk2ODg0NDUzMjk2NjYxNCx5Oi42NDQwOTUwMDM2MDQ4ODg5LHo6LjEyNzI3OTk2NzA2OTYyNTg1fSx7eDouNTkxMDg1MzE0NzUwNjcxNCx5Oi42NzkzMjU1MjA5OTIyNzksejotLjAwOTQ5NzcxNTE2MDI1MDY2NH0se3g6LjYxNTczNzU1NzQxMTE5MzgseTouNzY5NTY3NzI4MDQyNjAyNSx6Oi0uMDEwNjI0MjkwNDQzOTU2ODUyfSx7eDouNjYwNjQ5NDc4NDM1NTE2NCx5Oi42NDEwNDg5Njc4MzgyODc0LHo6LjAyMDgxNTg5NzczMjk3MzF9LHt4Oi42MDQwNjg3NTYxMDM1MTU2LHk6Ljc1MzE0NzA2NTYzOTQ5NTgsejotLjA0NTg4NzAxOTQ4NTIzNTIxNH0se3g6LjcwMTIxNTYyNDgwOTI2NTEseTouNzgwMjQ3MTUxODUxNjU0LHo6LjE0MDI4NzMwOTg4NTAyNTAyfSx7eDouNTk1MTQ5NTc2NjYzOTcxLHk6LjY1Mjc3ODI2Nzg2MDQxMjYsejouMDA2MzA4NzU3NzAwMDI2MDM1fSx7eDouNTkyNTUwMDM5MjkxMzgxOCx5Oi43NDM2NjY1ODkyNjAxMDEzLHo6LS4wNjAxNTE3NTU4MDk3ODM5MzZ9LHt4Oi42NzgwMTk4ODEyNDg0NzQxLHk6Ljg5MDU2OTM4ODg2NjQyNDYsejouMDYyNjA2MDczOTE1OTU4NH0se3g6LjY3Njc0NjY2NjQzMTQyNyx5Oi45MTEzODgwMzk1ODg5MjgyLHo6LjA4NzI2MDAzNzY2MDU5ODc1fSx7eDouNzAzMDY4NjE0MDA2MDQyNSx5Oi43MzEyNjg3NjM1NDIxNzUzLHo6LjA5NTI5Nzc0NjM2MDMwMTk3fSx7eDouNjg4OTg3MTM1ODg3MTQ2LHk6Ljg1ODg0MTcxNzI0MzE5NDYsejouMDc3NTI4NjQ4MDc4NDQxNjJ9LHt4Oi42ODgzNjkxNTQ5MzAxMTQ3LHk6LjYxMDk5NjA2NzUyMzk1NjMsejouMDY2Njk2MTI5NzM5Mjg0NTJ9LHt4Oi42MzU4OTA2MDMwNjU0OTA3LHk6Ljk3MDIwNjU1ODcwNDM3NjIsejouMDIzMTIwOTAwNjE2MDQ5NzY3fSx7eDouNTc4MTUzOTY3ODU3MzYwOCx5Oi44MDIzNjM0NTUyOTU1NjI3LHo6LS4wNDQ3NjM5MTg5NjYwNTQ5MTZ9LHt4Oi42MTcwMzE2OTM0NTg1NTcxLHk6Ljc0MDgzNTA3MDYxMDA0NjQsejotLjAxMTM3NTQ2MDc3MzcwNjQzNn0se3g6LjY4ODU0MjM2NjAyNzgzMix5Oi42NTE2Mjg0MzQ2NTgwNTA1LHo6LjA1MDIwNjAyNzkyNTAxNDQ5Nn0se3g6LjYzODUxNDkzNTk3MDMwNjQseTouNjU0MDcxNDUwMjMzNDU5NSx6Oi4wMDY0NjI5NDE0MTE4ODI2Mzl9LHt4Oi42Mjc5MzgyMTA5NjQyMDI5LHk6LjY1NjM2MTU3OTg5NTAxOTUsejouMDAzMDYyODQ2MTM5MDczMzcyfSx7eDouNjI2ODg5NTI2ODQ0MDI0Nyx5Oi44NzM2NzMyMDA2MDcyOTk4LHo6LjAwNjI3OTM2NzAyMjIxNjMyfSx7eDouNjk0NDk0NjA1MDY0MzkyMSx5Oi43NzA5MTgxMzA4NzQ2MzM4LHo6LjA1MzgyNDEzNDE3MTAwOTA2NH0se3g6LjYxNDYxNzEwOTI5ODcwNix5OjEuMDAyMjExMjEzMTExODc3NCx6Oi4wMjcxOTg5NDA1MTU1MTgxOX0se3g6LjY0OTM3MTkyMjAxNjE0MzgseTouOTY2NTE2NzkyNzc0MjAwNCx6Oi4wNTM1NjM3ODQ4MDc5MjA0NTZ9LHt4Oi42NjI0NTg3MTc4MjMwMjg2LHk6Ljk0MzUzMDc5Nzk1ODM3NCx6Oi4wNjg2MDU0Mzc4NzQ3OTR9LHt4Oi42MTYyNTI4OTkxNjk5MjE5LHk6LjY1NTg2OTMwNTEzMzgxOTYsejouMDAyMTg3ODU1MDc2MDQ0Nzk4fSx7eDouNjA1ODE2ODQxMTI1NDg4Myx5Oi42NTQzMjg0NjU0NjE3MzEsejouMDAzNjE5MzU4NDA5MTk2MTM4NH0se3g6LjU5ODc5MTg5NzI5NjkwNTUseTouNjUzNjkzNDk3MTgwOTM4Nyx6Oi4wMDYxMzQ1MzAwNjM3MTg1NTd9LHt4Oi42ODMxMDM3NDAyMTUzMDE1LHk6LjYxOTU2NDI5NDgxNTA2MzUsejouMDM1MTE3OTAxODYxNjY3NjN9LHt4Oi42MDYyNTgyNzMxMjQ2OTQ4LHk6LjYzNTYzOTg0NjMyNDkyMDcsejouMDAxMjgwMzEyODkyMDQ5NTUxfSx7eDouNjE3NDk0ODgxMTUzMTA2Nyx5Oi42Mjc3NjExODUxNjkyMix6Oi0uMDAxMzY0MjQ2ODI1Njg3NTg3M30se3g6LjYyOTcyNDYyMTc3Mjc2NjEseTouNjI1Mzc5MjY0MzU0NzA1OCx6Oi0uMDAwNzAzNDE1NjAwNTgyOTU3M30se3g6LjY0MDcwOTE2MTc1ODQyMjkseTouNjI3NTc4NjE2MTQyMjczLHo6LjAwMjgxNDQ3MDU1NzQ5NTk1MTd9LHt4Oi42NDc5NjIyNzIxNjcyMDU4LHk6LjYzMjI2NTA5MDk0MjM4MjgsejouMDA3NTAyNzMzNzI5Nzc5NzJ9LHt4Oi42OTE1MDkxMjc2MTY4ODIzLHk6LjU5OTA3MDQyOTgwMTk0MDksejouMTAyNzA5NDU3Mjc4MjUxNjV9LHt4Oi42NDU3MTYzMDk1NDc0MjQzLHk6LjY1MDQ0NTM0MjA2MzkwMzgsejouMDEwNjk2MDc3NzE5MzMwNzg4fSx7eDouNjE2NDIyMjk1NTcwMzczNSx5Oi44MjMxOTM2MDk3MTQ1MDgxLHo6LS4wMTY3NzIwNTk3MjM3MzQ4NTZ9LHt4Oi42MDQyNDAxMTk0NTcyNDQ5LHk6Ljc4MzA5NzY4NDM4MzM5MjMsejotLjAzNjMwOTEwNDQxMjc5NDExfSx7eDouNTkyMjIxNjc3MzAzMzE0Mix5Oi44MjI4Mzg3MjM2NTk1MTU0LHo6LS4wMjk5OTIzNzU1MjI4NTE5NDR9LHt4Oi42NjQ2MTExMDExNTA1MTI3LHk6LjkyMDk3MDA4MjI4MzAyLHo6LjA1MDk2NzI5NDcyMjc5NTQ4Nn0se3g6LjY1MTIzMjg5ODIzNTMyMSx5Oi45NDYwMTA3MDg4MDg4OTg5LHo6LjAzODAwMDE1ODk2NTU4NzYxNn0se3g6LjYxNDA5NzcxNDQyNDEzMzMseTouOTg4MjQ3MjE1NzQ3ODMzMyx6Oi4wMDk4ODIwOTE1NDQ1Njg1Mzl9LHt4Oi42ODcwNzgxMTgzMjQyNzk4LHk6Ljg3Njg2NzUzMjczMDEwMjUsejouMTA5ODA5MzI0MTQ1MzE3MDh9LHt4Oi41OTg2ODU2ODE4MTk5MTU4LHk6LjY0NTY0Mzg4OTkwNDAyMjIsejouMDAzOTk5MDEwNjU5NzU0Mjc2fSx7eDouNTg1OTgxNTQ3ODMyNDg5LHk6LjcwMzQ0ODE3NjM4Mzk3MjIsejotLjAzNzc3MjI4Mjk1ODAzMDd9LHt4Oi42MzQyMDMxMzU5NjcyNTQ2LHk6Ljk4Njc0NDg4MDY3NjI2OTUsejouMDM3ODY1MjE0MDQ5ODE2MTN9LHt4Oi43MDEzOTUwOTQzOTQ2ODM4LHk6Ljc3NjA0OTAxNzkwNjE4OSx6Oi4wOTU5ODIwNTk4MzYzODc2M30se3g6LjYwMzAyMDY2ODAyOTc4NTIseTouODcxOTEzMzEzODY1NjYxNix6Oi0uMDA3OTMxMTQ4NjMzMzYwODYzfSx7eDouNjA1MDU5MjA2NDg1NzQ4Myx5Oi44NzY3MTU2MDA0OTA1NzAxLHo6LS4wMDk3OTE5MjU1NDk1MDcxNDF9LHt4Oi42MDczNDY4OTIzNTY4NzI2LHk6Ljg4MzEzODIzOTM4MzY5NzUsejotLjAxMjM2MTAwODY3MzkwNjMyNn0se3g6LjYwODc5NzcyOTAxNTM1MDMseTouODkwMTQzNjMyODg4Nzk0LHo6LS4wMTA5ODE0ODMzODQ5NjY4NX0se3g6LjYxNDc3MDUzMTY1NDM1NzkseTouOTExMDA4NDc3MjEwOTk4NSx6Oi0uMDAxODgyMzU3NTIyODQ1MjY4Mn0se3g6LjYyMjU3Nzk2NTI1OTU1Mix5Oi44NjcwNjA0ODI1MDE5ODM2LHo6LjAwMjYwOTE5MDI5ODI0NDM1N30se3g6LjYyNDEyMzYzMjkwNzg2NzQseTouODY1MTM0NDE4MDEwNzExNyx6Oi4wMDI1NTM0MzgwNjkyOTg4NjM0fSx7eDouNjI1NzA4NDYwODA3ODAwMyx5Oi44NjM4NDA4MTg0MDUxNTE0LHo6LjAwMjMzMDAwNzQ5NzIyMTIzMTV9LHt4Oi42Mzk5MzEzMjExNDQxMDQseTouODQ0OTY3MTI2ODQ2MzEzNSx6Oi4wMDM4MTIzMTE2ODI4NTAxMjI1fSx7eDouNjgxMDkwNjUyOTQyNjU3NSx5Oi43ODU2NjI1MzE4NTI3MjIyLHo6LjAyNzE3NzY0Njc1NjE3MjE4fSx7eDouNTgzNTMyNDUyNTgzMzEzLHk6LjY4MTE5OTQ5MTAyNDAxNzMsejotLjAyNjU4ODg1NzE3MzkxOTY3OH0se3g6LjU4NTU2NjA0Mzg1Mzc1OTgseTouNjM5MzgxOTQ1MTMzMjA5Mix6Oi0uMDA0NTEyODQ0NjA3MjM0MDAxfSx7eDouNTkzMjIwMTc0MzEyNTkxNix5Oi42Mzk4MDI5MzI3MzkyNTc4LHo6LjAwMDgwMjA0NjYxOTM1NTY3ODZ9LHt4Oi42MjAwODc5ODEyMjQwNjAxLHk6Ljg2ODMzNTE4NzQzNTE1MDEsejouMDA0MTcwMTY3MjU5ODcxOTZ9LHt4Oi42ODQyNTU5NTc2MDM0NTQ2LHk6LjgzMzA1MzQxMDA1MzI1MzIsejouMDUwODM2MzE3MjQxMTkxODY0fSx7eDouNTc1NDQxMjQxMjY0MzQzMyx5Oi42NDE4MjIxNTkyOTAzMTM3LHo6LS4wMjI4MzgwNTk4MTI3ODQxOTV9LHt4Oi42MjMyNzkwMzUwOTE0MDAxLHk6LjkyOTUyOTcyNjUwNTI3OTUsejouMDA2MzM5NTIwMjE1OTg4MTU5fSx7eDouNTc2NDA2Nzc2OTA1MDU5OCx5Oi42OTQ1NDY2Mzk5MTkyODEsejotLjA0ODI1ODAzMjY0OTc1NTQ4fSx7eDouNTk3Nzg4OTI5OTM5MjcseTouNzM0MzkyNzYyMTg0MTQzMSx6Oi0uMDM1MDA0Mzc3MzY1MTEyMzA1fSx7eDouNjA0MjgxMDY3ODQ4MjA1Nix5Oi45NDQxNDQwMTA1NDM4MjMyLHo6LS4wMDEwOTcwNTcwMTQ3MDM3NTA2fSx7eDouNjQ5NjM3MjIyMjkwMDM5MSx5Oi44ODY5MDc4MTU5MzMyMjc1LHo6LjAyMTAzNjIzNTYxNTYxMTA3Nn0se3g6LjYyNzQwMTIzMjcxOTQyMTQseTouNzgzMDMxMDQ2MzkwNTMzNCx6Oi0uMDA2NjU4NDQwOTIxNDU1NjIyfSx7eDouNjM3NzkyNzA2NDg5NTYzLHk6LjkxMDQ5OTk4OTk4NjQxOTcsejouMDE0MjkwMjUwODM3ODAyODg3fSx7eDouNjU0OTkzNDE0ODc4ODQ1Mix5Oi43NzQ4NjA5MTg1MjE4ODExLHo6LS4wMDA2NjcyOTczMzk1MzI1MjQzfSx7eDouNjQwNDAwNTI4OTA3Nzc1OSx5Oi44MDEyMjA3MTUwNDU5MjksejotLjAwMjY2NDI1NTQ0Mzk2MDQyODJ9LHt4Oi42NjcxNDU2Njk0NjAyOTY2LHk6LjgwNDU1NDY0MTI0Njc5NTcsejouMDEzMTgwODExODg5NDY5NjI0fSx7eDouNjEwNzQ4MzUwNjIwMjY5OCx5Oi45NjgwNjU4NTc4ODcyNjgxLHo6LjAwMTc3ODk5MjI0MjE3OTgxMX0se3g6LjYwNjAzNDM5ODA3ODkxODUseTouNzQ0NTg3MjQyNjAzMzAyLHo6LS4wMjQzODIzMzQyMDI1Mjh9LHt4Oi42NjAyNzUxNjEyNjYzMjY5LHk6Ljg5OTg5NDUzNTU0MTUzNDQsejouMDM0NDk0MDcyMTk4ODY3OH0se3g6LjY0NjM3NzUwMzg3MTkxNzcseTouOTI2MjU2MjM5NDE0MjE1MSx6Oi4wMjYxNzYyMzI4NDQ1OTExNH0se3g6LjY1Nzk4NTIxMDQxODcwMTIseTouODYwMjMwNDQ1ODYxODE2NCx6Oi4wMjE1ODY3MTYxNzUwNzkzNDZ9LHt4Oi42OTI2MTY1MjIzMTIxNjQzLHk6LjgwNTMzNDAzMTU4MTg3ODcsejouMDYxMDc1MDgwMTg2MTI4NjE2fSx7eDouNjcyNDczMTkyMjE0OTY1OCx5Oi44NTk0Mzk5NjkwNjI4MDUyLHo6LjAzNDU3OTM0NzgxOTA4OTg5fSx7eDouNjk3NTcyMTcxNjg4MDc5OCx5Oi44MTgzMjQ1MDYyODI4MDY0LHo6LjA5MzAwNzc0MzM1ODYxMjA2fSx7eDouNjUxMjg3Nzk0MTEzMTU5Mix5Oi44MjU4MjIxNzQ1NDkxMDI4LHo6LjAwNjMyNDA1OTMyOTkyNjk2OH0se3g6LjU5NDg4NzM3NTgzMTYwNCx5Oi43MTQ4MzcyNTMwOTM3MTk1LHo6LS4wMjY4OTg0NzkwODkxNDA4OTJ9LHt4Oi42MDE3NDQwNTU3NDc5ODU4LHk6Ljc3NzM1MDc4MzM0ODA4MzUsejotLjA1MzEyNDIwODAwMzI4MjU1fSx7eDouNjA5NjU3MTY4Mzg4MzY2Nyx5Oi43ODA2OTk4NDkxMjg3MjMxLHo6LS4wMzc2NDYyNTYzODcyMzM3MzR9LHt4Oi41OTUyOTkzMDM1MzE2NDY3LHk6Ljc2NTQzNjc2ODUzMTc5OTMsejotLjA2Mzk4NDA1MTM0Njc3ODg3fSx7eDouNTk1MDAyMTE0NzcyNzk2Nix5Oi42MjAxMzA0NzkzMzU3ODQ5LHo6LS4wMDkyOTc1NDc4NjE5MzM3MDh9LHt4Oi42MTY1NDM4ODkwNDU3MTUzLHk6LjYwNTI5MDA1NTI3NDk2MzQsejotLjAxMjQ1NTU3MzMwNTQ4NzYzM30se3g6LjYzNjI2NjE3MTkzMjIyMDUseTouNjAxNTk2ODkxODgwMDM1NCx6Oi0uMDExNjQ5MjIwMjUwNTQ2OTMyfSx7eDouNjUyMjcyNzYwODY4MDcyNSx5Oi42MDQ2NDAwNjY2MjM2ODc3LHo6LS4wMDU5MDMzMzI0OTQxOTkyNzZ9LHt4Oi42NjI1NDA5NzIyMzI4MTg2LHk6LjYxMjgxNDEyODM5ODg5NTMsejouMDAzMDA0MjQ5NjUwOTg1MDAyNX0se3g6LjY2ODgwOTk1MDM1MTcxNTEseTouNjQ1NzcxMjA1NDI1MjYyNSx6Oi4wMjYzMjI3MDM4MDg1NDYwNjZ9LHt4Oi43MDEzNDQwNzI4MTg3NTYxLHk6LjY4OTM2NjYzODY2MDQzMDksejouMDg5ODQzMzE3ODY2MzI1Mzh9LHt4Oi42NjA4NjIzMjY2MjIwMDkzLHk6LjY3NDk0MDY0NTY5NDczMjcsejouMDE3MjExNjY4MTkzMzQwM30se3g6LjY0ODIzMjUxOTYyNjYxNzQseTouNjgyMzcyNjI5NjQyNDg2Nix6Oi4wMDg4ODEzOTg0NzY2NjAyNTJ9LHt4Oi42MzEzMjY1NTYyMDU3NDk1LHk6LjY4NDIwMjU1MTg0MTczNTgsejouMDAzMTMwODYxNzkwODUwNzU4Nn0se3g6LjYxNDcwMTYyODY4NDk5NzYseTouNjgwOTczMTcyMTg3ODA1Mix6Oi4wMDA3NjMwNzcxNzI0NTA3MjEzfSx7eDouNjAxODgzNDExNDA3NDcwNyx5Oi42NzU1MzcyMjg1ODQyODk2LHo6LS4wMDA4ODM0MzIxMDUxODM2MDE0fSx7eDouNTkyNTAyNzEzMjAzNDMwMix5Oi42NzA2ODEzNTczODM3MjgsejotLjAwMTk2ODc0ODQwMTg1MDQ2Mn0se3g6LjcwMDEyNzM2MzIwNDk1Nix5Oi42ODcxMTAzNjQ0MzcxMDMzLHo6LjEzOTgwNTAwNDAwMDY2Mzc2fSx7eDouNjA5NTY2NTY5MzI4MzA4MSx5Oi43ODUzMTg5NzA2ODAyMzY4LHo6LS4wMzA3NDc0Nzg4Mjc4MzQxM30se3g6LjU4ODA0MjM3ODQyNTU5ODEseTouNzIyOTI4NzAyODMxMjY4Myx6Oi0uMDQ2OTE1MDA5NjE3ODA1NDh9LHt4Oi41OTMwMTgyMzM3NzYwOTI1LHk6Ljc4MTE1MTQxMzkxNzU0MTUsejotLjA2Mzk4MzM1ODQ0Mjc4MzM2fSx7eDouNTg2NzcyMjAzNDQ1NDM0Nix5Oi43OTIyNjYwMTEyMzgwOTgxLHo6LS4wNTc5NDk3MTA2MzczMzEwMX0se3g6LjU5MzMyNzk5OTExNDk5MDIseTouNzg0Mjg0ODg5Njk4MDI4Nix6Oi0uMDU3MTQwNjcwNzE2NzYyNTR9LHt4Oi42MDYzNTM1ODA5NTE2OTA3LHk6Ljc5MjAyMTg3MDYxMzA5ODEsejotLjAyNTkwNjg1NzEwMzEwOTM2fSx7eDouNTgzOTQ1Mjc0MzUzMDI3Myx5Oi43OTQ5NzgxNDE3ODQ2NjgsejotLjA2MTUyMTI1MDc1NDU5NDh9LHt4Oi41ODI4MTI2MDcyODgzNjA2LHk6LjgwMDA4MDAwMTM1NDIxNzUsejotLjA0NDk3MjI1OTU1MTI4Njd9LHt4Oi41OTA5NjAzODM0MTUyMjIyLHk6LjY1NDEyMTMzOTMyMTEzNjUsejouMDAzOTkxODkwMjMzMDEwMDU0fSx7eDouNTg1MjE4MTkxMTQ2ODUwNix5Oi42NjAyOTM4NzcxMjQ3ODY0LHo6LS4wMDQ0Mjg0MzgzNzY2MzUzMTN9LHt4Oi41ODI1NzM3NzE0NzY3NDU2LHk6LjY2NTEwNjM1NjE0Mzk1MTQsejotLjAxNDM0NTI5MDEzOTMxNzUxM30se3g6LjY1MTczNDM1MjExMTgxNjQseTouNjM2MjM4NTE1Mzc3MDQ0Nyx6Oi4wMTIxNTE4OTA0MzQzMjQ3NDF9LHt4Oi42NjE1MDUyODE5MjUyMDE0LHk6LjYyODE1Nzc5NDQ3NTU1NTQsejouMDEyMzY4MjE1MjQ3OTg4N30se3g6LjQ4NTY4NzMxNTQ2NDAxOTgseTouNjU2ODk0NTY0NjI4NjAxMSx6Oi4wMDA3MjAwMzgwNzg3MjUzMzh9LHt4Oi40OTk4ODQwNjg5NjU5MTE4Nyx5Oi42NTQ3NDEwNDg4MTI4NjYyLHo6LjAwMDY5NDk3MjY5NTc4Mjc4MDZ9LHt4Oi40ODQzODkzOTQ1MjE3MTMyNix5Oi42MzkyOTczMDY1Mzc2MjgyLHo6LjAwMDcwNTUyNTkxOTMyOTM3NX0se3g6LjQ3MTQzMTM0NDc0NzU0MzMzLHk6LjY1ODk1MTE2MzI5MTkzMTIsejouMDAwNjk4MDMzMTM4MTc4Mjg4OX0se3g6LjQ4NzA0NjE4MjE1NTYwOTEzLHk6LjY3NTI3OTc5NjEyMzUwNDYsejouMDAwNjkyMTE3Nzg0NjM3OTU3OH0se3g6LjYyNDM3MDIxNzMyMzMwMzIseTouNjQwNDYxODAyNDgyNjA1LHo6LTY1OTIxMjY3Mzc4MTQzOTdlLTIwfSx7eDouNjM5MDk2Nzk2NTEyNjAzOCx5Oi42Mzg1MTczNzk3NjA3NDIyLHo6LS4wMDAxNjEwNTQzNTQ5NzU5MzEzNX0se3g6LjYyMzA1MzY2OTkyOTUwNDQseTouNjIyNDgyNTM4MjIzMjY2Nix6Oi0uMDAwMTYxMzY0OTY1NjA2NDgwODR9LHt4Oi42MDk1Mzk3NDcyMzgxNTkyLHk6LjY0MTkxNzg4NDM0OTgyMyx6Oi0uMDAwMTgwMzU1NjM2OTg1MDQxMn0se3g6LjYyNTA5OTY1ODk2NjA2NDUseTouNjU4NjI0NzY4MjU3MTQxMSx6Oi0uMDAwMTc4NTUxNTA1MDg2OTQzNX1dXSxmYWNlQmxlbmRzaGFwZXM6W3tjYXRlZ29yaWVzOlt7aW5kZXg6MCxzY29yZTo1MTg3MTc0MzM4MDYxNTk1ZS0yMSxjYXRlZ29yeU5hbWU6XCJfbmV1dHJhbFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDoxLHNjb3JlOi4yNDUyMTUwNDM0MjU1NixjYXRlZ29yeU5hbWU6XCJicm93RG93bkxlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MixzY29yZTouMTk4Nzc0MzM3NzY4NTU0NyxjYXRlZ29yeU5hbWU6XCJicm93RG93blJpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjMsc2NvcmU6LjAxMzQwMDQ0ODQ4NjIwODkxNixjYXRlZ29yeU5hbWU6XCJicm93SW5uZXJVcFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDo0LHNjb3JlOi4wMTIzNjE1NjA5NDgxOTMwNzMsY2F0ZWdvcnlOYW1lOlwiYnJvd091dGVyVXBMZWZ0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjUsc2NvcmU6LjAxOTMwNTA5NjkzOTIwNjEyMyxjYXRlZ29yeU5hbWU6XCJicm93T3V0ZXJVcFJpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjYsc2NvcmU6Mjg0MjYzNTY5NDgzMzAwNjdlLTIxLGNhdGVnb3J5TmFtZTpcImNoZWVrUHVmZlwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDo3LHNjb3JlOjMuNDUwMDExMjYzMzM5NTQ3NGUtNyxjYXRlZ29yeU5hbWU6XCJjaGVla1NxdWludExlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6OCxzY29yZTo0LjgzNzg5MDUxNDg2MzgzZS03LGNhdGVnb3J5TmFtZTpcImNoZWVrU3F1aW50UmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6OSxzY29yZTouMDc2NTA0NDgzODE5MDA3ODcsY2F0ZWdvcnlOYW1lOlwiZXllQmxpbmtMZWZ0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjEwLHNjb3JlOi4wNTA3MDAxMjgwNzg0NjA2OSxjYXRlZ29yeU5hbWU6XCJleWVCbGlua1JpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjExLHNjb3JlOi4xMzk3ODkwMDAxNTM1NDE1NixjYXRlZ29yeU5hbWU6XCJleWVMb29rRG93bkxlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MTIsc2NvcmU6LjE0MTk4NjEzMTY2ODA5MDgyLGNhdGVnb3J5TmFtZTpcImV5ZUxvb2tEb3duUmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MTMsc2NvcmU6LjIxNzc3NjYxMTQ0NzMzNDMsY2F0ZWdvcnlOYW1lOlwiZXllTG9va0luTGVmdFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDoxNCxzY29yZTouMDE0NzM5MzU3ODY2MzQ2ODM2LGNhdGVnb3J5TmFtZTpcImV5ZUxvb2tJblJpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjE1LHNjb3JlOi4wMjM2MTUxMjkyOTIwMTEyNixjYXRlZ29yeU5hbWU6XCJleWVMb29rT3V0TGVmdFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDoxNixzY29yZTouMTk2Nzk2MDQ0NzA3Mjk4MjgsY2F0ZWdvcnlOYW1lOlwiZXllTG9va091dFJpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjE3LHNjb3JlOi4wNDg3NDYxNjg2MTM0MzM4NCxjYXRlZ29yeU5hbWU6XCJleWVMb29rVXBMZWZ0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjE4LHNjb3JlOi4wNDkzOTIzNzYwOTUwNTY1MzQsY2F0ZWdvcnlOYW1lOlwiZXllTG9va1VwUmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MTksc2NvcmU6LjM0OTQ0MzMxNjQ1OTY1NTc2LGNhdGVnb3J5TmFtZTpcImV5ZVNxdWludExlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MjAsc2NvcmU6LjI5Mzk3MTY4NzU1NTMxMzEsY2F0ZWdvcnlOYW1lOlwiZXllU3F1aW50UmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MjEsc2NvcmU6LjAwNTk1NTA0MjMxNzUwOTY1MSxjYXRlZ29yeU5hbWU6XCJleWVXaWRlTGVmdFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDoyMixzY29yZTouMDA2Nzc2MTE3NzE5NzA5ODczLGNhdGVnb3J5TmFtZTpcImV5ZVdpZGVSaWdodFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDoyMyxzY29yZToxNjk0MjQzNjU1OTQ3NTAyN2UtMjEsY2F0ZWdvcnlOYW1lOlwiamF3Rm9yd2FyZFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDoyNCxzY29yZTouMDA0NTE2NTQ5NDA4NDM1ODIxNSxjYXRlZ29yeU5hbWU6XCJqYXdMZWZ0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjI1LHNjb3JlOi4wNzgwMzk0MDAyNzk1MjE5NCxjYXRlZ29yeU5hbWU6XCJqYXdPcGVuXCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjI2LHNjb3JlOjIwOTAwNTc3NTEwNDc0MjVlLTIwLGNhdGVnb3J5TmFtZTpcImphd1JpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjI3LHNjb3JlOi4wNjAzMjAzNTg3MjM0MDIwMixjYXRlZ29yeU5hbWU6XCJtb3V0aENsb3NlXCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjI4LHNjb3JlOi4wMDIyODg4MjA5MjA1MTIwOCxjYXRlZ29yeU5hbWU6XCJtb3V0aERpbXBsZUxlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6Mjksc2NvcmU6LjAwNzgxNzYyMzIwNTQ4Mjk2LGNhdGVnb3J5TmFtZTpcIm1vdXRoRGltcGxlUmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MzAsc2NvcmU6LjAwMTcwOTM5MzEwOTE5NDkzNDQsY2F0ZWdvcnlOYW1lOlwibW91dGhGcm93bkxlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MzEsc2NvcmU6LjAwMTkzMTkxMDYzNTkwMzQ3NzcsY2F0ZWdvcnlOYW1lOlwibW91dGhGcm93blJpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjMyLHNjb3JlOjg0ODUyMzc3NzY3Njc0NjJlLTIwLGNhdGVnb3J5TmFtZTpcIm1vdXRoRnVubmVsXCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjMzLHNjb3JlOi4wMDA5MDUxMzU1MzAwNDcxMTg3LGNhdGVnb3J5TmFtZTpcIm1vdXRoTGVmdFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDozNCxzY29yZTouMDAwMzYzMDQ1NDMwMjc2NTQyOSxjYXRlZ29yeU5hbWU6XCJtb3V0aExvd2VyRG93bkxlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MzUsc2NvcmU6LjAwMDE3NjAxMjM4NTA1NDQ5MTQ2LGNhdGVnb3J5TmFtZTpcIm1vdXRoTG93ZXJEb3duUmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6MzYsc2NvcmU6LjEyODY1MTYxODk1NzUxOTUzLGNhdGVnb3J5TmFtZTpcIm1vdXRoUHJlc3NMZWZ0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjM3LHNjb3JlOi4yMDEzNzIwNzIxMDA2MzkzNCxjYXRlZ29yeU5hbWU6XCJtb3V0aFByZXNzUmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6Mzgsc2NvcmU6LjAwMjIyMDMyODQzMTU3NjQ5MDQsY2F0ZWdvcnlOYW1lOlwibW91dGhQdWNrZXJcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6Mzksc2NvcmU6LjAwMDkwOTYzNzcxNzk5NTc5MjYsY2F0ZWdvcnlOYW1lOlwibW91dGhSaWdodFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDo0MCxzY29yZTouMzQxODk3MjE5NDE5NDc5MzcsY2F0ZWdvcnlOYW1lOlwibW91dGhSb2xsTG93ZXJcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6NDEsc2NvcmU6LjExNDA5Njg5NDg2MDI2NzY0LGNhdGVnb3J5TmFtZTpcIm1vdXRoUm9sbFVwcGVyXCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjQyLHNjb3JlOi4xNzE3MjUzNjI1MzkyOTEzOCxjYXRlZ29yeU5hbWU6XCJtb3V0aFNocnVnTG93ZXJcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6NDMsc2NvcmU6LjAwNDAzODQyNDY5Njc3MzI5MSxjYXRlZ29yeU5hbWU6XCJtb3V0aFNocnVnVXBwZXJcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6NDQsc2NvcmU6LjAwMDIzMjA1MjMwNTM2NDA0OTk3LGNhdGVnb3J5TmFtZTpcIm1vdXRoU21pbGVMZWZ0XCIsZGlzcGxheU5hbWU6XCJcIn0se2luZGV4OjQ1LHNjb3JlOi4wMDAxOTMxMzYxOTEyMjg0MDQ2NCxjYXRlZ29yeU5hbWU6XCJtb3V0aFNtaWxlUmlnaHRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6NDYsc2NvcmU6LjAwMTg1NzEzMDU1NTQzNjAxNTEsY2F0ZWdvcnlOYW1lOlwibW91dGhTdHJldGNoTGVmdFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDo0NyxzY29yZTouMDAyMzgxMzIzODM2NzQzODMxNixjYXRlZ29yeU5hbWU6XCJtb3V0aFN0cmV0Y2hSaWdodFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDo0OCxzY29yZToyNDMyMzEwMDY2MDY5NDc2M2UtMjEsY2F0ZWdvcnlOYW1lOlwibW91dGhVcHBlclVwTGVmdFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDo0OSxzY29yZTozMTYxNTUyMDEyODk4MDI4ZS0yMCxjYXRlZ29yeU5hbWU6XCJtb3V0aFVwcGVyVXBSaWdodFwiLGRpc3BsYXlOYW1lOlwiXCJ9LHtpbmRleDo1MCxzY29yZToxLjA4MTk4NDA2Njc4NjM5ZS03LGNhdGVnb3J5TmFtZTpcIm5vc2VTbmVlckxlZnRcIixkaXNwbGF5TmFtZTpcIlwifSx7aW5kZXg6NTEsc2NvcmU6MTI2NTI1Mjc2MzAwNTI2NDZlLTIyLGNhdGVnb3J5TmFtZTpcIm5vc2VTbmVlclJpZ2h0XCIsZGlzcGxheU5hbWU6XCJcIn1dLGhlYWRJbmRleDotMSxoZWFkTmFtZTpcIlwifV0sZmFjaWFsVHJhbnNmb3JtYXRpb25NYXRyaXhlczpbe3Jvd3M6NCxjb2x1bW5zOjQsZGF0YTpbLjk5NDc1MTc1MTQyMjg4MjEsLjEwMjMwNTQ0MjA5NDgwMjg2LC4wMDEzNjc5OTMxODcxNTkyOTk5LDAsLS4xMDIzMDk5NzIwNDc4MDU3OSwuOTk0NzQ0Nzc3Njc5NDQzNCwuMDAzODE2MzIwMzI4MDQxOTExLDAsLS4wMDA5NzAzNDg0MjQ3NDM4NjEsLS4wMDM5MzYyMjk3MzkzMzgxNTk2LC45OTk5OTE0MTY5MzExNTIzLDAsMi44ODg4ODIxNjAxODY3Njc2LC03LjgwODkzNDIxMTczMDk1NywtMzAuNTIxMDkxNDYxMTgxNjQsMV19XX19LHd0PXQuY3JlYXRlQ29udGV4dCh7fSksYnQ9e2Jhc2VQYXRoOlwiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9AbWVkaWFwaXBlL3Rhc2tzLXZpc2lvbkAwLjEwLjIvd2FzbVwiLG9wdGlvbnM6e2Jhc2VPcHRpb25zOnttb2RlbEFzc2V0UGF0aDpcImh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9tZWRpYXBpcGUtbW9kZWxzL2ZhY2VfbGFuZG1hcmtlci9mYWNlX2xhbmRtYXJrZXIvZmxvYXQxNi8xL2ZhY2VfbGFuZG1hcmtlci50YXNrXCIsZGVsZWdhdGU6XCJHUFVcIn0scnVubmluZ01vZGU6XCJWSURFT1wiLG91dHB1dEZhY2VCbGVuZHNoYXBlczohMCxvdXRwdXRGYWNpYWxUcmFuc2Zvcm1hdGlvbk1hdHJpeGVzOiEwfX07ZnVuY3Rpb24gRXQoKXtyZXR1cm4gdC51c2VDb250ZXh0KHd0KX1mdW5jdGlvbiBNdChlLHQpe3JldHVybiBlLmNsb25lKCkuYWRkKHQpLm11bHRpcGx5U2NhbGFyKC41KX1mdW5jdGlvbiBTdChlLHQscil7Y29uc3Qgbj1lLmxvY2FsVG9Xb3JsZCh0KTtyZXR1cm4gci53b3JsZFRvTG9jYWwobil9Y29uc3QgQ3Q9dC5jcmVhdGVDb250ZXh0KHt9KSxQdD10LmZvcndhcmRSZWYoKCh7Y2FtZXJhOmUsYXV0b3N0YXJ0OnI9ITAsd2ViY2FtOm49ITAsd2ViY2FtVmlkZW9UZXh0dXJlU3JjOm8sbWFudWFsVXBkYXRlOmk9ITEsbWFudWFsRGV0ZWN0Omw9ITEsb25WaWRlb0ZyYW1lOmMsc21vb3RoVGltZTp1PS4yNSxvZmZzZXQ6ZD0hMCxvZmZzZXRTY2FsYXI6bT04MCxleWVzOmY9ITEsZXllc0FzT3JpZ2luOnA9ITAsZGVwdGg6aD0uMTUsZGVidWc6eT0hMSxmYWNlbWVzaDp4LG1ha2VEZWZhdWx0OnZ9LGcpPT57dmFyIHosdztjb25zdCBiPWEudXNlVGhyZWUoKGU9PmUuc2NlbmUpKSxFPWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSksTT1hLnVzZVRocmVlKChlPT5lLnNldCkpLFM9YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSxDPWV8fEUsUD10LnVzZVJlZihudWxsKSxUPXQudXNlUmVmKG51bGwpLFtGXT10LnVzZVN0YXRlKCgoKT0+bmV3IEQuT2JqZWN0M0QpKSxbTF09dC51c2VTdGF0ZSgoKCk9Pm5ldyBELlZlY3RvcjMpKSxbQV09dC51c2VTdGF0ZSgoKCk9Pm5ldyBELlZlY3RvcjMpKSxbX109dC51c2VTdGF0ZSgoKCk9Pm5ldyBELlZlY3RvcjMpKSxbT109dC51c2VTdGF0ZSgoKCk9Pm5ldyBELlZlY3RvcjMpKSxOPXQudXNlQ2FsbGJhY2soKCgpPT57Ri5wYXJlbnQ9Qy5wYXJlbnQ7Y29uc3QgZT1ULmN1cnJlbnQ7aWYoZSl7Y29uc3R7b3V0ZXJSZWY6dCxleWVSaWdodFJlZjpyLGV5ZUxlZnRSZWY6bn09ZTtpZihyLmN1cnJlbnQmJm4uY3VycmVudCl7Y29uc3R7aXJpc0RpclJlZjplfT1yLmN1cnJlbnQse2lyaXNEaXJSZWY6YX09bi5jdXJyZW50O2UuY3VycmVudCYmYS5jdXJyZW50JiZ0LmN1cnJlbnQmJihMLmNvcHkoU3QoZS5jdXJyZW50LG5ldyBELlZlY3RvcjMoMCwwLDApLHQuY3VycmVudCkpLEEuY29weShTdChhLmN1cnJlbnQsbmV3IEQuVmVjdG9yMygwLDAsMCksdC5jdXJyZW50KSksRi5wb3NpdGlvbi5jb3B5KFN0KHQuY3VycmVudCxNdChMLEEpLEMucGFyZW50fHxiKSksXy5jb3B5KFN0KGUuY3VycmVudCxuZXcgRC5WZWN0b3IzKDAsMCwxKSx0LmN1cnJlbnQpKSxPLmNvcHkoU3QoYS5jdXJyZW50LG5ldyBELlZlY3RvcjMoMCwwLDEpLHQuY3VycmVudCkpLEYubG9va0F0KHQuY3VycmVudC5sb2NhbFRvV29ybGQoTXQoXyxPKSkpKX1lbHNlIHQuY3VycmVudCYmKEYucG9zaXRpb24uY29weShTdCh0LmN1cnJlbnQsbmV3IEQuVmVjdG9yMygwLDAsMCksQy5wYXJlbnR8fGIpKSxGLmxvb2tBdCh0LmN1cnJlbnQubG9jYWxUb1dvcmxkKG5ldyBELlZlY3RvcjMoMCwwLDEpKSkpfXJldHVybiBGfSksW0MsQSxPLEwsXyxiLEZdKSxbQl09dC51c2VTdGF0ZSgoKCk9Pm5ldyBELk9iamVjdDNEKSksST10LnVzZUNhbGxiYWNrKChmdW5jdGlvbihlLHQpe2lmKEMpe3ZhciByO2lmKG51bGwhPT0ocj10KSYmdm9pZCAwIT09cnx8KHQ9TigpKSx1PjApe2NvbnN0IHI9MWUtOTtzLmVhc2luZy5kYW1wMyhCLnBvc2l0aW9uLHQucG9zaXRpb24sdSxlLHZvaWQgMCx2b2lkIDAscikscy5lYXNpbmcuZGFtcEUoQi5yb3RhdGlvbix0LnJvdGF0aW9uLHUsZSx2b2lkIDAsdm9pZCAwLHIpfWVsc2UgQi5wb3NpdGlvbi5jb3B5KHQucG9zaXRpb24pLEIucm90YXRpb24uY29weSh0LnJvdGF0aW9uKTtDLnBvc2l0aW9uLmNvcHkoQi5wb3NpdGlvbiksQy5yb3RhdGlvbi5jb3B5KEIucm90YXRpb24pfX0pLFtDLE4sdSxCLnBvc2l0aW9uLEIucm90YXRpb25dKSxbVSxWXT10LnVzZVN0YXRlKCksaj1FdCgpLFc9dC51c2VDYWxsYmFjaygoKGUsdCk9Pntjb25zdCByPW51bGw9PWo/dm9pZCAwOmouZGV0ZWN0Rm9yVmlkZW8oZSx0KTtWKHIpfSksW2pdKTthLnVzZUZyYW1lKCgoZSx0KT0+e2l8fEkodCl9KSk7Y29uc3QgRz10LnVzZU1lbW8oKCgpPT5PYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoRC5FdmVudERpc3BhdGNoZXIucHJvdG90eXBlKSx7ZGV0ZWN0OlcsY29tcHV0ZVRhcmdldDpOLHVwZGF0ZTpJLGZhY2VtZXNoQXBpUmVmOlQsd2ViY2FtQXBpUmVmOlAscGxheTooKT0+e3ZhciBlO251bGw9PShlPVAuY3VycmVudCl8fG51bGw9PShlPWUudmlkZW9UZXh0dXJlQXBpUmVmLmN1cnJlbnQpfHxlLnRleHR1cmUuc291cmNlLmRhdGEucGxheSgpfSxwYXVzZTooKT0+e3ZhciBlO251bGw9PShlPVAuY3VycmVudCl8fG51bGw9PShlPWUudmlkZW9UZXh0dXJlQXBpUmVmLmN1cnJlbnQpfHxlLnRleHR1cmUuc291cmNlLmRhdGEucGF1c2UoKX19KSksW1csTixJXSk7dC51c2VJbXBlcmF0aXZlSGFuZGxlKGcsKCgpPT5HKSxbR10pLHQudXNlRWZmZWN0KCgoKT0+e2NvbnN0IGU9ZT0+e2x8fFcoZS50ZXh0dXJlLnNvdXJjZS5kYXRhLGUudGltZSksYyYmYyhlKX07cmV0dXJuIEcuYWRkRXZlbnRMaXN0ZW5lcihcInZpZGVvRnJhbWVcIixlKSwoKT0+e0cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInZpZGVvRnJhbWVcIixlKX19KSxbRyxXLGosbCxjXSksdC51c2VFZmZlY3QoKCgpPT57aWYodil7Y29uc3QgZT1TKCkuY29udHJvbHM7cmV0dXJuIE0oe2NvbnRyb2xzOkd9KSwoKT0+TSh7Y29udHJvbHM6ZX0pfX0pLFt2LEcsUyxNXSk7Y29uc3QgSD1udWxsPT1VP3ZvaWQgMDpVLmZhY2VMYW5kbWFya3NbMF0sJD1udWxsPT1VfHxudWxsPT0oej1VLmZhY2lhbFRyYW5zZm9ybWF0aW9uTWF0cml4ZXMpP3ZvaWQgMDp6WzBdLHE9bnVsbD09VXx8bnVsbD09KHc9VS5mYWNlQmxlbmRzaGFwZXMpP3ZvaWQgMDp3WzBdO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoQ3QuUHJvdmlkZXIse3ZhbHVlOkd9LG4mJmsuY3JlYXRlRWxlbWVudCh0LlN1c3BlbnNlLHtmYWxsYmFjazpudWxsfSxrLmNyZWF0ZUVsZW1lbnQoUnQse3JlZjpQLGF1dG9zdGFydDpyLHZpZGVvVGV4dHVyZVNyYzpvfSkpLGsuY3JlYXRlRWxlbWVudCh4dCxSLmRlZmF1bHQoe3JlZjpUfSx4LHtwb2ludHM6SCxkZXB0aDpoLGZhY2lhbFRyYW5zZm9ybWF0aW9uTWF0cml4OiQsZmFjZUJsZW5kc2hhcGVzOnEsZXllczpmLGV5ZXNBc09yaWdpbjpwLG9mZnNldDpkLG9mZnNldFNjYWxhcjptLGRlYnVnOnksXCJyb3RhdGlvbi16XCI6TWF0aC5QSSx2aXNpYmxlOnl9KSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoQmFzaWNNYXRlcmlhbFwiLHtzaWRlOkQuRG91YmxlU2lkZX0pKSl9KSksVHQ9KCk9PnQudXNlQ29udGV4dChDdCksUnQ9dC5mb3J3YXJkUmVmKCgoe3ZpZGVvVGV4dHVyZVNyYzplLGF1dG9zdGFydDpyPSEwfSxuKT0+e2NvbnN0IGE9dC51c2VSZWYobnVsbCksbz1UdCgpLGk9cC5zdXNwZW5kKChhc3luYygpPT5lP1Byb21pc2UucmVzb2x2ZShudWxsKTphd2FpdCBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7YXVkaW86ITEsdmlkZW86e2ZhY2luZ01vZGU6XCJ1c2VyXCJ9fSkpLFtlXSk7dC51c2VFZmZlY3QoKCgpPT4oby5kaXNwYXRjaEV2ZW50KHt0eXBlOlwic3RyZWFtXCIsc3RyZWFtOml9KSwoKT0+e251bGw9PWl8fGkuZ2V0VHJhY2tzKCkuZm9yRWFjaCgoZT0+ZS5zdG9wKCkpKSxwLmNsZWFyKFtlXSl9KSksW2ksbyxlXSk7Y29uc3Qgcz10LnVzZU1lbW8oKCgpPT4oe3ZpZGVvVGV4dHVyZUFwaVJlZjphfSkpLFtdKTtyZXR1cm4gdC51c2VJbXBlcmF0aXZlSGFuZGxlKG4sKCgpPT5zKSxbc10pLGsuY3JlYXRlRWxlbWVudCh0LlN1c3BlbnNlLHtmYWxsYmFjazpudWxsfSxrLmNyZWF0ZUVsZW1lbnQoa3Qse3JlZjphLHNyYzplfHxpLHN0YXJ0OnJ9KSl9KSksa3Q9dC5mb3J3YXJkUmVmKCgoe3NyYzplLHN0YXJ0OnJ9LG4pPT57Y29uc3QgYT1wdChlLHtzdGFydDpyfSksbz1hLnNvdXJjZS5kYXRhLGk9VHQoKSxzPXQudXNlQ2FsbGJhY2soKGU9PntpLmRpc3BhdGNoRXZlbnQoe3R5cGU6XCJ2aWRlb0ZyYW1lXCIsdGV4dHVyZTphLHRpbWU6ZX0pfSksW2EsaV0pO0Z0KG8scyk7Y29uc3QgbD10LnVzZU1lbW8oKCgpPT4oe3RleHR1cmU6YX0pKSxbYV0pO3JldHVybiB0LnVzZUltcGVyYXRpdmVIYW5kbGUobiwoKCk9PmwpLFtsXSksay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCl9KSksRnQ9KGUscik9Pnt0LnVzZUVmZmVjdCgoKCk9PntpZighZXx8IWUucmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjaylyZXR1cm47bGV0IHQ7cmV0dXJuIGUucmVxdWVzdFZpZGVvRnJhbWVDYWxsYmFjaygoZnVuY3Rpb24gbiguLi5hKXtyKC4uLmEpLHQ9ZS5yZXF1ZXN0VmlkZW9GcmFtZUNhbGxiYWNrKG4pfSkpLCgpPT5lLmNhbmNlbFZpZGVvRnJhbWVDYWxsYmFjayh0KX0pLFtlLHJdKX0sRHQ9ay5jcmVhdGVDb250ZXh0KG51bGwpO2Z1bmN0aW9uIEx0KCl7cmV0dXJuIGsudXNlQ29udGV4dChEdCl9ZnVuY3Rpb24gQXQoe3BvaW50czplPTUwfSl7Y29uc3R7cGF0aDp0fT1MdCgpLFtyLG5dPWsudXNlU3RhdGUoW10pLFthXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuTWVzaEJhc2ljTWF0ZXJpYWwoe2NvbG9yOlwiYmxhY2tcIn0pKSksW29dPWsudXNlU3RhdGUoKCgpPT5uZXcgRC5TcGhlcmVHZW9tZXRyeSguMDI1LDE2LDE2KSkpLGk9ay51c2VSZWYoW10pO3JldHVybiBrLnVzZUVmZmVjdCgoKCk9Pnt0LmN1cnZlcyE9PWkuY3VycmVudCYmKG4odC5nZXRQb2ludHMoZSkpLGkuY3VycmVudD10LmN1cnZlcyl9KSksay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxyLm1hcCgoKGUsdCk9PmsuY3JlYXRlRWxlbWVudChcIm1lc2hcIix7a2V5OnQsbWF0ZXJpYWw6YSxnZW9tZXRyeTpvLHBvc2l0aW9uOltlLngsZS55LGUuel19KSkpKX1jb25zdCBfdD1rLmZvcndhcmRSZWYoKCh7Y2hpbGRyZW46ZSxjdXJ2ZXM6dD1bXSxvYmplY3Q6cixkZWJ1ZzpuPSExLHNtb290aDpvPSExLGZvY3VzOmksb2Zmc2V0OmwsZXBzOmM9MWUtNSxkYW1waW5nOnU9LjEsZm9jdXNEYW1waW5nOmQ9LjEsbWF4U3BlZWQ6bT0xLzAsLi4uZn0scCk9Pntjb25zdHtjYW1lcmE6aH09YS51c2VUaHJlZSgpLHk9ay51c2VSZWYoKSxbeF09ay51c2VTdGF0ZSgoKCk9Pm5ldyBELkN1cnZlUGF0aCkpLHY9ay51c2VSZWYobnVsbCE9bD9sOjApLGc9ay51c2VNZW1vKCgoKT0+KHtmb2N1czppLG9iamVjdDoobnVsbD09cj92b2lkIDA6ci5jdXJyZW50KWluc3RhbmNlb2YgRC5PYmplY3QzRD9yOntjdXJyZW50Omh9LHBhdGg6eCxjdXJyZW50OnYuY3VycmVudCxvZmZzZXQ6di5jdXJyZW50LHBvaW50Om5ldyBELlZlY3RvcjMsdGFuZ2VudDpuZXcgRC5WZWN0b3IzLG5leHQ6bmV3IEQuVmVjdG9yM30pKSxbaSxyXSk7ay51c2VMYXlvdXRFZmZlY3QoKCgpPT57dmFyIGU7eC5jdXJ2ZXM9W107Y29uc3Qgcj10Lmxlbmd0aD4wP3Q6bnVsbD09KGU9eS5jdXJyZW50KT92b2lkIDA6ZS5fX3IzZi5vYmplY3RzO2Zvcih2YXIgbj0wO248ci5sZW5ndGg7bisrKXguYWRkKHJbbl0pO2lmKG8pe2NvbnN0IGU9eC5nZXRQb2ludHMoXCJudW1iZXJcIj09dHlwZW9mIG8/bzoxKSx0PW5ldyBELkNhdG11bGxSb21DdXJ2ZTMoZSk7eC5jdXJ2ZXM9W3RdfXgudXBkYXRlQXJjTGVuZ3RocygpfSkpLGsudXNlSW1wZXJhdGl2ZUhhbmRsZShwLCgoKT0+eS5jdXJyZW50KSxbXSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57di5jdXJyZW50PXMubWlzYy5yZXBlYXQodi5jdXJyZW50LDEpfSksW2xdKTtsZXQgej0wO2NvbnN0W3ddPWsudXNlU3RhdGUoKCgpPT5uZXcgRC5WZWN0b3IzKSk7cmV0dXJuIGEudXNlRnJhbWUoKChlLHQpPT57aWYoej1nLm9mZnNldCxzLmVhc2luZy5kYW1wKHYsXCJjdXJyZW50XCIsdm9pZCAwIT09bD9sOmcuY3VycmVudCx1LHQsbSx2b2lkIDAsYyksZy5vZmZzZXQ9cy5taXNjLnJlcGVhdCh2LmN1cnJlbnQsMSkseC5nZXRDdXJ2ZUxlbmd0aHMoKS5sZW5ndGg+MCl7eC5nZXRQb2ludEF0KGcub2Zmc2V0LGcucG9pbnQpLHguZ2V0VGFuZ2VudEF0KGcub2Zmc2V0LGcudGFuZ2VudCkubm9ybWFsaXplKCkseC5nZXRQb2ludEF0KHMubWlzYy5yZXBlYXQodi5jdXJyZW50LSh6LWcub2Zmc2V0KSwxKSxnLm5leHQpO2NvbnN0IGU9KG51bGw9PXI/dm9pZCAwOnIuY3VycmVudClpbnN0YW5jZW9mIEQuT2JqZWN0M0Q/ci5jdXJyZW50Omg7ZS5wb3NpdGlvbi5jb3B5KGcucG9pbnQpLGkmJnMuZWFzaW5nLmRhbXBMb29rQXQoZSwoZT0+KG51bGw9PWU/dm9pZCAwOmUuY3VycmVudClpbnN0YW5jZW9mIEQuT2JqZWN0M0QpKGkpP2kuY3VycmVudC5nZXRXb3JsZFBvc2l0aW9uKHcpOmksZCx0LG0sdm9pZCAwLGMpfX0pKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLFIuZGVmYXVsdCh7cmVmOnl9LGYpLGsuY3JlYXRlRWxlbWVudChEdC5Qcm92aWRlcix7dmFsdWU6Z30sZSxuJiZrLmNyZWF0ZUVsZW1lbnQoQXQsbnVsbCkpKX0pKTtmdW5jdGlvbiBPdCh7ZGVmYXVsdFNjZW5lOmUsZGVmYXVsdENhbWVyYTp0LHJlbmRlclByaW9yaXR5OnI9MX0pe2NvbnN0e2dsOm4sc2NlbmU6byxjYW1lcmE6aX09YS51c2VUaHJlZSgpO2xldCBzO3JldHVybiBhLnVzZUZyYW1lKCgoKT0+e3M9bi5hdXRvQ2xlYXIsMT09PXImJihuLmF1dG9DbGVhcj0hMCxuLnJlbmRlcihlLHQpKSxuLmF1dG9DbGVhcj0hMSxuLmNsZWFyRGVwdGgoKSxuLnJlbmRlcihvLGkpLG4uYXV0b0NsZWFyPXN9KSxyKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtvblBvaW50ZXJPdmVyOigpPT5udWxsfSl9ZnVuY3Rpb24gTnQoe2NoaWxkcmVuOmUscmVuZGVyUHJpb3JpdHk6dD0xfSl7Y29uc3R7c2NlbmU6cixjYW1lcmE6bn09YS51c2VUaHJlZSgpLFtvXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuU2NlbmUpKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxhLmNyZWF0ZVBvcnRhbChrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLGUsay5jcmVhdGVFbGVtZW50KE90LHtkZWZhdWx0U2NlbmU6cixkZWZhdWx0Q2FtZXJhOm4scmVuZGVyUHJpb3JpdHk6dH0pKSxvLHtldmVudHM6e3ByaW9yaXR5OnQrMX19KSl9Y29uc3QgQnQ9ay5jcmVhdGVDb250ZXh0KHt9KSxJdD0oKT0+ay51c2VDb250ZXh0KEJ0KSxVdD0yKk1hdGguUEksVnQ9bmV3IG4uT2JqZWN0M0QsanQ9bmV3IG4uTWF0cml4NCxbV3QsR3RdPVtuZXcgbi5RdWF0ZXJuaW9uLG5ldyBuLlF1YXRlcm5pb25dLEh0PW5ldyBuLlZlY3RvcjMsJHQ9bmV3IG4uVmVjdG9yMyxxdD1cIiNmMGYwZjBcIixYdD1cIiM5OTlcIixZdD1cImJsYWNrXCIsS3Q9XCJibGFja1wiLFF0PVtcIlJpZ2h0XCIsXCJMZWZ0XCIsXCJUb3BcIixcIkJvdHRvbVwiLFwiRnJvbnRcIixcIkJhY2tcIl0sWnQ9ZT0+bmV3IG4uVmVjdG9yMyguLi5lKS5tdWx0aXBseVNjYWxhciguMzgpLEp0PVtbMSwxLDFdLFsxLDEsLTFdLFsxLC0xLDFdLFsxLC0xLC0xXSxbLTEsMSwxXSxbLTEsMSwtMV0sWy0xLC0xLDFdLFstMSwtMSwtMV1dLm1hcChadCksZXI9Wy4yNSwuMjUsLjI1XSx0cj1bWzEsMSwwXSxbMSwwLDFdLFsxLDAsLTFdLFsxLC0xLDBdLFswLDEsMV0sWzAsMSwtMV0sWzAsLTEsMV0sWzAsLTEsLTFdLFstMSwxLDBdLFstMSwwLDFdLFstMSwwLC0xXSxbLTEsLTEsMF1dLm1hcChadCkscnI9dHIubWFwKChlPT5lLnRvQXJyYXkoKS5tYXAoKGU9PjA9PWU/LjU6LjI1KSkpKSxucj0oe2hvdmVyOmUsaW5kZXg6dCxmb250OnI9XCIyMHB4IEludGVyIHZhciwgQXJpYWwsIHNhbnMtc2VyaWZcIixmYWNlczpvPVF0LGNvbG9yOmk9cXQsaG92ZXJDb2xvcjpzPVh0LHRleHRDb2xvcjpsPVl0LHN0cm9rZUNvbG9yOmM9S3Qsb3BhY2l0eTp1PTF9KT0+e2NvbnN0IGQ9YS51c2VUaHJlZSgoZT0+ZS5nbCkpLG09ay51c2VNZW1vKCgoKT0+e2NvbnN0IGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtlLndpZHRoPTEyOCxlLmhlaWdodD0xMjg7Y29uc3QgYT1lLmdldENvbnRleHQoXCIyZFwiKTtyZXR1cm4gYS5maWxsU3R5bGU9aSxhLmZpbGxSZWN0KDAsMCxlLndpZHRoLGUuaGVpZ2h0KSxhLnN0cm9rZVN0eWxlPWMsYS5zdHJva2VSZWN0KDAsMCxlLndpZHRoLGUuaGVpZ2h0KSxhLmZvbnQ9cixhLnRleHRBbGlnbj1cImNlbnRlclwiLGEuZmlsbFN0eWxlPWwsYS5maWxsVGV4dChvW3RdLnRvVXBwZXJDYXNlKCksNjQsNzYpLG5ldyBuLkNhbnZhc1RleHR1cmUoZSl9KSxbdCxvLHIsaSxsLGNdKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwibWVzaEJhc2ljTWF0ZXJpYWxcIix7bWFwOm0sXCJtYXAtYW5pc290cm9weVwiOmQuY2FwYWJpbGl0aWVzLmdldE1heEFuaXNvdHJvcHkoKXx8MSxhdHRhY2g6YG1hdGVyaWFsLSR7dH1gLGNvbG9yOmU/czpcIndoaXRlXCIsdHJhbnNwYXJlbnQ6ITAsb3BhY2l0eTp1fSl9LGFyPWU9Pntjb25zdHt0d2VlbkNhbWVyYTp0fT1JdCgpLFtyLG5dPWsudXNlU3RhdGUobnVsbCk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIix7b25Qb2ludGVyT3V0OmU9PntlLnN0b3BQcm9wYWdhdGlvbigpLG4obnVsbCl9LG9uUG9pbnRlck1vdmU6ZT0+e2Uuc3RvcFByb3BhZ2F0aW9uKCksbihNYXRoLmZsb29yKGUuZmFjZUluZGV4LzIpKX0sb25DbGljazplLm9uQ2xpY2t8fChlPT57ZS5zdG9wUHJvcGFnYXRpb24oKSx0KGUuZmFjZS5ub3JtYWwpfSl9LFsuLi5BcnJheSg2KV0ubWFwKCgodCxuKT0+ay5jcmVhdGVFbGVtZW50KG5yLFIuZGVmYXVsdCh7a2V5Om4saW5kZXg6bixob3ZlcjpyPT09bn0sZSkpKSksay5jcmVhdGVFbGVtZW50KFwiYm94R2VvbWV0cnlcIixudWxsKSl9LG9yPSh7b25DbGljazplLGRpbWVuc2lvbnM6dCxwb3NpdGlvbjpyLGhvdmVyQ29sb3I6bj1YdH0pPT57Y29uc3R7dHdlZW5DYW1lcmE6YX09SXQoKSxbbyxpXT1rLnVzZVN0YXRlKCExKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHtzY2FsZToxLjAxLHBvc2l0aW9uOnIsb25Qb2ludGVyT3ZlcjplPT57ZS5zdG9wUHJvcGFnYXRpb24oKSxpKCEwKX0sb25Qb2ludGVyT3V0OmU9PntlLnN0b3BQcm9wYWdhdGlvbigpLGkoITEpfSxvbkNsaWNrOmV8fChlPT57ZS5zdG9wUHJvcGFnYXRpb24oKSxhKHIpfSl9LGsuY3JlYXRlRWxlbWVudChcIm1lc2hCYXNpY01hdGVyaWFsXCIse2NvbG9yOm8/bjpcIndoaXRlXCIsdHJhbnNwYXJlbnQ6ITAsb3BhY2l0eTouNix2aXNpYmxlOm99KSxrLmNyZWF0ZUVsZW1lbnQoXCJib3hHZW9tZXRyeVwiLHthcmdzOnR9KSl9O2Z1bmN0aW9uIGlyKHtzY2FsZTplPVsuOCwuMDUsLjA1XSxjb2xvcjp0LHJvdGF0aW9uOnJ9KXtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7cm90YXRpb246cn0say5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHtwb3NpdGlvbjpbLjQsMCwwXX0say5jcmVhdGVFbGVtZW50KFwiYm94R2VvbWV0cnlcIix7YXJnczplfSksay5jcmVhdGVFbGVtZW50KFwibWVzaEJhc2ljTWF0ZXJpYWxcIix7Y29sb3I6dCx0b25lTWFwcGVkOiExfSkpKX1mdW5jdGlvbiBzcih7b25DbGljazplLGZvbnQ6dCxkaXNhYmxlZDpyLGFyY1N0eWxlOm8sbGFiZWw6aSxsYWJlbENvbG9yOnMsYXhpc0hlYWRTY2FsZTpsPTEsLi4uY30pe2NvbnN0IHU9YS51c2VUaHJlZSgoZT0+ZS5nbCkpLGQ9ay51c2VNZW1vKCgoKT0+e2NvbnN0IGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtlLndpZHRoPTY0LGUuaGVpZ2h0PTY0O2NvbnN0IHI9ZS5nZXRDb250ZXh0KFwiMmRcIik7cmV0dXJuIHIuYmVnaW5QYXRoKCksci5hcmMoMzIsMzIsMTYsMCwyKk1hdGguUEkpLHIuY2xvc2VQYXRoKCksci5maWxsU3R5bGU9byxyLmZpbGwoKSxpJiYoci5mb250PXQsci50ZXh0QWxpZ249XCJjZW50ZXJcIixyLmZpbGxTdHlsZT1zLHIuZmlsbFRleHQoaSwzMiw0MSkpLG5ldyBuLkNhbnZhc1RleHR1cmUoZSl9KSxbbyxpLHMsdF0pLFttLGZdPWsudXNlU3RhdGUoITEpLHA9KGk/MTouNzUpKihtPzEuMjoxKSpsO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoXCJzcHJpdGVcIixSLmRlZmF1bHQoe3NjYWxlOnAsb25Qb2ludGVyT3ZlcjpyP3ZvaWQgMDplPT57ZS5zdG9wUHJvcGFnYXRpb24oKSxmKCEwKX0sb25Qb2ludGVyT3V0OnI/dm9pZCAwOmV8fChlPT57ZS5zdG9wUHJvcGFnYXRpb24oKSxmKCExKX0pfSxjKSxrLmNyZWF0ZUVsZW1lbnQoXCJzcHJpdGVNYXRlcmlhbFwiLHttYXA6ZCxcIm1hcC1hbmlzb3Ryb3B5XCI6dS5jYXBhYmlsaXRpZXMuZ2V0TWF4QW5pc290cm9weSgpfHwxLGFscGhhVGVzdDouMyxvcGFjaXR5Omk/MTouNzUsdG9uZU1hcHBlZDohMX0pKX1jb25zdCBscj1TZSh7Y2VsbFNpemU6LjUsc2VjdGlvblNpemU6MSxmYWRlRGlzdGFuY2U6MTAwLGZhZGVTdHJlbmd0aDoxLGNlbGxUaGlja25lc3M6LjUsc2VjdGlvblRoaWNrbmVzczoxLGNlbGxDb2xvcjpuZXcgRC5Db2xvcixzZWN0aW9uQ29sb3I6bmV3IEQuQ29sb3IsaW5maW5pdGVHcmlkOiExLGZvbGxvd0NhbWVyYTohMSx3b3JsZENhbVByb2pQb3NpdGlvbjpuZXcgRC5WZWN0b3IzLHdvcmxkUGxhbmVQb3NpdGlvbjpuZXcgRC5WZWN0b3IzfSxcIlxcbiAgICB2YXJ5aW5nIHZlYzMgbG9jYWxQb3NpdGlvbjtcXG4gICAgdmFyeWluZyB2ZWM0IHdvcmxkUG9zaXRpb247XFxuXFxuICAgIHVuaWZvcm0gdmVjMyB3b3JsZENhbVByb2pQb3NpdGlvbjtcXG4gICAgdW5pZm9ybSB2ZWMzIHdvcmxkUGxhbmVQb3NpdGlvbjtcXG4gICAgdW5pZm9ybSBmbG9hdCBmYWRlRGlzdGFuY2U7XFxuICAgIHVuaWZvcm0gYm9vbCBpbmZpbml0ZUdyaWQ7XFxuICAgIHVuaWZvcm0gYm9vbCBmb2xsb3dDYW1lcmE7XFxuXFxuICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICBsb2NhbFBvc2l0aW9uID0gcG9zaXRpb24ueHp5O1xcbiAgICAgIGlmIChpbmZpbml0ZUdyaWQpIGxvY2FsUG9zaXRpb24gKj0gMS4wICsgZmFkZURpc3RhbmNlO1xcbiAgICAgIFxcbiAgICAgIHdvcmxkUG9zaXRpb24gPSBtb2RlbE1hdHJpeCAqIHZlYzQobG9jYWxQb3NpdGlvbiwgMS4wKTtcXG4gICAgICBpZiAoZm9sbG93Q2FtZXJhKSB7XFxuICAgICAgICB3b3JsZFBvc2l0aW9uLnh5eiArPSAod29ybGRDYW1Qcm9qUG9zaXRpb24gLSB3b3JsZFBsYW5lUG9zaXRpb24pO1xcbiAgICAgICAgbG9jYWxQb3NpdGlvbiA9IChpbnZlcnNlKG1vZGVsTWF0cml4KSAqIHdvcmxkUG9zaXRpb24pLnh5ejtcXG4gICAgICB9XFxuXFxuICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmlld01hdHJpeCAqIHdvcmxkUG9zaXRpb247XFxuICAgIH1cXG4gIFwiLGBcXG4gICAgdmFyeWluZyB2ZWMzIGxvY2FsUG9zaXRpb247XFxuICAgIHZhcnlpbmcgdmVjNCB3b3JsZFBvc2l0aW9uO1xcblxcbiAgICB1bmlmb3JtIHZlYzMgd29ybGRDYW1Qcm9qUG9zaXRpb247XFxuICAgIHVuaWZvcm0gZmxvYXQgY2VsbFNpemU7XFxuICAgIHVuaWZvcm0gZmxvYXQgc2VjdGlvblNpemU7XFxuICAgIHVuaWZvcm0gdmVjMyBjZWxsQ29sb3I7XFxuICAgIHVuaWZvcm0gdmVjMyBzZWN0aW9uQ29sb3I7XFxuICAgIHVuaWZvcm0gZmxvYXQgZmFkZURpc3RhbmNlO1xcbiAgICB1bmlmb3JtIGZsb2F0IGZhZGVTdHJlbmd0aDtcXG4gICAgdW5pZm9ybSBmbG9hdCBjZWxsVGhpY2tuZXNzO1xcbiAgICB1bmlmb3JtIGZsb2F0IHNlY3Rpb25UaGlja25lc3M7XFxuXFxuICAgIGZsb2F0IGdldEdyaWQoZmxvYXQgc2l6ZSwgZmxvYXQgdGhpY2tuZXNzKSB7XFxuICAgICAgdmVjMiByID0gbG9jYWxQb3NpdGlvbi54eiAvIHNpemU7XFxuICAgICAgdmVjMiBncmlkID0gYWJzKGZyYWN0KHIgLSAwLjUpIC0gMC41KSAvIGZ3aWR0aChyKTtcXG4gICAgICBmbG9hdCBsaW5lID0gbWluKGdyaWQueCwgZ3JpZC55KSArIDEuMCAtIHRoaWNrbmVzcztcXG4gICAgICByZXR1cm4gMS4wIC0gbWluKGxpbmUsIDEuMCk7XFxuICAgIH1cXG5cXG4gICAgdm9pZCBtYWluKCkge1xcbiAgICAgIGZsb2F0IGcxID0gZ2V0R3JpZChjZWxsU2l6ZSwgY2VsbFRoaWNrbmVzcyk7XFxuICAgICAgZmxvYXQgZzIgPSBnZXRHcmlkKHNlY3Rpb25TaXplLCBzZWN0aW9uVGhpY2tuZXNzKTtcXG5cXG4gICAgICBmbG9hdCBkaXN0ID0gZGlzdGFuY2Uod29ybGRDYW1Qcm9qUG9zaXRpb24sIHdvcmxkUG9zaXRpb24ueHl6KTtcXG4gICAgICBmbG9hdCBkID0gMS4wIC0gbWluKGRpc3QgLyBmYWRlRGlzdGFuY2UsIDEuMCk7XFxuICAgICAgdmVjMyBjb2xvciA9IG1peChjZWxsQ29sb3IsIHNlY3Rpb25Db2xvciwgbWluKDEuMCwgc2VjdGlvblRoaWNrbmVzcyAqIGcyKSk7XFxuXFxuICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgKGcxICsgZzIpICogcG93KGQsIGZhZGVTdHJlbmd0aCkpO1xcbiAgICAgIGdsX0ZyYWdDb2xvci5hID0gbWl4KDAuNzUgKiBnbF9GcmFnQ29sb3IuYSwgZ2xfRnJhZ0NvbG9yLmEsIGcyKTtcXG4gICAgICBpZiAoZ2xfRnJhZ0NvbG9yLmEgPD0gMC4wKSBkaXNjYXJkO1xcblxcbiAgICAgICNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cXG4gICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgICB9XFxuICBgKSxjcj1rLmZvcndhcmRSZWYoKCh7YXJnczplLGNlbGxDb2xvcjp0PVwiIzAwMDAwMFwiLHNlY3Rpb25Db2xvcjpyPVwiIzIwODBmZlwiLGNlbGxTaXplOm49LjUsc2VjdGlvblNpemU6bz0xLGZvbGxvd0NhbWVyYTppPSExLGluZmluaXRlR3JpZDpzPSExLGZhZGVEaXN0YW5jZTpsPTEwMCxmYWRlU3RyZW5ndGg6Yz0xLGNlbGxUaGlja25lc3M6dT0uNSxzZWN0aW9uVGhpY2tuZXNzOmQ9MSxzaWRlOm09RC5CYWNrU2lkZSwuLi5mfSxwKT0+e2EuZXh0ZW5kKHtHcmlkTWF0ZXJpYWw6bHJ9KTtjb25zdCBoPWsudXNlUmVmKG51bGwpLHk9bmV3IEQuUGxhbmUseD1uZXcgRC5WZWN0b3IzKDAsMSwwKSx2PW5ldyBELlZlY3RvcjMoMCwwLDApO2EudXNlRnJhbWUoKGU9Pnt5LnNldEZyb21Ob3JtYWxBbmRDb3BsYW5hclBvaW50KHgsdikuYXBwbHlNYXRyaXg0KGguY3VycmVudC5tYXRyaXhXb3JsZCk7Y29uc3QgdD1oLmN1cnJlbnQubWF0ZXJpYWwscj10LnVuaWZvcm1zLndvcmxkQ2FtUHJvalBvc2l0aW9uLG49dC51bmlmb3Jtcy53b3JsZFBsYW5lUG9zaXRpb247eS5wcm9qZWN0UG9pbnQoZS5jYW1lcmEucG9zaXRpb24sci52YWx1ZSksbi52YWx1ZS5zZXQoMCwwLDApLmFwcGx5TWF0cml4NChoLmN1cnJlbnQubWF0cml4V29ybGQpfSkpO2NvbnN0IGc9e2NlbGxTaXplOm4sc2VjdGlvblNpemU6byxjZWxsQ29sb3I6dCxzZWN0aW9uQ29sb3I6cixjZWxsVGhpY2tuZXNzOnUsc2VjdGlvblRoaWNrbmVzczpkfSx6PXtmYWRlRGlzdGFuY2U6bCxmYWRlU3RyZW5ndGg6YyxpbmZpbml0ZUdyaWQ6cyxmb2xsb3dDYW1lcmE6aX07cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIixSLmRlZmF1bHQoe3JlZjpBLmRlZmF1bHQoW2gscF0pLGZydXN0dW1DdWxsZWQ6ITF9LGYpLGsuY3JlYXRlRWxlbWVudChcImdyaWRNYXRlcmlhbFwiLFIuZGVmYXVsdCh7dHJhbnNwYXJlbnQ6ITAsXCJleHRlbnNpb25zLWRlcml2YXRpdmVzXCI6ITAsc2lkZTptfSxnLHopKSxrLmNyZWF0ZUVsZW1lbnQoXCJwbGFuZUdlb21ldHJ5XCIse2FyZ3M6ZX0pKX0pKTtmdW5jdGlvbiB1cihlLHtwYXRoOnR9KXtjb25zdFtyXT1hLnVzZUxvYWRlcihuLkN1YmVUZXh0dXJlTG9hZGVyLFtlXSwoZT0+ZS5zZXRQYXRoKHQpKSk7cmV0dXJuIHJ9ZnVuY3Rpb24gZHIoZSl7cmV0dXJuIGEudXNlTG9hZGVyKGQuRkJYTG9hZGVyLGUpfXVyLnByZWxvYWQ9KGUse3BhdGg6dH0pPT5hLnVzZUxvYWRlci5wcmVsb2FkKG4uQ3ViZVRleHR1cmVMb2FkZXIsW2VdLChlPT5lLnNldFBhdGgodCkpKSxkci5wcmVsb2FkPWU9PmEudXNlTG9hZGVyLnByZWxvYWQoZC5GQlhMb2FkZXIsZSksZHIuY2xlYXI9ZT0+YS51c2VMb2FkZXIuY2xlYXIoZC5GQlhMb2FkZXIsZSk7Y29uc3QgbXI9XCJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvcG1uZHJzL2RyZWktYXNzZXRzQG1hc3RlclwiO2Z1bmN0aW9uIGZyKGUscj1gJHttcn0vYmFzaXMvYCl7Y29uc3Qgbj1hLnVzZVRocmVlKChlPT5lLmdsKSksbz1hLnVzZUxvYWRlcihkLktUWDJMb2FkZXIsQ2UoZSk/T2JqZWN0LnZhbHVlcyhlKTplLChlPT57ZS5kZXRlY3RTdXBwb3J0KG4pLGUuc2V0VHJhbnNjb2RlclBhdGgocil9KSk7aWYodC51c2VFZmZlY3QoKCgpPT57KEFycmF5LmlzQXJyYXkobyk/bzpbb10pLmZvckVhY2gobi5pbml0VGV4dHVyZSl9KSxbbixvXSksQ2UoZSkpe2NvbnN0IHQ9T2JqZWN0LmtleXMoZSkscj17fTtyZXR1cm4gdC5mb3JFYWNoKChlPT5PYmplY3QuYXNzaWduKHIse1tlXTpvW3QuaW5kZXhPZihlKV19KSkpLHJ9cmV0dXJuIG99ZnVuY3Rpb24gcHIoZSx0KXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2UodCk6bnVsbCE9ZSYmKGUuY3VycmVudD10KX1mci5wcmVsb2FkPShlLHQ9YCR7bXJ9L2Jhc2lzL2ApPT5hLnVzZUxvYWRlci5wcmVsb2FkKGQuS1RYMkxvYWRlcixlLChlPT57ZS5zZXRUcmFuc2NvZGVyUGF0aCh0KX0pKSxmci5jbGVhcj1lPT5hLnVzZUxvYWRlci5jbGVhcihkLktUWDJMb2FkZXIsZSk7ZnVuY3Rpb24gaHIoZSx0LC4uLnIpe2NvbnN0IG49ay51c2VSZWYoKSxvPWEudXNlVGhyZWUoKGU9PmUuc2NlbmUpKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57bGV0IGE7aWYoZSYmbnVsbCE9ZSYmZS5jdXJyZW50JiZ0JiYobi5jdXJyZW50PWE9bmV3IHQoZS5jdXJyZW50LC4uLnIpKSxhKXJldHVybiBhLnRyYXZlcnNlKChlPT5lLnJheWNhc3Q9KCk9Pm51bGwpKSxvLmFkZChhKSwoKT0+e24uY3VycmVudD12b2lkIDAsby5yZW1vdmUoYSksbnVsbD09YS5kaXNwb3NlfHxhLmRpc3Bvc2UoKX19KSxbbyx0LGUsLi4ucl0pLGEudXNlRnJhbWUoKCgpPT57dmFyIGU7bnVsbD09KGU9bi5jdXJyZW50KXx8bnVsbD09ZS51cGRhdGV8fGUudXBkYXRlKCl9KSksbn1jb25zdCB5cj1lPT5lLmlzTWVzaDtjb25zdCB4cj1rLmZvcndhcmRSZWYoKCh7ZW5hYmxlZDplPSEwLGZpcnN0SGl0T25seTp0PSExLGNoaWxkcmVuOnIsc3RyYXRlZ3k6bz1FLlNBSCx2ZXJib3NlOmk9ITEsc2V0Qm91bmRpbmdCb3g6cz0hMCxtYXhEZXB0aDpsPTQwLG1heExlYWZUcmlzOmM9MTAsLi4udX0sZCk9Pntjb25zdCBtPWsudXNlUmVmKG51bGwpLGY9YS51c2VUaHJlZSgoZT0+ZS5yYXljYXN0ZXIpKTtyZXR1cm4gay51c2VJbXBlcmF0aXZlSGFuZGxlKGQsKCgpPT5tLmN1cnJlbnQpLFtdKSxrLnVzZUVmZmVjdCgoKCk9PntpZihlKXtjb25zdCBlPXtzdHJhdGVneTpvLHZlcmJvc2U6aSxzZXRCb3VuZGluZ0JveDpzLG1heERlcHRoOmwsbWF4TGVhZlRyaXM6Y30scj1tLmN1cnJlbnQ7cmV0dXJuIGYuZmlyc3RIaXRPbmx5PXQsci50cmF2ZXJzZSgodD0+e3lyKHQpJiYhdC5nZW9tZXRyeS5ib3VuZHNUcmVlJiZ0LnJheWNhc3Q9PT1uLk1lc2gucHJvdG90eXBlLnJheWNhc3QmJih0LnJheWNhc3Q9RS5hY2NlbGVyYXRlZFJheWNhc3QsdC5nZW9tZXRyeS5jb21wdXRlQm91bmRzVHJlZT1FLmNvbXB1dGVCb3VuZHNUcmVlLHQuZ2VvbWV0cnkuZGlzcG9zZUJvdW5kc1RyZWU9RS5kaXNwb3NlQm91bmRzVHJlZSx0Lmdlb21ldHJ5LmNvbXB1dGVCb3VuZHNUcmVlKGUpKX0pKSwoKT0+e2RlbGV0ZSBmLmZpcnN0SGl0T25seSxyLnRyYXZlcnNlKChlPT57eXIoZSkmJmUuZ2VvbWV0cnkuYm91bmRzVHJlZSYmKGUuZ2VvbWV0cnkuZGlzcG9zZUJvdW5kc1RyZWUoKSxlLnJheWNhc3Q9bi5NZXNoLnByb3RvdHlwZS5yYXljYXN0KX0pKX19fSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsUi5kZWZhdWx0KHtyZWY6bX0sdSkscil9KSk7ZnVuY3Rpb24gdnIoZSl7Y29uc3QgdD1rLnVzZVJlZihudWxsKSxyPWsudXNlUmVmKCExKSxuPWsudXNlUmVmKCExKSxvPWsudXNlUmVmKGUpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PntvLmN1cnJlbnQ9ZX0pLFtlXSksay51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT10LmN1cnJlbnQ7aWYoZSl7Y29uc3QgdD1hLmFkZEVmZmVjdCgoKCk9PihyLmN1cnJlbnQ9ITEsITApKSksaT1lLm9uQmVmb3JlUmVuZGVyO2Uub25CZWZvcmVSZW5kZXI9KCk9PnIuY3VycmVudD0hMDtjb25zdCBzPWEuYWRkQWZ0ZXJFZmZlY3QoKCgpPT4oci5jdXJyZW50IT09bi5jdXJyZW50JiYobnVsbD09by5jdXJyZW50fHxvLmN1cnJlbnQobi5jdXJyZW50PXIuY3VycmVudCkpLCEwKSkpO3JldHVybigpPT57ZS5vbkJlZm9yZVJlbmRlcj1pLHQoKSxzKCl9fX0pLFtdKSx0fWNvbnN0IGdyPVwiXFxuI2lmIGRlZmluZWQoIFVTRV9FTlZNQVAgKSB8fCBkZWZpbmVkKCBESVNUQU5DRSApIHx8IGRlZmluZWQgKCBVU0VfU0hBRE9XTUFQIClcXG4gIHZlYzQgd29ybGRQb3NpdGlvbiA9IG1vZGVsTWF0cml4ICogdmVjNCggdHJhbnNmb3JtZWQsIDEuMCApO1xcbiAgI2lmZGVmIEJPWF9QUk9KRUNURURfRU5WX01BUFxcbiAgICB2V29ybGRQb3NpdGlvbiA9IHdvcmxkUG9zaXRpb24ueHl6O1xcbiAgI2VuZGlmXFxuI2VuZGlmXFxuXCIsenI9XCJcXG4jaWZkZWYgQk9YX1BST0pFQ1RFRF9FTlZfTUFQXFxuICB1bmlmb3JtIHZlYzMgZW52TWFwU2l6ZTtcXG4gIHVuaWZvcm0gdmVjMyBlbnZNYXBQb3NpdGlvbjtcXG4gIHZhcnlpbmcgdmVjMyB2V29ybGRQb3NpdGlvbjtcXG4gICAgXFxuICB2ZWMzIHBhcmFsbGF4Q29ycmVjdE5vcm1hbCggdmVjMyB2LCB2ZWMzIGN1YmVTaXplLCB2ZWMzIGN1YmVQb3MgKSB7XFxuICAgIHZlYzMgbkRpciA9IG5vcm1hbGl6ZSggdiApO1xcbiAgICB2ZWMzIHJibWF4ID0gKCAuNSAqIGN1YmVTaXplICsgY3ViZVBvcyAtIHZXb3JsZFBvc2l0aW9uICkgLyBuRGlyO1xcbiAgICB2ZWMzIHJibWluID0gKCAtLjUgKiBjdWJlU2l6ZSArIGN1YmVQb3MgLSB2V29ybGRQb3NpdGlvbiApIC8gbkRpcjtcXG4gICAgdmVjMyByYm1pbm1heDtcXG4gICAgcmJtaW5tYXgueCA9ICggbkRpci54ID4gMC4gKSA/IHJibWF4LnggOiByYm1pbi54O1xcbiAgICByYm1pbm1heC55ID0gKCBuRGlyLnkgPiAwLiApID8gcmJtYXgueSA6IHJibWluLnk7XFxuICAgIHJibWlubWF4LnogPSAoIG5EaXIueiA+IDAuICkgPyByYm1heC56IDogcmJtaW4uejtcXG4gICAgZmxvYXQgY29ycmVjdGlvbiA9IG1pbiggbWluKCByYm1pbm1heC54LCByYm1pbm1heC55ICksIHJibWlubWF4LnogKTtcXG4gICAgdmVjMyBib3hJbnRlcnNlY3Rpb24gPSB2V29ybGRQb3NpdGlvbiArIG5EaXIgKiBjb3JyZWN0aW9uOyAgICBcXG4gICAgcmV0dXJuIGJveEludGVyc2VjdGlvbiAtIGN1YmVQb3M7XFxuICB9XFxuI2VuZGlmXFxuXCIsd3I9XCJcXG4jaWZkZWYgQk9YX1BST0pFQ1RFRF9FTlZfTUFQXFxuICB3b3JsZE5vcm1hbCA9IHBhcmFsbGF4Q29ycmVjdE5vcm1hbCggd29ybGROb3JtYWwsIGVudk1hcFNpemUsIGVudk1hcFBvc2l0aW9uICk7XFxuI2VuZGlmXFxuXCIsYnI9XCJcXG4jaWZkZWYgQk9YX1BST0pFQ1RFRF9FTlZfTUFQXFxuICByZWZsZWN0VmVjID0gcGFyYWxsYXhDb3JyZWN0Tm9ybWFsKCByZWZsZWN0VmVjLCBlbnZNYXBTaXplLCBlbnZNYXBQb3NpdGlvbiApO1xcbiNlbmRpZlxcblwiO2NvbnN0IEVyPW5ldyBELkJveDMsTXI9bmV3IEQuVmVjdG9yMztjb25zdCBTcj1lPT5NYXRoLnNxcnQoMS1NYXRoLnBvdyhlLTEsMikpO2NsYXNzIENye2NvbnN0cnVjdG9yKHtzaXplOmU9MjU2LG1heEFnZTp0PTc1MCxyYWRpdXM6cj0uMyxpbnRlbnNpdHk6bj0uMixpbnRlcnBvbGF0ZTphPTAsc21vb3RoaW5nOm89MCxtaW5Gb3JjZTppPS4zLGJsZW5kOnM9XCJzY3JlZW5cIixlYXNlOmw9U3J9PXt9KXt0aGlzLnNpemU9ZSx0aGlzLm1heEFnZT10LHRoaXMucmFkaXVzPXIsdGhpcy5pbnRlbnNpdHk9bix0aGlzLmVhc2U9bCx0aGlzLmludGVycG9sYXRlPWEsdGhpcy5zbW9vdGhpbmc9byx0aGlzLm1pbkZvcmNlPWksdGhpcy5ibGVuZD1zLHRoaXMudHJhaWw9W10sdGhpcy5mb3JjZT0wLHRoaXMuaW5pdFRleHR1cmUoKX1pbml0VGV4dHVyZSgpe3RoaXMuY2FudmFzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIiksdGhpcy5jYW52YXMud2lkdGg9dGhpcy5jYW52YXMuaGVpZ2h0PXRoaXMuc2l6ZSx0aGlzLmN0eD10aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIiksdGhpcy5jdHguZmlsbFN0eWxlPVwiYmxhY2tcIix0aGlzLmN0eC5maWxsUmVjdCgwLDAsdGhpcy5jYW52YXMud2lkdGgsdGhpcy5jYW52YXMuaGVpZ2h0KSx0aGlzLnRleHR1cmU9bmV3IG4uVGV4dHVyZSh0aGlzLmNhbnZhcyksdGhpcy5jYW52YXMuaWQ9XCJ0b3VjaFRleHR1cmVcIix0aGlzLmNhbnZhcy5zdHlsZS53aWR0aD10aGlzLmNhbnZhcy5zdHlsZS5oZWlnaHQ9YCR7dGhpcy5jYW52YXMud2lkdGh9cHhgfXVwZGF0ZShlKXt0aGlzLmNsZWFyKCksdGhpcy50cmFpbC5mb3JFYWNoKCgodCxyKT0+e3QuYWdlKz0xZTMqZSx0LmFnZT50aGlzLm1heEFnZSYmdGhpcy50cmFpbC5zcGxpY2UociwxKX0pKSx0aGlzLnRyYWlsLmxlbmd0aHx8KHRoaXMuZm9yY2U9MCksdGhpcy50cmFpbC5mb3JFYWNoKChlPT57dGhpcy5kcmF3VG91Y2goZSl9KSksdGhpcy50ZXh0dXJlLm5lZWRzVXBkYXRlPSEwfWNsZWFyKCl7dGhpcy5jdHguZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uPVwic291cmNlLW92ZXJcIix0aGlzLmN0eC5maWxsU3R5bGU9XCJibGFja1wiLHRoaXMuY3R4LmZpbGxSZWN0KDAsMCx0aGlzLmNhbnZhcy53aWR0aCx0aGlzLmNhbnZhcy5oZWlnaHQpfWFkZFRvdWNoKGUpe2NvbnN0IHQ9dGhpcy50cmFpbFt0aGlzLnRyYWlsLmxlbmd0aC0xXTtpZih0KXtjb25zdCByPXQueC1lLngsbj10LnktZS55LGE9cipyK24qbixvPU1hdGgubWF4KHRoaXMubWluRm9yY2UsTWF0aC5taW4oMWU0KmEsMSkpO2lmKHRoaXMuZm9yY2U9ZnVuY3Rpb24oZSx0LHI9Ljkpe3JldHVybiB0KnIrZSooMS1yKX0obyx0aGlzLmZvcmNlLHRoaXMuc21vb3RoaW5nKSx0aGlzLmludGVycG9sYXRlKXtjb25zdCBlPU1hdGguY2VpbChhL01hdGgucG93KC41KnRoaXMucmFkaXVzL3RoaXMuaW50ZXJwb2xhdGUsMikpO2lmKGU+MSlmb3IobGV0IGE9MTthPGU7YSsrKXRoaXMudHJhaWwucHVzaCh7eDp0Lngtci9lKmEseTp0Lnktbi9lKmEsYWdlOjAsZm9yY2U6b30pfX10aGlzLnRyYWlsLnB1c2goe3g6ZS54LHk6ZS55LGFnZTowLGZvcmNlOnRoaXMuZm9yY2V9KX1kcmF3VG91Y2goZSl7Y29uc3QgdD17eDplLngqdGhpcy5zaXplLHk6KDEtZS55KSp0aGlzLnNpemV9O2xldCByPTE7cj1lLmFnZTwuMyp0aGlzLm1heEFnZT90aGlzLmVhc2UoZS5hZ2UvKC4zKnRoaXMubWF4QWdlKSk6dGhpcy5lYXNlKDEtKGUuYWdlLS4zKnRoaXMubWF4QWdlKS8oLjcqdGhpcy5tYXhBZ2UpKSxyKj1lLmZvcmNlLHRoaXMuY3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbj10aGlzLmJsZW5kO2NvbnN0IG49dGhpcy5zaXplKnRoaXMucmFkaXVzKnIsYT10aGlzLmN0eC5jcmVhdGVSYWRpYWxHcmFkaWVudCh0LngsdC55LE1hdGgubWF4KDAsLjI1Km4pLHQueCx0LnksTWF0aC5tYXgoMCxuKSk7YS5hZGRDb2xvclN0b3AoMCxgcmdiYSgyNTUsIDI1NSwgMjU1LCAke3RoaXMuaW50ZW5zaXR5fSlgKSxhLmFkZENvbG9yU3RvcCgxLFwicmdiYSgwLCAwLCAwLCAwLjApXCIpLHRoaXMuY3R4LmJlZ2luUGF0aCgpLHRoaXMuY3R4LmZpbGxTdHlsZT1hLHRoaXMuY3R4LmFyYyh0LngsdC55LE1hdGgubWF4KDAsbiksMCwyKk1hdGguUEkpLHRoaXMuY3R4LmZpbGwoKX19Y29uc3QgUHI9ay5mb3J3YXJkUmVmKChmdW5jdGlvbih7Y2hpbGRyZW46ZSxkaXNhYmxlOnQsZGlzYWJsZVg6cixkaXNhYmxlWTphLGRpc2FibGVaOm8sbGVmdDppLHJpZ2h0OnMsdG9wOmwsYm90dG9tOmMsZnJvbnQ6dSxiYWNrOmQsb25DZW50ZXJlZDptLHByZWNpc2U6Zj0hMCxjYWNoZUtleTpwPTAsLi4uaH0seSl7Y29uc3QgeD1rLnVzZVJlZihudWxsKSx2PWsudXNlUmVmKG51bGwpLGc9ay51c2VSZWYobnVsbCk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e3YuY3VycmVudC5tYXRyaXhXb3JsZC5pZGVudGl0eSgpO2NvbnN0IGU9KG5ldyBuLkJveDMpLnNldEZyb21PYmplY3QoZy5jdXJyZW50LGYpLHA9bmV3IG4uVmVjdG9yMyxoPW5ldyBuLlNwaGVyZSx5PWUubWF4LngtZS5taW4ueCx6PWUubWF4LnktZS5taW4ueSx3PWUubWF4LnotZS5taW4uejtlLmdldENlbnRlcihwKSxlLmdldEJvdW5kaW5nU3BoZXJlKGgpO2NvbnN0IGI9bD96LzI6Yz8tei8yOjAsRT1pPy15LzI6cz95LzI6MCxNPXU/dy8yOmQ/LXcvMjowO3YuY3VycmVudC5wb3NpdGlvbi5zZXQodHx8cj8wOi1wLngrRSx0fHxhPzA6LXAueStiLHR8fG8/MDotcC56K00pLHZvaWQgMCE9PW0mJm0oe3BhcmVudDp4LmN1cnJlbnQucGFyZW50LGNvbnRhaW5lcjp4LmN1cnJlbnQsd2lkdGg6eSxoZWlnaHQ6eixkZXB0aDp3LGJvdW5kaW5nQm94OmUsYm91bmRpbmdTcGhlcmU6aCxjZW50ZXI6cCx2ZXJ0aWNhbEFsaWdubWVudDpiLGhvcml6b250YWxBbGlnbm1lbnQ6RSxkZXB0aEFsaWdubWVudDpNfSl9KSxbcCxtLGwsaSx1LHQscixhLG8sZixzLGMsZF0pLGsudXNlSW1wZXJhdGl2ZUhhbmRsZSh5LCgoKT0+eC5jdXJyZW50KSxbXSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjp4fSxoKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtyZWY6dn0say5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7cmVmOmd9LGUpKSl9KSksVHI9ay5mb3J3YXJkUmVmKCgoe2ZvbnQ6ZSxjb2xvcjp0PVwiI2NiY2JjYlwiLGJldmVsU2l6ZTpyPS4wNCxkZWJ1ZzpuPSExLGNoaWxkcmVuOmEsLi4ub30saSk9Pntjb25zdFtzLGxdPWsudXNlU3RhdGUoMCksYz1rLnVzZUNhbGxiYWNrKCgoZT0xKT0+bChzK2UpKSxbc10pLHU9ay51c2VDYWxsYmFjaygoKGU9MSk9Pmwocy1lKSksW3NdKSxkPWsudXNlTWVtbygoKCk9Pih7aW5jcjpjLGRlY3I6dX0pKSxbYyx1XSk7cmV0dXJuIGsudXNlSW1wZXJhdGl2ZUhhbmRsZShpLCgoKT0+ZCksW2RdKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLG8say5jcmVhdGVFbGVtZW50KGsuU3VzcGVuc2Use2ZhbGxiYWNrOm51bGx9LGsuY3JlYXRlRWxlbWVudChQcix7dG9wOiEwLGNhY2hlS2V5OkpTT04uc3RyaW5naWZ5KHtjb3VudGVyOnMsZm9udDplfSl9LGsuY3JlYXRlRWxlbWVudChiZSx7YmV2ZWxFbmFibGVkOiEwLGJldmVsU2l6ZTpyLGZvbnQ6ZX0sbj9rLmNyZWF0ZUVsZW1lbnQoXCJtZXNoTm9ybWFsTWF0ZXJpYWxcIix7d2lyZWZyYW1lOiEwfSk6ay5jcmVhdGVFbGVtZW50KFwibWVzaFN0YW5kYXJkTWF0ZXJpYWxcIix7Y29sb3I6dH0pLHMpKSksYSl9KSksUnI9ay5mb3J3YXJkUmVmKCgoe2NoaWxkcmVuOmUsY3VydmU6dH0scik9Pntjb25zdFtuXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuU2NlbmUpKSxbbyxpXT1rLnVzZVN0YXRlKCkscz1rLnVzZVJlZigpO3JldHVybiBrLnVzZUVmZmVjdCgoKCk9PntzLmN1cnJlbnQ9bmV3IGQuRmxvdyhuLmNoaWxkcmVuWzBdKSxpKHMuY3VycmVudC5vYmplY3QzRCl9KSxbZV0pLGsudXNlRWZmZWN0KCgoKT0+e3ZhciBlO3QmJihudWxsPT0oZT1zLmN1cnJlbnQpfHxlLnVwZGF0ZUN1cnZlKDAsdCkpfSksW3RdKSxrLnVzZUltcGVyYXRpdmVIYW5kbGUociwoKCk9Pih7bW92ZUFsb25nQ3VydmU6ZT0+e3ZhciB0O251bGw9PSh0PXMuY3VycmVudCl8fHQubW92ZUFsb25nQ3VydmUoZSl9fSkpKSxrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLGEuY3JlYXRlUG9ydGFsKGUsbiksbyYmay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIse29iamVjdDpvfSkpfSkpO2NsYXNzIGtyIGV4dGVuZHMgbi5NZXNoUGh5c2ljYWxNYXRlcmlhbHtjb25zdHJ1Y3RvcihlPXt9KXtzdXBlcihlKSx0aGlzLnNldFZhbHVlcyhlKSx0aGlzLl90aW1lPXt2YWx1ZTowfSx0aGlzLl9kaXN0b3J0PXt2YWx1ZTouNH0sdGhpcy5fcmFkaXVzPXt2YWx1ZToxfX1vbkJlZm9yZUNvbXBpbGUoZSl7ZS51bmlmb3Jtcy50aW1lPXRoaXMuX3RpbWUsZS51bmlmb3Jtcy5yYWRpdXM9dGhpcy5fcmFkaXVzLGUudW5pZm9ybXMuZGlzdG9ydD10aGlzLl9kaXN0b3J0LGUudmVydGV4U2hhZGVyPWBcXG4gICAgICB1bmlmb3JtIGZsb2F0IHRpbWU7XFxuICAgICAgdW5pZm9ybSBmbG9hdCByYWRpdXM7XFxuICAgICAgdW5pZm9ybSBmbG9hdCBkaXN0b3J0O1xcbiAgICAgICNkZWZpbmUgR0xTTElGWSAxXFxudmVjMyBtb2QyODkodmVjMyB4KXtyZXR1cm4geC1mbG9vcih4KigxLjAvMjg5LjApKSoyODkuMDt9dmVjNCBtb2QyODkodmVjNCB4KXtyZXR1cm4geC1mbG9vcih4KigxLjAvMjg5LjApKSoyODkuMDt9dmVjNCBwZXJtdXRlKHZlYzQgeCl7cmV0dXJuIG1vZDI4OSgoKHgqMzQuMCkrMS4wKSp4KTt9dmVjNCB0YXlsb3JJbnZTcXJ0KHZlYzQgcil7cmV0dXJuIDEuNzkyODQyOTE0MDAxNTktMC44NTM3MzQ3MjA5NTMxNCpyO31mbG9hdCBzbm9pc2UodmVjMyB2KXtjb25zdCB2ZWMyIEM9dmVjMigxLjAvNi4wLDEuMC8zLjApO2NvbnN0IHZlYzQgRD12ZWM0KDAuMCwwLjUsMS4wLDIuMCk7dmVjMyBpPWZsb29yKHYrZG90KHYsQy55eXkpKTt2ZWMzIHgwPXYtaStkb3QoaSxDLnh4eCk7dmVjMyBnPXN0ZXAoeDAueXp4LHgwLnh5eik7dmVjMyBsPTEuMC1nO3ZlYzMgaTE9bWluKGcueHl6LGwuenh5KTt2ZWMzIGkyPW1heChnLnh5eixsLnp4eSk7dmVjMyB4MT14MC1pMStDLnh4eDt2ZWMzIHgyPXgwLWkyK0MueXl5O3ZlYzMgeDM9eDAtRC55eXk7aT1tb2QyODkoaSk7dmVjNCBwPXBlcm11dGUocGVybXV0ZShwZXJtdXRlKGkueit2ZWM0KDAuMCxpMS56LGkyLnosMS4wKSkraS55K3ZlYzQoMC4wLGkxLnksaTIueSwxLjApKStpLngrdmVjNCgwLjAsaTEueCxpMi54LDEuMCkpO2Zsb2F0IG5fPTAuMTQyODU3MTQyODU3O3ZlYzMgbnM9bl8qRC53eXotRC54eng7dmVjNCBqPXAtNDkuMCpmbG9vcihwKm5zLnoqbnMueik7dmVjNCB4Xz1mbG9vcihqKm5zLnopO3ZlYzQgeV89Zmxvb3Ioai03LjAqeF8pO3ZlYzQgeD14Xypucy54K25zLnl5eXk7dmVjNCB5PXlfKm5zLngrbnMueXl5eTt2ZWM0IGg9MS4wLWFicyh4KS1hYnMoeSk7dmVjNCBiMD12ZWM0KHgueHkseS54eSk7dmVjNCBiMT12ZWM0KHguencseS56dyk7dmVjNCBzMD1mbG9vcihiMCkqMi4wKzEuMDt2ZWM0IHMxPWZsb29yKGIxKSoyLjArMS4wO3ZlYzQgc2g9LXN0ZXAoaCx2ZWM0KDAuMCkpO3ZlYzQgYTA9YjAueHp5dytzMC54enl3KnNoLnh4eXk7dmVjNCBhMT1iMS54enl3K3MxLnh6eXcqc2guenp3dzt2ZWMzIHAwPXZlYzMoYTAueHksaC54KTt2ZWMzIHAxPXZlYzMoYTAuencsaC55KTt2ZWMzIHAyPXZlYzMoYTEueHksaC56KTt2ZWMzIHAzPXZlYzMoYTEuencsaC53KTt2ZWM0IG5vcm09dGF5bG9ySW52U3FydCh2ZWM0KGRvdChwMCxwMCksZG90KHAxLHAxKSxkb3QocDIscDIpLGRvdChwMyxwMykpKTtwMCo9bm9ybS54O3AxKj1ub3JtLnk7cDIqPW5vcm0uejtwMyo9bm9ybS53O3ZlYzQgbT1tYXgoMC42LXZlYzQoZG90KHgwLHgwKSxkb3QoeDEseDEpLGRvdCh4Mix4MiksZG90KHgzLHgzKSksMC4wKTttPW0qbTtyZXR1cm4gNDIuMCpkb3QobSptLHZlYzQoZG90KHAwLHgwKSxkb3QocDEseDEpLGRvdChwMix4MiksZG90KHAzLHgzKSkpO31cXG4gICAgICAke2UudmVydGV4U2hhZGVyfVxcbiAgICBgLGUudmVydGV4U2hhZGVyPWUudmVydGV4U2hhZGVyLnJlcGxhY2UoXCIjaW5jbHVkZSA8YmVnaW5fdmVydGV4PlwiLFwiXFxuICAgICAgICBmbG9hdCB1cGRhdGVUaW1lID0gdGltZSAvIDUwLjA7XFxuICAgICAgICBmbG9hdCBub2lzZSA9IHNub2lzZSh2ZWMzKHBvc2l0aW9uIC8gMi4wICsgdXBkYXRlVGltZSAqIDUuMCkpO1xcbiAgICAgICAgdmVjMyB0cmFuc2Zvcm1lZCA9IHZlYzMocG9zaXRpb24gKiAobm9pc2UgKiBwb3coZGlzdG9ydCwgMi4wKSArIHJhZGl1cykpO1xcbiAgICAgICAgXCIpfWdldCB0aW1lKCl7cmV0dXJuIHRoaXMuX3RpbWUudmFsdWV9c2V0IHRpbWUoZSl7dGhpcy5fdGltZS52YWx1ZT1lfWdldCBkaXN0b3J0KCl7cmV0dXJuIHRoaXMuX2Rpc3RvcnQudmFsdWV9c2V0IGRpc3RvcnQoZSl7dGhpcy5fZGlzdG9ydC52YWx1ZT1lfWdldCByYWRpdXMoKXtyZXR1cm4gdGhpcy5fcmFkaXVzLnZhbHVlfXNldCByYWRpdXMoZSl7dGhpcy5fcmFkaXVzLnZhbHVlPWV9fWNvbnN0IEZyPWsuZm9yd2FyZFJlZigoKHtzcGVlZDplPTEsLi4udH0scik9Pntjb25zdFtuXT1rLnVzZVN0YXRlKCgoKT0+bmV3IGtyKSk7cmV0dXJuIGEudXNlRnJhbWUoKHQ9Pm4mJihuLnRpbWU9dC5jbG9jay5nZXRFbGFwc2VkVGltZSgpKmUpKSksay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHtvYmplY3Q6bixyZWY6cixhdHRhY2g6XCJtYXRlcmlhbFwifSx0KSl9KSk7Y2xhc3MgRHIgZXh0ZW5kcyBuLk1lc2hTdGFuZGFyZE1hdGVyaWFse2NvbnN0cnVjdG9yKGU9e30pe3N1cGVyKGUpLHRoaXMuc2V0VmFsdWVzKGUpLHRoaXMuX3RpbWU9e3ZhbHVlOjB9LHRoaXMuX2ZhY3Rvcj17dmFsdWU6MX19b25CZWZvcmVDb21waWxlKGUpe2UudW5pZm9ybXMudGltZT10aGlzLl90aW1lLGUudW5pZm9ybXMuZmFjdG9yPXRoaXMuX2ZhY3RvcixlLnZlcnRleFNoYWRlcj1gXFxuICAgICAgdW5pZm9ybSBmbG9hdCB0aW1lO1xcbiAgICAgIHVuaWZvcm0gZmxvYXQgZmFjdG9yO1xcbiAgICAgICR7ZS52ZXJ0ZXhTaGFkZXJ9XFxuICAgIGAsZS52ZXJ0ZXhTaGFkZXI9ZS52ZXJ0ZXhTaGFkZXIucmVwbGFjZShcIiNpbmNsdWRlIDxiZWdpbl92ZXJ0ZXg+XCIsXCJmbG9hdCB0aGV0YSA9IHNpbiggdGltZSArIHBvc2l0aW9uLnkgKSAvIDIuMCAqIGZhY3RvcjtcXG4gICAgICAgIGZsb2F0IGMgPSBjb3MoIHRoZXRhICk7XFxuICAgICAgICBmbG9hdCBzID0gc2luKCB0aGV0YSApO1xcbiAgICAgICAgbWF0MyBtID0gbWF0MyggYywgMCwgcywgMCwgMSwgMCwgLXMsIDAsIGMgKTtcXG4gICAgICAgIHZlYzMgdHJhbnNmb3JtZWQgPSB2ZWMzKCBwb3NpdGlvbiApICogbTtcXG4gICAgICAgIHZOb3JtYWwgPSB2Tm9ybWFsICogbTtcIil9Z2V0IHRpbWUoKXtyZXR1cm4gdGhpcy5fdGltZS52YWx1ZX1zZXQgdGltZShlKXt0aGlzLl90aW1lLnZhbHVlPWV9Z2V0IGZhY3Rvcigpe3JldHVybiB0aGlzLl9mYWN0b3IudmFsdWV9c2V0IGZhY3RvcihlKXt0aGlzLl9mYWN0b3IudmFsdWU9ZX19Y29uc3QgTHI9ay5mb3J3YXJkUmVmKCgoe3NwZWVkOmU9MSwuLi50fSxyKT0+e2NvbnN0W25dPWsudXNlU3RhdGUoKCgpPT5uZXcgRHIpKTtyZXR1cm4gYS51c2VGcmFtZSgodD0+biYmKG4udGltZT10LmNsb2NrLmdldEVsYXBzZWRUaW1lKCkqZSkpKSxrLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIixSLmRlZmF1bHQoe29iamVjdDpuLHJlZjpyLGF0dGFjaDpcIm1hdGVyaWFsXCJ9LHQpKX0pKTtjbGFzcyBBciBleHRlbmRzIEQuU2hhZGVyTWF0ZXJpYWx7Y29uc3RydWN0b3IoZT1uZXcgRC5WZWN0b3IyKXtzdXBlcih7dW5pZm9ybXM6e2lucHV0QnVmZmVyOm5ldyBELlVuaWZvcm0obnVsbCksZGVwdGhCdWZmZXI6bmV3IEQuVW5pZm9ybShudWxsKSxyZXNvbHV0aW9uOm5ldyBELlVuaWZvcm0obmV3IEQuVmVjdG9yMiksdGV4ZWxTaXplOm5ldyBELlVuaWZvcm0obmV3IEQuVmVjdG9yMiksaGFsZlRleGVsU2l6ZTpuZXcgRC5Vbmlmb3JtKG5ldyBELlZlY3RvcjIpLGtlcm5lbDpuZXcgRC5Vbmlmb3JtKDApLHNjYWxlOm5ldyBELlVuaWZvcm0oMSksY2FtZXJhTmVhcjpuZXcgRC5Vbmlmb3JtKDApLGNhbWVyYUZhcjpuZXcgRC5Vbmlmb3JtKDEpLG1pbkRlcHRoVGhyZXNob2xkOm5ldyBELlVuaWZvcm0oMCksbWF4RGVwdGhUaHJlc2hvbGQ6bmV3IEQuVW5pZm9ybSgxKSxkZXB0aFNjYWxlOm5ldyBELlVuaWZvcm0oMCksZGVwdGhUb0JsdXJSYXRpb0JpYXM6bmV3IEQuVW5pZm9ybSguMjUpfSxmcmFnbWVudFNoYWRlcjpgI2luY2x1ZGUgPGNvbW1vbj5cXG4gICAgICAgICNpbmNsdWRlIDxkaXRoZXJpbmdfcGFyc19mcmFnbWVudD4gICAgICBcXG4gICAgICAgIHVuaWZvcm0gc2FtcGxlcjJEIGlucHV0QnVmZmVyO1xcbiAgICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgZGVwdGhCdWZmZXI7XFxuICAgICAgICB1bmlmb3JtIGZsb2F0IGNhbWVyYU5lYXI7XFxuICAgICAgICB1bmlmb3JtIGZsb2F0IGNhbWVyYUZhcjtcXG4gICAgICAgIHVuaWZvcm0gZmxvYXQgbWluRGVwdGhUaHJlc2hvbGQ7XFxuICAgICAgICB1bmlmb3JtIGZsb2F0IG1heERlcHRoVGhyZXNob2xkO1xcbiAgICAgICAgdW5pZm9ybSBmbG9hdCBkZXB0aFNjYWxlO1xcbiAgICAgICAgdW5pZm9ybSBmbG9hdCBkZXB0aFRvQmx1clJhdGlvQmlhcztcXG4gICAgICAgIHZhcnlpbmcgdmVjMiB2VXY7XFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2MDtcXG4gICAgICAgIHZhcnlpbmcgdmVjMiB2VXYxO1xcbiAgICAgICAgdmFyeWluZyB2ZWMyIHZVdjI7XFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2MztcXG5cXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgZmxvYXQgZGVwdGhGYWN0b3IgPSAwLjA7XFxuICAgICAgICAgIFxcbiAgICAgICAgICAjaWZkZWYgVVNFX0RFUFRIXFxuICAgICAgICAgICAgdmVjNCBkZXB0aCA9IHRleHR1cmUyRChkZXB0aEJ1ZmZlciwgdlV2KTtcXG4gICAgICAgICAgICBkZXB0aEZhY3RvciA9IHNtb290aHN0ZXAobWluRGVwdGhUaHJlc2hvbGQsIG1heERlcHRoVGhyZXNob2xkLCAxLjAtKGRlcHRoLnIgKiBkZXB0aC5hKSk7XFxuICAgICAgICAgICAgZGVwdGhGYWN0b3IgKj0gZGVwdGhTY2FsZTtcXG4gICAgICAgICAgICBkZXB0aEZhY3RvciA9IG1heCgwLjAsIG1pbigxLjAsIGRlcHRoRmFjdG9yICsgMC4yNSkpO1xcbiAgICAgICAgICAjZW5kaWZcXG4gICAgICAgICAgXFxuICAgICAgICAgIHZlYzQgc3VtID0gdGV4dHVyZTJEKGlucHV0QnVmZmVyLCBtaXgodlV2MCwgdlV2LCBkZXB0aEZhY3RvcikpO1xcbiAgICAgICAgICBzdW0gKz0gdGV4dHVyZTJEKGlucHV0QnVmZmVyLCBtaXgodlV2MSwgdlV2LCBkZXB0aEZhY3RvcikpO1xcbiAgICAgICAgICBzdW0gKz0gdGV4dHVyZTJEKGlucHV0QnVmZmVyLCBtaXgodlV2MiwgdlV2LCBkZXB0aEZhY3RvcikpO1xcbiAgICAgICAgICBzdW0gKz0gdGV4dHVyZTJEKGlucHV0QnVmZmVyLCBtaXgodlV2MywgdlV2LCBkZXB0aEZhY3RvcikpO1xcbiAgICAgICAgICBnbF9GcmFnQ29sb3IgPSBzdW0gKiAwLjI1IDtcXG5cXG4gICAgICAgICAgI2luY2x1ZGUgPGRpdGhlcmluZ19mcmFnbWVudD5cXG4gICAgICAgICAgI2luY2x1ZGUgPHRvbmVtYXBwaW5nX2ZyYWdtZW50PlxcbiAgICAgICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgICAgICAgfWAsdmVydGV4U2hhZGVyOlwidW5pZm9ybSB2ZWMyIHRleGVsU2l6ZTtcXG4gICAgICAgIHVuaWZvcm0gdmVjMiBoYWxmVGV4ZWxTaXplO1xcbiAgICAgICAgdW5pZm9ybSBmbG9hdCBrZXJuZWw7XFxuICAgICAgICB1bmlmb3JtIGZsb2F0IHNjYWxlO1xcbiAgICAgICAgdmFyeWluZyB2ZWMyIHZVdjtcXG4gICAgICAgIHZhcnlpbmcgdmVjMiB2VXYwO1xcbiAgICAgICAgdmFyeWluZyB2ZWMyIHZVdjE7XFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2MjtcXG4gICAgICAgIHZhcnlpbmcgdmVjMiB2VXYzO1xcblxcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICB2ZWMyIHV2ID0gcG9zaXRpb24ueHkgKiAwLjUgKyAwLjU7XFxuICAgICAgICAgIHZVdiA9IHV2O1xcblxcbiAgICAgICAgICB2ZWMyIGRVdiA9ICh0ZXhlbFNpemUgKiB2ZWMyKGtlcm5lbCkgKyBoYWxmVGV4ZWxTaXplKSAqIHNjYWxlO1xcbiAgICAgICAgICB2VXYwID0gdmVjMih1di54IC0gZFV2LngsIHV2LnkgKyBkVXYueSk7XFxuICAgICAgICAgIHZVdjEgPSB2ZWMyKHV2LnggKyBkVXYueCwgdXYueSArIGRVdi55KTtcXG4gICAgICAgICAgdlV2MiA9IHZlYzIodXYueCArIGRVdi54LCB1di55IC0gZFV2LnkpO1xcbiAgICAgICAgICB2VXYzID0gdmVjMih1di54IC0gZFV2LngsIHV2LnkgLSBkVXYueSk7XFxuXFxuICAgICAgICAgIGdsX1Bvc2l0aW9uID0gdmVjNChwb3NpdGlvbi54eSwgMS4wLCAxLjApO1xcbiAgICAgICAgfVwiLGJsZW5kaW5nOkQuTm9CbGVuZGluZyxkZXB0aFdyaXRlOiExLGRlcHRoVGVzdDohMX0pLHRoaXMudG9uZU1hcHBlZD0hMSx0aGlzLnNldFRleGVsU2l6ZShlLngsZS55KSx0aGlzLmtlcm5lbD1uZXcgRmxvYXQzMkFycmF5KFswLDEsMiwyLDNdKX1zZXRUZXhlbFNpemUoZSx0KXt0aGlzLnVuaWZvcm1zLnRleGVsU2l6ZS52YWx1ZS5zZXQoZSx0KSx0aGlzLnVuaWZvcm1zLmhhbGZUZXhlbFNpemUudmFsdWUuc2V0KGUsdCkubXVsdGlwbHlTY2FsYXIoLjUpfXNldFJlc29sdXRpb24oZSl7dGhpcy51bmlmb3Jtcy5yZXNvbHV0aW9uLnZhbHVlLmNvcHkoZSl9fWNsYXNzIF9ye2NvbnN0cnVjdG9yKHtnbDplLHJlc29sdXRpb246dCx3aWR0aDpyPTUwMCxoZWlnaHQ6YT01MDAsbWluRGVwdGhUaHJlc2hvbGQ6bz0wLG1heERlcHRoVGhyZXNob2xkOmk9MSxkZXB0aFNjYWxlOnM9MCxkZXB0aFRvQmx1clJhdGlvQmlhczpsPS4yNX0pe3RoaXMucmVuZGVyVG9TY3JlZW49ITEsdGhpcy5yZW5kZXJUYXJnZXRBPW5ldyBuLldlYkdMUmVuZGVyVGFyZ2V0KHQsdCx7bWluRmlsdGVyOm4uTGluZWFyRmlsdGVyLG1hZ0ZpbHRlcjpuLkxpbmVhckZpbHRlcixzdGVuY2lsQnVmZmVyOiExLGRlcHRoQnVmZmVyOiExLHR5cGU6bi5IYWxmRmxvYXRUeXBlfSksdGhpcy5yZW5kZXJUYXJnZXRCPXRoaXMucmVuZGVyVGFyZ2V0QS5jbG9uZSgpLHRoaXMuY29udm9sdXRpb25NYXRlcmlhbD1uZXcgQXIsdGhpcy5jb252b2x1dGlvbk1hdGVyaWFsLnNldFRleGVsU2l6ZSgxL3IsMS9hKSx0aGlzLmNvbnZvbHV0aW9uTWF0ZXJpYWwuc2V0UmVzb2x1dGlvbihuZXcgbi5WZWN0b3IyKHIsYSkpLHRoaXMuc2NlbmU9bmV3IG4uU2NlbmUsdGhpcy5jYW1lcmE9bmV3IG4uQ2FtZXJhLHRoaXMuY29udm9sdXRpb25NYXRlcmlhbC51bmlmb3Jtcy5taW5EZXB0aFRocmVzaG9sZC52YWx1ZT1vLHRoaXMuY29udm9sdXRpb25NYXRlcmlhbC51bmlmb3Jtcy5tYXhEZXB0aFRocmVzaG9sZC52YWx1ZT1pLHRoaXMuY29udm9sdXRpb25NYXRlcmlhbC51bmlmb3Jtcy5kZXB0aFNjYWxlLnZhbHVlPXMsdGhpcy5jb252b2x1dGlvbk1hdGVyaWFsLnVuaWZvcm1zLmRlcHRoVG9CbHVyUmF0aW9CaWFzLnZhbHVlPWwsdGhpcy5jb252b2x1dGlvbk1hdGVyaWFsLmRlZmluZXMuVVNFX0RFUFRIPXM+MDtjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoWy0xLC0xLDAsMywtMSwwLC0xLDMsMF0pLHU9bmV3IEZsb2F0MzJBcnJheShbMCwwLDIsMCwwLDJdKSxkPW5ldyBuLkJ1ZmZlckdlb21ldHJ5O2Quc2V0QXR0cmlidXRlKFwicG9zaXRpb25cIixuZXcgbi5CdWZmZXJBdHRyaWJ1dGUoYywzKSksZC5zZXRBdHRyaWJ1dGUoXCJ1dlwiLG5ldyBuLkJ1ZmZlckF0dHJpYnV0ZSh1LDIpKSx0aGlzLnNjcmVlbj1uZXcgbi5NZXNoKGQsdGhpcy5jb252b2x1dGlvbk1hdGVyaWFsKSx0aGlzLnNjcmVlbi5mcnVzdHVtQ3VsbGVkPSExLHRoaXMuc2NlbmUuYWRkKHRoaXMuc2NyZWVuKX1yZW5kZXIoZSx0LHIpe2NvbnN0IG49dGhpcy5zY2VuZSxhPXRoaXMuY2FtZXJhLG89dGhpcy5yZW5kZXJUYXJnZXRBLGk9dGhpcy5yZW5kZXJUYXJnZXRCO2xldCBzPXRoaXMuY29udm9sdXRpb25NYXRlcmlhbCxsPXMudW5pZm9ybXM7bC5kZXB0aEJ1ZmZlci52YWx1ZT10LmRlcHRoVGV4dHVyZTtjb25zdCBjPXMua2VybmVsO2xldCB1LGQsbSxmPXQ7Zm9yKGQ9MCxtPWMubGVuZ3RoLTE7ZDxtOysrZCl1PTA9PSgxJmQpP286aSxsLmtlcm5lbC52YWx1ZT1jW2RdLGwuaW5wdXRCdWZmZXIudmFsdWU9Zi50ZXh0dXJlLGUuc2V0UmVuZGVyVGFyZ2V0KHUpLGUucmVuZGVyKG4sYSksZj11O2wua2VybmVsLnZhbHVlPWNbZF0sbC5pbnB1dEJ1ZmZlci52YWx1ZT1mLnRleHR1cmUsZS5zZXRSZW5kZXJUYXJnZXQodGhpcy5yZW5kZXJUb1NjcmVlbj9udWxsOnIpLGUucmVuZGVyKG4sYSl9fW4uTWVzaFN0YW5kYXJkTWF0ZXJpYWw7Y29uc3QgT3I9ay5mb3J3YXJkUmVmKCgoe21peEJsdXI6ZT0wLG1peFN0cmVuZ3RoOnQ9MSxyZXNvbHV0aW9uOnI9MjU2LGJsdXI6bz1bMCwwXSxtaW5EZXB0aFRocmVzaG9sZDppPS45LG1heERlcHRoVGhyZXNob2xkOnM9MSxkZXB0aFNjYWxlOmw9MCxkZXB0aFRvQmx1clJhdGlvQmlhczpjPS4yNSxtaXJyb3I6dT0wLGRpc3RvcnRpb246ZD0xLG1peENvbnRyYXN0Om09MSxkaXN0b3J0aW9uTWFwOmYscmVmbGVjdG9yT2Zmc2V0OnA9MCwuLi5ofSx5KT0+e2NvbnN0IHg9YS51c2VUaHJlZSgoKHtnbDplfSk9PmUpKSx2PWEudXNlVGhyZWUoKCh7Y2FtZXJhOmV9KT0+ZSkpLGc9YS51c2VUaHJlZSgoKHtzY2VuZTplfSk9PmUpKSx6PShvPUFycmF5LmlzQXJyYXkobyk/bzpbbyxvXSlbMF0rb1sxXT4wLHc9ay51c2VSZWYobnVsbCksW2JdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5QbGFuZSkpLFtFXT1rLnVzZVN0YXRlKCgoKT0+bmV3IG4uVmVjdG9yMykpLFtNXT1rLnVzZVN0YXRlKCgoKT0+bmV3IG4uVmVjdG9yMykpLFtTXT1rLnVzZVN0YXRlKCgoKT0+bmV3IG4uVmVjdG9yMykpLFtDXT1rLnVzZVN0YXRlKCgoKT0+bmV3IG4uTWF0cml4NCkpLFtQXT1rLnVzZVN0YXRlKCgoKT0+bmV3IG4uVmVjdG9yMygwLDAsLTEpKSksW1RdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3I0KSksW0ZdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKSksW0RdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKSksW0xdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3I0KSksW19dPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5NYXRyaXg0KSksW09dPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5QZXJzcGVjdGl2ZUNhbWVyYSkpLE49ay51c2VDYWxsYmFjaygoKCk9Pnt2YXIgZTtjb25zdCB0PXcuY3VycmVudC5wYXJlbnR8fChudWxsPT0oZT13LmN1cnJlbnQpP3ZvaWQgMDplLl9fcjNmLnBhcmVudCk7aWYoIXQpcmV0dXJuO2lmKE0uc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHQubWF0cml4V29ybGQpLFMuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKHYubWF0cml4V29ybGQpLEMuZXh0cmFjdFJvdGF0aW9uKHQubWF0cml4V29ybGQpLEUuc2V0KDAsMCwxKSxFLmFwcGx5TWF0cml4NChDKSxNLmFkZFNjYWxlZFZlY3RvcihFLHApLEYuc3ViVmVjdG9ycyhNLFMpLEYuZG90KEUpPjApcmV0dXJuO0YucmVmbGVjdChFKS5uZWdhdGUoKSxGLmFkZChNKSxDLmV4dHJhY3RSb3RhdGlvbih2Lm1hdHJpeFdvcmxkKSxQLnNldCgwLDAsLTEpLFAuYXBwbHlNYXRyaXg0KEMpLFAuYWRkKFMpLEQuc3ViVmVjdG9ycyhNLFApLEQucmVmbGVjdChFKS5uZWdhdGUoKSxELmFkZChNKSxPLnBvc2l0aW9uLmNvcHkoRiksTy51cC5zZXQoMCwxLDApLE8udXAuYXBwbHlNYXRyaXg0KEMpLE8udXAucmVmbGVjdChFKSxPLmxvb2tBdChEKSxPLmZhcj12LmZhcixPLnVwZGF0ZU1hdHJpeFdvcmxkKCksTy5wcm9qZWN0aW9uTWF0cml4LmNvcHkodi5wcm9qZWN0aW9uTWF0cml4KSxfLnNldCguNSwwLDAsLjUsMCwuNSwwLC41LDAsMCwuNSwuNSwwLDAsMCwxKSxfLm11bHRpcGx5KE8ucHJvamVjdGlvbk1hdHJpeCksXy5tdWx0aXBseShPLm1hdHJpeFdvcmxkSW52ZXJzZSksXy5tdWx0aXBseSh0Lm1hdHJpeFdvcmxkKSxiLnNldEZyb21Ob3JtYWxBbmRDb3BsYW5hclBvaW50KEUsTSksYi5hcHBseU1hdHJpeDQoTy5tYXRyaXhXb3JsZEludmVyc2UpLFQuc2V0KGIubm9ybWFsLngsYi5ub3JtYWwueSxiLm5vcm1hbC56LGIuY29uc3RhbnQpO2NvbnN0IHI9Ty5wcm9qZWN0aW9uTWF0cml4O0wueD0oTWF0aC5zaWduKFQueCkrci5lbGVtZW50c1s4XSkvci5lbGVtZW50c1swXSxMLnk9KE1hdGguc2lnbihULnkpK3IuZWxlbWVudHNbOV0pL3IuZWxlbWVudHNbNV0sTC56PS0xLEwudz0oMStyLmVsZW1lbnRzWzEwXSkvci5lbGVtZW50c1sxNF0sVC5tdWx0aXBseVNjYWxhcigyL1QuZG90KEwpKSxyLmVsZW1lbnRzWzJdPVQueCxyLmVsZW1lbnRzWzZdPVQueSxyLmVsZW1lbnRzWzEwXT1ULnorMSxyLmVsZW1lbnRzWzE0XT1ULnd9KSxbdixwXSksW0IsSSxVLFZdPWsudXNlTWVtbygoKCk9Pntjb25zdCBhPXttaW5GaWx0ZXI6bi5MaW5lYXJGaWx0ZXIsbWFnRmlsdGVyOm4uTGluZWFyRmlsdGVyLHR5cGU6bi5IYWxmRmxvYXRUeXBlfSxwPW5ldyBuLldlYkdMUmVuZGVyVGFyZ2V0KHIscixhKTtwLmRlcHRoQnVmZmVyPSEwLHAuZGVwdGhUZXh0dXJlPW5ldyBuLkRlcHRoVGV4dHVyZShyLHIpLHAuZGVwdGhUZXh0dXJlLmZvcm1hdD1uLkRlcHRoRm9ybWF0LHAuZGVwdGhUZXh0dXJlLnR5cGU9bi5VbnNpZ25lZFNob3J0VHlwZTtjb25zdCBoPW5ldyBuLldlYkdMUmVuZGVyVGFyZ2V0KHIscixhKTtyZXR1cm5bcCxoLG5ldyBfcih7Z2w6eCxyZXNvbHV0aW9uOnIsd2lkdGg6b1swXSxoZWlnaHQ6b1sxXSxtaW5EZXB0aFRocmVzaG9sZDppLG1heERlcHRoVGhyZXNob2xkOnMsZGVwdGhTY2FsZTpsLGRlcHRoVG9CbHVyUmF0aW9CaWFzOmN9KSx7bWlycm9yOnUsdGV4dHVyZU1hdHJpeDpfLG1peEJsdXI6ZSx0RGlmZnVzZTpwLnRleHR1cmUsdERlcHRoOnAuZGVwdGhUZXh0dXJlLHREaWZmdXNlQmx1cjpoLnRleHR1cmUsaGFzQmx1cjp6LG1peFN0cmVuZ3RoOnQsbWluRGVwdGhUaHJlc2hvbGQ6aSxtYXhEZXB0aFRocmVzaG9sZDpzLGRlcHRoU2NhbGU6bCxkZXB0aFRvQmx1clJhdGlvQmlhczpjLGRpc3RvcnRpb246ZCxkaXN0b3J0aW9uTWFwOmYsbWl4Q29udHJhc3Q6bSxcImRlZmluZXMtVVNFX0JMVVJcIjp6P1wiXCI6dm9pZCAwLFwiZGVmaW5lcy1VU0VfREVQVEhcIjpsPjA/XCJcIjp2b2lkIDAsXCJkZWZpbmVzLVVTRV9ESVNUT1JUSU9OXCI6Zj9cIlwiOnZvaWQgMH1dfSksW3gsbyxfLHIsdSx6LGUsdCxpLHMsbCxjLGQsZixtXSk7cmV0dXJuIGEudXNlRnJhbWUoKCgpPT57dmFyIGU7Y29uc3QgdD13LmN1cnJlbnQucGFyZW50fHwobnVsbD09KGU9dy5jdXJyZW50KT92b2lkIDA6ZS5fX3IzZi5wYXJlbnQpO2lmKCF0KXJldHVybjt0LnZpc2libGU9ITE7Y29uc3Qgcj14LnhyLmVuYWJsZWQsbj14LnNoYWRvd01hcC5hdXRvVXBkYXRlO04oKSx4LnhyLmVuYWJsZWQ9ITEseC5zaGFkb3dNYXAuYXV0b1VwZGF0ZT0hMSx4LnNldFJlbmRlclRhcmdldChCKSx4LnN0YXRlLmJ1ZmZlcnMuZGVwdGguc2V0TWFzayghMCkseC5hdXRvQ2xlYXJ8fHguY2xlYXIoKSx4LnJlbmRlcihnLE8pLHomJlUucmVuZGVyKHgsQixJKSx4LnhyLmVuYWJsZWQ9cix4LnNoYWRvd01hcC5hdXRvVXBkYXRlPW4sdC52aXNpYmxlPSEwLHguc2V0UmVuZGVyVGFyZ2V0KG51bGwpfSkpLGsuY3JlYXRlRWxlbWVudChcIm1lc2hSZWZsZWN0b3JNYXRlcmlhbEltcGxcIixSLmRlZmF1bHQoe2F0dGFjaDpcIm1hdGVyaWFsXCIsa2V5Olwia2V5XCIrVltcImRlZmluZXMtVVNFX0JMVVJcIl0rVltcImRlZmluZXMtVVNFX0RFUFRIXCJdK1ZbXCJkZWZpbmVzLVVTRV9ESVNUT1JUSU9OXCJdLHJlZjpBLmRlZmF1bHQoW3cseV0pfSxWLGgpKX0pKSxOcj1TZSh7ZW52TWFwOm51bGwsYm91bmNlczozLGlvcjoyLjQsY29ycmVjdE1pcHM6ITAsYWJlcnJhdGlvblN0cmVuZ3RoOi4wMSxmcmVzbmVsOjAsYnZoOm5ldyBFLk1lc2hCVkhVbmlmb3JtU3RydWN0LGNvbG9yOm5ldyBELkNvbG9yKFwid2hpdGVcIikscmVzb2x1dGlvbjpuZXcgRC5WZWN0b3IyLHZpZXdNYXRyaXhJbnZlcnNlOm5ldyBELk1hdHJpeDQscHJvamVjdGlvbk1hdHJpeEludmVyc2U6bmV3IEQuTWF0cml4NH0sXCJcXG4gIHVuaWZvcm0gbWF0NCB2aWV3TWF0cml4SW52ZXJzZTtcXG5cXG4gIHZhcnlpbmcgdmVjMyB2V29ybGRQb3NpdGlvbjsgIFxcbiAgdmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxuICB2YXJ5aW5nIG1hdDQgdk1vZGVsTWF0cml4SW52ZXJzZTtcXG5cXG4gICNpZmRlZiBVU0VfSU5TVEFOQ0lOR19DT0xPUlxcbiAgICB2YXJ5aW5nIHZlYzMgdkluc3RhbmNlQ29sb3I7XFxuICAjZW5kaWZcXG5cXG4gIHZvaWQgbWFpbigpIHsgICAgICAgIFxcbiAgICB2ZWM0IHRyYW5zZm9ybWVkTm9ybWFsID0gdmVjNChub3JtYWwsIDAuMCk7XFxuICAgIHZlYzQgdHJhbnNmb3JtZWRQb3NpdGlvbiA9IHZlYzQocG9zaXRpb24sIDEuMCk7XFxuICAgICNpZmRlZiBVU0VfSU5TVEFOQ0lOR1xcbiAgICAgIHRyYW5zZm9ybWVkTm9ybWFsID0gaW5zdGFuY2VNYXRyaXggKiB0cmFuc2Zvcm1lZE5vcm1hbDtcXG4gICAgICB0cmFuc2Zvcm1lZFBvc2l0aW9uID0gaW5zdGFuY2VNYXRyaXggKiB0cmFuc2Zvcm1lZFBvc2l0aW9uO1xcbiAgICAjZW5kaWZcXG5cXG4gICAgI2lmZGVmIFVTRV9JTlNUQU5DSU5HXFxuICAgICAgdk1vZGVsTWF0cml4SW52ZXJzZSA9IGludmVyc2UobW9kZWxNYXRyaXggKiBpbnN0YW5jZU1hdHJpeCk7XFxuICAgICNlbHNlXFxuICAgICAgdk1vZGVsTWF0cml4SW52ZXJzZSA9IGludmVyc2UobW9kZWxNYXRyaXgpO1xcbiAgICAjZW5kaWZcXG5cXG4gICAgI2lmZGVmIFVTRV9JTlNUQU5DSU5HX0NPTE9SXFxuICAgICAgdkluc3RhbmNlQ29sb3IgPSBpbnN0YW5jZUNvbG9yLnJnYjtcXG4gICAgI2VuZGlmXFxuXFxuICAgIHZXb3JsZFBvc2l0aW9uID0gKG1vZGVsTWF0cml4ICogdHJhbnNmb3JtZWRQb3NpdGlvbikueHl6O1xcbiAgICB2Tm9ybWFsID0gbm9ybWFsaXplKCh2aWV3TWF0cml4SW52ZXJzZSAqIHZlYzQobm9ybWFsTWF0cml4ICogdHJhbnNmb3JtZWROb3JtYWwueHl6LCAwLjApKS54eXopO1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2aWV3TWF0cml4ICogbW9kZWxNYXRyaXggKiB0cmFuc2Zvcm1lZFBvc2l0aW9uO1xcbiAgfVwiLGBcXG4gICNkZWZpbmUgRU5WTUFQX1RZUEVfQ1VCRV9VVlxcbiAgcHJlY2lzaW9uIGhpZ2hwIGlzYW1wbGVyMkQ7XFxuICBwcmVjaXNpb24gaGlnaHAgdXNhbXBsZXIyRDtcXG4gIHZhcnlpbmcgdmVjMyB2V29ybGRQb3NpdGlvbjtcXG4gIHZhcnlpbmcgdmVjMyB2Tm9ybWFsO1xcbiAgdmFyeWluZyBtYXQ0IHZNb2RlbE1hdHJpeEludmVyc2U7XFxuXFxuICAjaWZkZWYgVVNFX0lOU1RBTkNJTkdfQ09MT1JcXG4gICAgdmFyeWluZyB2ZWMzIHZJbnN0YW5jZUNvbG9yO1xcbiAgI2VuZGlmXFxuICAgIFxcbiAgI2lmZGVmIEVOVk1BUF9UWVBFX0NVQkVNXFxuICAgIHVuaWZvcm0gc2FtcGxlckN1YmUgZW52TWFwO1xcbiAgI2Vsc2VcXG4gICAgdW5pZm9ybSBzYW1wbGVyMkQgZW52TWFwO1xcbiAgI2VuZGlmXFxuICAgIFxcbiAgdW5pZm9ybSBmbG9hdCBib3VuY2VzO1xcbiAgJHtFLnNoYWRlclN0cnVjdHN9XFxuICAke0Uuc2hhZGVySW50ZXJzZWN0RnVuY3Rpb259XFxuICB1bmlmb3JtIEJWSCBidmg7XFxuICB1bmlmb3JtIGZsb2F0IGlvcjtcXG4gIHVuaWZvcm0gYm9vbCBjb3JyZWN0TWlwcztcXG4gIHVuaWZvcm0gdmVjMiByZXNvbHV0aW9uO1xcbiAgdW5pZm9ybSBmbG9hdCBmcmVzbmVsO1xcbiAgdW5pZm9ybSBtYXQ0IG1vZGVsTWF0cml4O1xcbiAgdW5pZm9ybSBtYXQ0IHByb2plY3Rpb25NYXRyaXhJbnZlcnNlO1xcbiAgdW5pZm9ybSBtYXQ0IHZpZXdNYXRyaXhJbnZlcnNlO1xcbiAgdW5pZm9ybSBmbG9hdCBhYmVycmF0aW9uU3RyZW5ndGg7XFxuICB1bmlmb3JtIHZlYzMgY29sb3I7XFxuICBcXG4gIGZsb2F0IGZyZXNuZWxGdW5jKHZlYzMgdmlld0RpcmVjdGlvbiwgdmVjMyB3b3JsZE5vcm1hbCkge1xcbiAgICByZXR1cm4gcG93KCAxLjAgKyBkb3QoIHZpZXdEaXJlY3Rpb24sIHdvcmxkTm9ybWFsKSwgMTAuMCApO1xcbiAgfVxcbiAgICBcXG4gIHZlYzMgdG90YWxJbnRlcm5hbFJlZmxlY3Rpb24odmVjMyBybywgdmVjMyByZCwgdmVjMyBub3JtYWwsIGZsb2F0IGlvciwgbWF0NCBtb2RlbE1hdHJpeEludmVyc2UpIHtcXG4gICAgdmVjMyByYXlPcmlnaW4gPSBybztcXG4gICAgdmVjMyByYXlEaXJlY3Rpb24gPSByZDtcXG4gICAgcmF5RGlyZWN0aW9uID0gcmVmcmFjdChyYXlEaXJlY3Rpb24sIG5vcm1hbCwgMS4wIC8gaW9yKTtcXG4gICAgcmF5T3JpZ2luID0gdldvcmxkUG9zaXRpb24gKyByYXlEaXJlY3Rpb24gKiAwLjAwMTtcXG4gICAgcmF5T3JpZ2luID0gKG1vZGVsTWF0cml4SW52ZXJzZSAqIHZlYzQocmF5T3JpZ2luLCAxLjApKS54eXo7XFxuICAgIHJheURpcmVjdGlvbiA9IG5vcm1hbGl6ZSgobW9kZWxNYXRyaXhJbnZlcnNlICogdmVjNChyYXlEaXJlY3Rpb24sIDAuMCkpLnh5eik7XFxuICAgIGZvcihmbG9hdCBpID0gMC4wOyBpIDwgYm91bmNlczsgaSsrKSB7XFxuICAgICAgdXZlYzQgZmFjZUluZGljZXMgPSB1dmVjNCggMHUgKTtcXG4gICAgICB2ZWMzIGZhY2VOb3JtYWwgPSB2ZWMzKCAwLjAsIDAuMCwgMS4wICk7XFxuICAgICAgdmVjMyBiYXJ5Y29vcmQgPSB2ZWMzKCAwLjAgKTtcXG4gICAgICBmbG9hdCBzaWRlID0gMS4wO1xcbiAgICAgIGZsb2F0IGRpc3QgPSAwLjA7XFxuICAgICAgYnZoSW50ZXJzZWN0Rmlyc3RIaXQoIGJ2aCwgcmF5T3JpZ2luLCByYXlEaXJlY3Rpb24sIGZhY2VJbmRpY2VzLCBmYWNlTm9ybWFsLCBiYXJ5Y29vcmQsIHNpZGUsIGRpc3QgKTtcXG4gICAgICB2ZWMzIGhpdFBvcyA9IHJheU9yaWdpbiArIHJheURpcmVjdGlvbiAqIG1heChkaXN0IC0gMC4wMDEsIDAuMCk7ICAgICAgXFxuICAgICAgdmVjMyB0ZW1wRGlyID0gcmVmcmFjdChyYXlEaXJlY3Rpb24sIGZhY2VOb3JtYWwsIGlvcik7XFxuICAgICAgaWYgKGxlbmd0aCh0ZW1wRGlyKSAhPSAwLjApIHtcXG4gICAgICAgIHJheURpcmVjdGlvbiA9IHRlbXBEaXI7XFxuICAgICAgICBicmVhaztcXG4gICAgICB9XFxuICAgICAgcmF5RGlyZWN0aW9uID0gcmVmbGVjdChyYXlEaXJlY3Rpb24sIGZhY2VOb3JtYWwpO1xcbiAgICAgIHJheU9yaWdpbiA9IGhpdFBvcyArIHJheURpcmVjdGlvbiAqIDAuMDE7XFxuICAgIH1cXG4gICAgcmF5RGlyZWN0aW9uID0gbm9ybWFsaXplKChtb2RlbE1hdHJpeCAqIHZlYzQocmF5RGlyZWN0aW9uLCAwLjApKS54eXopO1xcbiAgICByZXR1cm4gcmF5RGlyZWN0aW9uO1xcbiAgfVxcbiAgICBcXG4gICNpbmNsdWRlIDxjb21tb24+XFxuICAjaW5jbHVkZSA8Y3ViZV91dl9yZWZsZWN0aW9uX2ZyYWdtZW50PlxcbiAgICBcXG4gICNpZmRlZiBFTlZNQVBfVFlQRV9DVUJFTVxcbiAgICB2ZWM0IHRleHR1cmVHcmFkaWVudChzYW1wbGVyQ3ViZSBlbnZNYXAsIHZlYzMgcmF5RGlyZWN0aW9uLCB2ZWMzIGRpcmVjdGlvbkNhbVBlcmZlY3QpIHtcXG4gICAgICByZXR1cm4gdGV4dHVyZUdyYWQoZW52TWFwLCByYXlEaXJlY3Rpb24sIGRGZHgoY29ycmVjdE1pcHMgPyBkaXJlY3Rpb25DYW1QZXJmZWN0OiByYXlEaXJlY3Rpb24pLCBkRmR5KGNvcnJlY3RNaXBzID8gZGlyZWN0aW9uQ2FtUGVyZmVjdDogcmF5RGlyZWN0aW9uKSk7XFxuICAgIH1cXG4gICNlbHNlXFxuICAgIHZlYzQgdGV4dHVyZUdyYWRpZW50KHNhbXBsZXIyRCBlbnZNYXAsIHZlYzMgcmF5RGlyZWN0aW9uLCB2ZWMzIGRpcmVjdGlvbkNhbVBlcmZlY3QpIHtcXG4gICAgICB2ZWMyIHV2diA9IGVxdWlyZWN0VXYoIHJheURpcmVjdGlvbiApO1xcbiAgICAgIHZlYzIgc21vb3RoVXYgPSBlcXVpcmVjdFV2KCBkaXJlY3Rpb25DYW1QZXJmZWN0ICk7XFxuICAgICAgcmV0dXJuIHRleHR1cmVHcmFkKGVudk1hcCwgdXZ2LCBkRmR4KGNvcnJlY3RNaXBzID8gc21vb3RoVXYgOiB1dnYpLCBkRmR5KGNvcnJlY3RNaXBzID8gc21vb3RoVXYgOiB1dnYpKTtcXG4gICAgfVxcbiAgI2VuZGlmXFxuICBcXG4gIHZvaWQgbWFpbigpIHtcXG4gICAgdmVjMiB1diA9IGdsX0ZyYWdDb29yZC54eSAvIHJlc29sdXRpb247XFxuICAgIHZlYzMgZGlyZWN0aW9uQ2FtUGVyZmVjdCA9IChwcm9qZWN0aW9uTWF0cml4SW52ZXJzZSAqIHZlYzQodXYgKiAyLjAgLSAxLjAsIDAuMCwgMS4wKSkueHl6O1xcbiAgICBkaXJlY3Rpb25DYW1QZXJmZWN0ID0gKHZpZXdNYXRyaXhJbnZlcnNlICogdmVjNChkaXJlY3Rpb25DYW1QZXJmZWN0LCAwLjApKS54eXo7XFxuICAgIGRpcmVjdGlvbkNhbVBlcmZlY3QgPSBub3JtYWxpemUoZGlyZWN0aW9uQ2FtUGVyZmVjdCk7XFxuICAgIHZlYzMgbm9ybWFsID0gdk5vcm1hbDtcXG4gICAgdmVjMyByYXlPcmlnaW4gPSBjYW1lcmFQb3NpdGlvbjtcXG4gICAgdmVjMyByYXlEaXJlY3Rpb24gPSBub3JtYWxpemUodldvcmxkUG9zaXRpb24gLSBjYW1lcmFQb3NpdGlvbik7XFxuICAgIHZlYzMgZmluYWxDb2xvcjtcXG4gICAgI2lmZGVmIENIUk9NQVRJQ19BQkVSUkFUSU9OU1xcbiAgICAgIHZlYzMgcmF5RGlyZWN0aW9uRyA9IHRvdGFsSW50ZXJuYWxSZWZsZWN0aW9uKHJheU9yaWdpbiwgcmF5RGlyZWN0aW9uLCBub3JtYWwsIG1heChpb3IsIDEuMCksIHZNb2RlbE1hdHJpeEludmVyc2UpO1xcbiAgICAgICNpZmRlZiBGQVNUX0NIUk9NQSBcXG4gICAgICAgIHZlYzMgcmF5RGlyZWN0aW9uUiA9IG5vcm1hbGl6ZShyYXlEaXJlY3Rpb25HICsgMS4wICogdmVjMyhhYmVycmF0aW9uU3RyZW5ndGggLyAyLjApKTtcXG4gICAgICAgIHZlYzMgcmF5RGlyZWN0aW9uQiA9IG5vcm1hbGl6ZShyYXlEaXJlY3Rpb25HIC0gMS4wICogdmVjMyhhYmVycmF0aW9uU3RyZW5ndGggLyAyLjApKTtcXG4gICAgICAjZWxzZVxcbiAgICAgICAgdmVjMyByYXlEaXJlY3Rpb25SID0gdG90YWxJbnRlcm5hbFJlZmxlY3Rpb24ocmF5T3JpZ2luLCByYXlEaXJlY3Rpb24sIG5vcm1hbCwgbWF4KGlvciAqICgxLjAgLSBhYmVycmF0aW9uU3RyZW5ndGgpLCAxLjApLCB2TW9kZWxNYXRyaXhJbnZlcnNlKTtcXG4gICAgICAgIHZlYzMgcmF5RGlyZWN0aW9uQiA9IHRvdGFsSW50ZXJuYWxSZWZsZWN0aW9uKHJheU9yaWdpbiwgcmF5RGlyZWN0aW9uLCBub3JtYWwsIG1heChpb3IgKiAoMS4wICsgYWJlcnJhdGlvblN0cmVuZ3RoKSwgMS4wKSwgdk1vZGVsTWF0cml4SW52ZXJzZSk7XFxuICAgICAgI2VuZGlmXFxuICAgICAgZmxvYXQgZmluYWxDb2xvclIgPSB0ZXh0dXJlR3JhZGllbnQoZW52TWFwLCByYXlEaXJlY3Rpb25SLCBkaXJlY3Rpb25DYW1QZXJmZWN0KS5yO1xcbiAgICAgIGZsb2F0IGZpbmFsQ29sb3JHID0gdGV4dHVyZUdyYWRpZW50KGVudk1hcCwgcmF5RGlyZWN0aW9uRywgZGlyZWN0aW9uQ2FtUGVyZmVjdCkuZztcXG4gICAgICBmbG9hdCBmaW5hbENvbG9yQiA9IHRleHR1cmVHcmFkaWVudChlbnZNYXAsIHJheURpcmVjdGlvbkIsIGRpcmVjdGlvbkNhbVBlcmZlY3QpLmI7XFxuICAgICAgZmluYWxDb2xvciA9IHZlYzMoZmluYWxDb2xvclIsIGZpbmFsQ29sb3JHLCBmaW5hbENvbG9yQik7XFxuICAgICNlbHNlXFxuICAgICAgcmF5RGlyZWN0aW9uID0gdG90YWxJbnRlcm5hbFJlZmxlY3Rpb24ocmF5T3JpZ2luLCByYXlEaXJlY3Rpb24sIG5vcm1hbCwgbWF4KGlvciwgMS4wKSwgdk1vZGVsTWF0cml4SW52ZXJzZSk7XFxuICAgICAgZmluYWxDb2xvciA9IHRleHR1cmVHcmFkaWVudChlbnZNYXAsIHJheURpcmVjdGlvbiwgZGlyZWN0aW9uQ2FtUGVyZmVjdCkucmdiOyAgICBcXG4gICAgI2VuZGlmXFxuXFxuICAgIGZpbmFsQ29sb3IgKj0gY29sb3I7XFxuICAgICNpZmRlZiBVU0VfSU5TVEFOQ0lOR19DT0xPUlxcbiAgICAgIGZpbmFsQ29sb3IgKj0gdkluc3RhbmNlQ29sb3I7XFxuICAgICNlbmRpZlxcblxcbiAgICB2ZWMzIHZpZXdEaXJlY3Rpb24gPSBub3JtYWxpemUodldvcmxkUG9zaXRpb24gLSBjYW1lcmFQb3NpdGlvbik7XFxuICAgIGZsb2F0IG5GcmVzbmVsID0gZnJlc25lbEZ1bmModmlld0RpcmVjdGlvbiwgbm9ybWFsKSAqIGZyZXNuZWw7XFxuICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQobWl4KGZpbmFsQ29sb3IsIHZlYzMoMS4wKSwgbkZyZXNuZWwpLCAxLjApOyAgICAgIFxcbiAgICAjaW5jbHVkZSA8dG9uZW1hcHBpbmdfZnJhZ21lbnQ+XFxuICAgICNpbmNsdWRlIDwke1RlPj0xNTQ/XCJjb2xvcnNwYWNlX2ZyYWdtZW50XCI6XCJlbmNvZGluZ3NfZnJhZ21lbnRcIn0+XFxuICB9YCk7Y29uc3QgQnI9U2Uoe30sXCJ2b2lkIG1haW4oKSB7IH1cIixcInZvaWQgbWFpbigpIHsgZ2xfRnJhZ0NvbG9yID0gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOyBkaXNjYXJkOyAgfVwiKTtjbGFzcyBJciBleHRlbmRzIEQuTWVzaFBoeXNpY2FsTWF0ZXJpYWx7Y29uc3RydWN0b3IoZT02LHQ9ITEpe3N1cGVyKCksdGhpcy51bmlmb3Jtcz17Y2hyb21hdGljQWJlcnJhdGlvbjp7dmFsdWU6LjA1fSx0cmFuc21pc3Npb246e3ZhbHVlOjB9LF90cmFuc21pc3Npb246e3ZhbHVlOjF9LHRyYW5zbWlzc2lvbk1hcDp7dmFsdWU6bnVsbH0scm91Z2huZXNzOnt2YWx1ZTowfSx0aGlja25lc3M6e3ZhbHVlOjB9LHRoaWNrbmVzc01hcDp7dmFsdWU6bnVsbH0sYXR0ZW51YXRpb25EaXN0YW5jZTp7dmFsdWU6MS8wfSxhdHRlbnVhdGlvbkNvbG9yOnt2YWx1ZTpuZXcgRC5Db2xvcihcIndoaXRlXCIpfSxhbmlzb3Ryb3BpY0JsdXI6e3ZhbHVlOi4xfSx0aW1lOnt2YWx1ZTowfSxkaXN0b3J0aW9uOnt2YWx1ZTowfSxkaXN0b3J0aW9uU2NhbGU6e3ZhbHVlOi41fSx0ZW1wb3JhbERpc3RvcnRpb246e3ZhbHVlOjB9LGJ1ZmZlcjp7dmFsdWU6bnVsbH19LHRoaXMub25CZWZvcmVDb21waWxlPXI9PntyLnVuaWZvcm1zPXsuLi5yLnVuaWZvcm1zLC4uLnRoaXMudW5pZm9ybXN9LHRoaXMuYW5pc290cm9weT4wJiYoci5kZWZpbmVzLlVTRV9BTklTT1RST1BZPVwiXCIpLHQ/ci5kZWZpbmVzLlVTRV9TQU1QTEVSPVwiXCI6ci5kZWZpbmVzLlVTRV9UUkFOU01JU1NJT049XCJcIixyLmZyYWdtZW50U2hhZGVyPVwiXFxuICAgICAgdW5pZm9ybSBmbG9hdCBjaHJvbWF0aWNBYmVycmF0aW9uOyAgICAgICAgIFxcbiAgICAgIHVuaWZvcm0gZmxvYXQgYW5pc290cm9waWNCbHVyOyAgICAgIFxcbiAgICAgIHVuaWZvcm0gZmxvYXQgdGltZTtcXG4gICAgICB1bmlmb3JtIGZsb2F0IGRpc3RvcnRpb247XFxuICAgICAgdW5pZm9ybSBmbG9hdCBkaXN0b3J0aW9uU2NhbGU7XFxuICAgICAgdW5pZm9ybSBmbG9hdCB0ZW1wb3JhbERpc3RvcnRpb247XFxuICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgYnVmZmVyO1xcblxcbiAgICAgIHZlYzMgcmFuZG9tMyh2ZWMzIGMpIHtcXG4gICAgICAgIGZsb2F0IGogPSA0MDk2LjAqc2luKGRvdChjLHZlYzMoMTcuMCwgNTkuNCwgMTUuMCkpKTtcXG4gICAgICAgIHZlYzMgcjtcXG4gICAgICAgIHIueiA9IGZyYWN0KDUxMi4wKmopO1xcbiAgICAgICAgaiAqPSAuMTI1O1xcbiAgICAgICAgci54ID0gZnJhY3QoNTEyLjAqaik7XFxuICAgICAgICBqICo9IC4xMjU7XFxuICAgICAgICByLnkgPSBmcmFjdCg1MTIuMCpqKTtcXG4gICAgICAgIHJldHVybiByLTAuNTtcXG4gICAgICB9XFxuXFxuICAgICAgZmxvYXQgc2VlZCA9IDAuMDtcXG4gICAgICB1aW50IGhhc2goIHVpbnQgeCApIHtcXG4gICAgICAgIHggKz0gKCB4IDw8IDEwdSApO1xcbiAgICAgICAgeCBePSAoIHggPj4gIDZ1ICk7XFxuICAgICAgICB4ICs9ICggeCA8PCAgM3UgKTtcXG4gICAgICAgIHggXj0gKCB4ID4+IDExdSApO1xcbiAgICAgICAgeCArPSAoIHggPDwgMTV1ICk7XFxuICAgICAgICByZXR1cm4geDtcXG4gICAgICB9XFxuXFxuICAgICAgLy8gQ29tcG91bmQgdmVyc2lvbnMgb2YgdGhlIGhhc2hpbmcgYWxnb3JpdGhtIEkgd2hpcHBlZCB0b2dldGhlci5cXG4gICAgICB1aW50IGhhc2goIHV2ZWMyIHYgKSB7IHJldHVybiBoYXNoKCB2LnggXiBoYXNoKHYueSkgICAgICAgICAgICAgICAgICAgICAgICAgKTsgfVxcbiAgICAgIHVpbnQgaGFzaCggdXZlYzMgdiApIHsgcmV0dXJuIGhhc2goIHYueCBeIGhhc2godi55KSBeIGhhc2godi56KSAgICAgICAgICAgICApOyB9XFxuICAgICAgdWludCBoYXNoKCB1dmVjNCB2ICkgeyByZXR1cm4gaGFzaCggdi54IF4gaGFzaCh2LnkpIF4gaGFzaCh2LnopIF4gaGFzaCh2LncpICk7IH1cXG5cXG4gICAgICAvLyBDb25zdHJ1Y3QgYSBmbG9hdCB3aXRoIGhhbGYtb3BlbiByYW5nZSBbMDoxXSB1c2luZyBsb3cgMjMgYml0cy5cXG4gICAgICAvLyBBbGwgemVyb2VzIHlpZWxkcyAwLjAsIGFsbCBvbmVzIHlpZWxkcyB0aGUgbmV4dCBzbWFsbGVzdCByZXByZXNlbnRhYmxlIHZhbHVlIGJlbG93IDEuMC5cXG4gICAgICBmbG9hdCBmbG9hdENvbnN0cnVjdCggdWludCBtICkge1xcbiAgICAgICAgY29uc3QgdWludCBpZWVlTWFudGlzc2EgPSAweDAwN0ZGRkZGdTsgLy8gYmluYXJ5MzIgbWFudGlzc2EgYml0bWFza1xcbiAgICAgICAgY29uc3QgdWludCBpZWVlT25lICAgICAgPSAweDNGODAwMDAwdTsgLy8gMS4wIGluIElFRUUgYmluYXJ5MzJcXG4gICAgICAgIG0gJj0gaWVlZU1hbnRpc3NhOyAgICAgICAgICAgICAgICAgICAgIC8vIEtlZXAgb25seSBtYW50aXNzYSBiaXRzIChmcmFjdGlvbmFsIHBhcnQpXFxuICAgICAgICBtIHw9IGllZWVPbmU7ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgZnJhY3Rpb25hbCBwYXJ0IHRvIDEuMFxcbiAgICAgICAgZmxvYXQgIGYgPSB1aW50Qml0c1RvRmxvYXQoIG0gKTsgICAgICAgLy8gUmFuZ2UgWzE6Ml1cXG4gICAgICAgIHJldHVybiBmIC0gMS4wOyAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJhbmdlIFswOjFdXFxuICAgICAgfVxcblxcbiAgICAgIC8vIFBzZXVkby1yYW5kb20gdmFsdWUgaW4gaGFsZi1vcGVuIHJhbmdlIFswOjFdLlxcbiAgICAgIGZsb2F0IHJhbmRvbSggZmxvYXQgeCApIHsgcmV0dXJuIGZsb2F0Q29uc3RydWN0KGhhc2goZmxvYXRCaXRzVG9VaW50KHgpKSk7IH1cXG4gICAgICBmbG9hdCByYW5kb20oIHZlYzIgIHYgKSB7IHJldHVybiBmbG9hdENvbnN0cnVjdChoYXNoKGZsb2F0Qml0c1RvVWludCh2KSkpOyB9XFxuICAgICAgZmxvYXQgcmFuZG9tKCB2ZWMzICB2ICkgeyByZXR1cm4gZmxvYXRDb25zdHJ1Y3QoaGFzaChmbG9hdEJpdHNUb1VpbnQodikpKTsgfVxcbiAgICAgIGZsb2F0IHJhbmRvbSggdmVjNCAgdiApIHsgcmV0dXJuIGZsb2F0Q29uc3RydWN0KGhhc2goZmxvYXRCaXRzVG9VaW50KHYpKSk7IH1cXG5cXG4gICAgICBmbG9hdCByYW5kKCkge1xcbiAgICAgICAgZmxvYXQgcmVzdWx0ID0gcmFuZG9tKHZlYzMoZ2xfRnJhZ0Nvb3JkLnh5LCBzZWVkKSk7XFxuICAgICAgICBzZWVkICs9IDEuMDtcXG4gICAgICAgIHJldHVybiByZXN1bHQ7XFxuICAgICAgfVxcblxcbiAgICAgIGNvbnN0IGZsb2F0IEYzID0gIDAuMzMzMzMzMztcXG4gICAgICBjb25zdCBmbG9hdCBHMyA9ICAwLjE2NjY2Njc7XFxuXFxuICAgICAgZmxvYXQgc25vaXNlKHZlYzMgcCkge1xcbiAgICAgICAgdmVjMyBzID0gZmxvb3IocCArIGRvdChwLCB2ZWMzKEYzKSkpO1xcbiAgICAgICAgdmVjMyB4ID0gcCAtIHMgKyBkb3QocywgdmVjMyhHMykpO1xcbiAgICAgICAgdmVjMyBlID0gc3RlcCh2ZWMzKDAuMCksIHggLSB4Lnl6eCk7XFxuICAgICAgICB2ZWMzIGkxID0gZSooMS4wIC0gZS56eHkpO1xcbiAgICAgICAgdmVjMyBpMiA9IDEuMCAtIGUuenh5KigxLjAgLSBlKTtcXG4gICAgICAgIHZlYzMgeDEgPSB4IC0gaTEgKyBHMztcXG4gICAgICAgIHZlYzMgeDIgPSB4IC0gaTIgKyAyLjAqRzM7XFxuICAgICAgICB2ZWMzIHgzID0geCAtIDEuMCArIDMuMCpHMztcXG4gICAgICAgIHZlYzQgdywgZDtcXG4gICAgICAgIHcueCA9IGRvdCh4LCB4KTtcXG4gICAgICAgIHcueSA9IGRvdCh4MSwgeDEpO1xcbiAgICAgICAgdy56ID0gZG90KHgyLCB4Mik7XFxuICAgICAgICB3LncgPSBkb3QoeDMsIHgzKTtcXG4gICAgICAgIHcgPSBtYXgoMC42IC0gdywgMC4wKTtcXG4gICAgICAgIGQueCA9IGRvdChyYW5kb20zKHMpLCB4KTtcXG4gICAgICAgIGQueSA9IGRvdChyYW5kb20zKHMgKyBpMSksIHgxKTtcXG4gICAgICAgIGQueiA9IGRvdChyYW5kb20zKHMgKyBpMiksIHgyKTtcXG4gICAgICAgIGQudyA9IGRvdChyYW5kb20zKHMgKyAxLjApLCB4Myk7XFxuICAgICAgICB3ICo9IHc7XFxuICAgICAgICB3ICo9IHc7XFxuICAgICAgICBkICo9IHc7XFxuICAgICAgICByZXR1cm4gZG90KGQsIHZlYzQoNTIuMCkpO1xcbiAgICAgIH1cXG5cXG4gICAgICBmbG9hdCBzbm9pc2VGcmFjdGFsKHZlYzMgbSkge1xcbiAgICAgICAgcmV0dXJuIDAuNTMzMzMzMyogc25vaXNlKG0pXFxuICAgICAgICAgICAgICArMC4yNjY2NjY3KiBzbm9pc2UoMi4wKm0pXFxuICAgICAgICAgICAgICArMC4xMzMzMzMzKiBzbm9pc2UoNC4wKm0pXFxuICAgICAgICAgICAgICArMC4wNjY2NjY3KiBzbm9pc2UoOC4wKm0pO1xcbiAgICAgIH1cXG5cIityLmZyYWdtZW50U2hhZGVyLHIuZnJhZ21lbnRTaGFkZXI9ci5mcmFnbWVudFNoYWRlci5yZXBsYWNlKFwiI2luY2x1ZGUgPHRyYW5zbWlzc2lvbl9wYXJzX2ZyYWdtZW50PlwiLFwiXFxuICAgICAgICAjaWZkZWYgVVNFX1RSQU5TTUlTU0lPTlxcbiAgICAgICAgICAvLyBUcmFuc21pc3Npb24gY29kZSBpcyBiYXNlZCBvbiBnbFRGLVNhbXBsZXItVmlld2VyXFxuICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi1TYW1wbGUtVmlld2VyXFxuICAgICAgICAgIHVuaWZvcm0gZmxvYXQgX3RyYW5zbWlzc2lvbjtcXG4gICAgICAgICAgdW5pZm9ybSBmbG9hdCB0aGlja25lc3M7XFxuICAgICAgICAgIHVuaWZvcm0gZmxvYXQgYXR0ZW51YXRpb25EaXN0YW5jZTtcXG4gICAgICAgICAgdW5pZm9ybSB2ZWMzIGF0dGVudWF0aW9uQ29sb3I7XFxuICAgICAgICAgICNpZmRlZiBVU0VfVFJBTlNNSVNTSU9OTUFQXFxuICAgICAgICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgdHJhbnNtaXNzaW9uTWFwO1xcbiAgICAgICAgICAjZW5kaWZcXG4gICAgICAgICAgI2lmZGVmIFVTRV9USElDS05FU1NNQVBcXG4gICAgICAgICAgICB1bmlmb3JtIHNhbXBsZXIyRCB0aGlja25lc3NNYXA7XFxuICAgICAgICAgICNlbmRpZlxcbiAgICAgICAgICB1bmlmb3JtIHZlYzIgdHJhbnNtaXNzaW9uU2FtcGxlclNpemU7XFxuICAgICAgICAgIHVuaWZvcm0gc2FtcGxlcjJEIHRyYW5zbWlzc2lvblNhbXBsZXJNYXA7XFxuICAgICAgICAgIHVuaWZvcm0gbWF0NCBtb2RlbE1hdHJpeDtcXG4gICAgICAgICAgdW5pZm9ybSBtYXQ0IHByb2plY3Rpb25NYXRyaXg7XFxuICAgICAgICAgIHZhcnlpbmcgdmVjMyB2V29ybGRQb3NpdGlvbjtcXG4gICAgICAgICAgdmVjMyBnZXRWb2x1bWVUcmFuc21pc3Npb25SYXkoIGNvbnN0IGluIHZlYzMgbiwgY29uc3QgaW4gdmVjMyB2LCBjb25zdCBpbiBmbG9hdCB0aGlja25lc3MsIGNvbnN0IGluIGZsb2F0IGlvciwgY29uc3QgaW4gbWF0NCBtb2RlbE1hdHJpeCApIHtcXG4gICAgICAgICAgICAvLyBEaXJlY3Rpb24gb2YgcmVmcmFjdGVkIGxpZ2h0LlxcbiAgICAgICAgICAgIHZlYzMgcmVmcmFjdGlvblZlY3RvciA9IHJlZnJhY3QoIC0gdiwgbm9ybWFsaXplKCBuICksIDEuMCAvIGlvciApO1xcbiAgICAgICAgICAgIC8vIENvbXB1dGUgcm90YXRpb24taW5kZXBlbmRhbnQgc2NhbGluZyBvZiB0aGUgbW9kZWwgbWF0cml4LlxcbiAgICAgICAgICAgIHZlYzMgbW9kZWxTY2FsZTtcXG4gICAgICAgICAgICBtb2RlbFNjYWxlLnggPSBsZW5ndGgoIHZlYzMoIG1vZGVsTWF0cml4WyAwIF0ueHl6ICkgKTtcXG4gICAgICAgICAgICBtb2RlbFNjYWxlLnkgPSBsZW5ndGgoIHZlYzMoIG1vZGVsTWF0cml4WyAxIF0ueHl6ICkgKTtcXG4gICAgICAgICAgICBtb2RlbFNjYWxlLnogPSBsZW5ndGgoIHZlYzMoIG1vZGVsTWF0cml4WyAyIF0ueHl6ICkgKTtcXG4gICAgICAgICAgICAvLyBUaGUgdGhpY2tuZXNzIGlzIHNwZWNpZmllZCBpbiBsb2NhbCBzcGFjZS5cXG4gICAgICAgICAgICByZXR1cm4gbm9ybWFsaXplKCByZWZyYWN0aW9uVmVjdG9yICkgKiB0aGlja25lc3MgKiBtb2RlbFNjYWxlO1xcbiAgICAgICAgICB9XFxuICAgICAgICAgIGZsb2F0IGFwcGx5SW9yVG9Sb3VnaG5lc3MoIGNvbnN0IGluIGZsb2F0IHJvdWdobmVzcywgY29uc3QgaW4gZmxvYXQgaW9yICkge1xcbiAgICAgICAgICAgIC8vIFNjYWxlIHJvdWdobmVzcyB3aXRoIElPUiBzbyB0aGF0IGFuIElPUiBvZiAxLjAgcmVzdWx0cyBpbiBubyBtaWNyb2ZhY2V0IHJlZnJhY3Rpb24gYW5kXFxuICAgICAgICAgICAgLy8gYW4gSU9SIG9mIDEuNSByZXN1bHRzIGluIHRoZSBkZWZhdWx0IGFtb3VudCBvZiBtaWNyb2ZhY2V0IHJlZnJhY3Rpb24uXFxuICAgICAgICAgICAgcmV0dXJuIHJvdWdobmVzcyAqIGNsYW1wKCBpb3IgKiAyLjAgLSAyLjAsIDAuMCwgMS4wICk7XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgdmVjNCBnZXRUcmFuc21pc3Npb25TYW1wbGUoIGNvbnN0IGluIHZlYzIgZnJhZ0Nvb3JkLCBjb25zdCBpbiBmbG9hdCByb3VnaG5lc3MsIGNvbnN0IGluIGZsb2F0IGlvciApIHtcXG4gICAgICAgICAgICBmbG9hdCBmcmFtZWJ1ZmZlckxvZCA9IGxvZzIoIHRyYW5zbWlzc2lvblNhbXBsZXJTaXplLnggKSAqIGFwcGx5SW9yVG9Sb3VnaG5lc3MoIHJvdWdobmVzcywgaW9yICk7ICAgICAgICAgICAgXFxuICAgICAgICAgICAgI2lmZGVmIFVTRV9TQU1QTEVSXFxuICAgICAgICAgICAgICAjaWZkZWYgdGV4dHVyZTJETG9kRVhUXFxuICAgICAgICAgICAgICAgIHJldHVybiB0ZXh0dXJlMkRMb2RFWFQodHJhbnNtaXNzaW9uU2FtcGxlck1hcCwgZnJhZ0Nvb3JkLnh5LCBmcmFtZWJ1ZmZlckxvZCk7XFxuICAgICAgICAgICAgICAjZWxzZVxcbiAgICAgICAgICAgICAgICByZXR1cm4gdGV4dHVyZTJEKHRyYW5zbWlzc2lvblNhbXBsZXJNYXAsIGZyYWdDb29yZC54eSwgZnJhbWVidWZmZXJMb2QpO1xcbiAgICAgICAgICAgICAgI2VuZGlmXFxuICAgICAgICAgICAgI2Vsc2VcXG4gICAgICAgICAgICAgIHJldHVybiB0ZXh0dXJlMkQoYnVmZmVyLCBmcmFnQ29vcmQueHkpO1xcbiAgICAgICAgICAgICNlbmRpZlxcbiAgICAgICAgICB9XFxuICAgICAgICAgIHZlYzMgYXBwbHlWb2x1bWVBdHRlbnVhdGlvbiggY29uc3QgaW4gdmVjMyByYWRpYW5jZSwgY29uc3QgaW4gZmxvYXQgdHJhbnNtaXNzaW9uRGlzdGFuY2UsIGNvbnN0IGluIHZlYzMgYXR0ZW51YXRpb25Db2xvciwgY29uc3QgaW4gZmxvYXQgYXR0ZW51YXRpb25EaXN0YW5jZSApIHtcXG4gICAgICAgICAgICBpZiAoIGlzaW5mKCBhdHRlbnVhdGlvbkRpc3RhbmNlICkgKSB7XFxuICAgICAgICAgICAgICAvLyBBdHRlbnVhdGlvbiBkaXN0YW5jZSBpcyAr4oieLCBpLmUuIHRoZSB0cmFuc21pdHRlZCBjb2xvciBpcyBub3QgYXR0ZW51YXRlZCBhdCBhbGwuXFxuICAgICAgICAgICAgICByZXR1cm4gcmFkaWFuY2U7XFxuICAgICAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgICAgIC8vIENvbXB1dGUgbGlnaHQgYXR0ZW51YXRpb24gdXNpbmcgQmVlcidzIGxhdy5cXG4gICAgICAgICAgICAgIHZlYzMgYXR0ZW51YXRpb25Db2VmZmljaWVudCA9IC1sb2coIGF0dGVudWF0aW9uQ29sb3IgKSAvIGF0dGVudWF0aW9uRGlzdGFuY2U7XFxuICAgICAgICAgICAgICB2ZWMzIHRyYW5zbWl0dGFuY2UgPSBleHAoIC0gYXR0ZW51YXRpb25Db2VmZmljaWVudCAqIHRyYW5zbWlzc2lvbkRpc3RhbmNlICk7IC8vIEJlZXIncyBsYXdcXG4gICAgICAgICAgICAgIHJldHVybiB0cmFuc21pdHRhbmNlICogcmFkaWFuY2U7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICB9XFxuICAgICAgICAgIHZlYzQgZ2V0SUJMVm9sdW1lUmVmcmFjdGlvbiggY29uc3QgaW4gdmVjMyBuLCBjb25zdCBpbiB2ZWMzIHYsIGNvbnN0IGluIGZsb2F0IHJvdWdobmVzcywgY29uc3QgaW4gdmVjMyBkaWZmdXNlQ29sb3IsXFxuICAgICAgICAgICAgY29uc3QgaW4gdmVjMyBzcGVjdWxhckNvbG9yLCBjb25zdCBpbiBmbG9hdCBzcGVjdWxhckY5MCwgY29uc3QgaW4gdmVjMyBwb3NpdGlvbiwgY29uc3QgaW4gbWF0NCBtb2RlbE1hdHJpeCxcXG4gICAgICAgICAgICBjb25zdCBpbiBtYXQ0IHZpZXdNYXRyaXgsIGNvbnN0IGluIG1hdDQgcHJvak1hdHJpeCwgY29uc3QgaW4gZmxvYXQgaW9yLCBjb25zdCBpbiBmbG9hdCB0aGlja25lc3MsXFxuICAgICAgICAgICAgY29uc3QgaW4gdmVjMyBhdHRlbnVhdGlvbkNvbG9yLCBjb25zdCBpbiBmbG9hdCBhdHRlbnVhdGlvbkRpc3RhbmNlICkge1xcbiAgICAgICAgICAgIHZlYzMgdHJhbnNtaXNzaW9uUmF5ID0gZ2V0Vm9sdW1lVHJhbnNtaXNzaW9uUmF5KCBuLCB2LCB0aGlja25lc3MsIGlvciwgbW9kZWxNYXRyaXggKTtcXG4gICAgICAgICAgICB2ZWMzIHJlZnJhY3RlZFJheUV4aXQgPSBwb3NpdGlvbiArIHRyYW5zbWlzc2lvblJheTtcXG4gICAgICAgICAgICAvLyBQcm9qZWN0IHJlZnJhY3RlZCB2ZWN0b3Igb24gdGhlIGZyYW1lYnVmZmVyLCB3aGlsZSBtYXBwaW5nIHRvIG5vcm1hbGl6ZWQgZGV2aWNlIGNvb3JkaW5hdGVzLlxcbiAgICAgICAgICAgIHZlYzQgbmRjUG9zID0gcHJvak1hdHJpeCAqIHZpZXdNYXRyaXggKiB2ZWM0KCByZWZyYWN0ZWRSYXlFeGl0LCAxLjAgKTtcXG4gICAgICAgICAgICB2ZWMyIHJlZnJhY3Rpb25Db29yZHMgPSBuZGNQb3MueHkgLyBuZGNQb3MudztcXG4gICAgICAgICAgICByZWZyYWN0aW9uQ29vcmRzICs9IDEuMDtcXG4gICAgICAgICAgICByZWZyYWN0aW9uQ29vcmRzIC89IDIuMDtcXG4gICAgICAgICAgICAvLyBTYW1wbGUgZnJhbWVidWZmZXIgdG8gZ2V0IHBpeGVsIHRoZSByZWZyYWN0ZWQgcmF5IGhpdHMuXFxuICAgICAgICAgICAgdmVjNCB0cmFuc21pdHRlZExpZ2h0ID0gZ2V0VHJhbnNtaXNzaW9uU2FtcGxlKCByZWZyYWN0aW9uQ29vcmRzLCByb3VnaG5lc3MsIGlvciApO1xcbiAgICAgICAgICAgIHZlYzMgYXR0ZW51YXRlZENvbG9yID0gYXBwbHlWb2x1bWVBdHRlbnVhdGlvbiggdHJhbnNtaXR0ZWRMaWdodC5yZ2IsIGxlbmd0aCggdHJhbnNtaXNzaW9uUmF5ICksIGF0dGVudWF0aW9uQ29sb3IsIGF0dGVudWF0aW9uRGlzdGFuY2UgKTtcXG4gICAgICAgICAgICAvLyBHZXQgdGhlIHNwZWN1bGFyIGNvbXBvbmVudC5cXG4gICAgICAgICAgICB2ZWMzIEYgPSBFbnZpcm9ubWVudEJSREYoIG4sIHYsIHNwZWN1bGFyQ29sb3IsIHNwZWN1bGFyRjkwLCByb3VnaG5lc3MgKTtcXG4gICAgICAgICAgICByZXR1cm4gdmVjNCggKCAxLjAgLSBGICkgKiBhdHRlbnVhdGVkQ29sb3IgKiBkaWZmdXNlQ29sb3IsIHRyYW5zbWl0dGVkTGlnaHQuYSApO1xcbiAgICAgICAgICB9XFxuICAgICAgICAjZW5kaWZcXG5cIiksci5mcmFnbWVudFNoYWRlcj1yLmZyYWdtZW50U2hhZGVyLnJlcGxhY2UoXCIjaW5jbHVkZSA8dHJhbnNtaXNzaW9uX2ZyYWdtZW50PlwiLGAgIFxcbiAgICAgICAgLy8gSW1wcm92ZSB0aGUgcmVmcmFjdGlvbiB0byB1c2UgdGhlIHdvcmxkIHBvc1xcbiAgICAgICAgbWF0ZXJpYWwudHJhbnNtaXNzaW9uID0gX3RyYW5zbWlzc2lvbjtcXG4gICAgICAgIG1hdGVyaWFsLnRyYW5zbWlzc2lvbkFscGhhID0gMS4wO1xcbiAgICAgICAgbWF0ZXJpYWwudGhpY2tuZXNzID0gdGhpY2tuZXNzO1xcbiAgICAgICAgbWF0ZXJpYWwuYXR0ZW51YXRpb25EaXN0YW5jZSA9IGF0dGVudWF0aW9uRGlzdGFuY2U7XFxuICAgICAgICBtYXRlcmlhbC5hdHRlbnVhdGlvbkNvbG9yID0gYXR0ZW51YXRpb25Db2xvcjtcXG4gICAgICAgICNpZmRlZiBVU0VfVFJBTlNNSVNTSU9OTUFQXFxuICAgICAgICAgIG1hdGVyaWFsLnRyYW5zbWlzc2lvbiAqPSB0ZXh0dXJlMkQoIHRyYW5zbWlzc2lvbk1hcCwgdlV2ICkucjtcXG4gICAgICAgICNlbmRpZlxcbiAgICAgICAgI2lmZGVmIFVTRV9USElDS05FU1NNQVBcXG4gICAgICAgICAgbWF0ZXJpYWwudGhpY2tuZXNzICo9IHRleHR1cmUyRCggdGhpY2tuZXNzTWFwLCB2VXYgKS5nO1xcbiAgICAgICAgI2VuZGlmXFxuICAgICAgICBcXG4gICAgICAgIHZlYzMgcG9zID0gdldvcmxkUG9zaXRpb247XFxuICAgICAgICB2ZWMzIHYgPSBub3JtYWxpemUoIGNhbWVyYVBvc2l0aW9uIC0gcG9zICk7XFxuICAgICAgICB2ZWMzIG4gPSBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCBub3JtYWwsIHZpZXdNYXRyaXggKTtcXG4gICAgICAgIHZlYzMgdHJhbnNtaXNzaW9uID0gdmVjMygwLjApO1xcbiAgICAgICAgZmxvYXQgdHJhbnNtaXNzaW9uUiwgdHJhbnNtaXNzaW9uQiwgdHJhbnNtaXNzaW9uRztcXG4gICAgICAgIGZsb2F0IHJhbmRvbUNvb3JkcyA9IHJhbmQoKTtcXG4gICAgICAgIGZsb2F0IHRoaWNrbmVzc19zbWVhciA9IHRoaWNrbmVzcyAqIG1heChwb3cocm91Z2huZXNzRmFjdG9yLCAwLjMzKSwgYW5pc290cm9waWNCbHVyKTtcXG4gICAgICAgIHZlYzMgZGlzdG9ydGlvbk5vcm1hbCA9IHZlYzMoMC4wKTtcXG4gICAgICAgIHZlYzMgdGVtcG9yYWxPZmZzZXQgPSB2ZWMzKHRpbWUsIC10aW1lLCAtdGltZSkgKiB0ZW1wb3JhbERpc3RvcnRpb247XFxuICAgICAgICBpZiAoZGlzdG9ydGlvbiA+IDAuMCkge1xcbiAgICAgICAgICBkaXN0b3J0aW9uTm9ybWFsID0gZGlzdG9ydGlvbiAqIHZlYzMoc25vaXNlRnJhY3RhbCh2ZWMzKChwb3MgKiBkaXN0b3J0aW9uU2NhbGUgKyB0ZW1wb3JhbE9mZnNldCkpKSwgc25vaXNlRnJhY3RhbCh2ZWMzKHBvcy56eHkgKiBkaXN0b3J0aW9uU2NhbGUgLSB0ZW1wb3JhbE9mZnNldCkpLCBzbm9pc2VGcmFjdGFsKHZlYzMocG9zLnl4eiAqIGRpc3RvcnRpb25TY2FsZSArIHRlbXBvcmFsT2Zmc2V0KSkpO1xcbiAgICAgICAgfVxcbiAgICAgICAgZm9yIChmbG9hdCBpID0gMC4wOyBpIDwgJHtlfS4wOyBpICsrKSB7XFxuICAgICAgICAgIHZlYzMgc2FtcGxlTm9ybSA9IG5vcm1hbGl6ZShuICsgcm91Z2huZXNzRmFjdG9yICogcm91Z2huZXNzRmFjdG9yICogMi4wICogbm9ybWFsaXplKHZlYzMocmFuZCgpIC0gMC41LCByYW5kKCkgLSAwLjUsIHJhbmQoKSAtIDAuNSkpICogcG93KHJhbmQoKSwgMC4zMykgKyBkaXN0b3J0aW9uTm9ybWFsKTtcXG4gICAgICAgICAgdHJhbnNtaXNzaW9uUiA9IGdldElCTFZvbHVtZVJlZnJhY3Rpb24oXFxuICAgICAgICAgICAgc2FtcGxlTm9ybSwgdiwgbWF0ZXJpYWwucm91Z2huZXNzLCBtYXRlcmlhbC5kaWZmdXNlQ29sb3IsIG1hdGVyaWFsLnNwZWN1bGFyQ29sb3IsIG1hdGVyaWFsLnNwZWN1bGFyRjkwLFxcbiAgICAgICAgICAgIHBvcywgbW9kZWxNYXRyaXgsIHZpZXdNYXRyaXgsIHByb2plY3Rpb25NYXRyaXgsIG1hdGVyaWFsLmlvciwgbWF0ZXJpYWwudGhpY2tuZXNzICArIHRoaWNrbmVzc19zbWVhciAqIChpICsgcmFuZG9tQ29vcmRzKSAvIGZsb2F0KCR7ZX0pLFxcbiAgICAgICAgICAgIG1hdGVyaWFsLmF0dGVudWF0aW9uQ29sb3IsIG1hdGVyaWFsLmF0dGVudWF0aW9uRGlzdGFuY2VcXG4gICAgICAgICAgKS5yO1xcbiAgICAgICAgICB0cmFuc21pc3Npb25HID0gZ2V0SUJMVm9sdW1lUmVmcmFjdGlvbihcXG4gICAgICAgICAgICBzYW1wbGVOb3JtLCB2LCBtYXRlcmlhbC5yb3VnaG5lc3MsIG1hdGVyaWFsLmRpZmZ1c2VDb2xvciwgbWF0ZXJpYWwuc3BlY3VsYXJDb2xvciwgbWF0ZXJpYWwuc3BlY3VsYXJGOTAsXFxuICAgICAgICAgICAgcG9zLCBtb2RlbE1hdHJpeCwgdmlld01hdHJpeCwgcHJvamVjdGlvbk1hdHJpeCwgbWF0ZXJpYWwuaW9yICAqICgxLjAgKyBjaHJvbWF0aWNBYmVycmF0aW9uICogKGkgKyByYW5kb21Db29yZHMpIC8gZmxvYXQoJHtlfSkpICwgbWF0ZXJpYWwudGhpY2tuZXNzICsgdGhpY2tuZXNzX3NtZWFyICogKGkgKyByYW5kb21Db29yZHMpIC8gZmxvYXQoJHtlfSksXFxuICAgICAgICAgICAgbWF0ZXJpYWwuYXR0ZW51YXRpb25Db2xvciwgbWF0ZXJpYWwuYXR0ZW51YXRpb25EaXN0YW5jZVxcbiAgICAgICAgICApLmc7XFxuICAgICAgICAgIHRyYW5zbWlzc2lvbkIgPSBnZXRJQkxWb2x1bWVSZWZyYWN0aW9uKFxcbiAgICAgICAgICAgIHNhbXBsZU5vcm0sIHYsIG1hdGVyaWFsLnJvdWdobmVzcywgbWF0ZXJpYWwuZGlmZnVzZUNvbG9yLCBtYXRlcmlhbC5zcGVjdWxhckNvbG9yLCBtYXRlcmlhbC5zcGVjdWxhckY5MCxcXG4gICAgICAgICAgICBwb3MsIG1vZGVsTWF0cml4LCB2aWV3TWF0cml4LCBwcm9qZWN0aW9uTWF0cml4LCBtYXRlcmlhbC5pb3IgKiAoMS4wICsgMi4wICogY2hyb21hdGljQWJlcnJhdGlvbiAqIChpICsgcmFuZG9tQ29vcmRzKSAvIGZsb2F0KCR7ZX0pKSwgbWF0ZXJpYWwudGhpY2tuZXNzICsgdGhpY2tuZXNzX3NtZWFyICogKGkgKyByYW5kb21Db29yZHMpIC8gZmxvYXQoJHtlfSksXFxuICAgICAgICAgICAgbWF0ZXJpYWwuYXR0ZW51YXRpb25Db2xvciwgbWF0ZXJpYWwuYXR0ZW51YXRpb25EaXN0YW5jZVxcbiAgICAgICAgICApLmI7XFxuICAgICAgICAgIHRyYW5zbWlzc2lvbi5yICs9IHRyYW5zbWlzc2lvblI7XFxuICAgICAgICAgIHRyYW5zbWlzc2lvbi5nICs9IHRyYW5zbWlzc2lvbkc7XFxuICAgICAgICAgIHRyYW5zbWlzc2lvbi5iICs9IHRyYW5zbWlzc2lvbkI7XFxuICAgICAgICB9XFxuICAgICAgICB0cmFuc21pc3Npb24gLz0gJHtlfS4wO1xcbiAgICAgICAgdG90YWxEaWZmdXNlID0gbWl4KCB0b3RhbERpZmZ1c2UsIHRyYW5zbWlzc2lvbi5yZ2IsIG1hdGVyaWFsLnRyYW5zbWlzc2lvbiApO1xcbmApfSxPYmplY3Qua2V5cyh0aGlzLnVuaWZvcm1zKS5mb3JFYWNoKChlPT5PYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxlLHtnZXQ6KCk9PnRoaXMudW5pZm9ybXNbZV0udmFsdWUsc2V0OnQ9PnRoaXMudW5pZm9ybXNbZV0udmFsdWU9dH0pKSl9fWNvbnN0IFVyPWsuZm9yd2FyZFJlZigoKHtidWZmZXI6ZSx0cmFuc21pc3Npb25TYW1wbGVyOnQ9ITEsYmFja3NpZGU6cj0hMSxzaWRlOm49RC5Gcm9udFNpZGUsdHJhbnNtaXNzaW9uOm89MSx0aGlja25lc3M6aT0wLGJhY2tzaWRlVGhpY2tuZXNzOnM9MCxzYW1wbGVzOmw9MTAscmVzb2x1dGlvbjpjLGJhY2tzaWRlUmVzb2x1dGlvbjp1LGJhY2tncm91bmQ6ZCxhbmlzb3Ryb3B5Om0sYW5pc290cm9waWNCbHVyOmYsLi4ucH0saCk9PnthLmV4dGVuZCh7TWVzaFRyYW5zbWlzc2lvbk1hdGVyaWFsOklyfSk7Y29uc3QgeT1rLnVzZVJlZihudWxsKSxbeF09ay51c2VTdGF0ZSgoKCk9Pm5ldyBCcikpLHY9ZXQodXx8YyksZz1ldChjKTtsZXQgeix3LGI7cmV0dXJuIGEudXNlRnJhbWUoKGU9Pnt5LmN1cnJlbnQudGltZT1lLmNsb2NrLmdldEVsYXBzZWRUaW1lKCkseS5jdXJyZW50LmJ1ZmZlciE9PWcudGV4dHVyZXx8dHx8KGI9eS5jdXJyZW50Ll9fcjNmLnBhcmVudCxiJiYodz1lLmdsLnRvbmVNYXBwaW5nLHo9ZS5zY2VuZS5iYWNrZ3JvdW5kLGUuZ2wudG9uZU1hcHBpbmc9RC5Ob1RvbmVNYXBwaW5nLGQmJihlLnNjZW5lLmJhY2tncm91bmQ9ZCksYi5tYXRlcmlhbD14LHImJihlLmdsLnNldFJlbmRlclRhcmdldCh2KSxlLmdsLnJlbmRlcihlLnNjZW5lLGUuY2FtZXJhKSxiLm1hdGVyaWFsPXkuY3VycmVudCxiLm1hdGVyaWFsLmJ1ZmZlcj12LnRleHR1cmUsYi5tYXRlcmlhbC50aGlja25lc3M9cyxiLm1hdGVyaWFsLnNpZGU9RC5CYWNrU2lkZSksZS5nbC5zZXRSZW5kZXJUYXJnZXQoZyksZS5nbC5yZW5kZXIoZS5zY2VuZSxlLmNhbWVyYSksYi5tYXRlcmlhbD15LmN1cnJlbnQsYi5tYXRlcmlhbC50aGlja25lc3M9aSxiLm1hdGVyaWFsLnNpZGU9bixiLm1hdGVyaWFsLmJ1ZmZlcj1nLnRleHR1cmUsZS5zY2VuZS5iYWNrZ3JvdW5kPXosZS5nbC5zZXRSZW5kZXJUYXJnZXQobnVsbCksZS5nbC50b25lTWFwcGluZz13KSl9KSksay51c2VJbXBlcmF0aXZlSGFuZGxlKGgsKCgpPT55LmN1cnJlbnQpLFtdKSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoVHJhbnNtaXNzaW9uTWF0ZXJpYWxcIixSLmRlZmF1bHQoe2FyZ3M6W2wsdF0scmVmOnl9LHAse2J1ZmZlcjplfHxnLnRleHR1cmUsX3RyYW5zbWlzc2lvbjpvLGFuaXNvdHJvcGljQmx1cjpudWxsIT1mP2Y6bSx0cmFuc21pc3Npb246dD9vOjAsdGhpY2tuZXNzOmksc2lkZTpufSkpfSkpLFZyPWsuZm9yd2FyZFJlZigoKGUsdCk9PihhLmV4dGVuZCh7RGlzY2FyZE1hdGVyaWFsSW1wbDpCcn0pLGsuY3JlYXRlRWxlbWVudChcImRpc2NhcmRNYXRlcmlhbEltcGxcIixSLmRlZmF1bHQoe3JlZjp0fSxlKSkpKSksanI9VGU+PTE1ND9cIm9wYXF1ZV9mcmFnbWVudFwiOlwib3V0cHV0X2ZyYWdtZW50XCI7Y2xhc3MgV3IgZXh0ZW5kcyBELlBvaW50c01hdGVyaWFse2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHRoaXMub25CZWZvcmVDb21waWxlPShlLHQpPT57Y29uc3R7aXNXZWJHTDI6cn09dC5jYXBhYmlsaXRpZXM7ZS5mcmFnbWVudFNoYWRlcj1lLmZyYWdtZW50U2hhZGVyLnJlcGxhY2UoYCNpbmNsdWRlIDwke2pyfT5gLGBcXG4gICAgICAgICR7cj9gI2luY2x1ZGUgPCR7anJ9PmA6YCNleHRlbnNpb24gR0xfT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzIDogZW5hYmxlXFxuI2luY2x1ZGUgPCR7anJ9PmB9XFxuICAgICAgdmVjMiBjeHkgPSAyLjAgKiBnbF9Qb2ludENvb3JkIC0gMS4wO1xcbiAgICAgIGZsb2F0IHIgPSBkb3QoY3h5LCBjeHkpO1xcbiAgICAgIGZsb2F0IGRlbHRhID0gZndpZHRoKHIpOyAgICAgXFxuICAgICAgZmxvYXQgbWFzayA9IDEuMCAtIHNtb290aHN0ZXAoMS4wIC0gZGVsdGEsIDEuMCArIGRlbHRhLCByKTtcXG4gICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGdsX0ZyYWdDb2xvci5yZ2IsIG1hc2sgKiBnbF9GcmFnQ29sb3IuYSApO1xcbiAgICAgICNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cXG4gICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgICAgIGApfX19Y29uc3QgR3I9ay5mb3J3YXJkUmVmKCgoZSx0KT0+e2NvbnN0W3JdPWsudXNlU3RhdGUoKCgpPT5uZXcgV3IobnVsbCkpKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHt9LGUse29iamVjdDpyLHJlZjp0LGF0dGFjaDpcIm1hdGVyaWFsXCJ9KSl9KSk7ZnVuY3Rpb24gSHIoZSx0LHIpe3QudHJhdmVyc2UoKHQ9Pnt0Lm1hdGVyaWFsJiYoZS5wcm9wZXJ0aWVzLnJlbW92ZSh0Lm1hdGVyaWFsKSxudWxsPT10Lm1hdGVyaWFsLmRpc3Bvc2V8fHQubWF0ZXJpYWwuZGlzcG9zZSgpKX0pKSxlLmluZm8ucHJvZ3JhbXMubGVuZ3RoPTAsZS5jb21waWxlKHQscil9ZnVuY3Rpb24gJHIoZSx0KXtjb25zdCByPWUrXCJHZW9tZXRyeVwiO3JldHVybiBrLmZvcndhcmRSZWYoKCh7YXJnczplLGNoaWxkcmVuOm4sLi4uYX0sbyk9Pntjb25zdCBpPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUltcGVyYXRpdmVIYW5kbGUobywoKCk9PmkuY3VycmVudCkpLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e251bGw9PXR8fHQoaS5jdXJyZW50KX0pKSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIsUi5kZWZhdWx0KHtyZWY6aX0sYSksay5jcmVhdGVFbGVtZW50KHIse2F0dGFjaDpcImdlb21ldHJ5XCIsYXJnczplfSksbil9KSl9Y29uc3QgcXI9JHIoXCJib3hcIiksWHI9JHIoXCJjaXJjbGVcIiksWXI9JHIoXCJjb25lXCIpLEtyPSRyKFwiY3lsaW5kZXJcIiksUXI9JHIoXCJzcGhlcmVcIiksWnI9JHIoXCJwbGFuZVwiKSxKcj0kcihcInR1YmVcIiksZW49JHIoXCJ0b3J1c1wiKSx0bj0kcihcInRvcnVzS25vdFwiKSxybj0kcihcInRldHJhaGVkcm9uXCIpLG5uPSRyKFwicmluZ1wiKSxhbj0kcihcInBvbHloZWRyb25cIiksb249JHIoXCJpY29zYWhlZHJvblwiKSxzbj0kcihcIm9jdGFoZWRyb25cIiksbG49JHIoXCJkb2RlY2FoZWRyb25cIiksY249JHIoXCJleHRydWRlXCIpLHVuPSRyKFwibGF0aGVcIiksZG49JHIoXCJjYXBzdWxlXCIpLG1uPSRyKFwic2hhcGVcIiwoKHtnZW9tZXRyeTplfSk9Pntjb25zdCB0PWUuYXR0cmlidXRlcy5wb3NpdGlvbixyPShuZXcgRC5Cb3gzKS5zZXRGcm9tQnVmZmVyQXR0cmlidXRlKHQpLG49bmV3IEQuVmVjdG9yMztyLmdldFNpemUobik7Y29uc3QgYT1bXTtsZXQgbz0wLGk9MCxzPTAsbD0wO2ZvcihsZXQgZT0wO2U8dC5jb3VudDtlKyspbz10LmdldFgoZSksaT10LmdldFkoZSkscz0oby1yLm1pbi54KS9uLngsbD0oaS1yLm1pbi55KS9uLnksYS5wdXNoKHMsbCk7ZS5zZXRBdHRyaWJ1dGUoXCJ1dlwiLG5ldyBELkZsb2F0MzJCdWZmZXJBdHRyaWJ1dGUoYSwyKSl9KSksZm49MWUtNTtjb25zdCBwbj1rLmZvcndhcmRSZWYoKGZ1bmN0aW9uKHthcmdzOltlPTEsdD0xLHI9MV09W10scmFkaXVzOmE9LjA1LHN0ZXBzOm89MSxzbW9vdGhuZXNzOmk9NCxiZXZlbFNlZ21lbnRzOnM9NCxjcmVhc2VBbmdsZTpsPS40LGNoaWxkcmVuOmMsLi4udX0sbSl7Y29uc3QgZj1rLnVzZU1lbW8oKCgpPT5mdW5jdGlvbihlLHQscil7Y29uc3QgYT1uZXcgbi5TaGFwZSxvPXItZm47cmV0dXJuIGEuYWJzYXJjKGZuLGZuLGZuLC1NYXRoLlBJLzIsLU1hdGguUEksITApLGEuYWJzYXJjKGZuLHQtMipvLGZuLE1hdGguUEksTWF0aC5QSS8yLCEwKSxhLmFic2FyYyhlLTIqbyx0LTIqbyxmbixNYXRoLlBJLzIsMCwhMCksYS5hYnNhcmMoZS0yKm8sZm4sZm4sMCwtTWF0aC5QSS8yLCEwKSxhfShlLHQsYSkpLFtlLHQsYV0pLHA9ay51c2VNZW1vKCgoKT0+KHtkZXB0aDpyLTIqYSxiZXZlbEVuYWJsZWQ6ITAsYmV2ZWxTZWdtZW50czoyKnMsc3RlcHM6byxiZXZlbFNpemU6YS1mbixiZXZlbFRoaWNrbmVzczphLGN1cnZlU2VnbWVudHM6aX0pKSxbcixhLGldKSxoPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PntoLmN1cnJlbnQmJihoLmN1cnJlbnQuY2VudGVyKCksZC50b0NyZWFzZWROb3JtYWxzKGguY3VycmVudCxsKSl9KSxbZixwXSksay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLFIuZGVmYXVsdCh7cmVmOm19LHUpLGsuY3JlYXRlRWxlbWVudChcImV4dHJ1ZGVHZW9tZXRyeVwiLHtyZWY6aCxhcmdzOltmLHBdfSksYyl9KSk7ZnVuY3Rpb24gaG4oKXtjb25zdCBlPW5ldyBELkJ1ZmZlckdlb21ldHJ5LHQ9bmV3IEZsb2F0MzJBcnJheShbLTEsLTEsMywtMSwtMSwzXSk7cmV0dXJuIGUuYm91bmRpbmdTcGhlcmU9bmV3IEQuU3BoZXJlLGUuYm91bmRpbmdTcGhlcmUuc2V0KG5ldyBELlZlY3RvcjMsMS8wKSxlLnNldEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsbmV3IEQuQnVmZmVyQXR0cmlidXRlKHQsMikpLGV9Y29uc3QgeW49ay5mb3J3YXJkUmVmKChmdW5jdGlvbih7Y2hpbGRyZW46ZSwuLi50fSxyKXtjb25zdCBuPWsudXNlTWVtbyhobixbXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIixSLmRlZmF1bHQoe3JlZjpyLGdlb21ldHJ5Om4sZnJ1c3R1bUN1bGxlZDohMX0sdCksZSl9KSkseG49ay5mb3J3YXJkUmVmKCgoe2NoaWxkcmVuOmUsd2lkdGg6dCxoZWlnaHQ6cixkZXB0aDpuLGJveDM6YSxwcmVjaXNlOm89ITAsLi4uaX0scyk9Pntjb25zdCBsPWsudXNlUmVmKG51bGwpLGM9ay51c2VSZWYobnVsbCksdT1rLnVzZVJlZihudWxsKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57Yy5jdXJyZW50Lm1hdHJpeFdvcmxkLmlkZW50aXR5KCk7bGV0IGU9YXx8KG5ldyBELkJveDMpLnNldEZyb21PYmplY3QodS5jdXJyZW50LG8pO2NvbnN0IGk9ZS5tYXgueC1lLm1pbi54LHM9ZS5tYXgueS1lLm1pbi55LGw9ZS5tYXguei1lLm1pbi56O2xldCBkPU1hdGgubWF4KGkscyxsKTt0JiYoZD1pKSxyJiYoZD1zKSxuJiYoZD1sKSxjLmN1cnJlbnQuc2NhbGUuc2V0U2NhbGFyKDEvZCl9KSxbdCxyLG4sYSxvXSksay51c2VJbXBlcmF0aXZlSGFuZGxlKHMsKCgpPT5sLmN1cnJlbnQpLFtdKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLFIuZGVmYXVsdCh7cmVmOmx9LGkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpjfSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtyZWY6dX0sZSkpKX0pKSx2bj1lPT5lJiZlLmlzT3J0aG9ncmFwaGljQ2FtZXJhLGduPWU9PmUmJmUuaXNCb3gzLHpuPWsuY3JlYXRlQ29udGV4dChudWxsKTtmdW5jdGlvbiB3bih7Y2hpbGRyZW46ZSxkYW1waW5nOnQ9NixmaXQ6cixjbGlwOm4sb2JzZXJ2ZTpvLG1hcmdpbjppPTEuMixlcHM6cz0uMDEsb25GaXQ6bH0pe2NvbnN0IGM9ay51c2VSZWYobnVsbCkse2NhbWVyYTp1LGludmFsaWRhdGU6ZCxzaXplOm0sY29udHJvbHM6Zn09YS51c2VUaHJlZSgpLHA9ZixoPWsudXNlUmVmKGwpO2Z1bmN0aW9uIHkoZSx0KXtyZXR1cm4gTWF0aC5hYnMoZS54LXQueCk8cyYmTWF0aC5hYnMoZS55LXQueSk8cyYmTWF0aC5hYnMoZS56LXQueik8c31mdW5jdGlvbiB4KGUsdCxyLG4pe2UueD1ELk1hdGhVdGlscy5kYW1wKGUueCx0LngscixuKSxlLnk9RC5NYXRoVXRpbHMuZGFtcChlLnksdC55LHIsbiksZS56PUQuTWF0aFV0aWxzLmRhbXAoZS56LHQueixyLG4pfWguY3VycmVudD1sO2NvbnN0W3ZdPWsudXNlU3RhdGUoKCgpPT4oe2FuaW1hdGluZzohMSxmb2N1czpuZXcgRC5WZWN0b3IzLGNhbWVyYTpuZXcgRC5WZWN0b3IzLHpvb206MX0pKSksW2ddPWsudXNlU3RhdGUoKCgpPT4oe2ZvY3VzOm5ldyBELlZlY3RvcjMsY2FtZXJhOm5ldyBELlZlY3RvcjMsem9vbToxfSkpKSxbel09ay51c2VTdGF0ZSgoKCk9Pm5ldyBELkJveDMpKSx3PWsudXNlTWVtbygoKCk9PntmdW5jdGlvbiBlKCl7Y29uc3QgZT16LmdldFNpemUobmV3IEQuVmVjdG9yMyksdD16LmdldENlbnRlcihuZXcgRC5WZWN0b3IzKSxyPU1hdGgubWF4KGUueCxlLnksZS56KSxuPXZuKHUpPzQqcjpyLygyKk1hdGguYXRhbihNYXRoLlBJKnUuZm92LzM2MCkpLGE9dm4odSk/NCpyOm4vdS5hc3BlY3Qsbz1pKk1hdGgubWF4KG4sYSk7cmV0dXJue2JveDp6LHNpemU6ZSxjZW50ZXI6dCxkaXN0YW5jZTpvfX1yZXR1cm57Z2V0U2l6ZTplLHJlZnJlc2godCl7aWYoZ24odCkpei5jb3B5KHQpO2Vsc2V7Y29uc3QgZT10fHxjLmN1cnJlbnQ7aWYoIWUpcmV0dXJuIHRoaXM7ZS51cGRhdGVXb3JsZE1hdHJpeCghMCwhMCksei5zZXRGcm9tT2JqZWN0KGUpfWlmKHouaXNFbXB0eSgpKXtjb25zdCBlPXUucG9zaXRpb24ubGVuZ3RoKCl8fDEwO3ouc2V0RnJvbUNlbnRlckFuZFNpemUobmV3IEQuVmVjdG9yMyxuZXcgRC5WZWN0b3IzKGUsZSxlKSl9aWYoXCJPcnRob2dyYXBoaWNUcmFja2JhbGxDb250cm9sc1wiPT09KG51bGw9PXA/dm9pZCAwOnAuY29uc3RydWN0b3IubmFtZSkpe2NvbnN0e2Rpc3RhbmNlOnR9PWUoKSxyPXUucG9zaXRpb24uY2xvbmUoKS5zdWIocC50YXJnZXQpLm5vcm1hbGl6ZSgpLm11bHRpcGx5U2NhbGFyKHQpLG49cC50YXJnZXQuY2xvbmUoKS5hZGQocik7dS5wb3NpdGlvbi5jb3B5KG4pfXJldHVybiB0aGlzfSxjbGlwKCl7Y29uc3R7ZGlzdGFuY2U6dH09ZSgpO3JldHVybiBwJiYocC5tYXhEaXN0YW5jZT0xMCp0KSx1Lm5lYXI9dC8xMDAsdS5mYXI9MTAwKnQsdS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCkscCYmcC51cGRhdGUoKSxkKCksdGhpc30sdG8oe3Bvc2l0aW9uOnIsdGFyZ2V0Om59KXt2LmNhbWVyYS5jb3B5KHUucG9zaXRpb24pO2NvbnN0e2NlbnRlcjphfT1lKCk7cmV0dXJuIGcuY2FtZXJhLnNldCguLi5yKSxuP2cuZm9jdXMuc2V0KC4uLm4pOmcuZm9jdXMuY29weShhKSx0P3YuYW5pbWF0aW5nPSEwOnUucG9zaXRpb24uc2V0KC4uLnIpLHRoaXN9LGZpdCgpe3YuY2FtZXJhLmNvcHkodS5wb3NpdGlvbikscCYmdi5mb2N1cy5jb3B5KHAudGFyZ2V0KTtjb25zdHtjZW50ZXI6cixkaXN0YW5jZTpufT1lKCksYT1yLmNsb25lKCkuc3ViKHUucG9zaXRpb24pLm5vcm1hbGl6ZSgpLm11bHRpcGx5U2NhbGFyKG4pO2lmKGcuY2FtZXJhLmNvcHkocikuc3ViKGEpLGcuZm9jdXMuY29weShyKSx2bih1KSl7di56b29tPXUuem9vbTtsZXQgZT0wLG49MDtjb25zdCBhPVtuZXcgRC5WZWN0b3IzKHoubWluLngsei5taW4ueSx6Lm1pbi56KSxuZXcgRC5WZWN0b3IzKHoubWluLngsei5tYXgueSx6Lm1pbi56KSxuZXcgRC5WZWN0b3IzKHoubWluLngsei5taW4ueSx6Lm1heC56KSxuZXcgRC5WZWN0b3IzKHoubWluLngsei5tYXgueSx6Lm1heC56KSxuZXcgRC5WZWN0b3IzKHoubWF4Lngsei5tYXgueSx6Lm1heC56KSxuZXcgRC5WZWN0b3IzKHoubWF4Lngsei5tYXgueSx6Lm1pbi56KSxuZXcgRC5WZWN0b3IzKHoubWF4Lngsei5taW4ueSx6Lm1heC56KSxuZXcgRC5WZWN0b3IzKHoubWF4Lngsei5taW4ueSx6Lm1pbi56KV07ci5hcHBseU1hdHJpeDQodS5tYXRyaXhXb3JsZEludmVyc2UpO2Zvcihjb25zdCB0IG9mIGEpdC5hcHBseU1hdHJpeDQodS5tYXRyaXhXb3JsZEludmVyc2UpLGU9TWF0aC5tYXgoZSxNYXRoLmFicyh0Lnktci55KSksbj1NYXRoLm1heChuLE1hdGguYWJzKHQueC1yLngpKTtlKj0yLG4qPTI7Y29uc3Qgbz0odS50b3AtdS5ib3R0b20pL2Uscz0odS5yaWdodC11LmxlZnQpL247Zy56b29tPU1hdGgubWluKG8scykvaSx0fHwodS56b29tPWcuem9vbSx1LnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKSl9cmV0dXJuIHQ/di5hbmltYXRpbmc9ITA6KHUucG9zaXRpb24uY29weShnLmNhbWVyYSksdS5sb29rQXQoZy5mb2N1cykscCYmKHAudGFyZ2V0LmNvcHkoZy5mb2N1cykscC51cGRhdGUoKSkpLGguY3VycmVudCYmaC5jdXJyZW50KHRoaXMuZ2V0U2l6ZSgpKSxkKCksdGhpc319fSksW3osdSxwLGksdCxkXSk7ay51c2VMYXlvdXRFZmZlY3QoKCgpPT57aWYocCl7Y29uc3QgZT0oKT0+di5hbmltYXRpbmc9ITE7cmV0dXJuIHAuYWRkRXZlbnRMaXN0ZW5lcihcInN0YXJ0XCIsZSksKCk9PnAucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN0YXJ0XCIsZSl9fSksW3BdKTtjb25zdCBiPWsudXNlUmVmKDApO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9Pnsob3x8MD09Yi5jdXJyZW50KyspJiYody5yZWZyZXNoKCksciYmdy5maXQoKSxuJiZ3LmNsaXAoKSl9KSxbbSxuLHIsbyx1LHBdKSxhLnVzZUZyYW1lKCgoZSxyKT0+e2lmKHYuYW5pbWF0aW5nKXtpZih4KHYuZm9jdXMsZy5mb2N1cyx0LHIpLHgodi5jYW1lcmEsZy5jYW1lcmEsdCxyKSx2Lnpvb209RC5NYXRoVXRpbHMuZGFtcCh2Lnpvb20sZy56b29tLHQsciksdS5wb3NpdGlvbi5jb3B5KHYuY2FtZXJhKSx2bih1KSYmKHUuem9vbT12Lnpvb20sdS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCkpLHA/KHAudGFyZ2V0LmNvcHkodi5mb2N1cykscC51cGRhdGUoKSk6dS5sb29rQXQodi5mb2N1cyksZCgpLHZuKHUpJiYhKE1hdGguYWJzKHYuem9vbS1nLnpvb20pPHMpKXJldHVybjtpZighdm4odSkmJiF5KHYuY2FtZXJhLGcuY2FtZXJhKSlyZXR1cm47aWYocCYmIXkodi5mb2N1cyxnLmZvY3VzKSlyZXR1cm47di5hbmltYXRpbmc9ITF9fSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpjfSxrLmNyZWF0ZUVsZW1lbnQoem4uUHJvdmlkZXIse3ZhbHVlOnd9LGUpKX1mdW5jdGlvbiBibigpe3JldHVybiBrLnVzZUNvbnRleHQoem4pfWNvbnN0IEVuPWsuZm9yd2FyZFJlZigoKHtpbnRlbnNpdHk6ZT0xLGRlY2F5OnQsZGVjYXlSYXRlOnI9LjY1LG1heFlhdzpuPS4xLG1heFBpdGNoOm89LjEsbWF4Um9sbDppPS4xLHlhd0ZyZXF1ZW5jeTpzPS4xLHBpdGNoRnJlcXVlbmN5Omw9LjEscm9sbEZyZXF1ZW5jeTpjPS4xfSx1KT0+e2NvbnN0IG09YS51c2VUaHJlZSgoZT0+ZS5jYW1lcmEpKSxmPWEudXNlVGhyZWUoKGU9PmUuY29udHJvbHMpKSxwPWsudXNlUmVmKGUpLGg9ay51c2VSZWYobS5yb3RhdGlvbi5jbG9uZSgpKSxbeV09ay51c2VTdGF0ZSgoKCk9Pm5ldyBkLlNpbXBsZXhOb2lzZSkpLFt4XT1rLnVzZVN0YXRlKCgoKT0+bmV3IGQuU2ltcGxleE5vaXNlKSksW3ZdPWsudXNlU3RhdGUoKCgpPT5uZXcgZC5TaW1wbGV4Tm9pc2UpKSxnPSgpPT57KHAuY3VycmVudDwwfHxwLmN1cnJlbnQ+MSkmJihwLmN1cnJlbnQ9cC5jdXJyZW50PDA/MDoxKX07cmV0dXJuIGsudXNlSW1wZXJhdGl2ZUhhbmRsZSh1LCgoKT0+KHtnZXRJbnRlbnNpdHk6KCk9PnAuY3VycmVudCxzZXRJbnRlbnNpdHk6ZT0+e3AuY3VycmVudD1lLGcoKX19KSksW10pLGsudXNlRWZmZWN0KCgoKT0+e2lmKGYpe2NvbnN0IGU9KCk9PntoLmN1cnJlbnQ9bS5yb3RhdGlvbi5jbG9uZSgpfTtyZXR1cm4gZi5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSksZSgpLCgpPT57Zi5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsZSl9fX0pLFttLGZdKSxhLnVzZUZyYW1lKCgoZSxhKT0+e2NvbnN0IHU9TWF0aC5wb3cocC5jdXJyZW50LDIpLGQ9bip1Knkubm9pc2UoZS5jbG9jay5lbGFwc2VkVGltZSpzLDEpLGY9byp1Kngubm9pc2UoZS5jbG9jay5lbGFwc2VkVGltZSpsLDEpLHo9aSp1KnYubm9pc2UoZS5jbG9jay5lbGFwc2VkVGltZSpjLDEpO20ucm90YXRpb24uc2V0KGguY3VycmVudC54K2YsaC5jdXJyZW50LnkrZCxoLmN1cnJlbnQueit6KSx0JiZwLmN1cnJlbnQ+MCYmKHAuY3VycmVudC09ciphLGcoKSl9KSksbnVsbH0pKSxNbj1rLmZvcndhcmRSZWYoKCh7Y2hpbGRyZW46ZSxlbmFibGVkOnQ9ITAsc3BlZWQ6cj0xLHJvdGF0aW9uSW50ZW5zaXR5Om49MSxmbG9hdEludGVuc2l0eTpvPTEsZmxvYXRpbmdSYW5nZTppPVstLjEsLjFdLC4uLnN9LGwpPT57Y29uc3QgYz1rLnVzZVJlZihudWxsKSx1PWsudXNlUmVmKDFlNCpNYXRoLnJhbmRvbSgpKTtyZXR1cm4gYS51c2VGcmFtZSgoZT0+e3ZhciBhLHM7aWYoIXR8fDA9PT1yKXJldHVybjtjb25zdCBsPXUuY3VycmVudCtlLmNsb2NrLmdldEVsYXBzZWRUaW1lKCk7Yy5jdXJyZW50LnJvdGF0aW9uLng9TWF0aC5jb3MobC80KnIpLzgqbixjLmN1cnJlbnQucm90YXRpb24ueT1NYXRoLnNpbihsLzQqcikvOCpuLGMuY3VycmVudC5yb3RhdGlvbi56PU1hdGguc2luKGwvNCpyKS8yMCpuO2xldCBkPU1hdGguc2luKGwvNCpyKS8xMDtkPUQuTWF0aFV0aWxzLm1hcExpbmVhcihkLC0uMSwuMSxudWxsIT09KGE9bnVsbD09aT92b2lkIDA6aVswXSkmJnZvaWQgMCE9PWE/YTotLjEsbnVsbCE9PShzPW51bGw9PWk/dm9pZCAwOmlbMV0pJiZ2b2lkIDAhPT1zP3M6LjEpLGMuY3VycmVudC5wb3NpdGlvbi55PWQqbyxjLmN1cnJlbnQudXBkYXRlTWF0cml4KCl9KSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixzLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpBLmRlZmF1bHQoW2MsbF0pLG1hdHJpeEF1dG9VcGRhdGU6ITF9LGUpKX0pKSxTbj17YXBhcnRtZW50OlwibGVib21ib18xay5oZHJcIixjaXR5OlwicG90c2RhbWVyX3BsYXR6XzFrLmhkclwiLGRhd246XCJraWFyYV8xX2Rhd25fMWsuaGRyXCIsZm9yZXN0OlwiZm9yZXN0X3Nsb3BlXzFrLmhkclwiLGxvYmJ5Olwic3RfZmFnYW5zX2ludGVyaW9yXzFrLmhkclwiLG5pZ2h0OlwiZGlraG9sb2xvX25pZ2h0XzFrLmhkclwiLHBhcms6XCJyb29pdG91X3BhcmtfMWsuaGRyXCIsc3R1ZGlvOlwic3R1ZGlvX3NtYWxsXzAzXzFrLmhkclwiLHN1bnNldDpcInZlbmljZV9zdW5zZXRfMWsuaGRyXCIsd2FyZWhvdXNlOlwiZW1wdHlfd2FyZWhvdXNlXzAxXzFrLmhkclwifSxDbj1cImh0dHBzOi8vcmF3LmdpdGhhY2suY29tL3BtbmRycy9kcmVpLWFzc2V0cy80NTYwNjBhMjZiYmViOGZkZjc5MzI2ZjIyNGI2ZDk5YjhiY2NlNzM2L2hkcmkvXCIsUG49ZT0+QXJyYXkuaXNBcnJheShlKTtmdW5jdGlvbiBUbih7ZmlsZXM6ZT1bXCIvcHgucG5nXCIsXCIvbngucG5nXCIsXCIvcHkucG5nXCIsXCIvbnkucG5nXCIsXCIvcHoucG5nXCIsXCIvbnoucG5nXCJdLHBhdGg6dD1cIlwiLHByZXNldDpyLGVuY29kaW5nOm8sZXh0ZW5zaW9uczppfT17fSl7dmFyIHM7bGV0IGwsYz1udWxsLHU9ITE7aWYocil7aWYoIShyIGluIFNuKSl0aHJvdyBuZXcgRXJyb3IoXCJQcmVzZXQgbXVzdCBiZSBvbmUgb2Y6IFwiK09iamVjdC5rZXlzKFNuKS5qb2luKFwiLCBcIikpO2U9U25bcl0sdD1Dbn1pZih1PVBuKGUpLGw9UG4oZSk/XCJjdWJlXCI6ZS5zdGFydHNXaXRoKFwiZGF0YTphcHBsaWNhdGlvbi9leHJcIik/XCJleHJcIjplLnN0YXJ0c1dpdGgoXCJkYXRhOmFwcGxpY2F0aW9uL2hkclwiKT9cImhkclwiOm51bGw9PShzPWUuc3BsaXQoXCIuXCIpLnBvcCgpKXx8bnVsbD09KHM9cy5zcGxpdChcIj9cIikpfHxudWxsPT0ocz1zLnNoaWZ0KCkpP3ZvaWQgMDpzLnRvTG93ZXJDYXNlKCksYz11P24uQ3ViZVRleHR1cmVMb2FkZXI6XCJoZHJcIj09PWw/ZC5SR0JFTG9hZGVyOlwiZXhyXCI9PT1sP2QuRVhSTG9hZGVyOm51bGwsIWMpdGhyb3cgbmV3IEVycm9yKFwidXNlRW52aXJvbm1lbnQ6IFVucmVjb2duaXplZCBmaWxlIGV4dGVuc2lvbjogXCIrZSk7Y29uc3QgbT1hLnVzZUxvYWRlcihjLHU/W2VdOmUsKGU9PntudWxsPT1lLnNldFBhdGh8fGUuc2V0UGF0aCh0KSxpJiZpKGUpfSkpLGY9dT9tWzBdOm07Zi5tYXBwaW5nPXU/bi5DdWJlUmVmbGVjdGlvbk1hcHBpbmc6bi5FcXVpcmVjdGFuZ3VsYXJSZWZsZWN0aW9uTWFwcGluZztyZXR1cm5cImNvbG9yU3BhY2VcImluIGY/Zi5jb2xvclNwYWNlPShudWxsIT1vP286dSk/XCJzcmdiXCI6XCJzcmdiLWxpbmVhclwiOmYuZW5jb2Rpbmc9KG51bGwhPW8/bzp1KT8zMDAxOjNlMyxmfWNvbnN0IFJuPWU9PntyZXR1cm4odD1lKS5jdXJyZW50JiZ0LmN1cnJlbnQuaXNTY2VuZT9lLmN1cnJlbnQ6ZTt2YXIgdH07ZnVuY3Rpb24ga24oZSx0LHIsbixhPTApe2NvbnN0IG89Um4odHx8ciksaT1vLmJhY2tncm91bmQscz1vLmVudmlyb25tZW50LGw9by5iYWNrZ3JvdW5kQmx1cnJpbmVzc3x8MDtyZXR1cm5cIm9ubHlcIiE9PWUmJihvLmVudmlyb25tZW50PW4pLGUmJihvLmJhY2tncm91bmQ9biksZSYmdm9pZCAwIT09by5iYWNrZ3JvdW5kQmx1cnJpbmVzcyYmKG8uYmFja2dyb3VuZEJsdXJyaW5lc3M9YSksKCk9PntcIm9ubHlcIiE9PWUmJihvLmVudmlyb25tZW50PXMpLGUmJihvLmJhY2tncm91bmQ9aSksZSYmdm9pZCAwIT09by5iYWNrZ3JvdW5kQmx1cnJpbmVzcyYmKG8uYmFja2dyb3VuZEJsdXJyaW5lc3M9bCl9fWZ1bmN0aW9uIEZuKHtzY2VuZTplLGJhY2tncm91bmQ6dD0hMSxibHVyOnIsbWFwOm59KXtjb25zdCBvPWEudXNlVGhyZWUoKGU9PmUuc2NlbmUpKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57aWYobilyZXR1cm4ga24odCxlLG8sbixyKX0pLFtvLGUsbix0LHJdKSxudWxsfWZ1bmN0aW9uIERuKHtiYWNrZ3JvdW5kOmU9ITEsc2NlbmU6dCxibHVyOnIsLi4ubn0pe2NvbnN0IG89VG4obiksaT1hLnVzZVRocmVlKChlPT5lLnNjZW5lKSk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+a24oZSx0LGksbyxyKSksW28sZSx0LGkscl0pLG51bGx9ZnVuY3Rpb24gTG4oe2NoaWxkcmVuOmUsbmVhcjp0PTEsZmFyOnI9MWUzLHJlc29sdXRpb246bz0yNTYsZnJhbWVzOmk9MSxtYXA6cyxiYWNrZ3JvdW5kOmw9ITEsYmx1cjpjLHNjZW5lOnUsZmlsZXM6ZCxwYXRoOm0scHJlc2V0OmYsZXh0ZW5zaW9uczpwfSl7Y29uc3QgaD1hLnVzZVRocmVlKChlPT5lLmdsKSkseT1hLnVzZVRocmVlKChlPT5lLnNjZW5lKSkseD1rLnVzZVJlZihudWxsKSxbdl09ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLlNjZW5lKSksZz1rLnVzZU1lbW8oKCgpPT57Y29uc3QgZT1uZXcgbi5XZWJHTEN1YmVSZW5kZXJUYXJnZXQobyk7cmV0dXJuIGUudGV4dHVyZS50eXBlPW4uSGFsZkZsb2F0VHlwZSxlfSksW29dKTtrLnVzZUxheW91dEVmZmVjdCgoKCk9PigxPT09aSYmeC5jdXJyZW50LnVwZGF0ZShoLHYpLGtuKGwsdSx5LGcudGV4dHVyZSxjKSkpLFtlLHYsZy50ZXh0dXJlLHUseSxsLGksaF0pO2xldCB6PTE7cmV0dXJuIGEudXNlRnJhbWUoKCgpPT57KGk9PT0xLzB8fHo8aSkmJih4LmN1cnJlbnQudXBkYXRlKGgsdikseisrKX0pKSxrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLGEuY3JlYXRlUG9ydGFsKGsuY3JlYXRlRWxlbWVudChrLkZyYWdtZW50LG51bGwsZSxrLmNyZWF0ZUVsZW1lbnQoXCJjdWJlQ2FtZXJhXCIse3JlZjp4LGFyZ3M6W3QscixnXX0pLGR8fGY/ay5jcmVhdGVFbGVtZW50KERuLHtiYWNrZ3JvdW5kOiEwLGZpbGVzOmQscHJlc2V0OmYscGF0aDptLGV4dGVuc2lvbnM6cH0pOnM/ay5jcmVhdGVFbGVtZW50KEZuLHtiYWNrZ3JvdW5kOiEwLG1hcDpzLGV4dGVuc2lvbnM6cH0pOm51bGwpLHYpKX1mdW5jdGlvbiBBbihlKXt2YXIgdCxyLG4sbztjb25zdCBpPVRuKGUpLHM9ZS5tYXB8fGk7ay51c2VNZW1vKCgoKT0+YS5leHRlbmQoe0dyb3VuZFByb2plY3RlZEVudkltcGw6ZC5Hcm91bmRQcm9qZWN0ZWRFbnZ9KSksW10pO2NvbnN0IGw9ay51c2VNZW1vKCgoKT0+W3NdKSxbc10pLGM9bnVsbD09KHQ9ZS5ncm91bmQpP3ZvaWQgMDp0LmhlaWdodCx1PW51bGw9PShyPWUuZ3JvdW5kKT92b2lkIDA6ci5yYWRpdXMsbT1udWxsIT09KG49bnVsbD09KG89ZS5ncm91bmQpP3ZvaWQgMDpvLnNjYWxlKSYmdm9pZCAwIT09bj9uOjFlMztyZXR1cm4gay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxrLmNyZWF0ZUVsZW1lbnQoRm4sUi5kZWZhdWx0KHt9LGUse21hcDpzfSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VuZFByb2plY3RlZEVudkltcGxcIix7YXJnczpsLHNjYWxlOm0saGVpZ2h0OmMscmFkaXVzOnV9KSl9ZnVuY3Rpb24gX24oZSl7cmV0dXJuIGUuZ3JvdW5kP2suY3JlYXRlRWxlbWVudChBbixlKTplLm1hcD9rLmNyZWF0ZUVsZW1lbnQoRm4sZSk6ZS5jaGlsZHJlbj9rLmNyZWF0ZUVsZW1lbnQoTG4sZSk6ay5jcmVhdGVFbGVtZW50KERuLGUpfWNvbnN0IE9uPWsuZm9yd2FyZFJlZigoKHtzY2FsZTplPTEwLGZyYW1lczp0PTEvMCxvcGFjaXR5OnI9MSx3aWR0aDpuPTEsaGVpZ2h0Om89MSxibHVyOmk9MSxuZWFyOnM9MCxmYXI6bD0xMCxyZXNvbHV0aW9uOmM9NTEyLHNtb290aDp1PSEwLGNvbG9yOm09XCIjMDAwMDAwXCIsZGVwdGhXcml0ZTpmPSExLHJlbmRlck9yZGVyOnAsLi4uaH0seSk9Pntjb25zdCB4PWsudXNlUmVmKG51bGwpLHY9YS51c2VUaHJlZSgoZT0+ZS5zY2VuZSkpLGc9YS51c2VUaHJlZSgoZT0+ZS5nbCkpLHo9ay51c2VSZWYobnVsbCk7bio9QXJyYXkuaXNBcnJheShlKT9lWzBdOmV8fDEsbyo9QXJyYXkuaXNBcnJheShlKT9lWzFdOmV8fDE7Y29uc3RbdyxiLEUsTSxTLEMsUF09ay51c2VNZW1vKCgoKT0+e2NvbnN0IGU9bmV3IEQuV2ViR0xSZW5kZXJUYXJnZXQoYyxjKSx0PW5ldyBELldlYkdMUmVuZGVyVGFyZ2V0KGMsYyk7dC50ZXh0dXJlLmdlbmVyYXRlTWlwbWFwcz1lLnRleHR1cmUuZ2VuZXJhdGVNaXBtYXBzPSExO2NvbnN0IHI9bmV3IEQuUGxhbmVHZW9tZXRyeShuLG8pLnJvdGF0ZVgoTWF0aC5QSS8yKSxhPW5ldyBELk1lc2gociksaT1uZXcgRC5NZXNoRGVwdGhNYXRlcmlhbDtpLmRlcHRoVGVzdD1pLmRlcHRoV3JpdGU9ITEsaS5vbkJlZm9yZUNvbXBpbGU9ZT0+e2UudW5pZm9ybXM9ey4uLmUudW5pZm9ybXMsdWNvbG9yOnt2YWx1ZTpuZXcgRC5Db2xvcihtKX19LGUuZnJhZ21lbnRTaGFkZXI9ZS5mcmFnbWVudFNoYWRlci5yZXBsYWNlKFwidm9pZCBtYWluKCkge1wiLFwidW5pZm9ybSB2ZWMzIHVjb2xvcjtcXG4gICAgICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgXCIpLGUuZnJhZ21lbnRTaGFkZXI9ZS5mcmFnbWVudFNoYWRlci5yZXBsYWNlKFwidmVjNCggdmVjMyggMS4wIC0gZnJhZ0Nvb3JkWiApLCBvcGFjaXR5ICk7XCIsXCJ2ZWM0KCB1Y29sb3IgKiBmcmFnQ29vcmRaICogMi4wLCAoIDEuMCAtIGZyYWdDb29yZFogKSAqIDEuMCApO1wiKX07Y29uc3Qgcz1uZXcgRC5TaGFkZXJNYXRlcmlhbChkLkhvcml6b250YWxCbHVyU2hhZGVyKSxsPW5ldyBELlNoYWRlck1hdGVyaWFsKGQuVmVydGljYWxCbHVyU2hhZGVyKTtyZXR1cm4gbC5kZXB0aFRlc3Q9cy5kZXB0aFRlc3Q9ITEsW2UscixpLGEscyxsLHRdfSksW2MsbixvLGUsbV0pLFQ9ZT0+e00udmlzaWJsZT0hMCxNLm1hdGVyaWFsPVMsUy51bmlmb3Jtcy50RGlmZnVzZS52YWx1ZT13LnRleHR1cmUsUy51bmlmb3Jtcy5oLnZhbHVlPTEqZS8yNTYsZy5zZXRSZW5kZXJUYXJnZXQoUCksZy5yZW5kZXIoTSx6LmN1cnJlbnQpLE0ubWF0ZXJpYWw9QyxDLnVuaWZvcm1zLnREaWZmdXNlLnZhbHVlPVAudGV4dHVyZSxDLnVuaWZvcm1zLnYudmFsdWU9MSplLzI1NixnLnNldFJlbmRlclRhcmdldCh3KSxnLnJlbmRlcihNLHouY3VycmVudCksTS52aXNpYmxlPSExfTtsZXQgRixMLEE9MDtyZXR1cm4gYS51c2VGcmFtZSgoKCk9Pnt6LmN1cnJlbnQmJih0PT09MS8wfHxBPHQpJiYoQSsrLEY9di5iYWNrZ3JvdW5kLEw9di5vdmVycmlkZU1hdGVyaWFsLHguY3VycmVudC52aXNpYmxlPSExLHYuYmFja2dyb3VuZD1udWxsLHYub3ZlcnJpZGVNYXRlcmlhbD1FLGcuc2V0UmVuZGVyVGFyZ2V0KHcpLGcucmVuZGVyKHYsei5jdXJyZW50KSxUKGkpLHUmJlQoLjQqaSksZy5zZXRSZW5kZXJUYXJnZXQobnVsbCkseC5jdXJyZW50LnZpc2libGU9ITAsdi5vdmVycmlkZU1hdGVyaWFsPUwsdi5iYWNrZ3JvdW5kPUYpfSkpLGsudXNlSW1wZXJhdGl2ZUhhbmRsZSh5LCgoKT0+eC5jdXJyZW50KSxbXSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe1wicm90YXRpb24teFwiOk1hdGguUEkvMn0saCx7cmVmOnh9KSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIse3JlbmRlck9yZGVyOnAsZ2VvbWV0cnk6YixzY2FsZTpbMSwtMSwxXSxyb3RhdGlvbjpbLU1hdGguUEkvMiwwLDBdfSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoQmFzaWNNYXRlcmlhbFwiLHt0cmFuc3BhcmVudDohMCxtYXA6dy50ZXh0dXJlLG9wYWNpdHk6cixkZXB0aFdyaXRlOmZ9KSksay5jcmVhdGVFbGVtZW50KFwib3J0aG9ncmFwaGljQ2FtZXJhXCIse3JlZjp6LGFyZ3M6Wy1uLzIsbi8yLG8vMiwtby8yLHMsbF19KSl9KSk7Y29uc3QgTm49ay5jcmVhdGVDb250ZXh0KG51bGwpLEJuPVNlKHtjb2xvcjpuZXcgRC5Db2xvcixibGVuZDoyLGFscGhhVGVzdDouNzUsb3BhY2l0eTowLG1hcDpudWxsfSxcInZhcnlpbmcgdmVjMiB2VXY7XFxuICAgdm9pZCBtYWluKCkge1xcbiAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmlld01hdHJpeCAqIG1vZGVsTWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4pO1xcbiAgICAgdlV2ID0gdXY7XFxuICAgfVwiLGB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgIHVuaWZvcm0gc2FtcGxlcjJEIG1hcDtcXG4gICB1bmlmb3JtIHZlYzMgY29sb3I7XFxuICAgdW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcbiAgIHVuaWZvcm0gZmxvYXQgYWxwaGFUZXN0O1xcbiAgIHVuaWZvcm0gZmxvYXQgYmxlbmQ7XFxuICAgdm9pZCBtYWluKCkge1xcbiAgICAgdmVjNCBzYW1wbGVkRGlmZnVzZUNvbG9yID0gdGV4dHVyZTJEKG1hcCwgdlV2KTtcXG4gICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoY29sb3IgKiBzYW1wbGVkRGlmZnVzZUNvbG9yLnIgKiBibGVuZCwgbWF4KDAuMCwgKDEuMCAtIChzYW1wbGVkRGlmZnVzZUNvbG9yLnIgKyBzYW1wbGVkRGlmZnVzZUNvbG9yLmcgKyBzYW1wbGVkRGlmZnVzZUNvbG9yLmIpIC8gYWxwaGFUZXN0KSkgKiBvcGFjaXR5KTtcXG4gICAgICNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cXG4gICAgICNpbmNsdWRlIDwke1RlPj0xNTQ/XCJjb2xvcnNwYWNlX2ZyYWdtZW50XCI6XCJlbmNvZGluZ3NfZnJhZ21lbnRcIn0+XFxuICAgfWApLEluPWsuZm9yd2FyZFJlZigoKHtjaGlsZHJlbjplLHRlbXBvcmFsOnQsZnJhbWVzOnI9NDAsbGltaXQ6bj0xLzAsYmxlbmQ6bz0yMCxzY2FsZTppPTEwLG9wYWNpdHk6cz0xLGFscGhhVGVzdDpsPS43NSxjb2xvcjpjPVwiYmxhY2tcIixjb2xvckJsZW5kOnU9MixyZXNvbHV0aW9uOmQ9MTAyNCx0b25lTWFwcGVkOm09ITAsLi4uZn0scCk9PnthLmV4dGVuZCh7U29mdFNoYWRvd01hdGVyaWFsOkJufSk7Y29uc3QgaD1hLnVzZVRocmVlKChlPT5lLmdsKSkseT1hLnVzZVRocmVlKChlPT5lLnNjZW5lKSkseD1hLnVzZVRocmVlKChlPT5lLmNhbWVyYSkpLHY9YS51c2VUaHJlZSgoZT0+ZS5pbnZhbGlkYXRlKSksZz1rLnVzZVJlZihudWxsKSx6PWsudXNlUmVmKG51bGwpLFt3XT1rLnVzZVN0YXRlKCgoKT0+bmV3IFZuKGgseSxkKSkpO2sudXNlTGF5b3V0RWZmZWN0KCgoKT0+e3cuY29uZmlndXJlKGcuY3VycmVudCl9KSxbXSk7Y29uc3QgYj1rLnVzZU1lbW8oKCgpPT4oe2xpZ2h0czpuZXcgTWFwLHRlbXBvcmFsOiEhdCxmcmFtZXM6TWF0aC5tYXgoMixyKSxibGVuZDpNYXRoLm1heCgyLHI9PT0xLzA/bzpyKSxjb3VudDowLGdldE1lc2g6KCk9PmcuY3VycmVudCxyZXNldDooKT0+e3cuY2xlYXIoKTtjb25zdCBlPWcuY3VycmVudC5tYXRlcmlhbDtlLm9wYWNpdHk9MCxlLmFscGhhVGVzdD0wLGIuY291bnQ9MH0sdXBkYXRlOihlPTEpPT57Y29uc3QgdD1nLmN1cnJlbnQubWF0ZXJpYWw7Yi50ZW1wb3JhbD8odC5vcGFjaXR5PU1hdGgubWluKHMsdC5vcGFjaXR5K3MvYi5ibGVuZCksdC5hbHBoYVRlc3Q9TWF0aC5taW4obCx0LmFscGhhVGVzdCtsL2IuYmxlbmQpKToodC5vcGFjaXR5PXMsdC5hbHBoYVRlc3Q9bCksei5jdXJyZW50LnZpc2libGU9ITAsdy5wcmVwYXJlKCk7Zm9yKGxldCB0PTA7dDxlO3QrKyliLmxpZ2h0cy5mb3JFYWNoKChlPT5lLnVwZGF0ZSgpKSksdy51cGRhdGUoeCxiLmJsZW5kKTt6LmN1cnJlbnQudmlzaWJsZT0hMSx3LmZpbmlzaCgpfX0pKSxbdyx4LHksdCxyLG8scyxsXSk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2IucmVzZXQoKSxiLnRlbXBvcmFsfHxiLmZyYW1lcz09PTEvMHx8Yi51cGRhdGUoYi5ibGVuZCl9KSksay51c2VJbXBlcmF0aXZlSGFuZGxlKHAsKCgpPT5iKSxbYl0pLGEudXNlRnJhbWUoKCgpPT57KGIudGVtcG9yYWx8fGIuZnJhbWVzPT09MS8wKSYmYi5jb3VudDxiLmZyYW1lcyYmYi5jb3VudDxuJiYodigpLGIudXBkYXRlKCksYi5jb3VudCsrKX0pKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLGYsay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7dHJhdmVyc2U6KCk9Pm51bGwscmVmOnp9LGsuY3JlYXRlRWxlbWVudChObi5Qcm92aWRlcix7dmFsdWU6Yn0sZSkpLGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIix7cmVjZWl2ZVNoYWRvdzohMCxyZWY6ZyxzY2FsZTppLHJvdGF0aW9uOlstTWF0aC5QSS8yLDAsMF19LGsuY3JlYXRlRWxlbWVudChcInBsYW5lR2VvbWV0cnlcIixudWxsKSxrLmNyZWF0ZUVsZW1lbnQoXCJzb2Z0U2hhZG93TWF0ZXJpYWxcIix7dHJhbnNwYXJlbnQ6ITAsZGVwdGhXcml0ZTohMSx0b25lTWFwcGVkOm0sY29sb3I6YyxibGVuZDp1LG1hcDp3LnByb2dyZXNzaXZlTGlnaHRNYXAyLnRleHR1cmV9KSkpfSkpLFVuPWsuZm9yd2FyZFJlZigoKHtjYXN0U2hhZG93OmU9ITAsYmlhczp0PS4wMDEsbWFwU2l6ZTpyPTUxMixzaXplOm49NSxuZWFyOmE9LjUsZmFyOm89NTAwLGZyYW1lczppPTEscG9zaXRpb246cz1bMCwwLDBdLHJhZGl1czpsPTEsYW1vdW50OmM9OCxpbnRlbnNpdHk6dT0oVGU+PTE1NT9NYXRoLlBJOjEpLGFtYmllbnQ6ZD0uNSwuLi5tfSxmKT0+e2NvbnN0IHA9ay51c2VSZWYobnVsbCksaD1uZXcgRC5WZWN0b3IzKC4uLnMpLmxlbmd0aCgpLHk9ay51c2VDb250ZXh0KE5uKSx4PWsudXNlQ2FsbGJhY2soKCgpPT57bGV0IGU7aWYocC5jdXJyZW50KWZvcihsZXQgdD0wO3Q8cC5jdXJyZW50LmNoaWxkcmVuLmxlbmd0aDt0KyspaWYoZT1wLmN1cnJlbnQuY2hpbGRyZW5bdF0sTWF0aC5yYW5kb20oKT5kKWUucG9zaXRpb24uc2V0KHNbMF0rRC5NYXRoVXRpbHMucmFuZEZsb2F0U3ByZWFkKGwpLHNbMV0rRC5NYXRoVXRpbHMucmFuZEZsb2F0U3ByZWFkKGwpLHNbMl0rRC5NYXRoVXRpbHMucmFuZEZsb2F0U3ByZWFkKGwpKTtlbHNle2xldCB0PU1hdGguYWNvcygyKk1hdGgucmFuZG9tKCktMSktTWF0aC5QSS8yLHI9MipNYXRoLlBJKk1hdGgucmFuZG9tKCk7ZS5wb3NpdGlvbi5zZXQoTWF0aC5jb3ModCkqTWF0aC5jb3MocikqaCxNYXRoLmFicyhNYXRoLmNvcyh0KSpNYXRoLnNpbihyKSpoKSxNYXRoLnNpbih0KSpoKX19KSxbbCxkLGgsLi4uc10pLHY9ay51c2VNZW1vKCgoKT0+KHt1cGRhdGU6eH0pKSxbeF0pO3JldHVybiBrLnVzZUltcGVyYXRpdmVIYW5kbGUoZiwoKCk9PnYpLFt2XSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57Y29uc3QgZT1wLmN1cnJlbnQ7cmV0dXJuIHkmJnkubGlnaHRzLnNldChlLnV1aWQsdiksKCk9Pnt5LmxpZ2h0cy5kZWxldGUoZS51dWlkKX19KSxbeSx2XSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjpwfSxtKSxBcnJheS5mcm9tKHtsZW5ndGg6Y30sKChpLHMpPT5rLmNyZWF0ZUVsZW1lbnQoXCJkaXJlY3Rpb25hbExpZ2h0XCIse2tleTpzLGNhc3RTaGFkb3c6ZSxcInNoYWRvdy1iaWFzXCI6dCxcInNoYWRvdy1tYXBTaXplXCI6W3Iscl0saW50ZW5zaXR5OnUvY30say5jcmVhdGVFbGVtZW50KFwib3J0aG9ncmFwaGljQ2FtZXJhXCIse2F0dGFjaDpcInNoYWRvdy1jYW1lcmFcIixhcmdzOlstbixuLG4sLW4sYSxvXX0pKSkpKX0pKTtjbGFzcyBWbntjb25zdHJ1Y3RvcihlLHQscj0xMDI0KXt0aGlzLnJlbmRlcmVyPWUsdGhpcy5yZXM9cix0aGlzLnNjZW5lPXQsdGhpcy5idWZmZXIxQWN0aXZlPSExLHRoaXMubGlnaHRzPVtdLHRoaXMubWVzaGVzPVtdLHRoaXMub2JqZWN0PW51bGwsdGhpcy5jbGVhckNvbG9yPW5ldyBELkNvbG9yLHRoaXMuY2xlYXJBbHBoYT0wO2NvbnN0IG49e3R5cGU6RC5IYWxmRmxvYXRUeXBlLG1hZ0ZpbHRlcjpELk5lYXJlc3RGaWx0ZXIsbWluRmlsdGVyOkQuTmVhcmVzdEZpbHRlcn07dGhpcy5wcm9ncmVzc2l2ZUxpZ2h0TWFwMT1uZXcgRC5XZWJHTFJlbmRlclRhcmdldCh0aGlzLnJlcyx0aGlzLnJlcyxuKSx0aGlzLnByb2dyZXNzaXZlTGlnaHRNYXAyPW5ldyBELldlYkdMUmVuZGVyVGFyZ2V0KHRoaXMucmVzLHRoaXMucmVzLG4pLHRoaXMuZGlzY2FyZE1hdD1uZXcgQnIsdGhpcy50YXJnZXRNYXQ9bmV3IEQuTWVzaExhbWJlcnRNYXRlcmlhbCh7Zm9nOiExfSksdGhpcy5wcmV2aW91c1NoYWRvd01hcD17dmFsdWU6dGhpcy5wcm9ncmVzc2l2ZUxpZ2h0TWFwMS50ZXh0dXJlfSx0aGlzLmF2ZXJhZ2luZ1dpbmRvdz17dmFsdWU6MTAwfSx0aGlzLnRhcmdldE1hdC5vbkJlZm9yZUNvbXBpbGU9ZT0+e2UudmVydGV4U2hhZGVyPVwidmFyeWluZyB2ZWMyIHZVdjtcXG5cIitlLnZlcnRleFNoYWRlci5zbGljZSgwLC0xKStcInZVdiA9IHV2OyBnbF9Qb3NpdGlvbiA9IHZlYzQoKHV2IC0gMC41KSAqIDIuMCwgMS4wLCAxLjApOyB9XCI7Y29uc3QgdD1lLmZyYWdtZW50U2hhZGVyLmluZGV4T2YoXCJ2b2lkIG1haW4oKSB7XCIpO2UuZnJhZ21lbnRTaGFkZXI9XCJ2YXJ5aW5nIHZlYzIgdlV2O1xcblwiK2UuZnJhZ21lbnRTaGFkZXIuc2xpY2UoMCx0KStcInVuaWZvcm0gc2FtcGxlcjJEIHByZXZpb3VzU2hhZG93TWFwO1xcblxcdHVuaWZvcm0gZmxvYXQgYXZlcmFnaW5nV2luZG93O1xcblwiK2UuZnJhZ21lbnRTaGFkZXIuc2xpY2UodC0xLC0xKStcIlxcbnZlYzMgdGV4ZWxPbGQgPSB0ZXh0dXJlMkQocHJldmlvdXNTaGFkb3dNYXAsIHZVdikucmdiO1xcbiAgICAgICAgZ2xfRnJhZ0NvbG9yLnJnYiA9IG1peCh0ZXhlbE9sZCwgZ2xfRnJhZ0NvbG9yLnJnYiwgMS4wLyBhdmVyYWdpbmdXaW5kb3cpO1xcbiAgICAgIH1cIixlLnVuaWZvcm1zLnByZXZpb3VzU2hhZG93TWFwPXRoaXMucHJldmlvdXNTaGFkb3dNYXAsZS51bmlmb3Jtcy5hdmVyYWdpbmdXaW5kb3c9dGhpcy5hdmVyYWdpbmdXaW5kb3d9fWNsZWFyKCl7dGhpcy5yZW5kZXJlci5nZXRDbGVhckNvbG9yKHRoaXMuY2xlYXJDb2xvciksdGhpcy5jbGVhckFscGhhPXRoaXMucmVuZGVyZXIuZ2V0Q2xlYXJBbHBoYSgpLHRoaXMucmVuZGVyZXIuc2V0Q2xlYXJDb2xvcihcImJsYWNrXCIsMSksdGhpcy5yZW5kZXJlci5zZXRSZW5kZXJUYXJnZXQodGhpcy5wcm9ncmVzc2l2ZUxpZ2h0TWFwMSksdGhpcy5yZW5kZXJlci5jbGVhcigpLHRoaXMucmVuZGVyZXIuc2V0UmVuZGVyVGFyZ2V0KHRoaXMucHJvZ3Jlc3NpdmVMaWdodE1hcDIpLHRoaXMucmVuZGVyZXIuY2xlYXIoKSx0aGlzLnJlbmRlcmVyLnNldFJlbmRlclRhcmdldChudWxsKSx0aGlzLnJlbmRlcmVyLnNldENsZWFyQ29sb3IodGhpcy5jbGVhckNvbG9yLHRoaXMuY2xlYXJBbHBoYSksdGhpcy5saWdodHM9W10sdGhpcy5tZXNoZXM9W10sdGhpcy5zY2VuZS50cmF2ZXJzZSgoZT0+eyFmdW5jdGlvbihlKXtyZXR1cm4hIWUuZ2VvbWV0cnl9KGUpP2Z1bmN0aW9uKGUpe3JldHVybiBlLmlzTGlnaHR9KGUpJiZ0aGlzLmxpZ2h0cy5wdXNoKHtvYmplY3Q6ZSxpbnRlbnNpdHk6ZS5pbnRlbnNpdHl9KTp0aGlzLm1lc2hlcy5wdXNoKHtvYmplY3Q6ZSxtYXRlcmlhbDplLm1hdGVyaWFsfSl9KSl9cHJlcGFyZSgpe3RoaXMubGlnaHRzLmZvckVhY2goKGU9PmUub2JqZWN0LmludGVuc2l0eT0wKSksdGhpcy5tZXNoZXMuZm9yRWFjaCgoZT0+ZS5vYmplY3QubWF0ZXJpYWw9dGhpcy5kaXNjYXJkTWF0KSl9ZmluaXNoKCl7dGhpcy5saWdodHMuZm9yRWFjaCgoZT0+ZS5vYmplY3QuaW50ZW5zaXR5PWUuaW50ZW5zaXR5KSksdGhpcy5tZXNoZXMuZm9yRWFjaCgoZT0+ZS5vYmplY3QubWF0ZXJpYWw9ZS5tYXRlcmlhbCkpfWNvbmZpZ3VyZShlKXt0aGlzLm9iamVjdD1lfXVwZGF0ZShlLHQ9MTAwKXtpZighdGhpcy5vYmplY3QpcmV0dXJuO3RoaXMuYXZlcmFnaW5nV2luZG93LnZhbHVlPXQsdGhpcy5vYmplY3QubWF0ZXJpYWw9dGhpcy50YXJnZXRNYXQ7Y29uc3Qgcj10aGlzLmJ1ZmZlcjFBY3RpdmU/dGhpcy5wcm9ncmVzc2l2ZUxpZ2h0TWFwMTp0aGlzLnByb2dyZXNzaXZlTGlnaHRNYXAyLG49dGhpcy5idWZmZXIxQWN0aXZlP3RoaXMucHJvZ3Jlc3NpdmVMaWdodE1hcDI6dGhpcy5wcm9ncmVzc2l2ZUxpZ2h0TWFwMSxhPXRoaXMuc2NlbmUuYmFja2dyb3VuZDt0aGlzLnNjZW5lLmJhY2tncm91bmQ9bnVsbCx0aGlzLnJlbmRlcmVyLnNldFJlbmRlclRhcmdldChyKSx0aGlzLnByZXZpb3VzU2hhZG93TWFwLnZhbHVlPW4udGV4dHVyZSx0aGlzLmJ1ZmZlcjFBY3RpdmU9IXRoaXMuYnVmZmVyMUFjdGl2ZSx0aGlzLnJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLGUpLHRoaXMucmVuZGVyZXIuc2V0UmVuZGVyVGFyZ2V0KG51bGwpLHRoaXMuc2NlbmUuYmFja2dyb3VuZD1hfX1jb25zdCBqbj17cmVtYnJhbmR0OnttYWluOlsxLDIsMV0sZmlsbDpbLTIsLS41LC0yXX0scG9ydHJhaXQ6e21haW46Wy0xLDIsLjVdLGZpbGw6Wy0xLC41LC0xLjVdfSx1cGZyb250OnttYWluOlswLDIsMV0sZmlsbDpbLTEsLjUsLTEuNV19LHNvZnQ6e21haW46Wy0yLDQsNF0sZmlsbDpbLTEsLjUsLTEuNV19fTtmdW5jdGlvbiBXbih7cmFkaXVzOmUsYWRqdXN0Q2FtZXJhOnR9KXtjb25zdCByPWJuKCk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+e3QmJnIucmVmcmVzaCgpLmNsaXAoKS5maXQoKX0pLFtlLHRdKSxudWxsfWNvbnN0IEduPWU9PjA9PT1lPzA6TWF0aC5wb3coMiwxMCplLTEwKTtjb25zdCBIbj1rLmZvcndhcmRSZWYoKCh7Zm9nOmU9ITEscmVuZGVyT3JkZXI6dCxkZXB0aFdyaXRlOnI9ITEsY29sb3JTdG9wOmE9MCxjb2xvcjpvPVwiYmxhY2tcIixvcGFjaXR5Omk9LjUsLi4uc30sbCk9Pntjb25zdCBjPWsudXNlTWVtbygoKCk9Pntjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7ZS53aWR0aD0xMjgsZS5oZWlnaHQ9MTI4O2NvbnN0IHQ9ZS5nZXRDb250ZXh0KFwiMmRcIikscj10LmNyZWF0ZVJhZGlhbEdyYWRpZW50KGUud2lkdGgvMixlLmhlaWdodC8yLDAsZS53aWR0aC8yLGUuaGVpZ2h0LzIsZS53aWR0aC8yKTtyZXR1cm4gci5hZGRDb2xvclN0b3AoYSxuZXcgbi5Db2xvcihvKS5nZXRTdHlsZSgpKSxyLmFkZENvbG9yU3RvcCgxLFwicmdiYSgwLDAsMCwwKVwiKSx0LmZpbGxTdHlsZT1yLHQuZmlsbFJlY3QoMCwwLGUud2lkdGgsZS5oZWlnaHQpLGV9KSxbbyxhXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIixSLmRlZmF1bHQoe3JlbmRlck9yZGVyOnQscmVmOmwsXCJyb3RhdGlvbi14XCI6LU1hdGguUEkvMn0scyksay5jcmVhdGVFbGVtZW50KFwicGxhbmVHZW9tZXRyeVwiLG51bGwpLGsuY3JlYXRlRWxlbWVudChcIm1lc2hCYXNpY01hdGVyaWFsXCIse3RyYW5zcGFyZW50OiEwLG9wYWNpdHk6aSxmb2c6ZSxkZXB0aFdyaXRlOnIsc2lkZTpuLkRvdWJsZVNpZGV9LGsuY3JlYXRlRWxlbWVudChcImNhbnZhc1RleHR1cmVcIix7YXR0YWNoOlwibWFwXCIsYXJnczpbY119KSkpfSkpO2Z1bmN0aW9uICRuKGU9RC5Gcm9udFNpZGUpe2NvbnN0IHQ9e3ZhbHVlOm5ldyBELk1hdHJpeDR9O3JldHVybiBPYmplY3QuYXNzaWduKG5ldyBELk1lc2hOb3JtYWxNYXRlcmlhbCh7c2lkZTplfSkse3ZpZXdNYXRyaXg6dCxvbkJlZm9yZUNvbXBpbGU6ZT0+e2UudW5pZm9ybXMudmlld01hdHJpeD10LGUuZnJhZ21lbnRTaGFkZXI9XCJ2ZWMzIGludmVyc2VUcmFuc2Zvcm1EaXJlY3Rpb24oIGluIHZlYzMgZGlyLCBpbiBtYXQ0IG1hdHJpeCApIHtcXG4gICAgICAgICAgIHJldHVybiBub3JtYWxpemUoICggdmVjNCggZGlyLCAwLjAgKSAqIG1hdHJpeCApLnh5eiApO1xcbiAgICAgICAgIH1cXG5cIitlLmZyYWdtZW50U2hhZGVyLnJlcGxhY2UoXCIjaW5jbHVkZSA8bm9ybWFsX2ZyYWdtZW50X21hcHM+XCIsXCIjaW5jbHVkZSA8bm9ybWFsX2ZyYWdtZW50X21hcHM+XFxuICAgICAgICAgICBub3JtYWwgPSBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCBub3JtYWwsIHZpZXdNYXRyaXggKTtcXG5cIil9fSl9Y29uc3QgcW49U2Uoe2NhdXN0aWNzVGV4dHVyZTpudWxsLGNhdXN0aWNzVGV4dHVyZUI6bnVsbCxjb2xvcjpuZXcgRC5Db2xvcixsaWdodFByb2pNYXRyaXg6bmV3IEQuTWF0cml4NCxsaWdodFZpZXdNYXRyaXg6bmV3IEQuTWF0cml4NH0sXCJ2YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247ICAgXFxuICAgdm9pZCBtYWluKCkge1xcbiAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogdmlld01hdHJpeCAqIG1vZGVsTWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4pO1xcbiAgICAgdmVjNCB3b3JsZFBvc2l0aW9uID0gbW9kZWxNYXRyaXggKiB2ZWM0KHBvc2l0aW9uLCAxLik7XFxuICAgICB2V29ybGRQb3NpdGlvbiA9IHdvcmxkUG9zaXRpb24ueHl6O1xcbiAgIH1cIixgdmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xcbiAgdW5pZm9ybSB2ZWMzIGNvbG9yO1xcbiAgdW5pZm9ybSBzYW1wbGVyMkQgY2F1c3RpY3NUZXh0dXJlOyBcXG4gIHVuaWZvcm0gc2FtcGxlcjJEIGNhdXN0aWNzVGV4dHVyZUI7IFxcbiAgdW5pZm9ybSBtYXQ0IGxpZ2h0UHJvak1hdHJpeDtcXG4gIHVuaWZvcm0gbWF0NCBsaWdodFZpZXdNYXRyaXg7XFxuICAgdm9pZCBtYWluKCkge1xcbiAgICAvLyBBcHBseSBjYXVzdGljcyAgXFxuICAgIHZlYzQgbGlnaHRTcGFjZVBvcyA9IGxpZ2h0UHJvak1hdHJpeCAqIGxpZ2h0Vmlld01hdHJpeCAqIHZlYzQodldvcmxkUG9zaXRpb24sIDEuMCk7XFxuICAgIGxpZ2h0U3BhY2VQb3MueHl6IC89IGxpZ2h0U3BhY2VQb3MudztcXG4gICAgbGlnaHRTcGFjZVBvcy54eXogPSBsaWdodFNwYWNlUG9zLnh5eiAqIDAuNSArIDAuNTsgXFxuICAgIHZlYzMgZnJvbnQgPSB0ZXh0dXJlMkQoY2F1c3RpY3NUZXh0dXJlLCBsaWdodFNwYWNlUG9zLnh5KS5yZ2I7XFxuICAgIHZlYzMgYmFjayA9IHRleHR1cmUyRChjYXVzdGljc1RleHR1cmVCLCBsaWdodFNwYWNlUG9zLnh5KS5yZ2I7XFxuICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoKGZyb250ICsgYmFjaykgKiBjb2xvciwgMS4wKTtcXG4gICAgI2luY2x1ZGUgPHRvbmVtYXBwaW5nX2ZyYWdtZW50PlxcbiAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgIH1gKSxYbj1TZSh7Y2FtZXJhTWF0cml4V29ybGQ6bmV3IEQuTWF0cml4NCxjYW1lcmFQcm9qZWN0aW9uTWF0cml4SW52Om5ldyBELk1hdHJpeDQsbm9ybWFsVGV4dHVyZTpudWxsLGRlcHRoVGV4dHVyZTpudWxsLGxpZ2h0RGlyOm5ldyBELlZlY3RvcjMoMCwxLDApLGxpZ2h0UGxhbmVOb3JtYWw6bmV3IEQuVmVjdG9yMygwLDEsMCksbGlnaHRQbGFuZUNvbnN0YW50OjAsbmVhcjouMSxmYXI6MTAwLG1vZGVsTWF0cml4Om5ldyBELk1hdHJpeDQsd29ybGRSYWRpdXM6MS80MCxpb3I6MS4xLGJvdW5jZXM6MCxyZXNvbHV0aW9uOjEwMjQsc2l6ZToxMCxpbnRlbnNpdHk6LjV9LFwiXFxuICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgdm9pZCBtYWluKCkge1xcbiAgICAgIHZVdiA9IHV2O1xcbiAgICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIG1vZGVsVmlld01hdHJpeCAqIHZlYzQocG9zaXRpb24sIDEuMCk7XFxuICB9XCIsXCIgIFxcbiAgdW5pZm9ybSBtYXQ0IGNhbWVyYU1hdHJpeFdvcmxkO1xcbiAgdW5pZm9ybSBtYXQ0IGNhbWVyYVByb2plY3Rpb25NYXRyaXhJbnY7XFxuICB1bmlmb3JtIHZlYzMgbGlnaHREaXI7XFxuICB1bmlmb3JtIHZlYzMgbGlnaHRQbGFuZU5vcm1hbDtcXG4gIHVuaWZvcm0gZmxvYXQgbGlnaHRQbGFuZUNvbnN0YW50O1xcbiAgdW5pZm9ybSBmbG9hdCBuZWFyO1xcbiAgdW5pZm9ybSBmbG9hdCBmYXI7XFxuICB1bmlmb3JtIGZsb2F0IHRpbWU7XFxuICB1bmlmb3JtIGZsb2F0IHdvcmxkUmFkaXVzO1xcbiAgdW5pZm9ybSBmbG9hdCByZXNvbHV0aW9uO1xcbiAgdW5pZm9ybSBmbG9hdCBzaXplO1xcbiAgdW5pZm9ybSBmbG9hdCBpbnRlbnNpdHk7XFxuICB1bmlmb3JtIGZsb2F0IGlvcjtcXG4gIHByZWNpc2lvbiBoaWdocCBpc2FtcGxlcjJEO1xcbiAgcHJlY2lzaW9uIGhpZ2hwIHVzYW1wbGVyMkQ7XFxuICB1bmlmb3JtIHNhbXBsZXIyRCBub3JtYWxUZXh0dXJlO1xcbiAgdW5pZm9ybSBzYW1wbGVyMkQgZGVwdGhUZXh0dXJlO1xcbiAgdW5pZm9ybSBmbG9hdCBib3VuY2VzO1xcbiAgdmFyeWluZyB2ZWMyIHZVdjtcXG4gIHZlYzMgV29ybGRQb3NGcm9tRGVwdGgoZmxvYXQgZGVwdGgsIHZlYzIgY29vcmQpIHtcXG4gICAgZmxvYXQgeiA9IGRlcHRoICogMi4wIC0gMS4wO1xcbiAgICB2ZWM0IGNsaXBTcGFjZVBvc2l0aW9uID0gdmVjNChjb29yZCAqIDIuMCAtIDEuMCwgeiwgMS4wKTtcXG4gICAgdmVjNCB2aWV3U3BhY2VQb3NpdGlvbiA9IGNhbWVyYVByb2plY3Rpb25NYXRyaXhJbnYgKiBjbGlwU3BhY2VQb3NpdGlvbjtcXG4gICAgLy8gUGVyc3BlY3RpdmUgZGl2aXNpb25cXG4gICAgdmlld1NwYWNlUG9zaXRpb24gLz0gdmlld1NwYWNlUG9zaXRpb24udztcXG4gICAgdmVjNCB3b3JsZFNwYWNlUG9zaXRpb24gPSBjYW1lcmFNYXRyaXhXb3JsZCAqIHZpZXdTcGFjZVBvc2l0aW9uO1xcbiAgICByZXR1cm4gd29ybGRTcGFjZVBvc2l0aW9uLnh5ejtcXG4gIH0gICAgICAgICAgICAgICAgICBcXG4gIGZsb2F0IHNkUGxhbmUoIHZlYzMgcCwgdmVjMyBuLCBmbG9hdCBoICkge1xcbiAgICAvLyBuIG11c3QgYmUgbm9ybWFsaXplZFxcbiAgICByZXR1cm4gZG90KHAsbikgKyBoO1xcbiAgfVxcbiAgZmxvYXQgcGxhbmVJbnRlcnNlY3QoIHZlYzMgcm8sIHZlYzMgcmQsIHZlYzQgcCApIHtcXG4gICAgcmV0dXJuIC0oZG90KHJvLHAueHl6KStwLncpL2RvdChyZCxwLnh5eik7XFxuICB9XFxuICB2ZWMzIHRvdGFsSW50ZXJuYWxSZWZsZWN0aW9uKHZlYzMgcm8sIHZlYzMgcmQsIHZlYzMgcG9zLCB2ZWMzIG5vcm1hbCwgZmxvYXQgaW9yLCBvdXQgdmVjMyByYXlPcmlnaW4sIG91dCB2ZWMzIHJheURpcmVjdGlvbikge1xcbiAgICByYXlPcmlnaW4gPSBybztcXG4gICAgcmF5RGlyZWN0aW9uID0gcmQ7XFxuICAgIHJheURpcmVjdGlvbiA9IHJlZnJhY3QocmF5RGlyZWN0aW9uLCBub3JtYWwsIDEuMCAvIGlvcik7XFxuICAgIHJheU9yaWdpbiA9IHBvcyArIHJheURpcmVjdGlvbiAqIDAuMTtcXG4gICAgcmV0dXJuIHJheURpcmVjdGlvbjtcXG4gIH1cXG4gIHZvaWQgbWFpbigpIHtcXG4gICAgLy8gRWFjaCBzYW1wbGUgY29uc2lzdHMgb2YgcmFuZG9tIG9mZnNldCBpbiB0aGUgeCBhbmQgeSBkaXJlY3Rpb25cXG4gICAgZmxvYXQgY2F1c3RpYyA9IDAuMDtcXG4gICAgZmxvYXQgY2F1c3RpY1RleGVsU2l6ZSA9ICgxLjAgLyByZXNvbHV0aW9uKSAqIHNpemUgKiAyLjA7XFxuICAgIGZsb2F0IHRleGVsc05lZWRlZCA9IHdvcmxkUmFkaXVzIC8gY2F1c3RpY1RleGVsU2l6ZTtcXG4gICAgZmxvYXQgc2FtcGxlUmFkaXVzID0gdGV4ZWxzTmVlZGVkIC8gcmVzb2x1dGlvbjtcXG4gICAgZmxvYXQgc3VtID0gMC4wO1xcbiAgICBpZiAodGV4dHVyZTJEKGRlcHRoVGV4dHVyZSwgdlV2KS54ID09IDEuMCkge1xcbiAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoMC4wLCAwLjAsIDAuMCwgMS4wKTtcXG4gICAgICByZXR1cm47XFxuICAgIH1cXG4gICAgdmVjMiBvZmZzZXQxID0gdmVjMigtMC41LCAtMC41KTsvL3ZlYzIocmFuZCgpIC0gMC41LCByYW5kKCkgLSAwLjUpO1xcbiAgICB2ZWMyIG9mZnNldDIgPSB2ZWMyKC0wLjUsIDAuNSk7Ly92ZWMyKHJhbmQoKSAtIDAuNSwgcmFuZCgpIC0gMC41KTtcXG4gICAgdmVjMiBvZmZzZXQzID0gdmVjMigwLjUsIDAuNSk7Ly92ZWMyKHJhbmQoKSAtIDAuNSwgcmFuZCgpIC0gMC41KTtcXG4gICAgdmVjMiBvZmZzZXQ0ID0gdmVjMigwLjUsIC0wLjUpOy8vdmVjMihyYW5kKCkgLSAwLjUsIHJhbmQoKSAtIDAuNSk7XFxuICAgIHZlYzIgdXYxID0gdlV2ICsgb2Zmc2V0MSAqIHNhbXBsZVJhZGl1cztcXG4gICAgdmVjMiB1djIgPSB2VXYgKyBvZmZzZXQyICogc2FtcGxlUmFkaXVzO1xcbiAgICB2ZWMyIHV2MyA9IHZVdiArIG9mZnNldDMgKiBzYW1wbGVSYWRpdXM7XFxuICAgIHZlYzIgdXY0ID0gdlV2ICsgb2Zmc2V0NCAqIHNhbXBsZVJhZGl1cztcXG4gICAgdmVjMyBub3JtYWwxID0gdGV4dHVyZTJEKG5vcm1hbFRleHR1cmUsIHV2MSwgLTEwLjApLnJnYiAqIDIuMCAtIDEuMDtcXG4gICAgdmVjMyBub3JtYWwyID0gdGV4dHVyZTJEKG5vcm1hbFRleHR1cmUsIHV2MiwgLTEwLjApLnJnYiAqIDIuMCAtIDEuMDtcXG4gICAgdmVjMyBub3JtYWwzID0gdGV4dHVyZTJEKG5vcm1hbFRleHR1cmUsIHV2MywgLTEwLjApLnJnYiAqIDIuMCAtIDEuMDtcXG4gICAgdmVjMyBub3JtYWw0ID0gdGV4dHVyZTJEKG5vcm1hbFRleHR1cmUsIHV2NCwgLTEwLjApLnJnYiAqIDIuMCAtIDEuMDtcXG4gICAgZmxvYXQgZGVwdGgxID0gdGV4dHVyZTJEKGRlcHRoVGV4dHVyZSwgdXYxLCAtMTAuMCkueDtcXG4gICAgZmxvYXQgZGVwdGgyID0gdGV4dHVyZTJEKGRlcHRoVGV4dHVyZSwgdXYyLCAtMTAuMCkueDtcXG4gICAgZmxvYXQgZGVwdGgzID0gdGV4dHVyZTJEKGRlcHRoVGV4dHVyZSwgdXYzLCAtMTAuMCkueDtcXG4gICAgZmxvYXQgZGVwdGg0ID0gdGV4dHVyZTJEKGRlcHRoVGV4dHVyZSwgdXY0LCAtMTAuMCkueDtcXG4gICAgLy8gU2FuaXR5IGNoZWNrIHRoZSBkZXB0aHNcXG4gICAgaWYgKGRlcHRoMSA9PSAxLjAgfHwgZGVwdGgyID09IDEuMCB8fCBkZXB0aDMgPT0gMS4wIHx8IGRlcHRoNCA9PSAxLjApIHtcXG4gICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KDAuMCwgMC4wLCAwLjAsIDEuMCk7XFxuICAgICAgcmV0dXJuO1xcbiAgICB9XFxuICAgIHZlYzMgcG9zMSA9IFdvcmxkUG9zRnJvbURlcHRoKGRlcHRoMSwgdXYxKTtcXG4gICAgdmVjMyBwb3MyID0gV29ybGRQb3NGcm9tRGVwdGgoZGVwdGgyLCB1djIpO1xcbiAgICB2ZWMzIHBvczMgPSBXb3JsZFBvc0Zyb21EZXB0aChkZXB0aDMsIHV2Myk7XFxuICAgIHZlYzMgcG9zNCA9IFdvcmxkUG9zRnJvbURlcHRoKGRlcHRoNCwgdXY0KTtcXG4gICAgdmVjMyBvcmlnaW5Qb3MxID0gV29ybGRQb3NGcm9tRGVwdGgoMC4wLCB1djEpO1xcbiAgICB2ZWMzIG9yaWdpblBvczIgPSBXb3JsZFBvc0Zyb21EZXB0aCgwLjAsIHV2Mik7XFxuICAgIHZlYzMgb3JpZ2luUG9zMyA9IFdvcmxkUG9zRnJvbURlcHRoKDAuMCwgdXYzKTtcXG4gICAgdmVjMyBvcmlnaW5Qb3M0ID0gV29ybGRQb3NGcm9tRGVwdGgoMC4wLCB1djQpO1xcbiAgICB2ZWMzIGVuZFBvczEsIGVuZFBvczIsIGVuZFBvczMsIGVuZFBvczQ7XFxuICAgIHZlYzMgZW5kRGlyMSwgZW5kRGlyMiwgZW5kRGlyMywgZW5kRGlyNDtcXG4gICAgdG90YWxJbnRlcm5hbFJlZmxlY3Rpb24ob3JpZ2luUG9zMSwgbGlnaHREaXIsIHBvczEsIG5vcm1hbDEsIGlvciwgZW5kUG9zMSwgZW5kRGlyMSk7XFxuICAgIHRvdGFsSW50ZXJuYWxSZWZsZWN0aW9uKG9yaWdpblBvczIsIGxpZ2h0RGlyLCBwb3MyLCBub3JtYWwyLCBpb3IsIGVuZFBvczIsIGVuZERpcjIpO1xcbiAgICB0b3RhbEludGVybmFsUmVmbGVjdGlvbihvcmlnaW5Qb3MzLCBsaWdodERpciwgcG9zMywgbm9ybWFsMywgaW9yLCBlbmRQb3MzLCBlbmREaXIzKTtcXG4gICAgdG90YWxJbnRlcm5hbFJlZmxlY3Rpb24ob3JpZ2luUG9zNCwgbGlnaHREaXIsIHBvczQsIG5vcm1hbDQsIGlvciwgZW5kUG9zNCwgZW5kRGlyNCk7XFxuICAgIGZsb2F0IGxpZ2h0UG9zQXJlYSA9IGxlbmd0aChjcm9zcyhvcmlnaW5Qb3MyIC0gb3JpZ2luUG9zMSwgb3JpZ2luUG9zMyAtIG9yaWdpblBvczEpKSArIGxlbmd0aChjcm9zcyhvcmlnaW5Qb3MzIC0gb3JpZ2luUG9zMSwgb3JpZ2luUG9zNCAtIG9yaWdpblBvczEpKTtcXG4gICAgZmxvYXQgdDEgPSBwbGFuZUludGVyc2VjdChlbmRQb3MxLCBlbmREaXIxLCB2ZWM0KGxpZ2h0UGxhbmVOb3JtYWwsIGxpZ2h0UGxhbmVDb25zdGFudCkpO1xcbiAgICBmbG9hdCB0MiA9IHBsYW5lSW50ZXJzZWN0KGVuZFBvczIsIGVuZERpcjIsIHZlYzQobGlnaHRQbGFuZU5vcm1hbCwgbGlnaHRQbGFuZUNvbnN0YW50KSk7XFxuICAgIGZsb2F0IHQzID0gcGxhbmVJbnRlcnNlY3QoZW5kUG9zMywgZW5kRGlyMywgdmVjNChsaWdodFBsYW5lTm9ybWFsLCBsaWdodFBsYW5lQ29uc3RhbnQpKTtcXG4gICAgZmxvYXQgdDQgPSBwbGFuZUludGVyc2VjdChlbmRQb3M0LCBlbmREaXI0LCB2ZWM0KGxpZ2h0UGxhbmVOb3JtYWwsIGxpZ2h0UGxhbmVDb25zdGFudCkpO1xcbiAgICB2ZWMzIGZpbmFsUG9zMSA9IGVuZFBvczEgKyBlbmREaXIxICogdDE7XFxuICAgIHZlYzMgZmluYWxQb3MyID0gZW5kUG9zMiArIGVuZERpcjIgKiB0MjtcXG4gICAgdmVjMyBmaW5hbFBvczMgPSBlbmRQb3MzICsgZW5kRGlyMyAqIHQzO1xcbiAgICB2ZWMzIGZpbmFsUG9zNCA9IGVuZFBvczQgKyBlbmREaXI0ICogdDQ7XFxuICAgIGZsb2F0IGZpbmFsQXJlYSA9IGxlbmd0aChjcm9zcyhmaW5hbFBvczIgLSBmaW5hbFBvczEsIGZpbmFsUG9zMyAtIGZpbmFsUG9zMSkpICsgbGVuZ3RoKGNyb3NzKGZpbmFsUG9zMyAtIGZpbmFsUG9zMSwgZmluYWxQb3M0IC0gZmluYWxQb3MxKSk7XFxuICAgIGNhdXN0aWMgKz0gaW50ZW5zaXR5ICogKGxpZ2h0UG9zQXJlYSAvIGZpbmFsQXJlYSk7XFxuICAgIC8vIENhbGN1bGF0ZSB0aGUgYXJlYSBvZiB0aGUgdHJpYW5nbGUgaW4gbGlnaHQgc3BhY2VzXFxuICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQodmVjMyhtYXgoY2F1c3RpYywgMC4wKSksIDEuMCk7XFxuICB9XCIpLFluPXtkZXB0aDohMCxtaW5GaWx0ZXI6RC5MaW5lYXJGaWx0ZXIsbWFnRmlsdGVyOkQuTGluZWFyRmlsdGVyLHR5cGU6RC5VbnNpZ25lZEJ5dGVUeXBlfSxLbj17bWluRmlsdGVyOkQuTGluZWFyTWlwbWFwTGluZWFyRmlsdGVyLG1hZ0ZpbHRlcjpELkxpbmVhckZpbHRlcix0eXBlOkQuRmxvYXRUeXBlLGdlbmVyYXRlTWlwbWFwczohMH0sUW49ay5mb3J3YXJkUmVmKCgoe2RlYnVnOmUsY2hpbGRyZW46dCxmcmFtZXM6cj0xLGlvcjpuPTEuMSxjb2xvcjpvPVwid2hpdGVcIixjYXVzdGljc09ubHk6aT0hMSxiYWNrc2lkZTpzPSExLGJhY2tzaWRlSU9SOmw9MS4xLHdvcmxkUmFkaXVzOmM9LjMxMjUsaW50ZW5zaXR5OnU9LjA1LHJlc29sdXRpb246bT0yMDI0LGxpZ2h0U291cmNlOmY9WzUsNSw1XSwuLi5wfSxoKT0+e2EuZXh0ZW5kKHtDYXVzdGljc1Byb2plY3Rpb25NYXRlcmlhbDpxbn0pO2NvbnN0IHk9ay51c2VSZWYobnVsbCkseD1rLnVzZVJlZihudWxsKSx2PWsudXNlUmVmKG51bGwpLGc9ay51c2VSZWYobnVsbCksej1hLnVzZVRocmVlKChlPT5lLmdsKSksdz1ocihlJiZ4LEQuQ2FtZXJhSGVscGVyKSxiPWV0KG0sbSxZbiksRT1ldChtLG0sWW4pLE09ZXQobSxtLEtuKSxTPWV0KG0sbSxLbiksW0NdPWsudXNlU3RhdGUoKCgpPT4kbigpKSksW1BdPWsudXNlU3RhdGUoKCgpPT4kbihELkJhY2tTaWRlKSkpLFtUXT1rLnVzZVN0YXRlKCgoKT0+bmV3IFhuKSksW0ZdPWsudXNlU3RhdGUoKCgpPT5uZXcgZC5GdWxsU2NyZWVuUXVhZChUKSkpO2sudXNlTGF5b3V0RWZmZWN0KCgoKT0+e3kuY3VycmVudC51cGRhdGVXb3JsZE1hdHJpeCghMSwhMCl9KSk7bGV0IEw9MDtjb25zdCBBPW5ldyBELlZlY3RvcjMsXz1uZXcgRC5GcnVzdHVtLE89bmV3IEQuTWF0cml4NCxOPW5ldyBELlBsYW5lLEI9bmV3IEQuVmVjdG9yMyxJPW5ldyBELlZlY3RvcjMsVT1uZXcgRC5Cb3gzLFY9bmV3IEQuVmVjdG9yMyxqPVtdLFc9W10sRz1bXSxIPVtdLCQ9bmV3IEQuVmVjdG9yMztmb3IobGV0IGU9MDtlPDg7ZSsrKWoucHVzaChuZXcgRC5WZWN0b3IzKSxXLnB1c2gobmV3IEQuVmVjdG9yMyksRy5wdXNoKG5ldyBELlZlY3RvcjMpLEgucHVzaChuZXcgRC5WZWN0b3IzKTtyZXR1cm4gYS51c2VGcmFtZSgoKCk9PntpZihyPT09MS8wfHxMKys8cil7dmFyIHQsYTtBcnJheS5pc0FycmF5KGYpP0IuZnJvbUFycmF5KGYpLm5vcm1hbGl6ZSgpOkIuY29weSh5LmN1cnJlbnQud29ybGRUb0xvY2FsKGYuY3VycmVudC5nZXRXb3JsZFBvc2l0aW9uKEEpKS5ub3JtYWxpemUoKSksSS5jb3B5KEIpLm11bHRpcGx5U2NhbGFyKC0xKSxudWxsPT0odD12LmN1cnJlbnQucGFyZW50KXx8dC5tYXRyaXhXb3JsZC5pZGVudGl0eSgpLFUuc2V0RnJvbU9iamVjdCh2LmN1cnJlbnQsITApLGpbMF0uc2V0KFUubWluLngsVS5taW4ueSxVLm1pbi56KSxqWzFdLnNldChVLm1pbi54LFUubWluLnksVS5tYXgueiksalsyXS5zZXQoVS5taW4ueCxVLm1heC55LFUubWluLnopLGpbM10uc2V0KFUubWluLngsVS5tYXgueSxVLm1heC56KSxqWzRdLnNldChVLm1heC54LFUubWluLnksVS5taW4ueiksals1XS5zZXQoVS5tYXgueCxVLm1pbi55LFUubWF4LnopLGpbNl0uc2V0KFUubWF4LngsVS5tYXgueSxVLm1pbi56KSxqWzddLnNldChVLm1heC54LFUubWF4LnksVS5tYXgueik7Zm9yKGxldCBlPTA7ZTw4O2UrKylXW2VdLmNvcHkoaltlXSk7VS5nZXRDZW50ZXIoViksai5tYXAoKGU9PmUuc3ViKFYpKSk7Y29uc3Qgcj1OLnNldChJLDApO2oubWFwKCgoZSx0KT0+ci5wcm9qZWN0UG9pbnQoZSxHW3RdKSkpO2NvbnN0IG89Ry5yZWR1Y2UoKChlLHQpPT5lLmFkZCh0KSksQS5zZXQoMCwwLDApKS5kaXZpZGVTY2FsYXIoRy5sZW5ndGgpLGQ9Ry5tYXAoKGU9PmUuZGlzdGFuY2VUbyhvKSkpLnJlZHVjZSgoKGUsdCk9Pk1hdGgubWF4KGUsdCkpKSxwPWoubWFwKChlPT5lLmRvdChCKSkpLnJlZHVjZSgoKGUsdCk9Pk1hdGgubWF4KGUsdCkpKTt4LmN1cnJlbnQucG9zaXRpb24uY29weSgkLmNvcHkoQikubXVsdGlwbHlTY2FsYXIocCkuYWRkKFYpKSx4LmN1cnJlbnQubG9va0F0KHYuY3VycmVudC5sb2NhbFRvV29ybGQoVikpO2NvbnN0IGg9Ty5sb29rQXQoeC5jdXJyZW50LnBvc2l0aW9uLFYsQS5zZXQoMCwxLDApKTt4LmN1cnJlbnQubGVmdD0tZCx4LmN1cnJlbnQucmlnaHQ9ZCx4LmN1cnJlbnQudG9wPWQseC5jdXJyZW50LmJvdHRvbT0tZDtjb25zdCBSPUEuc2V0KDAsZCwwKS5hcHBseU1hdHJpeDQoaCksaz0oeC5jdXJyZW50LnBvc2l0aW9uLnkrUi55KS9CLnk7eC5jdXJyZW50Lm5lYXI9LjEseC5jdXJyZW50LmZhcj1rLHguY3VycmVudC51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCkseC5jdXJyZW50LnVwZGF0ZU1hdHJpeFdvcmxkKCk7Y29uc3QgRD1XLm1hcCgoKGUsdCk9PmUuYWRkKEhbdF0uY29weShCKS5tdWx0aXBseVNjYWxhcigtZS55L0IueSkpKSksTD1ELnJlZHVjZSgoKGUsdCk9PmUuYWRkKHQpKSxBLnNldCgwLDAsMCkpLmRpdmlkZVNjYWxhcihELmxlbmd0aCkscT0yKkQubWFwKChlPT5NYXRoLmh5cG90KGUueC1MLngsZS56LUwueikpKS5yZWR1Y2UoKChlLHQpPT5NYXRoLm1heChlLHQpKSk7Zy5jdXJyZW50LnNjYWxlLnNldFNjYWxhcihxKSxnLmN1cnJlbnQucG9zaXRpb24uY29weShMKSxlJiYobnVsbD09KGE9dy5jdXJyZW50KXx8YS51cGRhdGUoKSksUC52aWV3TWF0cml4LnZhbHVlPUMudmlld01hdHJpeC52YWx1ZT14LmN1cnJlbnQubWF0cml4V29ybGRJbnZlcnNlO2NvbnN0IFg9Xy5zZXRGcm9tUHJvamVjdGlvbk1hdHJpeChPLm11bHRpcGx5TWF0cmljZXMoeC5jdXJyZW50LnByb2plY3Rpb25NYXRyaXgseC5jdXJyZW50Lm1hdHJpeFdvcmxkSW52ZXJzZSkpLnBsYW5lc1s0XTtULmNhbWVyYU1hdHJpeFdvcmxkPXguY3VycmVudC5tYXRyaXhXb3JsZCxULmNhbWVyYVByb2plY3Rpb25NYXRyaXhJbnY9eC5jdXJyZW50LnByb2plY3Rpb25NYXRyaXhJbnZlcnNlLFQubGlnaHREaXI9SSxULmxpZ2h0UGxhbmVOb3JtYWw9WC5ub3JtYWwsVC5saWdodFBsYW5lQ29uc3RhbnQ9WC5jb25zdGFudCxULm5lYXI9eC5jdXJyZW50Lm5lYXIsVC5mYXI9eC5jdXJyZW50LmZhcixULnJlc29sdXRpb249bSxULnNpemU9ZCxULmludGVuc2l0eT11LFQud29ybGRSYWRpdXM9Yyx2LmN1cnJlbnQudmlzaWJsZT0hMCx6LnNldFJlbmRlclRhcmdldChiKSx6LmNsZWFyKCksdi5jdXJyZW50Lm92ZXJyaWRlTWF0ZXJpYWw9Qyx6LnJlbmRlcih2LmN1cnJlbnQseC5jdXJyZW50KSx6LnNldFJlbmRlclRhcmdldChFKSx6LmNsZWFyKCkscyYmKHYuY3VycmVudC5vdmVycmlkZU1hdGVyaWFsPVAsei5yZW5kZXIodi5jdXJyZW50LHguY3VycmVudCkpLHYuY3VycmVudC5vdmVycmlkZU1hdGVyaWFsPW51bGwsVC5pb3I9bixnLmN1cnJlbnQubWF0ZXJpYWwubGlnaHRQcm9qTWF0cml4PXguY3VycmVudC5wcm9qZWN0aW9uTWF0cml4LGcuY3VycmVudC5tYXRlcmlhbC5saWdodFZpZXdNYXRyaXg9eC5jdXJyZW50Lm1hdHJpeFdvcmxkSW52ZXJzZSxULm5vcm1hbFRleHR1cmU9Yi50ZXh0dXJlLFQuZGVwdGhUZXh0dXJlPWIuZGVwdGhUZXh0dXJlLHouc2V0UmVuZGVyVGFyZ2V0KE0pLHouY2xlYXIoKSxGLnJlbmRlcih6KSxULmlvcj1sLFQubm9ybWFsVGV4dHVyZT1FLnRleHR1cmUsVC5kZXB0aFRleHR1cmU9RS5kZXB0aFRleHR1cmUsei5zZXRSZW5kZXJUYXJnZXQoUyksei5jbGVhcigpLHMmJkYucmVuZGVyKHopLHouc2V0UmVuZGVyVGFyZ2V0KG51bGwpLGkmJih2LmN1cnJlbnQudmlzaWJsZT0hMSl9fSkpLGsudXNlSW1wZXJhdGl2ZUhhbmRsZShoLCgoKT0+eS5jdXJyZW50KSxbXSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjp5fSxwKSxrLmNyZWF0ZUVsZW1lbnQoXCJzY2VuZVwiLHtyZWY6dn0say5jcmVhdGVFbGVtZW50KFwib3J0aG9ncmFwaGljQ2FtZXJhXCIse3JlZjp4LHVwOlswLDEsMF19KSx0KSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIse3JlbmRlck9yZGVyOjIscmVmOmcsXCJyb3RhdGlvbi14XCI6LU1hdGguUEkvMn0say5jcmVhdGVFbGVtZW50KFwicGxhbmVHZW9tZXRyeVwiLG51bGwpLGsuY3JlYXRlRWxlbWVudChcImNhdXN0aWNzUHJvamVjdGlvbk1hdGVyaWFsXCIse3RyYW5zcGFyZW50OiEwLGNvbG9yOm8sY2F1c3RpY3NUZXh0dXJlOk0udGV4dHVyZSxjYXVzdGljc1RleHR1cmVCOlMudGV4dHVyZSxibGVuZGluZzpELkN1c3RvbUJsZW5kaW5nLGJsZW5kU3JjOkQuT25lRmFjdG9yLGJsZW5kRHN0OkQuU3JjQWxwaGFGYWN0b3IsZGVwdGhXcml0ZTohMX0pLGUmJmsuY3JlYXRlRWxlbWVudChBZSxudWxsLGsuY3JlYXRlRWxlbWVudChcImxpbmVCYXNpY01hdGVyaWFsXCIse2NvbG9yOlwiI2ZmZmYwMFwiLHRvbmVNYXBwZWQ6ITF9KSkpKX0pKSxabj1rLmZvcndhcmRSZWYoKCh7bWl4Qmx1cjplPTAsbWl4U3RyZW5ndGg6dD0uNSxyZXNvbHV0aW9uOnI9MjU2LGJsdXI6bz1bMCwwXSxhcmdzOmk9WzEsMV0sbWluRGVwdGhUaHJlc2hvbGQ6cz0uOSxtYXhEZXB0aFRocmVzaG9sZDpsPTEsZGVwdGhTY2FsZTpjPTAsZGVwdGhUb0JsdXJSYXRpb0JpYXM6dT0uMjUsbWlycm9yOmQ9MCxjaGlsZHJlbjptLGRlYnVnOmY9MCxkaXN0b3J0aW9uOnA9MSxtaXhDb250cmFzdDpoPTEsZGlzdG9ydGlvbk1hcDp5LC4uLnh9LHYpPT57ay51c2VFZmZlY3QoKCgpPT57Y29uc29sZS53YXJuKFwiUmVmbGVjdG9yIGhhcyBiZWVuIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBuZXh0IG1ham9yLiBSZXBsYWNlIGl0IHdpdGggPE1lc2hSZWZsZWN0b3JNYXRlcmlhbCAvPiFcIil9KSxbXSk7Y29uc3QgZz1hLnVzZVRocmVlKCgoe2dsOmV9KT0+ZSkpLHo9YS51c2VUaHJlZSgoKHtjYW1lcmE6ZX0pPT5lKSksdz1hLnVzZVRocmVlKCgoe3NjZW5lOmV9KT0+ZSkpLGI9KG89QXJyYXkuaXNBcnJheShvKT9vOltvLG9dKVswXStvWzFdPjAsRT1rLnVzZVJlZihudWxsKSxbTV09ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLlBsYW5lKSksW1NdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKSksW0NdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKSksW1BdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKSksW1RdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5NYXRyaXg0KSksW0ZdPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKDAsMCwtMSkpKSxbRF09ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLlZlY3RvcjQpKSxbTF09ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLlZlY3RvcjMpKSxbX109ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLlZlY3RvcjMpKSxbT109ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLlZlY3RvcjQpKSxbTl09ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLk1hdHJpeDQpKSxbQl09ay51c2VTdGF0ZSgoKCk9Pm5ldyBuLlBlcnNwZWN0aXZlQ2FtZXJhKSksST1rLnVzZUNhbGxiYWNrKCgoKT0+e2lmKEMuc2V0RnJvbU1hdHJpeFBvc2l0aW9uKEUuY3VycmVudC5tYXRyaXhXb3JsZCksUC5zZXRGcm9tTWF0cml4UG9zaXRpb24oei5tYXRyaXhXb3JsZCksVC5leHRyYWN0Um90YXRpb24oRS5jdXJyZW50Lm1hdHJpeFdvcmxkKSxTLnNldCgwLDAsMSksUy5hcHBseU1hdHJpeDQoVCksTC5zdWJWZWN0b3JzKEMsUCksTC5kb3QoUyk+MClyZXR1cm47TC5yZWZsZWN0KFMpLm5lZ2F0ZSgpLEwuYWRkKEMpLFQuZXh0cmFjdFJvdGF0aW9uKHoubWF0cml4V29ybGQpLEYuc2V0KDAsMCwtMSksRi5hcHBseU1hdHJpeDQoVCksRi5hZGQoUCksXy5zdWJWZWN0b3JzKEMsRiksXy5yZWZsZWN0KFMpLm5lZ2F0ZSgpLF8uYWRkKEMpLEIucG9zaXRpb24uY29weShMKSxCLnVwLnNldCgwLDEsMCksQi51cC5hcHBseU1hdHJpeDQoVCksQi51cC5yZWZsZWN0KFMpLEIubG9va0F0KF8pLEIuZmFyPXouZmFyLEIudXBkYXRlTWF0cml4V29ybGQoKSxCLnByb2plY3Rpb25NYXRyaXguY29weSh6LnByb2plY3Rpb25NYXRyaXgpLE4uc2V0KC41LDAsMCwuNSwwLC41LDAsLjUsMCwwLC41LC41LDAsMCwwLDEpLE4ubXVsdGlwbHkoQi5wcm9qZWN0aW9uTWF0cml4KSxOLm11bHRpcGx5KEIubWF0cml4V29ybGRJbnZlcnNlKSxOLm11bHRpcGx5KEUuY3VycmVudC5tYXRyaXhXb3JsZCksTS5zZXRGcm9tTm9ybWFsQW5kQ29wbGFuYXJQb2ludChTLEMpLE0uYXBwbHlNYXRyaXg0KEIubWF0cml4V29ybGRJbnZlcnNlKSxELnNldChNLm5vcm1hbC54LE0ubm9ybWFsLnksTS5ub3JtYWwueixNLmNvbnN0YW50KTtjb25zdCBlPUIucHJvamVjdGlvbk1hdHJpeDtPLng9KE1hdGguc2lnbihELngpK2UuZWxlbWVudHNbOF0pL2UuZWxlbWVudHNbMF0sTy55PShNYXRoLnNpZ24oRC55KStlLmVsZW1lbnRzWzldKS9lLmVsZW1lbnRzWzVdLE8uej0tMSxPLnc9KDErZS5lbGVtZW50c1sxMF0pL2UuZWxlbWVudHNbMTRdLEQubXVsdGlwbHlTY2FsYXIoMi9ELmRvdChPKSksZS5lbGVtZW50c1syXT1ELngsZS5lbGVtZW50c1s2XT1ELnksZS5lbGVtZW50c1sxMF09RC56KzEsZS5lbGVtZW50c1sxNF09RC53fSksW10pLFtVLFYsaixXXT1rLnVzZU1lbW8oKCgpPT57Y29uc3QgYT17dHlwZTpuLkhhbGZGbG9hdFR5cGUsbWluRmlsdGVyOm4uTGluZWFyRmlsdGVyLG1hZ0ZpbHRlcjpuLkxpbmVhckZpbHRlcn0saT1uZXcgbi5XZWJHTFJlbmRlclRhcmdldChyLHIsYSk7aS5kZXB0aEJ1ZmZlcj0hMCxpLmRlcHRoVGV4dHVyZT1uZXcgbi5EZXB0aFRleHR1cmUocixyKSxpLmRlcHRoVGV4dHVyZS5mb3JtYXQ9bi5EZXB0aEZvcm1hdCxpLmRlcHRoVGV4dHVyZS50eXBlPW4uVW5zaWduZWRTaG9ydFR5cGU7Y29uc3QgbT1uZXcgbi5XZWJHTFJlbmRlclRhcmdldChyLHIsYSk7cmV0dXJuW2ksbSxuZXcgX3Ioe2dsOmcscmVzb2x1dGlvbjpyLHdpZHRoOm9bMF0saGVpZ2h0Om9bMV0sbWluRGVwdGhUaHJlc2hvbGQ6cyxtYXhEZXB0aFRocmVzaG9sZDpsLGRlcHRoU2NhbGU6YyxkZXB0aFRvQmx1clJhdGlvQmlhczp1fSkse21pcnJvcjpkLHRleHR1cmVNYXRyaXg6TixtaXhCbHVyOmUsdERpZmZ1c2U6aS50ZXh0dXJlLHREZXB0aDppLmRlcHRoVGV4dHVyZSx0RGlmZnVzZUJsdXI6bS50ZXh0dXJlLGhhc0JsdXI6YixtaXhTdHJlbmd0aDp0LG1pbkRlcHRoVGhyZXNob2xkOnMsbWF4RGVwdGhUaHJlc2hvbGQ6bCxkZXB0aFNjYWxlOmMsZGVwdGhUb0JsdXJSYXRpb0JpYXM6dSx0cmFuc3BhcmVudDohMCxkZWJ1ZzpmLGRpc3RvcnRpb246cCxkaXN0b3J0aW9uTWFwOnksbWl4Q29udHJhc3Q6aCxcImRlZmluZXMtVVNFX0JMVVJcIjpiP1wiXCI6dm9pZCAwLFwiZGVmaW5lcy1VU0VfREVQVEhcIjpjPjA/XCJcIjp2b2lkIDAsXCJkZWZpbmVzLVVTRV9ESVNUT1JUSU9OXCI6eT9cIlwiOnZvaWQgMH1dfSksW2csbyxOLHIsZCxiLGUsdCxzLGwsYyx1LGYscCx5LGhdKTtyZXR1cm4gYS51c2VGcmFtZSgoKCk9PntpZihudWxsPT1FfHwhRS5jdXJyZW50KXJldHVybjtFLmN1cnJlbnQudmlzaWJsZT0hMTtjb25zdCBlPWcueHIuZW5hYmxlZCx0PWcuc2hhZG93TWFwLmF1dG9VcGRhdGU7SSgpLGcueHIuZW5hYmxlZD0hMSxnLnNoYWRvd01hcC5hdXRvVXBkYXRlPSExLGcuc2V0UmVuZGVyVGFyZ2V0KFUpLGcuc3RhdGUuYnVmZmVycy5kZXB0aC5zZXRNYXNrKCEwKSxnLmF1dG9DbGVhcnx8Zy5jbGVhcigpLGcucmVuZGVyKHcsQiksYiYmai5yZW5kZXIoZyxVLFYpLGcueHIuZW5hYmxlZD1lLGcuc2hhZG93TWFwLmF1dG9VcGRhdGU9dCxFLmN1cnJlbnQudmlzaWJsZT0hMCxnLnNldFJlbmRlclRhcmdldChudWxsKX0pKSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIsUi5kZWZhdWx0KHtyZWY6QS5kZWZhdWx0KFtFLHZdKX0seCksay5jcmVhdGVFbGVtZW50KFwicGxhbmVHZW9tZXRyeVwiLHthcmdzOml9KSxtP20oXCJtZXNoUmVmbGVjdG9yTWF0ZXJpYWxcIixXKTprLmNyZWF0ZUVsZW1lbnQoXCJtZXNoUmVmbGVjdG9yTWF0ZXJpYWxcIixXKSl9KSk7Y2xhc3MgSm4gZXh0ZW5kcyBELlNoYWRlck1hdGVyaWFse2NvbnN0cnVjdG9yKCl7c3VwZXIoe3VuaWZvcm1zOntkZXB0aDp7dmFsdWU6bnVsbH0sb3BhY2l0eTp7dmFsdWU6MX0sYXR0ZW51YXRpb246e3ZhbHVlOjIuNX0sYW5nbGVQb3dlcjp7dmFsdWU6MTJ9LHNwb3RQb3NpdGlvbjp7dmFsdWU6bmV3IEQuVmVjdG9yMygwLDAsMCl9LGxpZ2h0Q29sb3I6e3ZhbHVlOm5ldyBELkNvbG9yKFwid2hpdGVcIil9LGNhbWVyYU5lYXI6e3ZhbHVlOjB9LGNhbWVyYUZhcjp7dmFsdWU6MX0scmVzb2x1dGlvbjp7dmFsdWU6bmV3IEQuVmVjdG9yMigwLDApfX0sdHJhbnNwYXJlbnQ6ITAsZGVwdGhXcml0ZTohMSx2ZXJ0ZXhTaGFkZXI6XCJcXG4gICAgICB2YXJ5aW5nIHZlYzMgdk5vcm1hbDtcXG4gICAgICB2YXJ5aW5nIHZlYzMgdldvcmxkUG9zaXRpb247XFxuICAgICAgdmFyeWluZyBmbG9hdCB2Vmlld1o7XFxuICAgICAgdmFyeWluZyBmbG9hdCB2SW50ZW5zaXR5O1xcbiAgICAgIHVuaWZvcm0gdmVjMyBzcG90UG9zaXRpb247XFxuICAgICAgdW5pZm9ybSBmbG9hdCBhdHRlbnVhdGlvbjsgICAgICBcXG5cXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICAvLyBjb21wdXRlIGludGVuc2l0eVxcbiAgICAgICAgdk5vcm1hbCA9IG5vcm1hbGl6ZSggbm9ybWFsTWF0cml4ICogbm9ybWFsICk7XFxuICAgICAgICB2ZWM0IHdvcmxkUG9zaXRpb25cXHQ9IG1vZGVsTWF0cml4ICogdmVjNCggcG9zaXRpb24sIDEuMCApO1xcbiAgICAgICAgdldvcmxkUG9zaXRpb24gPSB3b3JsZFBvc2l0aW9uLnh5ejtcXG4gICAgICAgIHZlYzQgdmlld1Bvc2l0aW9uID0gdmlld01hdHJpeCAqIHdvcmxkUG9zaXRpb247XFxuICAgICAgICB2Vmlld1ogPSB2aWV3UG9zaXRpb24uejtcXG4gICAgICAgIGZsb2F0IGludGVuc2l0eVxcdD0gZGlzdGFuY2Uod29ybGRQb3NpdGlvbi54eXosIHNwb3RQb3NpdGlvbikgLyBhdHRlbnVhdGlvbjtcXG4gICAgICAgIGludGVuc2l0eVxcdD0gMS4wIC0gY2xhbXAoaW50ZW5zaXR5LCAwLjAsIDEuMCk7XFxuICAgICAgICB2SW50ZW5zaXR5ID0gaW50ZW5zaXR5OyAgICAgICAgXFxuICAgICAgICAvLyBzZXQgZ2xfUG9zaXRpb25cXG4gICAgICAgIGdsX1Bvc2l0aW9uXFx0PSBwcm9qZWN0aW9uTWF0cml4ICogdmlld1Bvc2l0aW9uO1xcblxcbiAgICAgIH1cIixmcmFnbWVudFNoYWRlcjpgXFxuICAgICAgI2luY2x1ZGUgPHBhY2tpbmc+XFxuXFxuICAgICAgdmFyeWluZyB2ZWMzIHZOb3JtYWw7XFxuICAgICAgdmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xcbiAgICAgIHVuaWZvcm0gdmVjMyBsaWdodENvbG9yO1xcbiAgICAgIHVuaWZvcm0gdmVjMyBzcG90UG9zaXRpb247XFxuICAgICAgdW5pZm9ybSBmbG9hdCBhdHRlbnVhdGlvbjtcXG4gICAgICB1bmlmb3JtIGZsb2F0IGFuZ2xlUG93ZXI7XFxuICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgZGVwdGg7XFxuICAgICAgdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247XFxuICAgICAgdW5pZm9ybSBmbG9hdCBjYW1lcmFOZWFyO1xcbiAgICAgIHVuaWZvcm0gZmxvYXQgY2FtZXJhRmFyO1xcbiAgICAgIHZhcnlpbmcgZmxvYXQgdlZpZXdaO1xcbiAgICAgIHZhcnlpbmcgZmxvYXQgdkludGVuc2l0eTtcXG4gICAgICB1bmlmb3JtIGZsb2F0IG9wYWNpdHk7XFxuXFxuICAgICAgZmxvYXQgcmVhZERlcHRoKCBzYW1wbGVyMkQgZGVwdGhTYW1wbGVyLCB2ZWMyIGNvb3JkICkge1xcbiAgICAgICAgZmxvYXQgZnJhZ0Nvb3JkWiA9IHRleHR1cmUyRCggZGVwdGhTYW1wbGVyLCBjb29yZCApLng7XFxuICAgICAgICBmbG9hdCB2aWV3WiA9IHBlcnNwZWN0aXZlRGVwdGhUb1ZpZXdaKGZyYWdDb29yZFosIGNhbWVyYU5lYXIsIGNhbWVyYUZhcik7XFxuICAgICAgICByZXR1cm4gdmlld1o7XFxuICAgICAgfVxcblxcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGZsb2F0IGQgPSAxLjA7XFxuICAgICAgICBib29sIGlzU29mdCA9IHJlc29sdXRpb25bMF0gPiAwLjAgJiYgcmVzb2x1dGlvblsxXSA+IDAuMDtcXG4gICAgICAgIGlmIChpc1NvZnQpIHtcXG4gICAgICAgICAgdmVjMiBzVXYgPSBnbF9GcmFnQ29vcmQueHkgLyByZXNvbHV0aW9uO1xcbiAgICAgICAgICBkID0gcmVhZERlcHRoKGRlcHRoLCBzVXYpO1xcbiAgICAgICAgfVxcbiAgICAgICAgZmxvYXQgaW50ZW5zaXR5ID0gdkludGVuc2l0eTtcXG4gICAgICAgIHZlYzMgbm9ybWFsXFx0PSB2ZWMzKHZOb3JtYWwueCwgdk5vcm1hbC55LCBhYnModk5vcm1hbC56KSk7XFxuICAgICAgICBmbG9hdCBhbmdsZUludGVuc2l0eVxcdD0gcG93KCBkb3Qobm9ybWFsLCB2ZWMzKDAuMCwgMC4wLCAxLjApKSwgYW5nbGVQb3dlciApO1xcbiAgICAgICAgaW50ZW5zaXR5XFx0Kj0gYW5nbGVJbnRlbnNpdHk7XFxuICAgICAgICAvLyBmYWRlcyB3aGVuIHogaXMgY2xvc2UgdG8gc2FtcGxlZCBkZXB0aCwgbWVhbmluZyB0aGUgY29uZSBpcyBpbnRlcnNlY3RpbmcgZXhpc3RpbmcgZ2VvbWV0cnlcXG4gICAgICAgIGlmIChpc1NvZnQpIHtcXG4gICAgICAgICAgaW50ZW5zaXR5XFx0Kj0gc21vb3Roc3RlcCgwLiwgMS4sIHZWaWV3WiAtIGQpO1xcbiAgICAgICAgfVxcbiAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChsaWdodENvbG9yLCBpbnRlbnNpdHkgKiBvcGFjaXR5KTtcXG5cXG4gICAgICAgICNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cXG5cXHQgICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgICAgIH1gfSl9fXZhciBlYT1cIiNkZWZpbmUgR0xTTElGWSAxXFxudmFyeWluZyB2ZWMyIHZVdjt1bmlmb3JtIHNhbXBsZXIyRCB1U2hhZG93TWFwO3VuaWZvcm0gZmxvYXQgdVRpbWU7dm9pZCBtYWluKCl7dmVjMyBjb2xvcj10ZXh0dXJlMkQodVNoYWRvd01hcCx2VXYpLnh5ejtnbF9GcmFnQ29sb3I9dmVjNChjb2xvciwxLik7fVwiO2NvbnN0IHRhPWU9Pm51bGw9PWU/dm9pZCAwOmUuaXNTcG90TGlnaHQ7ZnVuY3Rpb24gcmEoe29wYWNpdHk6ZT0xLHJhZGl1c1RvcDp0LHJhZGl1c0JvdHRvbTpyLGRlcHRoQnVmZmVyOm8sY29sb3I6aT1cIndoaXRlXCIsZGlzdGFuY2U6cz01LGFuZ2xlOmw9LjE1LGF0dGVudWF0aW9uOmM9NSxhbmdsZVBvd2VyOnU9NX0pe2NvbnN0IGQ9ay51c2VSZWYobnVsbCksbT1hLnVzZVRocmVlKChlPT5lLnNpemUpKSxmPWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSkscD1hLnVzZVRocmVlKChlPT5lLnZpZXdwb3J0LmRwcikpLFtoXT1rLnVzZVN0YXRlKCgoKT0+bmV3IEpuKSksW3ldPWsudXNlU3RhdGUoKCgpPT5uZXcgbi5WZWN0b3IzKSk7dD12b2lkIDA9PT10Py4xOnQscj12b2lkIDA9PT1yPzcqbDpyLGEudXNlRnJhbWUoKCgpPT57aC51bmlmb3Jtcy5zcG90UG9zaXRpb24udmFsdWUuY29weShkLmN1cnJlbnQuZ2V0V29ybGRQb3NpdGlvbih5KSksZC5jdXJyZW50Lmxvb2tBdChkLmN1cnJlbnQucGFyZW50LnRhcmdldC5nZXRXb3JsZFBvc2l0aW9uKHkpKX0pKTtjb25zdCB4PWsudXNlTWVtbygoKCk9Pntjb25zdCBlPW5ldyBuLkN5bGluZGVyR2VvbWV0cnkodCxyLHMsMTI4LDY0LCEwKTtyZXR1cm4gZS5hcHBseU1hdHJpeDQoKG5ldyBuLk1hdHJpeDQpLm1ha2VUcmFuc2xhdGlvbigwLC1zLzIsMCkpLGUuYXBwbHlNYXRyaXg0KChuZXcgbi5NYXRyaXg0KS5tYWtlUm90YXRpb25YKC1NYXRoLlBJLzIpKSxlfSksW3MsdCxyXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChrLkZyYWdtZW50LG51bGwsay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHtyZWY6ZCxnZW9tZXRyeTp4LHJheWNhc3Q6KCk9Pm51bGx9LGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLHtvYmplY3Q6aCxhdHRhY2g6XCJtYXRlcmlhbFwiLFwidW5pZm9ybXMtb3BhY2l0eS12YWx1ZVwiOmUsXCJ1bmlmb3Jtcy1saWdodENvbG9yLXZhbHVlXCI6aSxcInVuaWZvcm1zLWF0dGVudWF0aW9uLXZhbHVlXCI6YyxcInVuaWZvcm1zLWFuZ2xlUG93ZXItdmFsdWVcIjp1LFwidW5pZm9ybXMtZGVwdGgtdmFsdWVcIjpvLFwidW5pZm9ybXMtY2FtZXJhTmVhci12YWx1ZVwiOmYubmVhcixcInVuaWZvcm1zLWNhbWVyYUZhci12YWx1ZVwiOmYuZmFyLFwidW5pZm9ybXMtcmVzb2x1dGlvbi12YWx1ZVwiOm8/W20ud2lkdGgqcCxtLmhlaWdodCpwXTpbMCwwXX0pKSl9ZnVuY3Rpb24gbmEoZSx0LHIsbyxpKXtjb25zdFtbcyxsXV09ay51c2VTdGF0ZSgoKCk9PltuZXcgbi5WZWN0b3IzLG5ldyBuLlZlY3RvcjNdKSk7ay51c2VMYXlvdXRFZmZlY3QoKCgpPT57aWYoIXRhKGUuY3VycmVudCkpdGhyb3cgbmV3IEVycm9yKFwiU3BvdGxpZ2h0U2hhZG93IG11c3QgYmUgYSBjaGlsZCBvZiBhIFNwb3RMaWdodFwiKTtlLmN1cnJlbnQuc2hhZG93Lm1hcFNpemUuc2V0KHIsbyksZS5jdXJyZW50LnNoYWRvdy5uZWVkc1VwZGF0ZT0hMH0pLFtlLHIsb10pLGEudXNlRnJhbWUoKCgpPT57aWYoIWUuY3VycmVudClyZXR1cm47Y29uc3Qgcj1lLmN1cnJlbnQucG9zaXRpb24sbj1lLmN1cnJlbnQudGFyZ2V0LnBvc2l0aW9uO2wuY29weShuKS5zdWIocik7dmFyIGE9bC5sZW5ndGgoKTtsLm5vcm1hbGl6ZSgpLm11bHRpcGx5U2NhbGFyKGEqaSkscy5jb3B5KHIpLmFkZChsKSx0LmN1cnJlbnQucG9zaXRpb24uY29weShzKSx0LmN1cnJlbnQubG9va0F0KGUuY3VycmVudC50YXJnZXQucG9zaXRpb24pfSkpfWZ1bmN0aW9uIGFhKHtkaXN0YW5jZTplPS40LGFscGhhVGVzdDp0PS41LG1hcDpyLHNoYWRlcjpvPWVhLHdpZHRoOmk9NTEyLGhlaWdodDpzPTUxMixzY2FsZTpsPTEsY2hpbGRyZW46YywuLi51fSl7Y29uc3QgbT1rLnVzZVJlZihudWxsKSxmPXUuc3BvdGxpZ2h0UmVmLHA9dS5kZWJ1ZztuYShmLG0saSxzLGUpO2NvbnN0IGg9ay51c2VNZW1vKCgoKT0+bmV3IG4uV2ViR0xSZW5kZXJUYXJnZXQoaSxzLHtmb3JtYXQ6bi5SR0JBRm9ybWF0LGVuY29kaW5nOm4uTGluZWFyRW5jb2Rpbmcsc3RlbmNpbEJ1ZmZlcjohMX0pKSxbaSxzXSkseT1rLnVzZVJlZih7dVNoYWRvd01hcDp7dmFsdWU6cn0sdVRpbWU6e3ZhbHVlOjB9fSk7ay51c2VFZmZlY3QoKCgpPT57eS5jdXJyZW50LnVTaGFkb3dNYXAudmFsdWU9cn0pLFtyXSk7Y29uc3QgeD1rLnVzZU1lbW8oKCgpPT5uZXcgZC5GdWxsU2NyZWVuUXVhZChuZXcgbi5TaGFkZXJNYXRlcmlhbCh7dW5pZm9ybXM6eS5jdXJyZW50LHZlcnRleFNoYWRlcjpcIlxcbiAgICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xcblxcbiAgICAgICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICAgICAgdlV2ID0gdXY7XFxuICAgICAgICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcXG4gICAgICAgICAgfVxcbiAgICAgICAgICBcIixmcmFnbWVudFNoYWRlcjpvfSkpKSxbb10pO3JldHVybiBrLnVzZUVmZmVjdCgoKCk9PigpPT57eC5tYXRlcmlhbC5kaXNwb3NlKCkseC5kaXNwb3NlKCl9KSxbeF0pLGsudXNlRWZmZWN0KCgoKT0+KCk9PmguZGlzcG9zZSgpKSxbaF0pLGEudXNlRnJhbWUoKCh7Z2w6ZX0sdCk9Pnt5LmN1cnJlbnQudVRpbWUudmFsdWUrPXQsZS5zZXRSZW5kZXJUYXJnZXQoaCkseC5yZW5kZXIoZSksZS5zZXRSZW5kZXJUYXJnZXQobnVsbCl9KSksay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIse3JlZjptLHNjYWxlOmwsY2FzdFNoYWRvdzohMH0say5jcmVhdGVFbGVtZW50KFwicGxhbmVHZW9tZXRyeVwiLG51bGwpLGsuY3JlYXRlRWxlbWVudChcIm1lc2hCYXNpY01hdGVyaWFsXCIse3RyYW5zcGFyZW50OiEwLHNpZGU6bi5Eb3VibGVTaWRlLGFscGhhVGVzdDp0LGFscGhhTWFwOmgudGV4dHVyZSxcImFscGhhTWFwLXdyYXBTXCI6bi5SZXBlYXRXcmFwcGluZyxcImFscGhhTWFwLXdyYXBUXCI6bi5SZXBlYXRXcmFwcGluZyxvcGFjaXR5OnA/MTowfSxjKSkpfWZ1bmN0aW9uIG9hKHtkaXN0YW5jZTplPS40LGFscGhhVGVzdDp0PS41LG1hcDpyLHdpZHRoOmE9NTEyLGhlaWdodDpvPTUxMixzY2FsZTppLGNoaWxkcmVuOnMsLi4ubH0pe2NvbnN0IGM9ay51c2VSZWYobnVsbCksdT1sLnNwb3RsaWdodFJlZixkPWwuZGVidWc7cmV0dXJuIG5hKHUsYyxhLG8sZSksay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIse3JlZjpjLHNjYWxlOmksY2FzdFNoYWRvdzohMH0say5jcmVhdGVFbGVtZW50KFwicGxhbmVHZW9tZXRyeVwiLG51bGwpLGsuY3JlYXRlRWxlbWVudChcIm1lc2hCYXNpY01hdGVyaWFsXCIse3RyYW5zcGFyZW50OiEwLHNpZGU6bi5Eb3VibGVTaWRlLGFscGhhVGVzdDp0LGFscGhhTWFwOnIsXCJhbHBoYU1hcC13cmFwU1wiOm4uUmVwZWF0V3JhcHBpbmcsXCJhbHBoYU1hcC13cmFwVFwiOm4uUmVwZWF0V3JhcHBpbmcsb3BhY2l0eTpkPzE6MH0scykpKX1jb25zdCBpYT1rLmZvcndhcmRSZWYoKCh7b3BhY2l0eTplPTEscmFkaXVzVG9wOnQscmFkaXVzQm90dG9tOnIsZGVwdGhCdWZmZXI6bixjb2xvcjphPVwid2hpdGVcIixkaXN0YW5jZTpvPTUsYW5nbGU6aT0uMTUsYXR0ZW51YXRpb246cz01LGFuZ2xlUG93ZXI6bD01LHZvbHVtZXRyaWM6Yz0hMCxkZWJ1Zzp1PSExLGNoaWxkcmVuOmQsLi4ubX0sZik9Pntjb25zdCBwPWsudXNlUmVmKG51bGwpO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLG51bGwsdSYmcC5jdXJyZW50JiZrLmNyZWF0ZUVsZW1lbnQoXCJzcG90TGlnaHRIZWxwZXJcIix7YXJnczpbcC5jdXJyZW50XX0pLGsuY3JlYXRlRWxlbWVudChcInNwb3RMaWdodFwiLFIuZGVmYXVsdCh7cmVmOkEuZGVmYXVsdChbZixwXSksYW5nbGU6aSxjb2xvcjphLGRpc3RhbmNlOm8sY2FzdFNoYWRvdzohMH0sbSksYyYmay5jcmVhdGVFbGVtZW50KHJhLHtkZWJ1Zzp1LG9wYWNpdHk6ZSxyYWRpdXNUb3A6dCxyYWRpdXNCb3R0b206cixkZXB0aEJ1ZmZlcjpuLGNvbG9yOmEsZGlzdGFuY2U6byxhbmdsZTppLGF0dGVudWF0aW9uOnMsYW5nbGVQb3dlcjpsfSkpLGQmJmsuY2xvbmVFbGVtZW50KGQse3Nwb3RsaWdodFJlZjpwLGRlYnVnOnV9KSl9KSksc2E9ay5mb3J3YXJkUmVmKCgoe2FyZ3M6ZSxtYXA6dCx0b25lTWFwcGVkOnI9ITEsY29sb3I6bj1cIndoaXRlXCIsZm9ybTpvPVwicmVjdFwiLGludGVuc2l0eTppPTEsc2NhbGU6cz0xLHRhcmdldDpsLGNoaWxkcmVuOmMsLi4udX0sZCk9Pntjb25zdCBtPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PntjfHx1Lm1hdGVyaWFsfHwoYS5hcHBseVByb3BzKG0uY3VycmVudC5tYXRlcmlhbCx7Y29sb3I6bn0pLG0uY3VycmVudC5tYXRlcmlhbC5jb2xvci5tdWx0aXBseVNjYWxhcihpKSl9KSxbbixpLGMsdS5tYXRlcmlhbF0pLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2wmJm0uY3VycmVudC5sb29rQXQoQXJyYXkuaXNBcnJheShsKT9uZXcgRC5WZWN0b3IzKC4uLmwpOmwpfSksW2xdKSxzPUFycmF5LmlzQXJyYXkocykmJjI9PT1zLmxlbmd0aD9bc1swXSxzWzFdLDFdOnMsay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLFIuZGVmYXVsdCh7cmVmOkEuZGVmYXVsdChbbSxkXSksc2NhbGU6c30sdSksXCJjaXJjbGVcIj09PW8/ay5jcmVhdGVFbGVtZW50KFwicmluZ0dlb21ldHJ5XCIse2FyZ3M6WzAsMSw2NF19KTpcInJpbmdcIj09PW8/ay5jcmVhdGVFbGVtZW50KFwicmluZ0dlb21ldHJ5XCIse2FyZ3M6Wy41LDEsNjRdfSk6XCJyZWN0XCI9PT1vP2suY3JlYXRlRWxlbWVudChcInBsYW5lR2VvbWV0cnlcIixudWxsKTprLmNyZWF0ZUVsZW1lbnQobyx7YXJnczplfSksY3x8KHUubWF0ZXJpYWw/bnVsbDprLmNyZWF0ZUVsZW1lbnQoXCJtZXNoQmFzaWNNYXRlcmlhbFwiLHt0b25lTWFwcGVkOnIsbWFwOnQsc2lkZTpELkRvdWJsZVNpZGV9KSkpfSkpO2Z1bmN0aW9uIGxhKGUsdCxyPW5ldyBuLlZlY3RvcjMpe2NvbnN0IGE9TWF0aC5QSSooZS0uNSksbz0yKk1hdGguUEkqKHQtLjUpO3JldHVybiByLng9TWF0aC5jb3Mobyksci55PU1hdGguc2luKGEpLHIuej1NYXRoLnNpbihvKSxyfWNvbnN0IGNhPWsuZm9yd2FyZFJlZigoKHtpbmNsaW5hdGlvbjplPS42LGF6aW11dGg6dD0uMSxkaXN0YW5jZTpyPTFlMyxtaWVDb2VmZmljaWVudDphPS4wMDUsbWllRGlyZWN0aW9uYWxHOm89LjgscmF5bGVpZ2g6aT0uNSx0dXJiaWRpdHk6cz0xMCxzdW5Qb3NpdGlvbjpsPWxhKGUsdCksLi4uY30sdSk9Pntjb25zdCBtPWsudXNlTWVtbygoKCk9PihuZXcgbi5WZWN0b3IzKS5zZXRTY2FsYXIocikpLFtyXSksW2ZdPWsudXNlU3RhdGUoKCgpPT5uZXcgZC5Ta3kpKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIsUi5kZWZhdWx0KHtvYmplY3Q6ZixyZWY6dSxcIm1hdGVyaWFsLXVuaWZvcm1zLW1pZUNvZWZmaWNpZW50LXZhbHVlXCI6YSxcIm1hdGVyaWFsLXVuaWZvcm1zLW1pZURpcmVjdGlvbmFsRy12YWx1ZVwiOm8sXCJtYXRlcmlhbC11bmlmb3Jtcy1yYXlsZWlnaC12YWx1ZVwiOmksXCJtYXRlcmlhbC11bmlmb3Jtcy1zdW5Qb3NpdGlvbi12YWx1ZVwiOmwsXCJtYXRlcmlhbC11bmlmb3Jtcy10dXJiaWRpdHktdmFsdWVcIjpzLHNjYWxlOm19LGMpKX0pKTtjbGFzcyB1YSBleHRlbmRzIG4uU2hhZGVyTWF0ZXJpYWx7Y29uc3RydWN0b3IoKXtzdXBlcih7dW5pZm9ybXM6e3RpbWU6e3ZhbHVlOjB9LGZhZGU6e3ZhbHVlOjF9fSx2ZXJ0ZXhTaGFkZXI6XCJcXG4gICAgICB1bmlmb3JtIGZsb2F0IHRpbWU7XFxuICAgICAgYXR0cmlidXRlIGZsb2F0IHNpemU7XFxuICAgICAgdmFyeWluZyB2ZWMzIHZDb2xvcjtcXG4gICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICB2Q29sb3IgPSBjb2xvcjtcXG4gICAgICAgIHZlYzQgbXZQb3NpdGlvbiA9IG1vZGVsVmlld01hdHJpeCAqIHZlYzQocG9zaXRpb24sIDAuNSk7XFxuICAgICAgICBnbF9Qb2ludFNpemUgPSBzaXplICogKDMwLjAgLyAtbXZQb3NpdGlvbi56KSAqICgzLjAgKyBzaW4odGltZSArIDEwMC4wKSk7XFxuICAgICAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtdlBvc2l0aW9uO1xcbiAgICAgIH1cIixmcmFnbWVudFNoYWRlcjpgXFxuICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgcG9pbnRUZXh0dXJlO1xcbiAgICAgIHVuaWZvcm0gZmxvYXQgZmFkZTtcXG4gICAgICB2YXJ5aW5nIHZlYzMgdkNvbG9yO1xcbiAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgIGZsb2F0IG9wYWNpdHkgPSAxLjA7XFxuICAgICAgICBpZiAoZmFkZSA9PSAxLjApIHtcXG4gICAgICAgICAgZmxvYXQgZCA9IGRpc3RhbmNlKGdsX1BvaW50Q29vcmQsIHZlYzIoMC41LCAwLjUpKTtcXG4gICAgICAgICAgb3BhY2l0eSA9IDEuMCAvICgxLjAgKyBleHAoMTYuMCAqIChkIC0gMC4yNSkpKTtcXG4gICAgICAgIH1cXG4gICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQodkNvbG9yLCBvcGFjaXR5KTtcXG5cXG4gICAgICAgICNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cXG5cXHQgICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgICAgIH1gfSl9fWNvbnN0IGRhPWU9PihuZXcgbi5WZWN0b3IzKS5zZXRGcm9tU3BoZXJpY2FsKG5ldyBuLlNwaGVyaWNhbChlLE1hdGguYWNvcygxLTIqTWF0aC5yYW5kb20oKSksMipNYXRoLnJhbmRvbSgpKk1hdGguUEkpKSxtYT1rLmZvcndhcmRSZWYoKCh7cmFkaXVzOmU9MTAwLGRlcHRoOnQ9NTAsY291bnQ6cj01ZTMsc2F0dXJhdGlvbjpvPTAsZmFjdG9yOmk9NCxmYWRlOnM9ITEsc3BlZWQ6bD0xfSxjKT0+e2NvbnN0IHU9ay51c2VSZWYoKSxbZCxtLGZdPWsudXNlTWVtbygoKCk9Pntjb25zdCBhPVtdLHM9W10sbD1BcnJheS5mcm9tKHtsZW5ndGg6cn0sKCgpPT4oLjUrLjUqTWF0aC5yYW5kb20oKSkqaSkpLGM9bmV3IG4uQ29sb3I7bGV0IHU9ZSt0O2NvbnN0IGQ9dC9yO2ZvcihsZXQgZT0wO2U8cjtlKyspdS09ZCpNYXRoLnJhbmRvbSgpLGEucHVzaCguLi5kYSh1KS50b0FycmF5KCkpLGMuc2V0SFNMKGUvcixvLC45KSxzLnB1c2goYy5yLGMuZyxjLmIpO3JldHVybltuZXcgRmxvYXQzMkFycmF5KGEpLG5ldyBGbG9hdDMyQXJyYXkocyksbmV3IEZsb2F0MzJBcnJheShsKV19KSxbcix0LGksZSxvXSk7YS51c2VGcmFtZSgoZT0+dS5jdXJyZW50JiYodS5jdXJyZW50LnVuaWZvcm1zLnRpbWUudmFsdWU9ZS5jbG9jay5nZXRFbGFwc2VkVGltZSgpKmwpKSk7Y29uc3RbcF09ay51c2VTdGF0ZSgoKCk9Pm5ldyB1YSkpO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoXCJwb2ludHNcIix7cmVmOmN9LGsuY3JlYXRlRWxlbWVudChcImJ1ZmZlckdlb21ldHJ5XCIsbnVsbCxrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJBdHRyaWJ1dGVcIix7YXR0YWNoOlwiYXR0cmlidXRlcy1wb3NpdGlvblwiLGFyZ3M6W2QsM119KSxrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJBdHRyaWJ1dGVcIix7YXR0YWNoOlwiYXR0cmlidXRlcy1jb2xvclwiLGFyZ3M6W20sM119KSxrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJBdHRyaWJ1dGVcIix7YXR0YWNoOlwiYXR0cmlidXRlcy1zaXplXCIsYXJnczpbZiwxXX0pKSxrLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIix7cmVmOnUsb2JqZWN0OnAsYXR0YWNoOlwibWF0ZXJpYWxcIixibGVuZGluZzpuLkFkZGl0aXZlQmxlbmRpbmcsXCJ1bmlmb3Jtcy1mYWRlLXZhbHVlXCI6cyxkZXB0aFdyaXRlOiExLHRyYW5zcGFyZW50OiEwLHZlcnRleENvbG9yczohMH0pKX0pKSxmYT1uZXcgbi5NYXRyaXg0LHBhPW5ldyBuLlZlY3RvcjMsaGE9bmV3IG4uUXVhdGVybmlvbix5YT1uZXcgbi5WZWN0b3IzLHhhPW5ldyBuLlF1YXRlcm5pb24sdmE9bmV3IG4uVmVjdG9yMyxnYT1rLmNyZWF0ZUNvbnRleHQobnVsbCksemE9ay5mb3J3YXJkUmVmKCgoe2NoaWxkcmVuOmUsbWF0ZXJpYWw6dD1uLk1lc2hMYW1iZXJ0TWF0ZXJpYWwsdGV4dHVyZTpyPVwiaHR0cHM6Ly9yYXdjZG4uZ2l0aGFjay5jb20vcG1uZHJzL2RyZWktYXNzZXRzLzkyMjVhOWYxZmJkNDQ5ZDk0MTExMjVjMmY0MTliODQzZDAzMDhjOWYvY2xvdWQucG5nXCIscmFuZ2U6byxsaW1pdDppPTIwMCwuLi5zfSxsKT0+e3ZhciBjLHU7Y29uc3QgZD1rLnVzZU1lbW8oKCgpPT5jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IoKXtzdXBlcigpLHRoaXMub25CZWZvcmVDb21waWxlPWU9PntlLnZlcnRleFNoYWRlcj1cImF0dHJpYnV0ZSBmbG9hdCBvcGFjaXR5O1xcbiAgICAgICAgICAgICAgIHZhcnlpbmcgZmxvYXQgdk9wYWNpdHk7XFxuICAgICAgICAgICAgICBcIitlLnZlcnRleFNoYWRlci5yZXBsYWNlKFwiI2luY2x1ZGUgPGZvZ192ZXJ0ZXg+XCIsXCIjaW5jbHVkZSA8Zm9nX3ZlcnRleD5cXG4gICAgICAgICAgICAgICAgIHZPcGFjaXR5ID0gb3BhY2l0eTtcXG4gICAgICAgICAgICAgICAgXCIpLGUuZnJhZ21lbnRTaGFkZXI9XCJ2YXJ5aW5nIGZsb2F0IHZPcGFjaXR5O1xcbiAgICAgICAgICAgICAgXCIrZS5mcmFnbWVudFNoYWRlci5yZXBsYWNlKFwiI2luY2x1ZGUgPG9wYXF1ZV9mcmFnbWVudD5cIixcIiNpbmNsdWRlIDxvcGFxdWVfZnJhZ21lbnQ+XFxuICAgICAgICAgICAgICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KG91dGdvaW5nTGlnaHQsIGRpZmZ1c2VDb2xvci5hICogdk9wYWNpdHkpO1xcbiAgICAgICAgICAgICAgICBcIil9fX0pLFt0XSk7YS5leHRlbmQoe0Nsb3VkTWF0ZXJpYWw6ZH0pO2NvbnN0IG09ay51c2VSZWYobnVsbCksZj1rLnVzZVJlZihbXSkscD1rLnVzZU1lbW8oKCgpPT5uZXcgRmxvYXQzMkFycmF5KEFycmF5LmZyb20oe2xlbmd0aDppfSwoKCk9PjEpKSkpLFtpXSksaD1rLnVzZU1lbW8oKCgpPT5uZXcgRmxvYXQzMkFycmF5KEFycmF5LmZyb20oe2xlbmd0aDppfSwoKCk9PlsxLDEsMV0pKS5mbGF0KCkpKSxbaV0pLHk9UGUocik7bGV0IHgsdj0wLGc9MDtjb25zdCB6PW5ldyBuLlF1YXRlcm5pb24sdz1uZXcgbi5WZWN0b3IzKDAsMCwxKSxiPW5ldyBuLlZlY3RvcjM7YS51c2VGcmFtZSgoKGUsdCk9Pntmb3Iodj1lLmNsb2NrLmdldEVsYXBzZWRUaW1lKCksZmEuY29weShtLmN1cnJlbnQubWF0cml4V29ybGQpLmludmVydCgpLGUuY2FtZXJhLm1hdHJpeFdvcmxkLmRlY29tcG9zZSh5YSx4YSx2YSksZz0wO2c8Zi5jdXJyZW50Lmxlbmd0aDtnKyspeD1mLmN1cnJlbnRbZ10seC5yZWYuY3VycmVudC5tYXRyaXhXb3JsZC5kZWNvbXBvc2UocGEsaGEsdmEpLHBhLmFkZChiLmNvcHkoeC5wb3NpdGlvbikuYXBwbHlRdWF0ZXJuaW9uKGhhKS5tdWx0aXBseSh2YSkpLGhhLmNvcHkoeGEpLm11bHRpcGx5KHouc2V0RnJvbUF4aXNBbmdsZSh3LHgucm90YXRpb24rPXQqeC5yb3RhdGlvbkZhY3RvcikpLHZhLm11bHRpcGx5U2NhbGFyKHgudm9sdW1lKygxK01hdGguc2luKHYqeC5kZW5zaXR5Knguc3BlZWQpKS8yKnguZ3Jvd3RoKSx4Lm1hdHJpeC5jb21wb3NlKHBhLGhhLHZhKS5wcmVtdWx0aXBseShmYSkseC5kaXN0PXBhLmRpc3RhbmNlVG8oeWEpO2ZvcihmLmN1cnJlbnQuc29ydCgoKGUsdCk9PnQuZGlzdC1lLmRpc3QpKSxnPTA7ZzxmLmN1cnJlbnQubGVuZ3RoO2crKyl4PWYuY3VycmVudFtnXSxwW2ddPXgub3BhY2l0eSooeC5kaXN0PHguZmFkZS0xP3guZGlzdC94LmZhZGU6MSksbS5jdXJyZW50LnNldE1hdHJpeEF0KGcseC5tYXRyaXgpLG0uY3VycmVudC5zZXRDb2xvckF0KGcseC5jb2xvcik7bS5jdXJyZW50Lmdlb21ldHJ5LmF0dHJpYnV0ZXMub3BhY2l0eS5uZWVkc1VwZGF0ZT0hMCxtLmN1cnJlbnQuaW5zdGFuY2VNYXRyaXgubmVlZHNVcGRhdGU9ITAsbS5jdXJyZW50Lmluc3RhbmNlQ29sb3ImJihtLmN1cnJlbnQuaW5zdGFuY2VDb2xvci5uZWVkc1VwZGF0ZT0hMCl9KSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57Y29uc3QgZT1NYXRoLm1pbihpLHZvaWQgMCE9PW8/bzppLGYuY3VycmVudC5sZW5ndGgpO20uY3VycmVudC5jb3VudD1lLG0uY3VycmVudC5pbnN0YW5jZU1hdHJpeC51cGRhdGVSYW5nZS5jb3VudD0xNiplLG0uY3VycmVudC5pbnN0YW5jZUNvbG9yJiYobS5jdXJyZW50Lmluc3RhbmNlQ29sb3IudXBkYXRlUmFuZ2UuY291bnQ9MyplKSxtLmN1cnJlbnQuZ2VvbWV0cnkuYXR0cmlidXRlcy5vcGFjaXR5LnVwZGF0ZVJhbmdlLmNvdW50PWV9KSk7bGV0IEU9W251bGwhPT0oYz15LmltYWdlLndpZHRoKSYmdm9pZCAwIT09Yz9jOjEsbnVsbCE9PSh1PXkuaW1hZ2UuaGVpZ2h0KSYmdm9pZCAwIT09dT91OjFdLE09TWF0aC5tYXgoRVswXSxFWzFdKTtyZXR1cm4gRT1bRVswXS9NLEVbMV0vTV0say5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjpsfSxzKSxrLmNyZWF0ZUVsZW1lbnQoZ2EuUHJvdmlkZXIse3ZhbHVlOmZ9LGUsay5jcmVhdGVFbGVtZW50KFwiaW5zdGFuY2VkTWVzaFwiLHttYXRyaXhBdXRvVXBkYXRlOiExLHJlZjptLGFyZ3M6W251bGwsbnVsbCxpXX0say5jcmVhdGVFbGVtZW50KFwiaW5zdGFuY2VkQnVmZmVyQXR0cmlidXRlXCIse3VzYWdlOm4uRHluYW1pY0RyYXdVc2FnZSxhdHRhY2g6XCJpbnN0YW5jZUNvbG9yXCIsYXJnczpbaCwzXX0pLGsuY3JlYXRlRWxlbWVudChcInBsYW5lR2VvbWV0cnlcIix7YXJnczpbLi4uRV19LGsuY3JlYXRlRWxlbWVudChcImluc3RhbmNlZEJ1ZmZlckF0dHJpYnV0ZVwiLHt1c2FnZTpuLkR5bmFtaWNEcmF3VXNhZ2UsYXR0YWNoOlwiYXR0cmlidXRlcy1vcGFjaXR5XCIsYXJnczpbcCwxXX0pKSxrLmNyZWF0ZUVsZW1lbnQoXCJjbG91ZE1hdGVyaWFsXCIse2tleTp0Lm5hbWUsbWFwOnksdHJhbnNwYXJlbnQ6ITAsZGVwdGhXcml0ZTohMX0pKSkpfSkpLHdhPWsuZm9yd2FyZFJlZigoKHtvcGFjaXR5OmU9MSxzcGVlZDp0PTAsYm91bmRzOnI9WzUsMSwxXSxzZWdtZW50czpvPTIwLGNvbG9yOmk9XCIjZmZmZmZmXCIsZmFkZTpzPTEwLHZvbHVtZTpsPTYsc21hbGxlc3RWb2x1bWU6Yz0uMjUsZGlzdHJpYnV0ZTp1PW51bGwsZ3Jvd3RoOmQ9NCxjb25jZW50cmF0ZTptPVwiaW5zaWRlXCIsc2VlZDpmPU1hdGgucmFuZG9tKCksLi4ucH0saCk9PntmdW5jdGlvbiB5KCl7Y29uc3QgZT0xZTQqTWF0aC5zaW4oZisrKTtyZXR1cm4gZS1NYXRoLmZsb29yKGUpfWNvbnN0IHg9ay51c2VDb250ZXh0KGdhKSx2PWsudXNlUmVmKG51bGwpLFtnXT1rLnVzZVN0YXRlKCgoKT0+TS52NCgpKSksej1rLnVzZU1lbW8oKCgpPT5bLi4ubmV3IEFycmF5KG8pXS5tYXAoKChlLHQpPT4oe3NlZ21lbnRzOm8sYm91bmRzOm5ldyBuLlZlY3RvcjMoMSwxLDEpLHBvc2l0aW9uOm5ldyBuLlZlY3RvcjMsdXVpZDpnLGluZGV4OnQscmVmOnYsZGlzdDowLG1hdHJpeDpuZXcgbi5NYXRyaXg0LGNvbG9yOm5ldyBuLkNvbG9yLHJvdGF0aW9uOnQqKE1hdGguUEkvbyl9KSkpKSxbbyxnXSk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e3ouZm9yRWFjaCgoKG4sZik9Pnt2YXIgcDthLmFwcGx5UHJvcHMobix7dm9sdW1lOmwsY29sb3I6aSxzcGVlZDp0LGdyb3d0aDpkLG9wYWNpdHk6ZSxmYWRlOnMsYm91bmRzOnIsZGVuc2l0eTpNYXRoLm1heCguNSx5KCkpLHJvdGF0aW9uRmFjdG9yOk1hdGgubWF4KC4yLC41KnkoKSkqdH0pO2NvbnN0IGg9bnVsbD09dT92b2lkIDA6dShuLGYpOyhofHxvPjEpJiZuLnBvc2l0aW9uLmNvcHkobi5ib3VuZHMpLm11bHRpcGx5KG51bGwhPT0ocD1udWxsPT1oP3ZvaWQgMDpoLnBvaW50KSYmdm9pZCAwIT09cD9wOnt4OjIqeSgpLTEseToyKnkoKS0xLHo6Mip5KCktMX0pO2NvbnN0IHg9TWF0aC5hYnMobi5wb3NpdGlvbi54KSx2PU1hdGguYWJzKG4ucG9zaXRpb24ueSksZz1NYXRoLmFicyhuLnBvc2l0aW9uLnopLHo9TWF0aC5tYXgoeCx2LGcpO24ubGVuZ3RoPTEseD09PXomJihuLmxlbmd0aC09eC9uLmJvdW5kcy54KSx2PT09eiYmKG4ubGVuZ3RoLT12L24uYm91bmRzLnkpLGc9PT16JiYobi5sZW5ndGgtPWcvbi5ib3VuZHMueiksbi52b2x1bWU9KHZvaWQgMCE9PShudWxsPT1oP3ZvaWQgMDpoLnZvbHVtZSk/aC52b2x1bWU6TWF0aC5tYXgoTWF0aC5tYXgoMCxjKSxcInJhbmRvbVwiPT09bT95KCk6XCJpbnNpZGVcIj09PW0/bi5sZW5ndGg6MS1uLmxlbmd0aCkpKmx9KSl9KSxbbSxyLHMsaSxlLGQsbCxmLG8sdF0pLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2NvbnN0IGU9ejtyZXR1cm4geC5jdXJyZW50PVsuLi54LmN1cnJlbnQsLi4uZV0sKCk9Pnt4LmN1cnJlbnQ9eC5jdXJyZW50LmZpbHRlcigoZT0+ZS51dWlkIT09ZykpfX0pLFt6XSksay51c2VJbXBlcmF0aXZlSGFuZGxlKGgsKCgpPT52LmN1cnJlbnQpLFtdKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLFIuZGVmYXVsdCh7cmVmOnZ9LHApKX0pKSxiYT1rLmZvcndhcmRSZWYoKChlLHQpPT5rLnVzZUNvbnRleHQoZ2EpP2suY3JlYXRlRWxlbWVudCh3YSxSLmRlZmF1bHQoe3JlZjp0fSxlKSk6ay5jcmVhdGVFbGVtZW50KHphLG51bGwsay5jcmVhdGVFbGVtZW50KHdhLFIuZGVmYXVsdCh7cmVmOnR9LGUpKSkpKSxFYT1TZSh7dGltZTowLHBpeGVsUmF0aW86MX0sXCIgdW5pZm9ybSBmbG9hdCBwaXhlbFJhdGlvO1xcbiAgICB1bmlmb3JtIGZsb2F0IHRpbWU7XFxuICAgIGF0dHJpYnV0ZSBmbG9hdCBzaXplOyAgXFxuICAgIGF0dHJpYnV0ZSBmbG9hdCBzcGVlZDsgIFxcbiAgICBhdHRyaWJ1dGUgZmxvYXQgb3BhY2l0eTtcXG4gICAgYXR0cmlidXRlIHZlYzMgbm9pc2U7XFxuICAgIGF0dHJpYnV0ZSB2ZWMzIGNvbG9yO1xcbiAgICB2YXJ5aW5nIHZlYzMgdkNvbG9yO1xcbiAgICB2YXJ5aW5nIGZsb2F0IHZPcGFjaXR5O1xcbiAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgdmVjNCBtb2RlbFBvc2l0aW9uID0gbW9kZWxNYXRyaXggKiB2ZWM0KHBvc2l0aW9uLCAxLjApO1xcbiAgICAgIG1vZGVsUG9zaXRpb24ueSArPSBzaW4odGltZSAqIHNwZWVkICsgbW9kZWxQb3NpdGlvbi54ICogbm9pc2UueCAqIDEwMC4wKSAqIDAuMjtcXG4gICAgICBtb2RlbFBvc2l0aW9uLnogKz0gY29zKHRpbWUgKiBzcGVlZCArIG1vZGVsUG9zaXRpb24ueCAqIG5vaXNlLnkgKiAxMDAuMCkgKiAwLjI7XFxuICAgICAgbW9kZWxQb3NpdGlvbi54ICs9IGNvcyh0aW1lICogc3BlZWQgKyBtb2RlbFBvc2l0aW9uLnggKiBub2lzZS56ICogMTAwLjApICogMC4yO1xcbiAgICAgIHZlYzQgdmlld1Bvc2l0aW9uID0gdmlld01hdHJpeCAqIG1vZGVsUG9zaXRpb247XFxuICAgICAgdmVjNCBwcm9qZWN0aW9uUG9zdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiB2aWV3UG9zaXRpb247XFxuICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uUG9zdGlvbjtcXG4gICAgICBnbF9Qb2ludFNpemUgPSBzaXplICogMjUuICogcGl4ZWxSYXRpbztcXG4gICAgICBnbF9Qb2ludFNpemUgKj0gKDEuMCAvIC0gdmlld1Bvc2l0aW9uLnopO1xcbiAgICAgIHZDb2xvciA9IGNvbG9yO1xcbiAgICAgIHZPcGFjaXR5ID0gb3BhY2l0eTtcXG4gICAgfVwiLGAgdmFyeWluZyB2ZWMzIHZDb2xvcjtcXG4gICAgdmFyeWluZyBmbG9hdCB2T3BhY2l0eTtcXG4gICAgdm9pZCBtYWluKCkge1xcbiAgICAgIGZsb2F0IGRpc3RhbmNlVG9DZW50ZXIgPSBkaXN0YW5jZShnbF9Qb2ludENvb3JkLCB2ZWMyKDAuNSkpO1xcbiAgICAgIGZsb2F0IHN0cmVuZ3RoID0gMC4wNSAvIGRpc3RhbmNlVG9DZW50ZXIgLSAwLjE7XFxuICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNCh2Q29sb3IsIHN0cmVuZ3RoICogdk9wYWNpdHkpO1xcbiAgICAgICNpbmNsdWRlIDx0b25lbWFwcGluZ19mcmFnbWVudD5cXG4gICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgICB9YCksTWE9ZT0+ZSYmZS5jb25zdHJ1Y3Rvcj09PUZsb2F0MzJBcnJheSxTYT1lPT5lIGluc3RhbmNlb2YgRC5WZWN0b3IyfHxlIGluc3RhbmNlb2YgRC5WZWN0b3IzfHxlIGluc3RhbmNlb2YgRC5WZWN0b3I0LENhPWU9PkFycmF5LmlzQXJyYXkoZSk/ZTpTYShlKT9lLnRvQXJyYXkoKTpbZSxlLGVdO2Z1bmN0aW9uIFBhKGUsdCxyKXtyZXR1cm4gay51c2VNZW1vKCgoKT0+e2lmKHZvaWQgMCE9PXQpe2lmKE1hKHQpKXJldHVybiB0O2lmKHQgaW5zdGFuY2VvZiBELkNvbG9yKXtjb25zdCByPUFycmF5LmZyb20oe2xlbmd0aDozKmV9LCgoKT0+KGU9PltlLnIsZS5nLGUuYl0pKHQpKSkuZmxhdCgpO3JldHVybiBGbG9hdDMyQXJyYXkuZnJvbShyKX1pZihTYSh0KXx8QXJyYXkuaXNBcnJheSh0KSl7Y29uc3Qgcj1BcnJheS5mcm9tKHtsZW5ndGg6MyplfSwoKCk9PkNhKHQpKSkuZmxhdCgpO3JldHVybiBGbG9hdDMyQXJyYXkuZnJvbShyKX1yZXR1cm4gRmxvYXQzMkFycmF5LmZyb20oe2xlbmd0aDplfSwoKCk9PnQpKX1yZXR1cm4gRmxvYXQzMkFycmF5LmZyb20oe2xlbmd0aDplfSxyKX0pLFt0XSl9Y29uc3QgVGE9ay5mb3J3YXJkUmVmKCgoe25vaXNlOmU9MSxjb3VudDp0PTEwMCxzcGVlZDpyPTEsb3BhY2l0eTpuPTEsc2NhbGU6bz0xLHNpemU6aSxjb2xvcjpzLGNoaWxkcmVuOmwsLi4uY30sdSk9PntrLnVzZU1lbW8oKCgpPT5hLmV4dGVuZCh7U3BhcmtsZXNJbXBsTWF0ZXJpYWw6RWF9KSksW10pO2NvbnN0IGQ9ay51c2VSZWYobnVsbCksbT1hLnVzZVRocmVlKChlPT5lLnZpZXdwb3J0LmRwcikpLGY9Q2EobykscD1rLnVzZU1lbW8oKCgpPT5GbG9hdDMyQXJyYXkuZnJvbShBcnJheS5mcm9tKHtsZW5ndGg6dH0sKCgpPT5mLm1hcChELk1hdGhVdGlscy5yYW5kRmxvYXRTcHJlYWQpKSkuZmxhdCgpKSksW3QsLi4uZl0pLGg9UGEodCxpLE1hdGgucmFuZG9tKSx5PVBhKHQsbikseD1QYSh0LHIpLHY9UGEoMyp0LGUpLGc9UGEodm9pZCAwPT09cz8zKnQ6dCxNYShzKT9zOm5ldyBELkNvbG9yKHMpLCgoKT0+MSkpO3JldHVybiBhLnVzZUZyYW1lKChlPT57ZC5jdXJyZW50JiZkLmN1cnJlbnQubWF0ZXJpYWwmJihkLmN1cnJlbnQubWF0ZXJpYWwudGltZT1lLmNsb2NrLmVsYXBzZWRUaW1lKX0pKSxrLnVzZUltcGVyYXRpdmVIYW5kbGUodSwoKCk9PmQuY3VycmVudCksW10pLGsuY3JlYXRlRWxlbWVudChcInBvaW50c1wiLFIuZGVmYXVsdCh7a2V5OmBwYXJ0aWNsZS0ke3R9LSR7SlNPTi5zdHJpbmdpZnkobyl9YH0sYyx7cmVmOmR9KSxrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJHZW9tZXRyeVwiLG51bGwsay5jcmVhdGVFbGVtZW50KFwiYnVmZmVyQXR0cmlidXRlXCIse2F0dGFjaDpcImF0dHJpYnV0ZXMtcG9zaXRpb25cIixhcmdzOltwLDNdfSksay5jcmVhdGVFbGVtZW50KFwiYnVmZmVyQXR0cmlidXRlXCIse2F0dGFjaDpcImF0dHJpYnV0ZXMtc2l6ZVwiLGFyZ3M6W2gsMV19KSxrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJBdHRyaWJ1dGVcIix7YXR0YWNoOlwiYXR0cmlidXRlcy1vcGFjaXR5XCIsYXJnczpbeSwxXX0pLGsuY3JlYXRlRWxlbWVudChcImJ1ZmZlckF0dHJpYnV0ZVwiLHthdHRhY2g6XCJhdHRyaWJ1dGVzLXNwZWVkXCIsYXJnczpbeCwxXX0pLGsuY3JlYXRlRWxlbWVudChcImJ1ZmZlckF0dHJpYnV0ZVwiLHthdHRhY2g6XCJhdHRyaWJ1dGVzLWNvbG9yXCIsYXJnczpbZywzXX0pLGsuY3JlYXRlRWxlbWVudChcImJ1ZmZlckF0dHJpYnV0ZVwiLHthdHRhY2g6XCJhdHRyaWJ1dGVzLW5vaXNlXCIsYXJnczpbdiwzXX0pKSxsfHxrLmNyZWF0ZUVsZW1lbnQoXCJzcGFya2xlc0ltcGxNYXRlcmlhbFwiLHt0cmFuc3BhcmVudDohMCxwaXhlbFJhdGlvOm0sZGVwdGhXcml0ZTohMX0pKX0pKTtjb25zdCBSYT17dW5pZm9ybXM6e3N0cm9rZU9wYWNpdHk6MSxmaWxsT3BhY2l0eTouMjUsZmlsbE1peDowLHRoaWNrbmVzczouMDUsY29sb3JCYWNrZmFjZXM6ITEsZGFzaEludmVydDohMCxkYXNoOiExLGRhc2hSZXBlYXRzOjQsZGFzaExlbmd0aDouNSxzcXVlZXplOiExLHNxdWVlemVNaW46LjIsc3F1ZWV6ZU1heDoxLHN0cm9rZTpuZXcgRC5Db2xvcihcIiNmZjAwMDBcIiksYmFja2ZhY2VTdHJva2U6bmV3IEQuQ29sb3IoXCIjMDAwMGZmXCIpLGZpbGw6bmV3IEQuQ29sb3IoXCIjMDBmZjAwXCIpfSx2ZXJ0ZXg6XCJcXG5cXHQgIGF0dHJpYnV0ZSB2ZWMzIGJhcnljZW50cmljO1xcblxcdFxcblxcdFxcdHZhcnlpbmcgdmVjMyB2X2VkZ2VzX0JhcnljZW50cmljO1xcblxcdFxcdHZhcnlpbmcgdmVjMyB2X2VkZ2VzX1Bvc2l0aW9uO1xcblxcblxcdFxcdHZvaWQgaW5pdFdpcmVmcmFtZSgpIHtcXG5cXHRcXHRcXHR2X2VkZ2VzX0JhcnljZW50cmljID0gYmFyeWNlbnRyaWM7XFxuXFx0XFx0XFx0dl9lZGdlc19Qb3NpdGlvbiA9IHBvc2l0aW9uLnh5ejtcXG5cXHRcXHR9XFxuXFx0ICBcIixmcmFnbWVudDpcIlxcblxcdFxcdCNpZm5kZWYgUElcXG5cXHQgIFxcdCNkZWZpbmUgUEkgMy4xNDE1OTI2NTM1ODk3OTMyMzg0NjI2NDMzODMyNzk1XFxuXFx0XFx0I2VuZGlmXFxuICBcXG5cXHQgIHZhcnlpbmcgdmVjMyB2X2VkZ2VzX0JhcnljZW50cmljO1xcblxcdCAgdmFyeWluZyB2ZWMzIHZfZWRnZXNfUG9zaXRpb247XFxuICBcXG5cXHQgIHVuaWZvcm0gZmxvYXQgc3Ryb2tlT3BhY2l0eTtcXG5cXHQgIHVuaWZvcm0gZmxvYXQgZmlsbE9wYWNpdHk7XFxuXFx0ICB1bmlmb3JtIGZsb2F0IGZpbGxNaXg7XFxuXFx0ICB1bmlmb3JtIGZsb2F0IHRoaWNrbmVzcztcXG5cXHQgIHVuaWZvcm0gYm9vbCBjb2xvckJhY2tmYWNlcztcXG4gIFxcblxcdCAgLy8gRGFzaFxcblxcdCAgdW5pZm9ybSBib29sIGRhc2hJbnZlcnQ7XFxuXFx0ICB1bmlmb3JtIGJvb2wgZGFzaDtcXG5cXHQgIHVuaWZvcm0gYm9vbCBkYXNoT25seTtcXG5cXHQgIHVuaWZvcm0gZmxvYXQgZGFzaFJlcGVhdHM7XFxuXFx0ICB1bmlmb3JtIGZsb2F0IGRhc2hMZW5ndGg7XFxuICBcXG5cXHQgIC8vIFNxdWVlemVcXG5cXHQgIHVuaWZvcm0gYm9vbCBzcXVlZXplO1xcblxcdCAgdW5pZm9ybSBmbG9hdCBzcXVlZXplTWluO1xcblxcdCAgdW5pZm9ybSBmbG9hdCBzcXVlZXplTWF4O1xcbiAgXFxuXFx0ICAvLyBDb2xvcnNcXG5cXHQgIHVuaWZvcm0gdmVjMyBzdHJva2U7XFxuXFx0ICB1bmlmb3JtIHZlYzMgYmFja2ZhY2VTdHJva2U7XFxuXFx0ICB1bmlmb3JtIHZlYzMgZmlsbDtcXG4gIFxcblxcdCAgLy8gVGhpcyBpcyBsaWtlXFxuXFx0ICBmbG9hdCB3aXJlZnJhbWVfYWFzdGVwKGZsb2F0IHRocmVzaG9sZCwgZmxvYXQgZGlzdCkge1xcblxcdFxcdCAgZmxvYXQgYWZ3aWR0aCA9IGZ3aWR0aChkaXN0KSAqIDAuNTtcXG5cXHRcXHQgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZCAtIGFmd2lkdGgsIHRocmVzaG9sZCArIGFmd2lkdGgsIGRpc3QpO1xcblxcdCAgfVxcbiAgXFxuXFx0ICBmbG9hdCB3aXJlZnJhbWVfbWFwKGZsb2F0IHZhbHVlLCBmbG9hdCBtaW4xLCBmbG9hdCBtYXgxLCBmbG9hdCBtaW4yLCBmbG9hdCBtYXgyKSB7XFxuXFx0XFx0ICByZXR1cm4gbWluMiArICh2YWx1ZSAtIG1pbjEpICogKG1heDIgLSBtaW4yKSAvIChtYXgxIC0gbWluMSk7XFxuXFx0ICB9XFxuICBcXG5cXHQgIGZsb2F0IGdldFdpcmVmcmFtZSgpIHtcXG5cXHRcXHRcXHR2ZWMzIGJhcnljZW50cmljID0gdl9lZGdlc19CYXJ5Y2VudHJpYztcXG5cXHRcXHRcXG5cXHRcXHRcXHQvLyBEaXN0YW5jZSBmcm9tIGNlbnRlciBvZiBlYWNoIHRyaWFuZ2xlIHRvIGl0cyBlZGdlcy5cXG5cXHRcXHRcXHRmbG9hdCBkID0gbWluKG1pbihiYXJ5Y2VudHJpYy54LCBiYXJ5Y2VudHJpYy55KSwgYmFyeWNlbnRyaWMueik7XFxuXFxuXFx0XFx0XFx0Ly8gZm9yIGRhc2hlZCByZW5kZXJpbmcsIHdlIGNhbiB1c2UgdGhpcyB0byBnZXQgdGhlIDAgLi4gMSB2YWx1ZSBvZiB0aGUgbGluZSBsZW5ndGhcXG5cXHRcXHRcXHRmbG9hdCBwb3NpdGlvbkFsb25nID0gbWF4KGJhcnljZW50cmljLngsIGJhcnljZW50cmljLnkpO1xcblxcdFxcdFxcdGlmIChiYXJ5Y2VudHJpYy55IDwgYmFyeWNlbnRyaWMueCAmJiBiYXJ5Y2VudHJpYy55IDwgYmFyeWNlbnRyaWMueikge1xcblxcdFxcdFxcdFxcdHBvc2l0aW9uQWxvbmcgPSAxLjAgLSBwb3NpdGlvbkFsb25nO1xcblxcdFxcdFxcdH1cXG5cXG5cXHRcXHRcXHQvLyB0aGUgdGhpY2tuZXNzIG9mIHRoZSBzdHJva2VcXG5cXHRcXHRcXHRmbG9hdCBjb21wdXRlZFRoaWNrbmVzcyA9IHdpcmVmcmFtZV9tYXAodGhpY2tuZXNzLCAwLjAsIDEuMCwgMC4wLCAwLjM0KTtcXG5cXG5cXHRcXHRcXHQvLyBpZiB3ZSB3YW50IHRvIHNocmluayB0aGUgdGhpY2tuZXNzIHRvd2FyZCB0aGUgY2VudGVyIG9mIHRoZSBsaW5lIHNlZ21lbnRcXG5cXHRcXHRcXHRpZiAoc3F1ZWV6ZSkge1xcblxcdFxcdFxcdFxcdGNvbXB1dGVkVGhpY2tuZXNzICo9IG1peChzcXVlZXplTWluLCBzcXVlZXplTWF4LCAoMS4wIC0gc2luKHBvc2l0aW9uQWxvbmcgKiBQSSkpKTtcXG5cXHRcXHRcXHR9XFxuXFxuXFx0XFx0XFx0Ly8gQ3JlYXRlIGRhc2ggcGF0dGVyblxcblxcdFxcdFxcdGlmIChkYXNoKSB7XFxuXFx0XFx0XFx0XFx0Ly8gaGVyZSB3ZSBvZmZzZXQgdGhlIHN0cm9rZSBwb3NpdGlvbiBkZXBlbmRpbmcgb24gd2hldGhlciBpdFxcblxcdFxcdFxcdFxcdC8vIHNob3VsZCBvdmVybGFwIG9yIG5vdFxcblxcdFxcdFxcdFxcdGZsb2F0IG9mZnNldCA9IDEuMCAvIGRhc2hSZXBlYXRzICogZGFzaExlbmd0aCAvIDIuMDtcXG5cXHRcXHRcXHRcXHRpZiAoIWRhc2hJbnZlcnQpIHtcXG5cXHRcXHRcXHRcXHRcXHRvZmZzZXQgKz0gMS4wIC8gZGFzaFJlcGVhdHMgLyAyLjA7XFxuXFx0XFx0XFx0XFx0fVxcblxcblxcdFxcdFxcdFxcdC8vIGlmIHdlIHNob3VsZCBhbmltYXRlIHRoZSBkYXNoIG9yIG5vdFxcblxcdFxcdFxcdFxcdC8vIGlmIChkYXNoQW5pbWF0ZSkge1xcblxcdFxcdFxcdFxcdC8vIFxcdG9mZnNldCArPSB0aW1lICogMC4yMjtcXG5cXHRcXHRcXHRcXHQvLyB9XFxuXFxuXFx0XFx0XFx0XFx0Ly8gY3JlYXRlIHRoZSByZXBlYXRpbmcgZGFzaCBwYXR0ZXJuXFxuXFx0XFx0XFx0XFx0ZmxvYXQgcGF0dGVybiA9IGZyYWN0KChwb3NpdGlvbkFsb25nICsgb2Zmc2V0KSAqIGRhc2hSZXBlYXRzKTtcXG5cXHRcXHRcXHRcXHRjb21wdXRlZFRoaWNrbmVzcyAqPSAxLjAgLSB3aXJlZnJhbWVfYWFzdGVwKGRhc2hMZW5ndGgsIHBhdHRlcm4pO1xcblxcdFxcdFxcdH1cXG5cXG5cXHRcXHRcXHQvLyBjb21wdXRlIHRoZSBhbnRpLWFsaWFzZWQgc3Ryb2tlIGVkZ2UgIFxcblxcdFxcdFxcdGZsb2F0IGVkZ2UgPSAxLjAgLSB3aXJlZnJhbWVfYWFzdGVwKGNvbXB1dGVkVGhpY2tuZXNzLCBkKTtcXG5cXG5cXHRcXHRcXHRyZXR1cm4gZWRnZTtcXG5cXHQgIH1cXG5cXHQgIFwifTtSYS51bmlmb3JtcyxSYS52ZXJ0ZXgsUmEuZnJhZ21lbnQ7ZnVuY3Rpb24ga2EoZSl7cmV0dXJuIHZvaWQgMCE9PShudWxsPT1lP3ZvaWQgMDplLmN1cnJlbnQpfWZ1bmN0aW9uIEZhKGUpe3JldHVyblwiV2lyZWZyYW1lR2VvbWV0cnlcIj09PWUudHlwZX1mdW5jdGlvbiBEYShlKXtjb25zdCB0PW51bGwhPShyPWUpJiZyLmN1cnJlbnQ/ZS5jdXJyZW50OmU7dmFyIHI7aWYoZnVuY3Rpb24oZSl7cmV0dXJuIShudWxsPT1lfHwhZS5pc0J1ZmZlckdlb21ldHJ5KX0odCkpcmV0dXJuIHQ7e2lmKEZhKHQpKXRocm93IG5ldyBFcnJvcihcIldpcmVmcmFtZTogV2lyZWZyYW1lR2VvbWV0cnkgaXMgbm90IHN1cHBvcnRlZC5cIik7Y29uc3QgZT10LnBhcmVudDtpZihmdW5jdGlvbihlKXtyZXR1cm4hKG51bGw9PWV8fCFlLmdlb21ldHJ5KX0oZSkpe2lmKEZhKGUuZ2VvbWV0cnkpKXRocm93IG5ldyBFcnJvcihcIldpcmVmcmFtZTogV2lyZWZyYW1lR2VvbWV0cnkgaXMgbm90IHN1cHBvcnRlZC5cIik7cmV0dXJuIGUuZ2VvbWV0cnl9fX1mdW5jdGlvbiBMYShlLHQpe2lmKGUuaW5kZXgpe2NvbnNvbGUud2FybihcIldpcmVmcmFtZTogUmVxdWlyZXMgbm9uLWluZGV4ZWQgZ2VvbWV0cnksIGNvbnZlcnRpbmcgdG8gbm9uLWluZGV4ZWQgZ2VvbWV0cnkuXCIpO2NvbnN0IHQ9ZS50b05vbkluZGV4ZWQoKTtlLmNvcHkodCksZS5zZXRJbmRleChudWxsKX1jb25zdCByPWZ1bmN0aW9uKGUsdCl7Y29uc3Qgcj1lLmdldEF0dHJpYnV0ZShcInBvc2l0aW9uXCIpLmNvdW50LG49W107Zm9yKGxldCBlPTA7ZTxyO2UrKyl7Y29uc3Qgcj10PzE6MDtlJTI9PTA/bi5wdXNoKDAsMCwxLDAsMSwwLDEsMCxyKTpuLnB1c2goMCwxLDAsMCwwLDEsMSwwLHIpfXJldHVybiBuZXcgRC5CdWZmZXJBdHRyaWJ1dGUoRmxvYXQzMkFycmF5LmZyb20obiksMyl9KGUsdCk7ZS5zZXRBdHRyaWJ1dGUoXCJiYXJ5Y2VudHJpY1wiLHIpfWZ1bmN0aW9uIEFhKHtnZW9tZXRyeTplLHNpbXBsaWZ5OnQ9ITEsLi4ucn0pe2NvbnN0W24sYV09ay51c2VTdGF0ZShudWxsKTtrLnVzZUxheW91dEVmZmVjdCgoKCk9Pntjb25zdCByPURhKGUpO2lmKCFyKXRocm93IG5ldyBFcnJvcihcIldpcmVmcmFtZTogZ2VvbWV0cnkgcHJvcCBtdXN0IGJlIGEgQnVmZmVyR2VvbWV0cnkgb3IgYSByZWYgdG8gYSBCdWZmZXJHZW9tZXRyeS5cIik7TGEocix0KSxrYShlKSYmYShyKX0pLFt0LGVdKTtjb25zdCBvPWthKGUpP246ZTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxvJiZrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIse2dlb21ldHJ5Om99LGsuY3JlYXRlRWxlbWVudChcIm1lc2hXaXJlZnJhbWVNYXRlcmlhbFwiLFIuZGVmYXVsdCh7YXR0YWNoOlwibWF0ZXJpYWxcIix0cmFuc3BhcmVudDohMCxzaWRlOkQuRG91YmxlU2lkZSxwb2x5Z29uT2Zmc2V0OiEwLHBvbHlnb25PZmZzZXRGYWN0b3I6LTR9LHIse2V4dGVuc2lvbnM6e2Rlcml2YXRpdmVzOiEwLGZyYWdEZXB0aDohMSxkcmF3QnVmZmVyczohMSxzaGFkZXJUZXh0dXJlTE9EOiExfX0pKSkpfWZ1bmN0aW9uIF9hKHtzaW1wbGlmeTplPSExLC4uLnR9KXtjb25zdCByPWsudXNlUmVmKG51bGwpLG49ay51c2VNZW1vKCgoKT0+ZnVuY3Rpb24oKXtjb25zdCBlPXt9O2Zvcihjb25zdCB0IGluIFJhLnVuaWZvcm1zKWVbdF09e3ZhbHVlOlJhLnVuaWZvcm1zW3RdfTtyZXR1cm4gZX0oKSksW1JhLnVuaWZvcm1zXSk7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7ay51c2VFZmZlY3QoKCgpPT57dmFyIHI7ZS5maWxsT3BhY2l0eS52YWx1ZT1udWxsIT09KHI9dC5maWxsT3BhY2l0eSkmJnZvaWQgMCE9PXI/cjplLmZpbGxPcGFjaXR5LnZhbHVlfSksW3QuZmlsbE9wYWNpdHldKSxrLnVzZUVmZmVjdCgoKCk9Pnt2YXIgcjtlLmZpbGxNaXgudmFsdWU9bnVsbCE9PShyPXQuZmlsbE1peCkmJnZvaWQgMCE9PXI/cjplLmZpbGxNaXgudmFsdWV9KSxbdC5maWxsTWl4XSksay51c2VFZmZlY3QoKCgpPT57dmFyIHI7ZS5zdHJva2VPcGFjaXR5LnZhbHVlPW51bGwhPT0ocj10LnN0cm9rZU9wYWNpdHkpJiZ2b2lkIDAhPT1yP3I6ZS5zdHJva2VPcGFjaXR5LnZhbHVlfSksW3Quc3Ryb2tlT3BhY2l0eV0pLGsudXNlRWZmZWN0KCgoKT0+e3ZhciByO2UudGhpY2tuZXNzLnZhbHVlPW51bGwhPT0ocj10LnRoaWNrbmVzcykmJnZvaWQgMCE9PXI/cjplLnRoaWNrbmVzcy52YWx1ZX0pLFt0LnRoaWNrbmVzc10pLGsudXNlRWZmZWN0KCgoKT0+e2UuY29sb3JCYWNrZmFjZXMudmFsdWU9ISF0LmNvbG9yQmFja2ZhY2VzfSksW3QuY29sb3JCYWNrZmFjZXNdKSxrLnVzZUVmZmVjdCgoKCk9PntlLmRhc2gudmFsdWU9ISF0LmRhc2h9KSxbdC5kYXNoXSksay51c2VFZmZlY3QoKCgpPT57ZS5kYXNoSW52ZXJ0LnZhbHVlPSEhdC5kYXNoSW52ZXJ0fSksW3QuZGFzaEludmVydF0pLGsudXNlRWZmZWN0KCgoKT0+e3ZhciByO2UuZGFzaFJlcGVhdHMudmFsdWU9bnVsbCE9PShyPXQuZGFzaFJlcGVhdHMpJiZ2b2lkIDAhPT1yP3I6ZS5kYXNoUmVwZWF0cy52YWx1ZX0pLFt0LmRhc2hSZXBlYXRzXSksay51c2VFZmZlY3QoKCgpPT57dmFyIHI7ZS5kYXNoTGVuZ3RoLnZhbHVlPW51bGwhPT0ocj10LmRhc2hMZW5ndGgpJiZ2b2lkIDAhPT1yP3I6ZS5kYXNoTGVuZ3RoLnZhbHVlfSksW3QuZGFzaExlbmd0aF0pLGsudXNlRWZmZWN0KCgoKT0+e2Uuc3F1ZWV6ZS52YWx1ZT0hIXQuc3F1ZWV6ZX0pLFt0LnNxdWVlemVdKSxrLnVzZUVmZmVjdCgoKCk9Pnt2YXIgcjtlLnNxdWVlemVNaW4udmFsdWU9bnVsbCE9PShyPXQuc3F1ZWV6ZU1pbikmJnZvaWQgMCE9PXI/cjplLnNxdWVlemVNaW4udmFsdWV9KSxbdC5zcXVlZXplTWluXSksay51c2VFZmZlY3QoKCgpPT57dmFyIHI7ZS5zcXVlZXplTWF4LnZhbHVlPW51bGwhPT0ocj10LnNxdWVlemVNYXgpJiZ2b2lkIDAhPT1yP3I6ZS5zcXVlZXplTWF4LnZhbHVlfSksW3Quc3F1ZWV6ZU1heF0pLGsudXNlRWZmZWN0KCgoKT0+e2Uuc3Ryb2tlLnZhbHVlPXQuc3Ryb2tlP25ldyBELkNvbG9yKHQuc3Ryb2tlKTplLnN0cm9rZS52YWx1ZX0pLFt0LnN0cm9rZV0pLGsudXNlRWZmZWN0KCgoKT0+e2UuZmlsbC52YWx1ZT10LmZpbGw/bmV3IEQuQ29sb3IodC5maWxsKTplLmZpbGwudmFsdWV9KSxbdC5maWxsXSksay51c2VFZmZlY3QoKCgpPT57ZS5iYWNrZmFjZVN0cm9rZS52YWx1ZT10LmJhY2tmYWNlU3Ryb2tlP25ldyBELkNvbG9yKHQuYmFja2ZhY2VTdHJva2UpOmUuYmFja2ZhY2VTdHJva2UudmFsdWV9KSxbdC5iYWNrZmFjZVN0cm9rZV0pfShuLHQpLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2NvbnN0IHQ9RGEocik7aWYoIXQpdGhyb3cgbmV3IEVycm9yKFwiV2lyZWZyYW1lOiBNdXN0IGJlIGEgY2hpbGQgb2YgYSBNZXNoLCBMaW5lIG9yIFBvaW50cyBvYmplY3Qgb3Igc3BlY2lmeSBhIGdlb21ldHJ5IHByb3AuXCIpO2NvbnN0IG49dC5jbG9uZSgpO3JldHVybiBMYSh0LGUpLCgpPT57dC5jb3B5KG4pLG4uZGlzcG9zZSgpfX0pLFtlXSksay51c2VMYXlvdXRFZmZlY3QoKCgpPT57Y29uc3QgZT1yLmN1cnJlbnQucGFyZW50LHQ9ZS5tYXRlcmlhbC5jbG9uZSgpO3JldHVybiBmdW5jdGlvbihlLHQpe2Uub25CZWZvcmVDb21waWxlPWU9PntlLnVuaWZvcm1zPXsuLi5lLnVuaWZvcm1zLC4uLnR9LGUudmVydGV4U2hhZGVyPWUudmVydGV4U2hhZGVyLnJlcGxhY2UoXCJ2b2lkIG1haW4oKSB7XCIsYFxcblxcdFxcdCAgJHtSYS52ZXJ0ZXh9XFxuXFx0XFx0ICB2b2lkIG1haW4oKSB7XFxuXFx0XFx0XFx0aW5pdFdpcmVmcmFtZSgpO1xcblxcdFxcdGApLGUuZnJhZ21lbnRTaGFkZXI9ZS5mcmFnbWVudFNoYWRlci5yZXBsYWNlKFwidm9pZCBtYWluKCkge1wiLGBcXG5cXHRcXHQgICR7UmEuZnJhZ21lbnR9XFxuXFx0XFx0ICB2b2lkIG1haW4oKSB7XFxuXFx0XFx0YCksZS5mcmFnbWVudFNoYWRlcj1lLmZyYWdtZW50U2hhZGVyLnJlcGxhY2UoXCIjaW5jbHVkZSA8Y29sb3JfZnJhZ21lbnQ+XCIsXCJcXG5cXHRcXHQgICNpbmNsdWRlIDxjb2xvcl9mcmFnbWVudD5cXG5cXHRcXHRcXHQgIGZsb2F0IGVkZ2UgPSBnZXRXaXJlZnJhbWUoKTtcXG5cXHRcXHQgIHZlYzQgY29sb3JTdHJva2UgPSB2ZWM0KHN0cm9rZSwgZWRnZSk7XFxuXFx0XFx0ICAjaWZkZWYgRkxJUF9TSURFRFxcblxcdFxcdFxcdGNvbG9yU3Ryb2tlLnJnYiA9IGJhY2tmYWNlU3Ryb2tlO1xcblxcdFxcdCAgI2VuZGlmXFxuXFx0XFx0ICB2ZWM0IGNvbG9yRmlsbCA9IHZlYzQobWl4KGRpZmZ1c2VDb2xvci5yZ2IsIGZpbGwsIGZpbGxNaXgpLCBtaXgoZGlmZnVzZUNvbG9yLmEsIGZpbGxPcGFjaXR5LCBmaWxsTWl4KSk7XFxuXFx0XFx0ICB2ZWM0IG91dENvbG9yID0gbWl4KGNvbG9yRmlsbCwgY29sb3JTdHJva2UsIGVkZ2UgKiBzdHJva2VPcGFjaXR5KTtcXG5cXG5cXHRcXHQgIGRpZmZ1c2VDb2xvci5yZ2IgPSBvdXRDb2xvci5yZ2I7XFxuXFx0XFx0ICBkaWZmdXNlQ29sb3IuYSAqPSBvdXRDb2xvci5hO1xcblxcdFxcdFwiKX0sZS5zaWRlPUQuRG91YmxlU2lkZSxlLnRyYW5zcGFyZW50PSEwfShlLm1hdGVyaWFsLG4pLCgpPT57ZS5tYXRlcmlhbC5kaXNwb3NlKCksZS5tYXRlcmlhbD10fX0pLFtdKSxrLmNyZWF0ZUVsZW1lbnQoXCJvYmplY3QzRFwiLHtyZWY6cn0pfWNvbnN0IE9hPW5ldyBELk1hdHJpeDQsTmE9bmV3IEQuUmF5LEJhPW5ldyBELlNwaGVyZSxJYT1uZXcgRC5WZWN0b3IzO2NsYXNzIFVhIGV4dGVuZHMgRC5Hcm91cHtjb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5zaXplPTAsdGhpcy5jb2xvcj1uZXcgRC5Db2xvcihcIndoaXRlXCIpLHRoaXMuaW5zdGFuY2U9e2N1cnJlbnQ6dm9pZCAwfSx0aGlzLmluc3RhbmNlS2V5PXtjdXJyZW50OnZvaWQgMH19Z2V0IGdlb21ldHJ5KCl7dmFyIGU7cmV0dXJuIG51bGw9PShlPXRoaXMuaW5zdGFuY2UuY3VycmVudCk/dm9pZCAwOmUuZ2VvbWV0cnl9cmF5Y2FzdChlLHQpe3ZhciByLG47Y29uc3QgYT10aGlzLmluc3RhbmNlLmN1cnJlbnQ7aWYoIWF8fCFhLmdlb21ldHJ5KXJldHVybjtjb25zdCBvPWEudXNlckRhdGEuaW5zdGFuY2VzLmluZGV4T2YodGhpcy5pbnN0YW5jZUtleSk7aWYoLTE9PT1vfHxvPmEuZ2VvbWV0cnkuZHJhd1JhbmdlLmNvdW50KXJldHVybjtjb25zdCBpPW51bGwhPT0ocj1udWxsPT0obj1lLnBhcmFtcy5Qb2ludHMpP3ZvaWQgMDpuLnRocmVzaG9sZCkmJnZvaWQgMCE9PXI/cjoxO2lmKEJhLnNldCh0aGlzLmdldFdvcmxkUG9zaXRpb24oSWEpLGkpLCExPT09ZS5yYXkuaW50ZXJzZWN0c1NwaGVyZShCYSkpcmV0dXJuO09hLmNvcHkoYS5tYXRyaXhXb3JsZCkuaW52ZXJ0KCksTmEuY29weShlLnJheSkuYXBwbHlNYXRyaXg0KE9hKTtjb25zdCBzPWkvKCh0aGlzLnNjYWxlLngrdGhpcy5zY2FsZS55K3RoaXMuc2NhbGUueikvMyksbD1zKnMsYz1OYS5kaXN0YW5jZVNxVG9Qb2ludCh0aGlzLnBvc2l0aW9uKTtpZihjPGwpe2NvbnN0IHI9bmV3IEQuVmVjdG9yMztOYS5jbG9zZXN0UG9pbnRUb1BvaW50KHRoaXMucG9zaXRpb24sciksci5hcHBseU1hdHJpeDQodGhpcy5tYXRyaXhXb3JsZCk7Y29uc3Qgbj1lLnJheS5vcmlnaW4uZGlzdGFuY2VUbyhyKTtpZihuPGUubmVhcnx8bj5lLmZhcilyZXR1cm47dC5wdXNoKHtkaXN0YW5jZTpuLGRpc3RhbmNlVG9SYXk6TWF0aC5zcXJ0KGMpLHBvaW50OnIsaW5kZXg6byxmYWNlOm51bGwsb2JqZWN0OnRoaXN9KX19fWxldCBWYSxqYTtjb25zdCBXYT1rLmNyZWF0ZUNvbnRleHQobnVsbCksR2E9bmV3IEQuTWF0cml4NCxIYT1uZXcgRC5WZWN0b3IzLCRhPWsuZm9yd2FyZFJlZigoKHtjaGlsZHJlbjplLHJhbmdlOnQsbGltaXQ6cj0xZTMsLi4ubn0sbyk9Pntjb25zdCBpPWsudXNlUmVmKG51bGwpLFtzLGxdPWsudXNlU3RhdGUoW10pLFtbYyx1LGRdXT1rLnVzZVN0YXRlKCgoKT0+W25ldyBGbG9hdDMyQXJyYXkoMypyKSxGbG9hdDMyQXJyYXkuZnJvbSh7bGVuZ3RoOjMqcn0sKCgpPT4xKSksRmxvYXQzMkFycmF5LmZyb20oe2xlbmd0aDpyfSwoKCk9PjEpKV0pKTtrLnVzZUVmZmVjdCgoKCk9PntpLmN1cnJlbnQuZ2VvbWV0cnkuYXR0cmlidXRlcy5wb3NpdGlvbi5uZWVkc1VwZGF0ZT0hMH0pKSxhLnVzZUZyYW1lKCgoKT0+e2ZvcihpLmN1cnJlbnQudXBkYXRlTWF0cml4KCksaS5jdXJyZW50LnVwZGF0ZU1hdHJpeFdvcmxkKCksR2EuY29weShpLmN1cnJlbnQubWF0cml4V29ybGQpLmludmVydCgpLGkuY3VycmVudC5nZW9tZXRyeS5kcmF3UmFuZ2UuY291bnQ9TWF0aC5taW4ocix2b2lkIDAhPT10P3Q6cixzLmxlbmd0aCksVmE9MDtWYTxzLmxlbmd0aDtWYSsrKWphPXNbVmFdLmN1cnJlbnQsamEuZ2V0V29ybGRQb3NpdGlvbihIYSkuYXBwbHlNYXRyaXg0KEdhKSxIYS50b0FycmF5KGMsMypWYSksaS5jdXJyZW50Lmdlb21ldHJ5LmF0dHJpYnV0ZXMucG9zaXRpb24ubmVlZHNVcGRhdGU9ITAsamEubWF0cml4V29ybGROZWVkc1VwZGF0ZT0hMCxqYS5jb2xvci50b0FycmF5KHUsMypWYSksaS5jdXJyZW50Lmdlb21ldHJ5LmF0dHJpYnV0ZXMuY29sb3IubmVlZHNVcGRhdGU9ITAsZC5zZXQoW2phLnNpemVdLFZhKSxpLmN1cnJlbnQuZ2VvbWV0cnkuYXR0cmlidXRlcy5zaXplLm5lZWRzVXBkYXRlPSEwfSkpO2NvbnN0IG09ay51c2VNZW1vKCgoKT0+KHtnZXRQYXJlbnQ6KCk9Pmksc3Vic2NyaWJlOmU9PihsKCh0PT5bLi4udCxlXSkpLCgpPT5sKCh0PT50LmZpbHRlcigodD0+dC5jdXJyZW50IT09ZS5jdXJyZW50KSkpKSl9KSksW10pO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoXCJwb2ludHNcIixSLmRlZmF1bHQoe3VzZXJEYXRhOntpbnN0YW5jZXM6c30sbWF0cml4QXV0b1VwZGF0ZTohMSxyZWY6QS5kZWZhdWx0KFtvLGldKSxyYXljYXN0OigpPT5udWxsfSxuKSxrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJHZW9tZXRyeVwiLG51bGwsay5jcmVhdGVFbGVtZW50KFwiYnVmZmVyQXR0cmlidXRlXCIse2F0dGFjaDpcImF0dHJpYnV0ZXMtcG9zaXRpb25cIixjb3VudDpjLmxlbmd0aC8zLGFycmF5OmMsaXRlbVNpemU6Myx1c2FnZTpELkR5bmFtaWNEcmF3VXNhZ2V9KSxrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJBdHRyaWJ1dGVcIix7YXR0YWNoOlwiYXR0cmlidXRlcy1jb2xvclwiLGNvdW50OnUubGVuZ3RoLzMsYXJyYXk6dSxpdGVtU2l6ZTozLHVzYWdlOkQuRHluYW1pY0RyYXdVc2FnZX0pLGsuY3JlYXRlRWxlbWVudChcImJ1ZmZlckF0dHJpYnV0ZVwiLHthdHRhY2g6XCJhdHRyaWJ1dGVzLXNpemVcIixjb3VudDpkLmxlbmd0aCxhcnJheTpkLGl0ZW1TaXplOjEsdXNhZ2U6RC5EeW5hbWljRHJhd1VzYWdlfSkpLGsuY3JlYXRlRWxlbWVudChXYS5Qcm92aWRlcix7dmFsdWU6bX0sZSkpfSkpLHFhPWsuZm9yd2FyZFJlZigoKHtjaGlsZHJlbjplLC4uLnR9LHIpPT57ay51c2VNZW1vKCgoKT0+YS5leHRlbmQoe1Bvc2l0aW9uUG9pbnQ6VWF9KSksW10pO2NvbnN0IG49ay51c2VSZWYoKSx7c3Vic2NyaWJlOm8sZ2V0UGFyZW50Oml9PWsudXNlQ29udGV4dChXYSk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+byhuKSksW10pLGsuY3JlYXRlRWxlbWVudChcInBvc2l0aW9uUG9pbnRcIixSLmRlZmF1bHQoe2luc3RhbmNlOmkoKSxpbnN0YW5jZUtleTpuLHJlZjpBLmRlZmF1bHQoW3Isbl0pfSx0KSxlKX0pKSxYYT1rLmZvcndhcmRSZWYoKCh7Y2hpbGRyZW46ZSxwb3NpdGlvbnM6dCxjb2xvcnM6cixzaXplczpuLHN0cmlkZTpvPTMsLi4uaX0scyk9Pntjb25zdCBsPWsudXNlUmVmKG51bGwpO3JldHVybiBhLnVzZUZyYW1lKCgoKT0+e2NvbnN0IGU9bC5jdXJyZW50Lmdlb21ldHJ5LmF0dHJpYnV0ZXM7ZS5wb3NpdGlvbi5uZWVkc1VwZGF0ZT0hMCxyJiYoZS5jb2xvci5uZWVkc1VwZGF0ZT0hMCksbiYmKGUuc2l6ZS5uZWVkc1VwZGF0ZT0hMCl9KSksay5jcmVhdGVFbGVtZW50KFwicG9pbnRzXCIsUi5kZWZhdWx0KHtyZWY6QS5kZWZhdWx0KFtzLGxdKX0saSksay5jcmVhdGVFbGVtZW50KFwiYnVmZmVyR2VvbWV0cnlcIixudWxsLGsuY3JlYXRlRWxlbWVudChcImJ1ZmZlckF0dHJpYnV0ZVwiLHthdHRhY2g6XCJhdHRyaWJ1dGVzLXBvc2l0aW9uXCIsY291bnQ6dC5sZW5ndGgvbyxhcnJheTp0LGl0ZW1TaXplOm8sdXNhZ2U6RC5EeW5hbWljRHJhd1VzYWdlfSksciYmay5jcmVhdGVFbGVtZW50KFwiYnVmZmVyQXR0cmlidXRlXCIse2F0dGFjaDpcImF0dHJpYnV0ZXMtY29sb3JcIixjb3VudDpyLmxlbmd0aC9vLGFycmF5OnIsaXRlbVNpemU6Myx1c2FnZTpELkR5bmFtaWNEcmF3VXNhZ2V9KSxuJiZrLmNyZWF0ZUVsZW1lbnQoXCJidWZmZXJBdHRyaWJ1dGVcIix7YXR0YWNoOlwiYXR0cmlidXRlcy1zaXplXCIsY291bnQ6bi5sZW5ndGgvbyxhcnJheTpuLGl0ZW1TaXplOjEsdXNhZ2U6RC5EeW5hbWljRHJhd1VzYWdlfSkpLGUpfSkpLFlhPWsuZm9yd2FyZFJlZigoKGUsdCk9PmUucG9zaXRpb25zIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5P2suY3JlYXRlRWxlbWVudChYYSxSLmRlZmF1bHQoe30sZSx7cmVmOnR9KSk6ay5jcmVhdGVFbGVtZW50KCRhLFIuZGVmYXVsdCh7fSxlLHtyZWY6dH0pKSkpLEthPW5ldyBELk1hdHJpeDQsUWE9bmV3IEQuTWF0cml4NCxaYT1bXSxKYT1uZXcgRC5NZXNoO2NsYXNzIGVvIGV4dGVuZHMgRC5Hcm91cHtjb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5jb2xvcj1uZXcgRC5Db2xvcihcIndoaXRlXCIpLHRoaXMuaW5zdGFuY2U9e2N1cnJlbnQ6dm9pZCAwfSx0aGlzLmluc3RhbmNlS2V5PXtjdXJyZW50OnZvaWQgMH19Z2V0IGdlb21ldHJ5KCl7dmFyIGU7cmV0dXJuIG51bGw9PShlPXRoaXMuaW5zdGFuY2UuY3VycmVudCk/dm9pZCAwOmUuZ2VvbWV0cnl9cmF5Y2FzdChlLHQpe2NvbnN0IHI9dGhpcy5pbnN0YW5jZS5jdXJyZW50O2lmKCFyKXJldHVybjtpZighci5nZW9tZXRyeXx8IXIubWF0ZXJpYWwpcmV0dXJuO0phLmdlb21ldHJ5PXIuZ2VvbWV0cnk7Y29uc3Qgbj1yLm1hdHJpeFdvcmxkLGE9ci51c2VyRGF0YS5pbnN0YW5jZXMuaW5kZXhPZih0aGlzLmluc3RhbmNlS2V5KTtpZighKC0xPT09YXx8YT5yLmNvdW50KSl7ci5nZXRNYXRyaXhBdChhLEthKSxRYS5tdWx0aXBseU1hdHJpY2VzKG4sS2EpLEphLm1hdHJpeFdvcmxkPVFhLHIubWF0ZXJpYWwgaW5zdGFuY2VvZiBELk1hdGVyaWFsP0phLm1hdGVyaWFsLnNpZGU9ci5tYXRlcmlhbC5zaWRlOkphLm1hdGVyaWFsLnNpZGU9ci5tYXRlcmlhbFswXS5zaWRlLEphLnJheWNhc3QoZSxaYSk7Zm9yKGxldCBlPTAscj1aYS5sZW5ndGg7ZTxyO2UrKyl7Y29uc3Qgcj1aYVtlXTtyLmluc3RhbmNlSWQ9YSxyLm9iamVjdD10aGlzLHQucHVzaChyKX1aYS5sZW5ndGg9MH19fWNvbnN0IHRvPWsuY3JlYXRlQ29udGV4dChudWxsKSxybz1uZXcgRC5NYXRyaXg0LG5vPW5ldyBELk1hdHJpeDQsYW89bmV3IEQuTWF0cml4NCxvbz1uZXcgRC5WZWN0b3IzLGlvPW5ldyBELlF1YXRlcm5pb24sc289bmV3IEQuVmVjdG9yMyxsbz1rLmZvcndhcmRSZWYoKCh7Y29udGV4dDplLGNoaWxkcmVuOnQsLi4ucn0sbik9PntrLnVzZU1lbW8oKCgpPT5hLmV4dGVuZCh7UG9zaXRpb25NZXNoOmVvfSkpLFtdKTtjb25zdCBvPWsudXNlUmVmKCkse3N1YnNjcmliZTppLGdldFBhcmVudDpzfT1rLnVzZUNvbnRleHQoZXx8dG8pO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PmkobykpLFtdKSxrLmNyZWF0ZUVsZW1lbnQoXCJwb3NpdGlvbk1lc2hcIixSLmRlZmF1bHQoe2luc3RhbmNlOnMoKSxpbnN0YW5jZUtleTpvLHJlZjpBLmRlZmF1bHQoW24sb10pfSxyKSx0KX0pKSxjbz1rLmZvcndhcmRSZWYoKCh7Y2hpbGRyZW46ZSxyYW5nZTp0LGxpbWl0OnI9MWUzLGZyYW1lczpuPTEvMCwuLi5vfSxpKT0+e2NvbnN0W3tjb250ZXh0OnMsaW5zdGFuY2U6bH1dPWsudXNlU3RhdGUoKCgpPT57Y29uc3QgZT1rLmNyZWF0ZUNvbnRleHQobnVsbCk7cmV0dXJue2NvbnRleHQ6ZSxpbnN0YW5jZTprLmZvcndhcmRSZWYoKCh0LHIpPT5rLmNyZWF0ZUVsZW1lbnQobG8sUi5kZWZhdWx0KHtjb250ZXh0OmV9LHQse3JlZjpyfSkpKSl9fSkpLGM9ay51c2VSZWYobnVsbCksW3UsZF09ay51c2VTdGF0ZShbXSksW1ttLGZdXT1rLnVzZVN0YXRlKCgoKT0+e2NvbnN0IGU9bmV3IEZsb2F0MzJBcnJheSgxNipyKTtmb3IobGV0IHQ9MDt0PHI7dCsrKWFvLmlkZW50aXR5KCkudG9BcnJheShlLDE2KnQpO3JldHVybltlLG5ldyBGbG9hdDMyQXJyYXkoWy4uLm5ldyBBcnJheSgzKnIpXS5tYXAoKCgpPT4xKSkpXX0pKTtrLnVzZUVmZmVjdCgoKCk9PntjLmN1cnJlbnQuaW5zdGFuY2VNYXRyaXgubmVlZHNVcGRhdGU9ITB9KSk7bGV0IHA9MCxoPTA7YS51c2VGcmFtZSgoKCk9PntpZihuPT09MS8wfHxwPG4pe2MuY3VycmVudC51cGRhdGVNYXRyaXgoKSxjLmN1cnJlbnQudXBkYXRlTWF0cml4V29ybGQoKSxyby5jb3B5KGMuY3VycmVudC5tYXRyaXhXb3JsZCkuaW52ZXJ0KCksaD1NYXRoLm1pbihyLHZvaWQgMCE9PXQ/dDpyLHUubGVuZ3RoKSxjLmN1cnJlbnQuY291bnQ9aCxjLmN1cnJlbnQuaW5zdGFuY2VNYXRyaXgudXBkYXRlUmFuZ2UuY291bnQ9MTYqaCxjLmN1cnJlbnQuaW5zdGFuY2VDb2xvci51cGRhdGVSYW5nZS5jb3VudD0zKmg7Zm9yKGxldCBlPTA7ZTx1Lmxlbmd0aDtlKyspe2NvbnN0IHQ9dVtlXS5jdXJyZW50O3QubWF0cml4V29ybGQuZGVjb21wb3NlKG9vLGlvLHNvKSxuby5jb21wb3NlKG9vLGlvLHNvKS5wcmVtdWx0aXBseShybyksbm8udG9BcnJheShtLDE2KmUpLGMuY3VycmVudC5pbnN0YW5jZU1hdHJpeC5uZWVkc1VwZGF0ZT0hMCx0LmNvbG9yLnRvQXJyYXkoZiwzKmUpLGMuY3VycmVudC5pbnN0YW5jZUNvbG9yLm5lZWRzVXBkYXRlPSEwfXArK319KSk7Y29uc3QgeT1rLnVzZU1lbW8oKCgpPT4oe2dldFBhcmVudDooKT0+YyxzdWJzY3JpYmU6ZT0+KGQoKHQ9PlsuLi50LGVdKSksKCk9PmQoKHQ9PnQuZmlsdGVyKCh0PT50LmN1cnJlbnQhPT1lLmN1cnJlbnQpKSkpKX0pKSxbXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcImluc3RhbmNlZE1lc2hcIixSLmRlZmF1bHQoe3VzZXJEYXRhOntpbnN0YW5jZXM6dX0sbWF0cml4QXV0b1VwZGF0ZTohMSxyZWY6QS5kZWZhdWx0KFtpLGNdKSxhcmdzOltudWxsLG51bGwsMF0scmF5Y2FzdDooKT0+bnVsbH0sbyksay5jcmVhdGVFbGVtZW50KFwiaW5zdGFuY2VkQnVmZmVyQXR0cmlidXRlXCIse2F0dGFjaDpcImluc3RhbmNlTWF0cml4XCIsY291bnQ6bS5sZW5ndGgvMTYsYXJyYXk6bSxpdGVtU2l6ZToxNix1c2FnZTpELkR5bmFtaWNEcmF3VXNhZ2V9KSxrLmNyZWF0ZUVsZW1lbnQoXCJpbnN0YW5jZWRCdWZmZXJBdHRyaWJ1dGVcIix7YXR0YWNoOlwiaW5zdGFuY2VDb2xvclwiLGNvdW50OmYubGVuZ3RoLzMsYXJyYXk6ZixpdGVtU2l6ZTozLHVzYWdlOkQuRHluYW1pY0RyYXdVc2FnZX0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIGU/ay5jcmVhdGVFbGVtZW50KHMuUHJvdmlkZXIse3ZhbHVlOnl9LGUobCkpOmsuY3JlYXRlRWxlbWVudCh0by5Qcm92aWRlcix7dmFsdWU6eX0sZSkpfSkpLHVvPWsuZm9yd2FyZFJlZigoZnVuY3Rpb24oe21lc2hlczplLGNoaWxkcmVuOnQsLi4ucn0sbil7Y29uc3QgYT1BcnJheS5pc0FycmF5KGUpO2lmKCFhKWZvcihjb25zdCB0IG9mIE9iamVjdC5rZXlzKGUpKWVbdF0uaXNNZXNofHxkZWxldGUgZVt0XTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7cmVmOm59LGsuY3JlYXRlRWxlbWVudChWLmRlZmF1bHQse2NvbXBvbmVudHM6KGE/ZTpPYmplY3QudmFsdWVzKGUpKS5tYXAoKCh7Z2VvbWV0cnk6ZSxtYXRlcmlhbDp0fSk9PmsuY3JlYXRlRWxlbWVudChjbyxSLmRlZmF1bHQoe2tleTplLnV1aWQsZ2VvbWV0cnk6ZSxtYXRlcmlhbDp0fSxyKSkpKX0sKHI9PmE/dCguLi5yKTp0KE9iamVjdC5rZXlzKGUpLmZpbHRlcigodD0+ZVt0XS5pc01lc2gpKS5yZWR1Y2UoKChlLHQsbik9Pih7Li4uZSxbdF06cltuXX0pKSx7fSkpKSkpfSkpLG1vPWsuY3JlYXRlQ29udGV4dChudWxsKSxmbz1rLmZvcndhcmRSZWYoKChlLHQpPT57ay51c2VNZW1vKCgoKT0+YS5leHRlbmQoe1NlZ21lbnRPYmplY3Q6cG99KSksW10pO2NvbnN0e2xpbWl0OnI9MWUzLGxpbmVXaWR0aDpuPTEsY2hpbGRyZW46bywuLi5pfT1lLFtzLGxdPWsudXNlU3RhdGUoW10pLFtjXT1rLnVzZVN0YXRlKCgoKT0+bmV3IGQuTGluZTIpKSxbdV09ay51c2VTdGF0ZSgoKCk9Pm5ldyBkLkxpbmVNYXRlcmlhbCkpLFttXT1rLnVzZVN0YXRlKCgoKT0+bmV3IGQuTGluZVNlZ21lbnRzR2VvbWV0cnkpKSxbZl09ay51c2VTdGF0ZSgoKCk9Pm5ldyBELlZlY3RvcjIoNTEyLDUxMikpKSxbcF09ay51c2VTdGF0ZSgoKCk9PkFycmF5KDYqcikuZmlsbCgwKSkpLFtoXT1rLnVzZVN0YXRlKCgoKT0+QXJyYXkoNipyKS5maWxsKDApKSkseT1rLnVzZU1lbW8oKCgpPT4oe3N1YnNjcmliZTplPT4obCgodD0+Wy4uLnQsZV0pKSwoKT0+bCgodD0+dC5maWx0ZXIoKHQ9PnQuY3VycmVudCE9PWUuY3VycmVudCkpKSkpfSkpLFtdKTtyZXR1cm4gYS51c2VGcmFtZSgoKCk9Pntmb3IobGV0IHQ9MDt0PHI7dCsrKXt2YXIgZTtjb25zdCByPW51bGw9PShlPXNbdF0pP3ZvaWQgMDplLmN1cnJlbnQ7ciYmKHBbNip0KzBdPXIuc3RhcnQueCxwWzYqdCsxXT1yLnN0YXJ0LnkscFs2KnQrMl09ci5zdGFydC56LHBbNip0KzNdPXIuZW5kLngscFs2KnQrNF09ci5lbmQueSxwWzYqdCs1XT1yLmVuZC56LGhbNip0KzBdPXIuY29sb3IucixoWzYqdCsxXT1yLmNvbG9yLmcsaFs2KnQrMl09ci5jb2xvci5iLGhbNip0KzNdPXIuY29sb3IucixoWzYqdCs0XT1yLmNvbG9yLmcsaFs2KnQrNV09ci5jb2xvci5iKX1tLnNldENvbG9ycyhoKSxtLnNldFBvc2l0aW9ucyhwKSxjLmNvbXB1dGVMaW5lRGlzdGFuY2VzKCl9KSksay5jcmVhdGVFbGVtZW50KFwicHJpbWl0aXZlXCIse29iamVjdDpjLHJlZjp0fSxrLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIix7b2JqZWN0Om0sYXR0YWNoOlwiZ2VvbWV0cnlcIn0pLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7b2JqZWN0OnUsYXR0YWNoOlwibWF0ZXJpYWxcIix2ZXJ0ZXhDb2xvcnM6ITAscmVzb2x1dGlvbjpmLGxpbmV3aWR0aDpufSxpKSksay5jcmVhdGVFbGVtZW50KG1vLlByb3ZpZGVyLHt2YWx1ZTp5fSxvKSl9KSk7Y2xhc3MgcG97Y29uc3RydWN0b3IoKXt0aGlzLmNvbG9yPW5ldyBELkNvbG9yKFwid2hpdGVcIiksdGhpcy5zdGFydD1uZXcgRC5WZWN0b3IzKDAsMCwwKSx0aGlzLmVuZD1uZXcgRC5WZWN0b3IzKDAsMCwwKX19Y29uc3QgaG89ZT0+ZSBpbnN0YW5jZW9mIEQuVmVjdG9yMz9lOm5ldyBELlZlY3RvcjMoLi4uXCJudW1iZXJcIj09dHlwZW9mIGU/W2UsZSxlXTplKSx5bz1rLmZvcndhcmRSZWYoKCh7Y29sb3I6ZSxzdGFydDp0LGVuZDpyfSxuKT0+e2NvbnN0IGE9ay51c2VDb250ZXh0KG1vKTtpZighYSl0aHJvd1wiU2VnbWVudCBtdXN0IHVzZWQgaW5zaWRlIFNlZ21lbnRzIGNvbXBvbmVudC5cIjtjb25zdCBvPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PmEuc3Vic2NyaWJlKG8pKSxbXSksay5jcmVhdGVFbGVtZW50KFwic2VnbWVudE9iamVjdFwiLHtyZWY6QS5kZWZhdWx0KFtvLG5dKSxjb2xvcjplLHN0YXJ0OmhvKHQpLGVuZDpobyhyKX0pfSkpLHhvPWsuZm9yd2FyZFJlZigoKHtjaGlsZHJlbjplLGh5c3RlcmVzaXM6dD0wLGRpc3RhbmNlczpyLC4uLm59LG8pPT57Y29uc3QgaT1rLnVzZVJlZihudWxsKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57Y29uc3R7Y3VycmVudDplfT1pO2UubGV2ZWxzLmxlbmd0aD0wLGUuY2hpbGRyZW4uZm9yRWFjaCgoKG4sYSk9PmUubGV2ZWxzLnB1c2goe29iamVjdDpuLGh5c3RlcmVzaXM6dCxkaXN0YW5jZTpyW2FdfSkpKX0pKSxhLnVzZUZyYW1lKChlPT57dmFyIHQ7cmV0dXJuIG51bGw9PSh0PWkuY3VycmVudCk/dm9pZCAwOnQudXBkYXRlKGUuY2FtZXJhKX0pKSxrLmNyZWF0ZUVsZW1lbnQoXCJsT0RcIixSLmRlZmF1bHQoe3JlZjpBLmRlZmF1bHQoW2ksb10pfSxuKSxlKX0pKTtjb25zdCB2bz1uZXcgbi5NYXRyaXg0LGdvPW5ldyBuLlJheSx6bz1uZXcgbi5TcGhlcmUsd289bmV3IG4uVmVjdG9yMztjb25zdCBibz10LmNyZWF0ZUNvbnRleHQobnVsbCk7Y29uc3QgRW89ay5mb3J3YXJkUmVmKCgoe2NoaWxkcmVuOmUsY29tcHV0ZTp0LHdpZHRoOnIsaGVpZ2h0Om4sc2FtcGxlczpvPTgscmVuZGVyUHJpb3JpdHk6aT0wLGV2ZW50UHJpb3JpdHk6cz0wLGZyYW1lczpsPTEvMCxzdGVuY2lsQnVmZmVyOmM9ITEsZGVwdGhCdWZmZXI6dT0hMCxnZW5lcmF0ZU1pcG1hcHM6ZD0hMSwuLi5tfSxmKT0+e2NvbnN0e3NpemU6cCx2aWV3cG9ydDpofT1hLnVzZVRocmVlKCkseT1ldCgocnx8cC53aWR0aCkqaC5kcHIsKG58fHAuaGVpZ2h0KSpoLmRwcix7c2FtcGxlczpvLHN0ZW5jaWxCdWZmZXI6YyxkZXB0aEJ1ZmZlcjp1LGdlbmVyYXRlTWlwbWFwczpkfSksW3hdPWsudXNlU3RhdGUoKCgpPT5uZXcgRC5TY2VuZSkpLHY9ay51c2VDYWxsYmFjaygoKGUsdCxyKT0+e3ZhciBuLGE7bGV0IG89bnVsbD09KG49eS50ZXh0dXJlKT92b2lkIDA6bi5fX3IzZi5wYXJlbnQ7Zm9yKDtvJiYhKG8gaW5zdGFuY2VvZiBELk9iamVjdDNEKTspbz1vLl9fcjNmLnBhcmVudDtpZighbylyZXR1cm4hMTtyLnJheWNhc3Rlci5jYW1lcmF8fHIuZXZlbnRzLmNvbXB1dGUoZSxyLG51bGw9PShhPXIucHJldmlvdXNSb290KT92b2lkIDA6YS5nZXRTdGF0ZSgpKTtjb25zdFtpXT1yLnJheWNhc3Rlci5pbnRlcnNlY3RPYmplY3Qobyk7aWYoIWkpcmV0dXJuITE7Y29uc3Qgcz1pLnV2O2lmKCFzKXJldHVybiExO3QucmF5Y2FzdGVyLnNldEZyb21DYW1lcmEodC5wb2ludGVyLnNldCgyKnMueC0xLDIqcy55LTEpLHQuY2FtZXJhKX0pLFtdKTtyZXR1cm4gay51c2VJbXBlcmF0aXZlSGFuZGxlKGYsKCgpPT55LnRleHR1cmUpLFt5XSksay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCxhLmNyZWF0ZVBvcnRhbChrLmNyZWF0ZUVsZW1lbnQoTW8se3JlbmRlclByaW9yaXR5OmksZnJhbWVzOmwsZmJvOnl9LGUsay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7b25Qb2ludGVyT3ZlcjooKT0+bnVsbH0pKSx4LHtldmVudHM6e2NvbXB1dGU6dHx8dixwcmlvcml0eTpzfX0pLGsuY3JlYXRlRWxlbWVudChcInByaW1pdGl2ZVwiLFIuZGVmYXVsdCh7b2JqZWN0OnkudGV4dHVyZX0sbSkpKX0pKTtmdW5jdGlvbiBNbyh7ZnJhbWVzOmUscmVuZGVyUHJpb3JpdHk6dCxjaGlsZHJlbjpyLGZibzpufSl7bGV0IG8saT0wO3JldHVybiBhLnVzZUZyYW1lKCh0PT57KGU9PT0xLzB8fGk8ZSkmJihvPXQuZ2wuYXV0b0NsZWFyLHQuZ2wuYXV0b0NsZWFyPSEwLHQuZ2wuc2V0UmVuZGVyVGFyZ2V0KG4pLHQuZ2wucmVuZGVyKHQuc2NlbmUsdC5jYW1lcmEpLHQuZ2wuc2V0UmVuZGVyVGFyZ2V0KG51bGwpLHQuZ2wuYXV0b0NsZWFyPW8saSsrKX0pLHQpLGsuY3JlYXRlRWxlbWVudChrLkZyYWdtZW50LG51bGwscil9Y29uc3QgU289ay5mb3J3YXJkUmVmKCgoe2lkOmU9MSxjb2xvcldyaXRlOnQ9ITEsZGVwdGhXcml0ZTpyPSExLC4uLm59LGEpPT57Y29uc3Qgbz1rLnVzZVJlZihudWxsKSxpPWsudXNlTWVtbygoKCk9Pih7Y29sb3JXcml0ZTp0LGRlcHRoV3JpdGU6cixzdGVuY2lsV3JpdGU6ITAsc3RlbmNpbFJlZjplLHN0ZW5jaWxGdW5jOkQuQWx3YXlzU3RlbmNpbEZ1bmMsc3RlbmNpbEZhaWw6RC5SZXBsYWNlU3RlbmNpbE9wLHN0ZW5jaWxaRmFpbDpELlJlcGxhY2VTdGVuY2lsT3Asc3RlbmNpbFpQYXNzOkQuUmVwbGFjZVN0ZW5jaWxPcH0pKSxbZSx0LHJdKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57T2JqZWN0LmFzc2lnbihvLmN1cnJlbnQubWF0ZXJpYWwsaSl9KSksay51c2VJbXBlcmF0aXZlSGFuZGxlKGEsKCgpPT5vLmN1cnJlbnQpLFtdKSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIsUi5kZWZhdWx0KHtyZWY6byxyZW5kZXJPcmRlcjotZX0sbikpfSkpO2NvbnN0IENvPVNlKHtibHVyOjAsbWFwOm51bGwsc2RmOm51bGwsYmxlbmQ6MCxzaXplOjAscmVzb2x1dGlvbjpuZXcgRC5WZWN0b3IyfSxcInZhcnlpbmcgdmVjMiB2VXY7XFxuICAgdm9pZCBtYWluKCkge1xcbiAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcXG4gICAgIHZVdiA9IHV2O1xcbiAgIH1cIixgdW5pZm9ybSBzYW1wbGVyMkQgc2RmO1xcbiAgIHVuaWZvcm0gc2FtcGxlcjJEIG1hcDtcXG4gICB1bmlmb3JtIGZsb2F0IGJsdXI7XFxuICAgdW5pZm9ybSBmbG9hdCBzaXplO1xcbiAgIHVuaWZvcm0gZmxvYXQgdGltZTtcXG4gICB1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjtcXG4gICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgICNpbmNsdWRlIDxwYWNraW5nPlxcbiAgIHZvaWQgbWFpbigpIHtcXG4gICAgIHZlYzIgdXYgPSBnbF9GcmFnQ29vcmQueHkgLyByZXNvbHV0aW9uLnh5O1xcbiAgICAgdmVjNCB0ID0gdGV4dHVyZTJEKG1hcCwgdXYpO1xcbiAgICAgZmxvYXQgayA9IGJsdXI7XFxuICAgICBmbG9hdCBkID0gdGV4dHVyZTJEKHNkZiwgdlV2KS5yL3NpemU7XFxuICAgICBmbG9hdCBhbHBoYSA9IDEuMCAtIHNtb290aHN0ZXAoMC4wLCAxLjAsIGNsYW1wKGQvayArIDEuMCwgMC4wLCAxLjApKTtcXG4gICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQodC5yZ2IsIGJsdXIgPT0gMC4wID8gdC5hIDogdC5hICogYWxwaGEpO1xcbiAgICAgI2luY2x1ZGUgPHRvbmVtYXBwaW5nX2ZyYWdtZW50PlxcbiAgICAgI2luY2x1ZGUgPCR7VGU+PTE1ND9cImNvbG9yc3BhY2VfZnJhZ21lbnRcIjpcImVuY29kaW5nc19mcmFnbWVudFwifT5cXG4gICB9YCksUG89ay5mb3J3YXJkUmVmKCgoe2NoaWxkcmVuOmUsZXZlbnRzOnQsYmx1cjpyPTAsZXZlbnRQcmlvcml0eTpuPTAscmVuZGVyUHJpb3JpdHk6bz0wLHdvcmxkVW5pdHM6aT0hMSxyZXNvbHV0aW9uOnM9NTEyLC4uLmx9LGMpPT57YS5leHRlbmQoe1BvcnRhbE1hdGVyaWFsSW1wbDpDb30pO2NvbnN0IHU9ay51c2VSZWYobnVsbCkse3NjZW5lOmQsZ2w6bSxzaXplOmYsdmlld3BvcnQ6cCxzZXRFdmVudHM6aH09YS51c2VUaHJlZSgpLHk9ZXQocyxzKSxbeCx2XT1rLnVzZVN0YXRlKDApO2EudXNlRnJhbWUoKCgpPT57Y29uc3QgZT11LmN1cnJlbnQuYmxlbmQ+MD9NYXRoLm1heCgxLG8pOjA7eCE9PWUmJnYoZSl9KSksay51c2VFZmZlY3QoKCgpPT57dm9pZCAwIT09dCYmaCh7ZW5hYmxlZDohdH0pfSksW3RdKTtjb25zdFtnLHpdPWsudXNlU3RhdGUoITApLHc9dnIoeik7ay51c2VMYXlvdXRFZmZlY3QoKCgpPT57dmFyIGU7dy5jdXJyZW50PW51bGw9PShlPXUuY3VycmVudCk/dm9pZCAwOmUuX19yM2YucGFyZW50fSksW10pLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2lmKHcuY3VycmVudCYmciYmbnVsbD09PXUuY3VycmVudC5zZGYpe2NvbnN0IGU9bmV3IEQuTWVzaCh3LmN1cnJlbnQuZ2VvbWV0cnksbmV3IEQuTWVzaEJhc2ljTWF0ZXJpYWwpLHQ9KG5ldyBELkJveDMpLnNldEZyb21CdWZmZXJBdHRyaWJ1dGUoZS5nZW9tZXRyeS5hdHRyaWJ1dGVzLnBvc2l0aW9uKSxyPW5ldyBELk9ydGhvZ3JhcGhpY0NhbWVyYSh0Lm1pbi54KigxKzIvcyksdC5tYXgueCooMSsyL3MpLHQubWF4LnkqKDErMi9zKSx0Lm1pbi55KigxKzIvcyksLjEsMWUzKTtyLnBvc2l0aW9uLnNldCgwLDAsMSksci5sb29rQXQoMCwwLDApLG0uc2V0UmVuZGVyVGFyZ2V0KHkpLG0ucmVuZGVyKGUscik7Y29uc3Qgbj1SbyhzLHMsbSkoeS50ZXh0dXJlKSxhPW5ldyBGbG9hdDMyQXJyYXkocypzKTttLnJlYWRSZW5kZXJUYXJnZXRQaXhlbHMobiwwLDAscyxzLGEpO2xldCBvPTEvMDtmb3IobGV0IGU9MDtlPGEubGVuZ3RoO2UrKylhW2VdPG8mJihvPWFbZV0pO289LW8sdS5jdXJyZW50LnNpemU9byx1LmN1cnJlbnQuc2RmPW4udGV4dHVyZSxtLnNldFJlbmRlclRhcmdldChudWxsKX19KSxbcyxyXSksay51c2VJbXBlcmF0aXZlSGFuZGxlKGMsKCgpPT51LmN1cnJlbnQpKTtjb25zdCBiPWsudXNlQ2FsbGJhY2soKChlLHQscik9Pnt2YXIgbjtpZighdy5jdXJyZW50KXJldHVybiExO2lmKHQucG9pbnRlci5zZXQoZS5vZmZzZXRYL3Quc2l6ZS53aWR0aCoyLTEsLWUub2Zmc2V0WS90LnNpemUuaGVpZ2h0KjIrMSksdC5yYXljYXN0ZXIuc2V0RnJvbUNhbWVyYSh0LnBvaW50ZXIsdC5jYW1lcmEpLDA9PT0obnVsbD09KG49dS5jdXJyZW50KT92b2lkIDA6bi5ibGVuZCkpe2NvbnN0W2VdPXQucmF5Y2FzdGVyLmludGVyc2VjdE9iamVjdCh3LmN1cnJlbnQpO2lmKCFlKXJldHVybiB0LnJheWNhc3Rlci5jYW1lcmE9dm9pZCAwLCExfX0pLFtdKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwicG9ydGFsTWF0ZXJpYWxJbXBsXCIsUi5kZWZhdWx0KHtyZWY6dSxibHVyOnIsYmxlbmQ6MCxyZXNvbHV0aW9uOltmLndpZHRoKnAuZHByLGYuaGVpZ2h0KnAuZHByXSx0b25lTWFwcGVkOiExLGF0dGFjaDpcIm1hdGVyaWFsXCJ9LGwpLGsuY3JlYXRlRWxlbWVudChFbyx7YXR0YWNoOlwibWFwXCIsZnJhbWVzOmc/MS8wOjAsZXZlbnRQcmlvcml0eTpuLHJlbmRlclByaW9yaXR5Om8sY29tcHV0ZTpifSxlLGsuY3JlYXRlRWxlbWVudChUbyx7ZXZlbnRzOnQscm9vdFNjZW5lOmQscHJpb3JpdHk6eCxtYXRlcmlhbDp1LHdvcmxkVW5pdHM6aX0pKSl9KSk7ZnVuY3Rpb24gVG8oe2V2ZW50czplLHJvb3RTY2VuZTp0LG1hdGVyaWFsOnIscHJpb3JpdHk6bix3b3JsZFVuaXRzOm99KXtjb25zdCBpPWEudXNlVGhyZWUoKGU9PmUuc2NlbmUpKSxzPWEudXNlVGhyZWUoKGU9PmUuc2V0RXZlbnRzKSksbD1ldCgpLGM9ZXQoKTtrLnVzZUxheW91dEVmZmVjdCgoKCk9PntpLm1hdHJpeEF1dG9VcGRhdGU9ITF9KSxbXSksay51c2VFZmZlY3QoKCgpPT57dm9pZCAwIT09ZSYmcyh7ZW5hYmxlZDplfSl9KSxbZV0pO2NvbnN0W3UsbV09ay51c2VNZW1vKCgoKT0+e2NvbnN0IGU9e3ZhbHVlOjB9O3JldHVybltuZXcgZC5GdWxsU2NyZWVuUXVhZChuZXcgRC5TaGFkZXJNYXRlcmlhbCh7dW5pZm9ybXM6e2E6e3ZhbHVlOmwudGV4dHVyZX0sYjp7dmFsdWU6Yy50ZXh0dXJlfSxibGVuZDplfSx2ZXJ0ZXhTaGFkZXI6XCJcXG4gICAgICAgICAgdmFyeWluZyB2ZWMyIHZVdjtcXG4gICAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICAgIHZVdiA9IHV2O1xcbiAgICAgICAgICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIG1vZGVsVmlld01hdHJpeCAqIHZlYzQoIHBvc2l0aW9uLCAxLjAgKTtcXG4gICAgICAgICAgfVwiLGZyYWdtZW50U2hhZGVyOmBcXG4gICAgICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgYTtcXG4gICAgICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgYjtcXG4gICAgICAgICAgdW5pZm9ybSBmbG9hdCBibGVuZDtcXG4gICAgICAgICAgdmFyeWluZyB2ZWMyIHZVdjtcXG4gICAgICAgICAgI2luY2x1ZGUgPHBhY2tpbmc+XFxuICAgICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgICB2ZWM0IHRhID0gdGV4dHVyZTJEKGEsIHZVdik7XFxuICAgICAgICAgICAgdmVjNCB0YiA9IHRleHR1cmUyRChiLCB2VXYpO1xcbiAgICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IG1peCh0YiwgdGEsIGJsZW5kKTtcXG4gICAgICAgICAgICAjaW5jbHVkZSA8JHtUZT49MTU0P1wiY29sb3JzcGFjZV9mcmFnbWVudFwiOlwiZW5jb2RpbmdzX2ZyYWdtZW50XCJ9PlxcbiAgICAgICAgICB9YH0pKSxlXX0pLFtdKTtyZXR1cm4gYS51c2VGcmFtZSgoZT0+e3ZhciBhO2xldCBzPW51bGw9PXJ8fG51bGw9PShhPXIuY3VycmVudCk/dm9pZCAwOmEuX19yM2YucGFyZW50O2lmKHMpe3ZhciBkLGYscCxoO2lmKG8paS5tYXRyaXhXb3JsZC5pZGVudGl0eSgpO2Vsc2UgbiYmMT09PShudWxsPT0oZD1yLmN1cnJlbnQpP3ZvaWQgMDpkLmJsZW5kKSYmcy51cGRhdGVXb3JsZE1hdHJpeCghMCwhMSksaS5tYXRyaXhXb3JsZC5jb3B5KHMubWF0cml4V29ybGQpO2lmKG4pKG51bGw9PShmPXIuY3VycmVudCk/dm9pZCAwOmYuYmxlbmQpPjAmJihudWxsPT0ocD1yLmN1cnJlbnQpP3ZvaWQgMDpwLmJsZW5kKTwxPyhtLnZhbHVlPXIuY3VycmVudC5ibGVuZCxlLmdsLnNldFJlbmRlclRhcmdldChsKSxlLmdsLnJlbmRlcihpLGUuY2FtZXJhKSxlLmdsLnNldFJlbmRlclRhcmdldChjKSxlLmdsLnJlbmRlcih0LGUuY2FtZXJhKSxlLmdsLnNldFJlbmRlclRhcmdldChudWxsKSx1LnJlbmRlcihlLmdsKSk6MT09PShudWxsPT0oaD1yLmN1cnJlbnQpP3ZvaWQgMDpoLmJsZW5kKSYmZS5nbC5yZW5kZXIoaSxlLmNhbWVyYSl9fSksbiksay5jcmVhdGVFbGVtZW50KGsuRnJhZ21lbnQsbnVsbCl9Y29uc3QgUm89KGUsdCxyKT0+e2xldCBuPW5ldyBELldlYkdMUmVuZGVyVGFyZ2V0KGUsdCx7bWluRmlsdGVyOkQuTGluZWFyTWlwbWFwTGluZWFyRmlsdGVyLG1hZ0ZpbHRlcjpELkxpbmVhckZpbHRlcix0eXBlOkQuRmxvYXRUeXBlLGZvcm1hdDpELlJlZEZvcm1hdCxnZW5lcmF0ZU1pcG1hcHM6ITB9KSxhPW5ldyBELldlYkdMUmVuZGVyVGFyZ2V0KGUsdCx7bWluRmlsdGVyOkQuTmVhcmVzdEZpbHRlcixtYWdGaWx0ZXI6RC5OZWFyZXN0RmlsdGVyfSksbz1uZXcgRC5XZWJHTFJlbmRlclRhcmdldChlLHQse21pbkZpbHRlcjpELk5lYXJlc3RGaWx0ZXIsbWFnRmlsdGVyOkQuTmVhcmVzdEZpbHRlcn0pLGk9bmV3IEQuV2ViR0xSZW5kZXJUYXJnZXQoZSx0LHttaW5GaWx0ZXI6RC5OZWFyZXN0RmlsdGVyLG1hZ0ZpbHRlcjpELk5lYXJlc3RGaWx0ZXJ9KSxzPW5ldyBELldlYkdMUmVuZGVyVGFyZ2V0KGUsdCx7bWluRmlsdGVyOkQuTmVhcmVzdEZpbHRlcixtYWdGaWx0ZXI6RC5OZWFyZXN0RmlsdGVyfSksbD1uZXcgRC5XZWJHTFJlbmRlclRhcmdldChlLHQse21pbkZpbHRlcjpELk5lYXJlc3RGaWx0ZXIsbWFnRmlsdGVyOkQuTmVhcmVzdEZpbHRlcix0eXBlOkQuRmxvYXRUeXBlLGZvcm1hdDpELlJlZEZvcm1hdH0pLGM9bmV3IEQuV2ViR0xSZW5kZXJUYXJnZXQoZSx0LHttaW5GaWx0ZXI6RC5OZWFyZXN0RmlsdGVyLG1hZ0ZpbHRlcjpELk5lYXJlc3RGaWx0ZXIsdHlwZTpELkZsb2F0VHlwZSxmb3JtYXQ6RC5SZWRGb3JtYXR9KTtjb25zdCB1PW5ldyBkLkZ1bGxTY3JlZW5RdWFkKG5ldyBELlNoYWRlck1hdGVyaWFsKHt1bmlmb3Jtczp7dGV4Ont2YWx1ZTpudWxsfX0sdmVydGV4U2hhZGVyOlwiXFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICB2VXYgPSB1djtcXG4gICAgICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCggcG9zaXRpb24sIDEuMCApO1xcbiAgICAgICAgfVwiLGZyYWdtZW50U2hhZGVyOlwiXFxuICAgICAgICB1bmlmb3JtIHNhbXBsZXIyRCB0ZXg7XFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgICAgICAgI2luY2x1ZGUgPHBhY2tpbmc+XFxuICAgICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IHBhY2sySGFsZlRvUkdCQSh2VXYgKiAocm91bmQodGV4dHVyZTJEKHRleCwgdlV2KS54KSkpO1xcbiAgICAgICAgfVwifSkpLG09bmV3IGQuRnVsbFNjcmVlblF1YWQobmV3IEQuU2hhZGVyTWF0ZXJpYWwoe3VuaWZvcm1zOnt0ZXg6e3ZhbHVlOm51bGx9fSx2ZXJ0ZXhTaGFkZXI6XCJcXG4gICAgICAgIHZhcnlpbmcgdmVjMiB2VXY7XFxuICAgICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICAgIHZVdiA9IHV2O1xcbiAgICAgICAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XFxuICAgICAgICB9XCIsZnJhZ21lbnRTaGFkZXI6XCJcXG4gICAgICAgIHVuaWZvcm0gc2FtcGxlcjJEIHRleDtcXG4gICAgICAgIHZhcnlpbmcgdmVjMiB2VXY7XFxuICAgICAgICAjaW5jbHVkZSA8cGFja2luZz5cXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgZ2xfRnJhZ0NvbG9yID0gcGFjazJIYWxmVG9SR0JBKHZVdiAqICgxLjAgLSByb3VuZCh0ZXh0dXJlMkQodGV4LCB2VXYpLngpKSk7XFxuICAgICAgICB9XCJ9KSksZj1uZXcgZC5GdWxsU2NyZWVuUXVhZChuZXcgRC5TaGFkZXJNYXRlcmlhbCh7dW5pZm9ybXM6e3RleDp7dmFsdWU6bnVsbH0sb2Zmc2V0Ont2YWx1ZTowfSxsZXZlbDp7dmFsdWU6MH0sbWF4U3RlcHM6e3ZhbHVlOjB9fSx2ZXJ0ZXhTaGFkZXI6XCJcXG4gICAgICAgIHZhcnlpbmcgdmVjMiB2VXY7XFxuICAgICAgICB2b2lkIG1haW4oKSB7XFxuICAgICAgICAgIHZVdiA9IHV2O1xcbiAgICAgICAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb25NYXRyaXggKiBtb2RlbFZpZXdNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XFxuICAgICAgICB9XCIsZnJhZ21lbnRTaGFkZXI6YFxcbiAgICAgICAgdmFyeWluZyB2ZWMyIHZVdjtcXG4gICAgICAgIHVuaWZvcm0gc2FtcGxlcjJEIHRleDtcXG4gICAgICAgIHVuaWZvcm0gZmxvYXQgb2Zmc2V0O1xcbiAgICAgICAgdW5pZm9ybSBmbG9hdCBsZXZlbDtcXG4gICAgICAgIHVuaWZvcm0gZmxvYXQgbWF4U3RlcHM7XFxuICAgICAgICAjaW5jbHVkZSA8cGFja2luZz5cXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgZmxvYXQgY2xvc2VzdERpc3QgPSA5OTk5OTk5Ljk7XFxuICAgICAgICAgIHZlYzIgY2xvc2VzdFBvcyA9IHZlYzIoMC4wKTtcXG4gICAgICAgICAgZm9yIChmbG9hdCB4ID0gLTEuMDsgeCA8PSAxLjA7IHggKz0gMS4wKSB7XFxuICAgICAgICAgICAgZm9yIChmbG9hdCB5ID0gLTEuMDsgeSA8PSAxLjA7IHkgKz0gMS4wKSB7XFxuICAgICAgICAgICAgICB2ZWMyIHZvZmZzZXQgPSB2VXY7XFxuICAgICAgICAgICAgICB2b2Zmc2V0ICs9IHZlYzIoeCwgeSkgKiB2ZWMyKCR7MS9lfSwgJHsxL3R9KSAqIG9mZnNldDtcXG4gICAgICAgICAgICAgIHZlYzIgcG9zID0gdW5wYWNrUkdCQVRvMkhhbGYodGV4dHVyZTJEKHRleCwgdm9mZnNldCkpO1xcbiAgICAgICAgICAgICAgZmxvYXQgZGlzdCA9IGRpc3RhbmNlKHBvcy54eSwgdlV2KTtcXG4gICAgICAgICAgICAgIGlmKHBvcy54ICE9IDAuMCAmJiBwb3MueSAhPSAwLjAgJiYgZGlzdCA8IGNsb3Nlc3REaXN0KSB7XFxuICAgICAgICAgICAgICAgIGNsb3Nlc3REaXN0ID0gZGlzdDtcXG4gICAgICAgICAgICAgICAgY2xvc2VzdFBvcyA9IHBvcztcXG4gICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICAgIH1cXG4gICAgICAgICAgZ2xfRnJhZ0NvbG9yID0gcGFjazJIYWxmVG9SR0JBKGNsb3Nlc3RQb3MpO1xcbiAgICAgICAgfWB9KSkscD1uZXcgZC5GdWxsU2NyZWVuUXVhZChuZXcgRC5TaGFkZXJNYXRlcmlhbCh7dW5pZm9ybXM6e3RleDp7dmFsdWU6bnVsbH0sc2l6ZTp7dmFsdWU6bmV3IEQuVmVjdG9yMihlLHQpfX0sdmVydGV4U2hhZGVyOlwiXFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICB2VXYgPSB1djtcXG4gICAgICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCggcG9zaXRpb24sIDEuMCApO1xcbiAgICAgICAgfVwiLGZyYWdtZW50U2hhZGVyOlwiXFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgdGV4O1xcbiAgICAgICAgdW5pZm9ybSB2ZWMyIHNpemU7XFxuICAgICAgICAjaW5jbHVkZSA8cGFja2luZz5cXG4gICAgICAgIHZvaWQgbWFpbigpIHtcXG4gICAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChkaXN0YW5jZShzaXplICogdW5wYWNrUkdCQVRvMkhhbGYodGV4dHVyZTJEKHRleCwgdlV2KSksIHNpemUgKiB2VXYpLCAwLjAsIDAuMCwgMC4wKTtcXG4gICAgICAgIH1cIn0pKSxoPW5ldyBkLkZ1bGxTY3JlZW5RdWFkKG5ldyBELlNoYWRlck1hdGVyaWFsKHt1bmlmb3Jtczp7aW5zaWRlOnt2YWx1ZTpjLnRleHR1cmV9LG91dHNpZGU6e3ZhbHVlOmwudGV4dHVyZX0sdGV4Ont2YWx1ZTpudWxsfX0sdmVydGV4U2hhZGVyOlwiXFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICB2VXYgPSB1djtcXG4gICAgICAgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCggcG9zaXRpb24sIDEuMCApO1xcbiAgICAgICAgfVwiLGZyYWdtZW50U2hhZGVyOlwiXFxuICAgICAgICB2YXJ5aW5nIHZlYzIgdlV2O1xcbiAgICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgaW5zaWRlO1xcbiAgICAgICAgdW5pZm9ybSBzYW1wbGVyMkQgb3V0c2lkZTtcXG4gICAgICAgIHVuaWZvcm0gc2FtcGxlcjJEIHRleDtcXG4gICAgICAgICNpbmNsdWRlIDxwYWNraW5nPlxcbiAgICAgICAgdm9pZCBtYWluKCkge1xcbiAgICAgICAgICBmbG9hdCBpID0gdGV4dHVyZTJEKGluc2lkZSwgdlV2KS54O1xcbiAgICAgICAgICBmbG9hdCBvID10ZXh0dXJlMkQob3V0c2lkZSwgdlV2KS54O1xcbiAgICAgICAgICBpZiAodGV4dHVyZTJEKHRleCwgdlV2KS54ID09IDAuMCkge1xcbiAgICAgICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQobywgMC4wLCAwLjAsIDAuMCk7XFxuICAgICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgZ2xfRnJhZ0NvbG9yID0gdmVjNCgtaSwgMC4wLCAwLjAsIDAuMCk7XFxuICAgICAgICAgIH1cXG4gICAgICAgIH1cIn0pKTtyZXR1cm4gZD0+e2xldCB5PW47ZC5taW5GaWx0ZXI9RC5OZWFyZXN0RmlsdGVyLGQubWFnRmlsdGVyPUQuTmVhcmVzdEZpbHRlcix1Lm1hdGVyaWFsLnVuaWZvcm1zLnRleC52YWx1ZT1kLHIuc2V0UmVuZGVyVGFyZ2V0KGEpLHUucmVuZGVyKHIpO2NvbnN0IHg9TWF0aC5jZWlsKE1hdGgubG9nKE1hdGgubWF4KGUsdCkpL01hdGgubG9nKDIpKTtsZXQgdj1hLGc9bnVsbDtmb3IobGV0IGU9MDtlPHg7ZSsrKXtjb25zdCB0PU1hdGgucG93KDIseC1lLTEpO2c9dj09PWE/aTphLGYubWF0ZXJpYWwudW5pZm9ybXMubGV2ZWwudmFsdWU9ZSxmLm1hdGVyaWFsLnVuaWZvcm1zLm1heFN0ZXBzLnZhbHVlPXgsZi5tYXRlcmlhbC51bmlmb3Jtcy5vZmZzZXQudmFsdWU9dCxmLm1hdGVyaWFsLnVuaWZvcm1zLnRleC52YWx1ZT12LnRleHR1cmUsci5zZXRSZW5kZXJUYXJnZXQoZyksZi5yZW5kZXIociksdj1nfXIuc2V0UmVuZGVyVGFyZ2V0KGwpLHAubWF0ZXJpYWwudW5pZm9ybXMudGV4LnZhbHVlPWcudGV4dHVyZSxwLnJlbmRlcihyKSxtLm1hdGVyaWFsLnVuaWZvcm1zLnRleC52YWx1ZT1kLHIuc2V0UmVuZGVyVGFyZ2V0KG8pLG0ucmVuZGVyKHIpLHY9bztmb3IobGV0IGU9MDtlPHg7ZSsrKXtjb25zdCB0PU1hdGgucG93KDIseC1lLTEpO2c9dj09PW8/czpvLGYubWF0ZXJpYWwudW5pZm9ybXMubGV2ZWwudmFsdWU9ZSxmLm1hdGVyaWFsLnVuaWZvcm1zLm1heFN0ZXBzLnZhbHVlPXgsZi5tYXRlcmlhbC51bmlmb3Jtcy5vZmZzZXQudmFsdWU9dCxmLm1hdGVyaWFsLnVuaWZvcm1zLnRleC52YWx1ZT12LnRleHR1cmUsci5zZXRSZW5kZXJUYXJnZXQoZyksZi5yZW5kZXIociksdj1nfXJldHVybiByLnNldFJlbmRlclRhcmdldChjKSxwLm1hdGVyaWFsLnVuaWZvcm1zLnRleC52YWx1ZT1nLnRleHR1cmUscC5yZW5kZXIociksci5zZXRSZW5kZXJUYXJnZXQoeSksaC5tYXRlcmlhbC51bmlmb3Jtcy50ZXgudmFsdWU9ZCxoLnJlbmRlcihyKSxyLnNldFJlbmRlclRhcmdldChudWxsKSx5fX0sa289bmV3IEQuQ29sb3I7ZnVuY3Rpb24gRm8oZSl7cmV0dXJuXCJ0b3BcImluIGV9ZnVuY3Rpb24gRG8oe2NhbnZhc1NpemU6ZSxzY2VuZTp0LGluZGV4OnIsY2hpbGRyZW46bixmcmFtZXM6byxyZWN0OmksdHJhY2s6c30pe2NvbnN0IGw9YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSxjPWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSksdT1hLnVzZVRocmVlKChlPT5lLnNjZW5lKSksZD1hLnVzZVRocmVlKChlPT5lLnNldEV2ZW50cykpO2xldCBtPTA7cmV0dXJuIGEudXNlRnJhbWUoKHI9Pnt2YXIgYSxsOyhvPT09MS8wfHxtPD1vKSYmKGkuY3VycmVudD1udWxsPT0oYT1zLmN1cnJlbnQpP3ZvaWQgMDphLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG0rKyk7aWYoaS5jdXJyZW50KXtjb25zdHtwb3NpdGlvbjp7bGVmdDphLGJvdHRvbTpvLHdpZHRoOnMsaGVpZ2h0OmR9LGlzT2Zmc2NyZWVuOm19PWZ1bmN0aW9uKGUsdCl7Y29uc3R7cmlnaHQ6cix0b3A6bixsZWZ0OmEsYm90dG9tOm8sd2lkdGg6aSxoZWlnaHQ6c309dCxsPXQuYm90dG9tPDB8fG4+ZS5oZWlnaHR8fHI8MHx8dC5sZWZ0PmUud2lkdGg7aWYoRm8oZSkpe2NvbnN0IHQ9ZS50b3ArZS5oZWlnaHQtbztyZXR1cm57cG9zaXRpb246e3dpZHRoOmksaGVpZ2h0OnMsbGVmdDphLWUubGVmdCx0b3A6bixib3R0b206dCxyaWdodDpyfSxpc09mZnNjcmVlbjpsfX1yZXR1cm57cG9zaXRpb246e3dpZHRoOmksaGVpZ2h0OnMsdG9wOm4sbGVmdDphLGJvdHRvbTplLmhlaWdodC1vLHJpZ2h0OnJ9LGlzT2Zmc2NyZWVuOmx9fShlLGkuY3VycmVudCksZj1zL2Q7KGw9YykmJmwuaXNPcnRob2dyYXBoaWNDYW1lcmE/Yy5sZWZ0PT09cy8tMiYmYy5yaWdodD09PXMvMiYmYy50b3A9PT1kLzImJmMuYm90dG9tPT09ZC8tMnx8KE9iamVjdC5hc3NpZ24oYyx7bGVmdDpzLy0yLHJpZ2h0OnMvMix0b3A6ZC8yLGJvdHRvbTpkLy0yfSksYy51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCkpOmMuYXNwZWN0IT09ZiYmKGMuYXNwZWN0PWYsYy51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCkpLHIuZ2wuc2V0Vmlld3BvcnQoYSxvLHMsZCksci5nbC5zZXRTY2lzc29yKGEsbyxzLGQpLHIuZ2wuc2V0U2Npc3NvclRlc3QoITApLG0/KHIuZ2wuZ2V0Q2xlYXJDb2xvcihrbyksci5nbC5zZXRDbGVhckNvbG9yKGtvLHIuZ2wuZ2V0Q2xlYXJBbHBoYSgpKSxyLmdsLmNsZWFyKCEwLCEwKSk6ci5nbC5yZW5kZXIobj91OnQsYyksci5nbC5zZXRTY2lzc29yVGVzdCghMCl9fSksciksay51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT1sKCkuZXZlbnRzLmNvbm5lY3RlZDtyZXR1cm4gZCh7Y29ubmVjdGVkOnMuY3VycmVudH0pLCgpPT5kKHtjb25uZWN0ZWQ6ZX0pfSksW10pLGsudXNlRWZmZWN0KCgoKT0+e0ZvKGUpfHxjb25zb2xlLndhcm4oXCJEZXRlY3RlZCBAcmVhY3QtdGhyZWUvZmliZXIgY2FudmFzIHNpemUgZG9lcyBub3QgaW5jbHVkZSBwb3NpdGlvbiBpbmZvcm1hdGlvbi4gPFZpZXcgLz4gbWF5IG5vdCB3b3JrIGFzIGV4cGVjdGVkLiBVcGdyYWRlIHRvIEByZWFjdC10aHJlZS9maWJlciBeOC4xLjAgZm9yIHN1cHBvcnQuXFxuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vcG1uZHJzL2RyZWkvaXNzdWVzLzk0NFwiKX0pLFtdKSxrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLG4pfWNvbnN0IExvPWsuY3JlYXRlQ29udGV4dChudWxsKSxBbz1uZXcgRC5WZWN0b3IzLF9vPW5ldyBELlZlY3RvcjMsT289bmV3IEQuVmVjdG9yMygwLDEsMCksTm89bmV3IEQuTWF0cml4NCxCbz0oe2RpcmVjdGlvbjplLGF4aXM6dH0pPT57Y29uc3R7dHJhbnNsYXRpb246cix0cmFuc2xhdGlvbkxpbWl0czpuLGFubm90YXRpb25zOm8sYW5ub3RhdGlvbnNDbGFzczppLGRlcHRoVGVzdDpzLHNjYWxlOmwsbGluZVdpZHRoOmMsZml4ZWQ6dSxheGlzQ29sb3JzOmQsaG92ZXJlZENvbG9yOm0sb3BhY2l0eTpmLG9uRHJhZ1N0YXJ0OnAsb25EcmFnOmgsb25EcmFnRW5kOnksdXNlckRhdGE6eH09ay51c2VDb250ZXh0KExvKSx2PWEudXNlVGhyZWUoKGU9PmUuY29udHJvbHMpKSxnPWsudXNlUmVmKG51bGwpLHo9ay51c2VSZWYobnVsbCksdz1rLnVzZVJlZihudWxsKSxiPWsudXNlUmVmKDApLFtFLE1dPWsudXNlU3RhdGUoITEpLFM9ay51c2VDYWxsYmFjaygobj0+e28mJihnLmN1cnJlbnQuaW5uZXJUZXh0PWAke3IuY3VycmVudFt0XS50b0ZpeGVkKDIpfWAsZy5jdXJyZW50LnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiKSxuLnN0b3BQcm9wYWdhdGlvbigpO2NvbnN0IGE9KG5ldyBELk1hdHJpeDQpLmV4dHJhY3RSb3RhdGlvbih6LmN1cnJlbnQubWF0cml4V29ybGQpLGk9bi5wb2ludC5jbG9uZSgpLHM9KG5ldyBELlZlY3RvcjMpLnNldEZyb21NYXRyaXhQb3NpdGlvbih6LmN1cnJlbnQubWF0cml4V29ybGQpLGw9ZS5jbG9uZSgpLmFwcGx5TWF0cml4NChhKS5ub3JtYWxpemUoKTt3LmN1cnJlbnQ9e2NsaWNrUG9pbnQ6aSxkaXI6bH0sYi5jdXJyZW50PXIuY3VycmVudFt0XSxwKHtjb21wb25lbnQ6XCJBcnJvd1wiLGF4aXM6dCxvcmlnaW46cyxkaXJlY3Rpb25zOltsXX0pLHYmJih2LmVuYWJsZWQ9ITEpLG4udGFyZ2V0LnNldFBvaW50ZXJDYXB0dXJlKG4ucG9pbnRlcklkKX0pLFtvLGUsdixwLHIsdF0pLEM9ay51c2VDYWxsYmFjaygoZT0+e2lmKGUuc3RvcFByb3BhZ2F0aW9uKCksRXx8TSghMCksdy5jdXJyZW50KXtjb25zdHtjbGlja1BvaW50OmEsZGlyOml9PXcuY3VycmVudCxbcyxsXT0obnVsbD09bj92b2lkIDA6blt0XSl8fFt2b2lkIDAsdm9pZCAwXTtsZXQgYz0oKGUsdCxyLG4pPT57Y29uc3QgYT10LmRvdCh0KSxvPXQuZG90KGUpLXQuZG90KHIpLGk9dC5kb3Qobik7cmV0dXJuIDA9PT1pPy1vL2E6KEFvLmNvcHkobikubXVsdGlwbHlTY2FsYXIoYS9pKS5zdWIodCksX28uY29weShuKS5tdWx0aXBseVNjYWxhcihvL2kpLmFkZChyKS5zdWIoZSksLUFvLmRvdChfbykvQW8uZG90KEFvKSl9KShhLGksZS5yYXkub3JpZ2luLGUucmF5LmRpcmVjdGlvbik7dm9pZCAwIT09cyYmKGM9TWF0aC5tYXgoYyxzLWIuY3VycmVudCkpLHZvaWQgMCE9PWwmJihjPU1hdGgubWluKGMsbC1iLmN1cnJlbnQpKSxyLmN1cnJlbnRbdF09Yi5jdXJyZW50K2MsbyYmKGcuY3VycmVudC5pbm5lclRleHQ9YCR7ci5jdXJyZW50W3RdLnRvRml4ZWQoMil9YCksTm8ubWFrZVRyYW5zbGF0aW9uKGkueCpjLGkueSpjLGkueipjKSxoKE5vKX19KSxbbyxoLEUscixuLHRdKSxQPWsudXNlQ2FsbGJhY2soKGU9PntvJiYoZy5jdXJyZW50LnN0eWxlLmRpc3BsYXk9XCJub25lXCIpLGUuc3RvcFByb3BhZ2F0aW9uKCksdy5jdXJyZW50PW51bGwseSgpLHYmJih2LmVuYWJsZWQ9ITApLGUudGFyZ2V0LnJlbGVhc2VQb2ludGVyQ2FwdHVyZShlLnBvaW50ZXJJZCl9KSxbbyx2LHldKSxUPWsudXNlQ2FsbGJhY2soKGU9PntlLnN0b3BQcm9wYWdhdGlvbigpLE0oITEpfSksW10pLHtjeWxpbmRlckxlbmd0aDpSLGNvbmVXaWR0aDpGLGNvbmVMZW5ndGg6TCxtYXRyaXhMOkF9PWsudXNlTWVtbygoKCk9Pntjb25zdCB0PXU/Yy9sKjEuNjpsLzIwLHI9dT8uMjpsLzUsbj11PzEtcjpsLXIsYT0obmV3IEQuUXVhdGVybmlvbikuc2V0RnJvbVVuaXRWZWN0b3JzKE9vLGUuY2xvbmUoKS5ub3JtYWxpemUoKSk7cmV0dXJue2N5bGluZGVyTGVuZ3RoOm4sY29uZVdpZHRoOnQsY29uZUxlbmd0aDpyLG1hdHJpeEw6KG5ldyBELk1hdHJpeDQpLm1ha2VSb3RhdGlvbkZyb21RdWF0ZXJuaW9uKGEpfX0pLFtlLGwsYyx1XSksXz1FP206ZFt0XTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7cmVmOnp9LGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse21hdHJpeDpBLG1hdHJpeEF1dG9VcGRhdGU6ITEsb25Qb2ludGVyRG93bjpTLG9uUG9pbnRlck1vdmU6QyxvblBvaW50ZXJVcDpQLG9uUG9pbnRlck91dDpUfSxvJiZrLmNyZWF0ZUVsZW1lbnQoUSx7cG9zaXRpb246WzAsLUwsMF19LGsuY3JlYXRlRWxlbWVudChcImRpdlwiLHtzdHlsZTp7ZGlzcGxheTpcIm5vbmVcIixiYWNrZ3JvdW5kOlwiIzE1MTUyMFwiLGNvbG9yOlwid2hpdGVcIixwYWRkaW5nOlwiNnB4IDhweFwiLGJvcmRlclJhZGl1czo3LHdoaXRlU3BhY2U6XCJub3dyYXBcIn0sY2xhc3NOYW1lOmkscmVmOmd9KSksay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHt2aXNpYmxlOiExLHBvc2l0aW9uOlswLChSK0wpLzIsMF0sdXNlckRhdGE6eH0say5jcmVhdGVFbGVtZW50KFwiY3lsaW5kZXJHZW9tZXRyeVwiLHthcmdzOlsxLjQqRiwxLjQqRixSK0wsOCwxXX0pKSxrLmNyZWF0ZUVsZW1lbnQoZGUse3RyYW5zcGFyZW50OiEwLHJheWNhc3Q6KCk9Pm51bGwsZGVwdGhUZXN0OnMscG9pbnRzOlswLDAsMCwwLFIsMF0sbGluZVdpZHRoOmMsY29sb3I6XyxvcGFjaXR5OmYscG9seWdvbk9mZnNldDohMCxyZW5kZXJPcmRlcjoxLHBvbHlnb25PZmZzZXRGYWN0b3I6LTEwLGZvZzohMX0pLGsuY3JlYXRlRWxlbWVudChcIm1lc2hcIix7cmF5Y2FzdDooKT0+bnVsbCxwb3NpdGlvbjpbMCxSK0wvMiwwXSxyZW5kZXJPcmRlcjo1MDB9LGsuY3JlYXRlRWxlbWVudChcImNvbmVHZW9tZXRyeVwiLHthcmdzOltGLEwsMjQsMV19KSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoQmFzaWNNYXRlcmlhbFwiLHt0cmFuc3BhcmVudDohMCxkZXB0aFRlc3Q6cyxjb2xvcjpfLG9wYWNpdHk6Zixwb2x5Z29uT2Zmc2V0OiEwLHBvbHlnb25PZmZzZXRGYWN0b3I6LTEwLGZvZzohMX0pKSkpfSxJbz1uZXcgRC5SYXksVW89bmV3IEQuVmVjdG9yMyxWbz1uZXcgRC5NYXRyaXg0LGpvPSh7ZGlyMTplLGRpcjI6dCxheGlzOnJ9KT0+e2NvbnN0e3RyYW5zbGF0aW9uOm4sdHJhbnNsYXRpb25MaW1pdHM6byxhbm5vdGF0aW9uczppLGFubm90YXRpb25zQ2xhc3M6cyxkZXB0aFRlc3Q6bCxzY2FsZTpjLGxpbmVXaWR0aDp1LGZpeGVkOmQsYXhpc0NvbG9yczptLGhvdmVyZWRDb2xvcjpmLG9wYWNpdHk6cCxvbkRyYWdTdGFydDpoLG9uRHJhZzp5LG9uRHJhZ0VuZDp4LHVzZXJEYXRhOnZ9PWsudXNlQ29udGV4dChMbyksZz1hLnVzZVRocmVlKChlPT5lLmNvbnRyb2xzKSksej1rLnVzZVJlZihudWxsKSx3PWsudXNlUmVmKG51bGwpLGI9ay51c2VSZWYobnVsbCksRT1rLnVzZVJlZigwKSxNPWsudXNlUmVmKDApLFtTLENdPWsudXNlU3RhdGUoITEpLFA9ay51c2VDYWxsYmFjaygoZT0+e2kmJih6LmN1cnJlbnQuaW5uZXJUZXh0PWAke24uY3VycmVudFsocisxKSUzXS50b0ZpeGVkKDIpfSwgJHtuLmN1cnJlbnRbKHIrMiklM10udG9GaXhlZCgyKX1gLHouY3VycmVudC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIiksZS5zdG9wUHJvcGFnYXRpb24oKTtjb25zdCB0PWUucG9pbnQuY2xvbmUoKSxhPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4UG9zaXRpb24ody5jdXJyZW50Lm1hdHJpeFdvcmxkKSxvPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4Q29sdW1uKHcuY3VycmVudC5tYXRyaXhXb3JsZCwwKS5ub3JtYWxpemUoKSxzPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4Q29sdW1uKHcuY3VycmVudC5tYXRyaXhXb3JsZCwxKS5ub3JtYWxpemUoKSxsPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4Q29sdW1uKHcuY3VycmVudC5tYXRyaXhXb3JsZCwyKS5ub3JtYWxpemUoKSxjPShuZXcgRC5QbGFuZSkuc2V0RnJvbU5vcm1hbEFuZENvcGxhbmFyUG9pbnQobCxhKTtiLmN1cnJlbnQ9e2NsaWNrUG9pbnQ6dCxlMTpvLGUyOnMscGxhbmU6Y30sRS5jdXJyZW50PW4uY3VycmVudFsocisxKSUzXSxNLmN1cnJlbnQ9bi5jdXJyZW50WyhyKzIpJTNdLGgoe2NvbXBvbmVudDpcIlNsaWRlclwiLGF4aXM6cixvcmlnaW46YSxkaXJlY3Rpb25zOltvLHMsbF19KSxnJiYoZy5lbmFibGVkPSExKSxlLnRhcmdldC5zZXRQb2ludGVyQ2FwdHVyZShlLnBvaW50ZXJJZCl9KSxbaSxnLGgscl0pLFQ9ay51c2VDYWxsYmFjaygoZT0+e2lmKGUuc3RvcFByb3BhZ2F0aW9uKCksU3x8QyghMCksYi5jdXJyZW50KXtjb25zdHtjbGlja1BvaW50OnQsZTE6YSxlMjpzLHBsYW5lOmx9PWIuY3VycmVudCxbYyx1XT0obnVsbD09bz92b2lkIDA6b1socisxKSUzXSl8fFt2b2lkIDAsdm9pZCAwXSxbZCxtXT0obnVsbD09bz92b2lkIDA6b1socisyKSUzXSl8fFt2b2lkIDAsdm9pZCAwXTtJby5jb3B5KGUucmF5KSxJby5pbnRlcnNlY3RQbGFuZShsLFVvKSxJby5kaXJlY3Rpb24ubmVnYXRlKCksSW8uaW50ZXJzZWN0UGxhbmUobCxVbyksVW8uc3ViKHQpO2xldFtmLHBdPSgoZSx0LHIpPT57Y29uc3Qgbj1NYXRoLmFicyhlLngpPj1NYXRoLmFicyhlLnkpJiZNYXRoLmFicyhlLngpPj1NYXRoLmFicyhlLnopPzA6TWF0aC5hYnMoZS55KT49TWF0aC5hYnMoZS54KSYmTWF0aC5hYnMoZS55KT49TWF0aC5hYnMoZS56KT8xOjIsYT1bMCwxLDJdLnNvcnQoKChlLHIpPT5NYXRoLmFicyh0LmdldENvbXBvbmVudChyKSktTWF0aC5hYnModC5nZXRDb21wb25lbnQoZSkpKSksbz1uPT09YVswXT9hWzFdOmFbMF0saT1lLmdldENvbXBvbmVudChuKSxzPWUuZ2V0Q29tcG9uZW50KG8pLGw9dC5nZXRDb21wb25lbnQobiksYz10LmdldENvbXBvbmVudChvKSx1PXIuZ2V0Q29tcG9uZW50KG4pLGQ9KHIuZ2V0Q29tcG9uZW50KG8pLXUqKHMvaSkpLyhjLWwqKHMvaSkpO3JldHVyblsodS1kKmwpL2ksZF19KShhLHMsVW8pO3ZvaWQgMCE9PWMmJihmPU1hdGgubWF4KGYsYy1FLmN1cnJlbnQpKSx2b2lkIDAhPT11JiYoZj1NYXRoLm1pbihmLHUtRS5jdXJyZW50KSksdm9pZCAwIT09ZCYmKHA9TWF0aC5tYXgocCxkLU0uY3VycmVudCkpLHZvaWQgMCE9PW0mJihwPU1hdGgubWluKHAsbS1NLmN1cnJlbnQpKSxuLmN1cnJlbnRbKHIrMSklM109RS5jdXJyZW50K2Ysbi5jdXJyZW50WyhyKzIpJTNdPU0uY3VycmVudCtwLGkmJih6LmN1cnJlbnQuaW5uZXJUZXh0PWAke24uY3VycmVudFsocisxKSUzXS50b0ZpeGVkKDIpfSwgJHtuLmN1cnJlbnRbKHIrMiklM10udG9GaXhlZCgyKX1gKSxWby5tYWtlVHJhbnNsYXRpb24oZiphLngrcCpzLngsZiphLnkrcCpzLnksZiphLnorcCpzLnopLHkoVm8pfX0pLFtpLHksUyxuLG8scl0pLFI9ay51c2VDYWxsYmFjaygoZT0+e2kmJih6LmN1cnJlbnQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksZS5zdG9wUHJvcGFnYXRpb24oKSxiLmN1cnJlbnQ9bnVsbCx4KCksZyYmKGcuZW5hYmxlZD0hMCksZS50YXJnZXQucmVsZWFzZVBvaW50ZXJDYXB0dXJlKGUucG9pbnRlcklkKX0pLFtpLGcseF0pLEY9ay51c2VDYWxsYmFjaygoZT0+e2Uuc3RvcFByb3BhZ2F0aW9uKCksQyghMSl9KSxbXSksTD1rLnVzZU1lbW8oKCgpPT57Y29uc3Qgcj1lLmNsb25lKCkubm9ybWFsaXplKCksbj10LmNsb25lKCkubm9ybWFsaXplKCk7cmV0dXJuKG5ldyBELk1hdHJpeDQpLm1ha2VCYXNpcyhyLG4sci5jbG9uZSgpLmNyb3NzKG4pKX0pLFtlLHRdKSxBPWQ/MS83OmMvNyxfPWQ/LjIyNTouMjI1KmMsTz1TP2Y6bVtyXSxOPWsudXNlTWVtbygoKCk9PltuZXcgRC5WZWN0b3IzKDAsMCwwKSxuZXcgRC5WZWN0b3IzKDAsXywwKSxuZXcgRC5WZWN0b3IzKF8sXywwKSxuZXcgRC5WZWN0b3IzKF8sMCwwKSxuZXcgRC5WZWN0b3IzKDAsMCwwKV0pLFtfXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjp3LG1hdHJpeDpMLG1hdHJpeEF1dG9VcGRhdGU6ITF9LGkmJmsuY3JlYXRlRWxlbWVudChRLHtwb3NpdGlvbjpbMCwwLDBdfSxrLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7c3R5bGU6e2Rpc3BsYXk6XCJub25lXCIsYmFja2dyb3VuZDpcIiMxNTE1MjBcIixjb2xvcjpcIndoaXRlXCIscGFkZGluZzpcIjZweCA4cHhcIixib3JkZXJSYWRpdXM6Nyx3aGl0ZVNwYWNlOlwibm93cmFwXCJ9LGNsYXNzTmFtZTpzLHJlZjp6fSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3Bvc2l0aW9uOlsxLjcqQSwxLjcqQSwwXX0say5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHt2aXNpYmxlOiEwLG9uUG9pbnRlckRvd246UCxvblBvaW50ZXJNb3ZlOlQsb25Qb2ludGVyVXA6UixvblBvaW50ZXJPdXQ6RixzY2FsZTpfLHVzZXJEYXRhOnZ9LGsuY3JlYXRlRWxlbWVudChcInBsYW5lR2VvbWV0cnlcIixudWxsKSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoQmFzaWNNYXRlcmlhbFwiLHt0cmFuc3BhcmVudDohMCxkZXB0aFRlc3Q6bCxjb2xvcjpPLHBvbHlnb25PZmZzZXQ6ITAscG9seWdvbk9mZnNldEZhY3RvcjotMTAsc2lkZTpELkRvdWJsZVNpZGUsZm9nOiExfSkpLGsuY3JlYXRlRWxlbWVudChkZSx7cG9zaXRpb246Wy1fLzIsLV8vMiwwXSx0cmFuc3BhcmVudDohMCxkZXB0aFRlc3Q6bCxwb2ludHM6TixsaW5lV2lkdGg6dSxjb2xvcjpPLG9wYWNpdHk6cCxwb2x5Z29uT2Zmc2V0OiEwLHBvbHlnb25PZmZzZXRGYWN0b3I6LTEwLHVzZXJEYXRhOnYsZm9nOiExfSkpKX0sV289bmV3IEQuVmVjdG9yMyxHbz1uZXcgRC5WZWN0b3IzLEhvPWU9PjE4MCplL01hdGguUEksJG89ZT0+e2xldCB0PSgoZSx0KT0+e2xldCByPU1hdGguZmxvb3IoZS90KTtyZXR1cm4gcj1yPDA/cisxOnIsZS1yKnR9KShlLDIqTWF0aC5QSSk7cmV0dXJuIE1hdGguYWJzKHQpPDFlLTY/MDoodDwwJiYodCs9MipNYXRoLlBJKSx0KX0scW89bmV3IEQuTWF0cml4NCxYbz1uZXcgRC5WZWN0b3IzLFlvPW5ldyBELlJheSxLbz1uZXcgRC5WZWN0b3IzLFFvPSh7ZGlyMTplLGRpcjI6dCxheGlzOnJ9KT0+e2NvbnN0e3JvdGF0aW9uTGltaXRzOm4sYW5ub3RhdGlvbnM6byxhbm5vdGF0aW9uc0NsYXNzOmksZGVwdGhUZXN0OnMsc2NhbGU6bCxsaW5lV2lkdGg6YyxmaXhlZDp1LGF4aXNDb2xvcnM6ZCxob3ZlcmVkQ29sb3I6bSxvcGFjaXR5OmYsb25EcmFnU3RhcnQ6cCxvbkRyYWc6aCxvbkRyYWdFbmQ6eSx1c2VyRGF0YTp4fT1rLnVzZUNvbnRleHQoTG8pLHY9YS51c2VUaHJlZSgoZT0+ZS5jb250cm9scykpLGc9ay51c2VSZWYobnVsbCksej1rLnVzZVJlZihudWxsKSx3PWsudXNlUmVmKDApLGI9ay51c2VSZWYoMCksRT1rLnVzZVJlZihudWxsKSxbTSxTXT1rLnVzZVN0YXRlKCExKSxDPWsudXNlQ2FsbGJhY2soKGU9PntvJiYoZy5jdXJyZW50LmlubmVyVGV4dD1gJHtIbyhiLmN1cnJlbnQpLnRvRml4ZWQoMCl9wrpgLGcuY3VycmVudC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIiksZS5zdG9wUHJvcGFnYXRpb24oKTtjb25zdCB0PWUucG9pbnQuY2xvbmUoKSxuPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4UG9zaXRpb24oei5jdXJyZW50Lm1hdHJpeFdvcmxkKSxhPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4Q29sdW1uKHouY3VycmVudC5tYXRyaXhXb3JsZCwwKS5ub3JtYWxpemUoKSxpPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4Q29sdW1uKHouY3VycmVudC5tYXRyaXhXb3JsZCwxKS5ub3JtYWxpemUoKSxzPShuZXcgRC5WZWN0b3IzKS5zZXRGcm9tTWF0cml4Q29sdW1uKHouY3VycmVudC5tYXRyaXhXb3JsZCwyKS5ub3JtYWxpemUoKSxsPShuZXcgRC5QbGFuZSkuc2V0RnJvbU5vcm1hbEFuZENvcGxhbmFyUG9pbnQocyxuKTtFLmN1cnJlbnQ9e2NsaWNrUG9pbnQ6dCxvcmlnaW46bixlMTphLGUyOmksbm9ybWFsOnMscGxhbmU6bH0scCh7Y29tcG9uZW50OlwiUm90YXRvclwiLGF4aXM6cixvcmlnaW46bixkaXJlY3Rpb25zOlthLGksc119KSx2JiYodi5lbmFibGVkPSExKSxlLnRhcmdldC5zZXRQb2ludGVyQ2FwdHVyZShlLnBvaW50ZXJJZCl9KSxbbyx2LHAscl0pLFA9ay51c2VDYWxsYmFjaygoZT0+e2lmKGUuc3RvcFByb3BhZ2F0aW9uKCksTXx8UyghMCksRS5jdXJyZW50KXtjb25zdHtjbGlja1BvaW50OnQsb3JpZ2luOmEsZTE6aSxlMjpzLG5vcm1hbDpsLHBsYW5lOmN9PUUuY3VycmVudCxbdSxkXT0obnVsbD09bj92b2lkIDA6bltyXSl8fFt2b2lkIDAsdm9pZCAwXTtZby5jb3B5KGUucmF5KSxZby5pbnRlcnNlY3RQbGFuZShjLEtvKSxZby5kaXJlY3Rpb24ubmVnYXRlKCksWW8uaW50ZXJzZWN0UGxhbmUoYyxLbyk7bGV0IG09KChlLHQscixuLGEpPT57V28uY29weShlKS5zdWIociksR28uY29weSh0KS5zdWIocik7Y29uc3Qgbz1uLmRvdChuKSxpPWEuZG90KGEpLHM9V28uZG90KG4pL28sbD1Xby5kb3QoYSkvaSxjPUdvLmRvdChuKS9vLHU9R28uZG90KGEpL2ksZD1NYXRoLmF0YW4yKGwscyk7cmV0dXJuIE1hdGguYXRhbjIodSxjKS1kfSkodCxLbyxhLGkscyksZj1IbyhtKTtlLnNoaWZ0S2V5JiYoZj0xMCpNYXRoLnJvdW5kKGYvMTApLG09KGU9PmUqTWF0aC5QSS8xODApKGYpKSx2b2lkIDAhPT11JiZ2b2lkIDAhPT1kJiZkLXU8MipNYXRoLlBJPyhtPSRvKG0pLG09bT5NYXRoLlBJP20tMipNYXRoLlBJOm0sbT1qLmRlZmF1bHQobSx1LXcuY3VycmVudCxkLXcuY3VycmVudCksYi5jdXJyZW50PXcuY3VycmVudCttKTooYi5jdXJyZW50PSRvKHcuY3VycmVudCttKSxiLmN1cnJlbnQ9Yi5jdXJyZW50Pk1hdGguUEk/Yi5jdXJyZW50LTIqTWF0aC5QSTpiLmN1cnJlbnQpLG8mJihmPUhvKGIuY3VycmVudCksZy5jdXJyZW50LmlubmVyVGV4dD1gJHtmLnRvRml4ZWQoMCl9wrpgKSxxby5tYWtlUm90YXRpb25BeGlzKGwsbSksWG8uY29weShhKS5hcHBseU1hdHJpeDQocW8pLnN1YihhKS5uZWdhdGUoKSxxby5zZXRQb3NpdGlvbihYbyksaChxbyl9fSksW28saCxNLG4scl0pLFQ9ay51c2VDYWxsYmFjaygoZT0+e28mJihnLmN1cnJlbnQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIiksZS5zdG9wUHJvcGFnYXRpb24oKSx3LmN1cnJlbnQ9Yi5jdXJyZW50LEUuY3VycmVudD1udWxsLHkoKSx2JiYodi5lbmFibGVkPSEwKSxlLnRhcmdldC5yZWxlYXNlUG9pbnRlckNhcHR1cmUoZS5wb2ludGVySWQpfSksW28sdix5XSksUj1rLnVzZUNhbGxiYWNrKChlPT57ZS5zdG9wUHJvcGFnYXRpb24oKSxTKCExKX0pLFtdKSxGPWsudXNlTWVtbygoKCk9Pntjb25zdCByPWUuY2xvbmUoKS5ub3JtYWxpemUoKSxuPXQuY2xvbmUoKS5ub3JtYWxpemUoKTtyZXR1cm4obmV3IEQuTWF0cml4NCkubWFrZUJhc2lzKHIsbixyLmNsb25lKCkuY3Jvc3MobikpfSksW2UsdF0pLEw9dT8uNjU6LjY1KmwsQT1rLnVzZU1lbW8oKCgpPT57Y29uc3QgZT1bXTtmb3IobGV0IHQ9MDt0PD0zMjt0Kyspe2NvbnN0IHI9dCooTWF0aC5QSS8yKS8zMjtlLnB1c2gobmV3IEQuVmVjdG9yMyhNYXRoLmNvcyhyKSpMLE1hdGguc2luKHIpKkwsMCkpfXJldHVybiBlfSksW0xdKTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7cmVmOnosb25Qb2ludGVyRG93bjpDLG9uUG9pbnRlck1vdmU6UCxvblBvaW50ZXJVcDpULG9uUG9pbnRlck91dDpSLG1hdHJpeDpGLG1hdHJpeEF1dG9VcGRhdGU6ITF9LG8mJmsuY3JlYXRlRWxlbWVudChRLHtwb3NpdGlvbjpbTCxMLDBdfSxrLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7c3R5bGU6e2Rpc3BsYXk6XCJub25lXCIsYmFja2dyb3VuZDpcIiMxNTE1MjBcIixjb2xvcjpcIndoaXRlXCIscGFkZGluZzpcIjZweCA4cHhcIixib3JkZXJSYWRpdXM6Nyx3aGl0ZVNwYWNlOlwibm93cmFwXCJ9LGNsYXNzTmFtZTppLHJlZjpnfSkpLGsuY3JlYXRlRWxlbWVudChkZSx7cG9pbnRzOkEsbGluZVdpZHRoOjQqYyx2aXNpYmxlOiExLHVzZXJEYXRhOnh9KSxrLmNyZWF0ZUVsZW1lbnQoZGUse3RyYW5zcGFyZW50OiEwLHJheWNhc3Q6KCk9Pm51bGwsZGVwdGhUZXN0OnMscG9pbnRzOkEsbGluZVdpZHRoOmMsY29sb3I6TT9tOmRbcl0sb3BhY2l0eTpmLHBvbHlnb25PZmZzZXQ6ITAscG9seWdvbk9mZnNldEZhY3RvcjotMTAsZm9nOiExfSkpfSxabz1uZXcgRC5WZWN0b3IzLEpvPW5ldyBELlZlY3RvcjMsZWk9bmV3IEQuVmVjdG9yMyx0aT0oZSx0LHIsbj0xKT0+e2NvbnN0IGE9Wm8uc2V0KGUueC9yLndpZHRoKjItMSwtZS55L3IuaGVpZ2h0KjIrMSxuKTtyZXR1cm4gYS51bnByb2plY3QodCksYX0scmk9KGUsdCxyLG4pPT57Y29uc3QgYT0oKGUsdCxyKT0+e2NvbnN0IG49ci53aWR0aC8yLGE9ci5oZWlnaHQvMjt0LnVwZGF0ZU1hdHJpeFdvcmxkKCExKTtjb25zdCBvPWUucHJvamVjdCh0KTtyZXR1cm4gby54PW8ueCpuK24sby55PS1vLnkqYSthLG99KShlaS5jb3B5KGUpLHIsbik7bGV0IG89MDtmb3IobGV0IGk9MDtpPDI7KytpKXtjb25zdCBzPUpvLmNvcHkoYSkuc2V0Q29tcG9uZW50KGksYS5nZXRDb21wb25lbnQoaSkrdCksbD10aShzLHIsbixzLnopO289TWF0aC5tYXgobyxlLmRpc3RhbmNlVG8obCkpfXJldHVybiBvfSxuaT1uZXcgRC5NYXRyaXg0LGFpPW5ldyBELk1hdHJpeDQsb2k9bmV3IEQuTWF0cml4NCxpaT1uZXcgRC5NYXRyaXg0LHNpPW5ldyBELk1hdHJpeDQsbGk9bmV3IEQuTWF0cml4NCxjaT1uZXcgRC5NYXRyaXg0LHVpPW5ldyBELk1hdHJpeDQsZGk9bmV3IEQuQm94MyxtaT1uZXcgRC5Cb3gzLGZpPW5ldyBELlZlY3RvcjMscGk9bmV3IEQuVmVjdG9yMyxoaT1uZXcgRC5WZWN0b3IzLHlpPW5ldyBELlZlY3RvcjMseGk9bmV3IEQuVmVjdG9yMygxLDAsMCksdmk9bmV3IEQuVmVjdG9yMygwLDEsMCksZ2k9bmV3IEQuVmVjdG9yMygwLDAsMSksemk9ay5mb3J3YXJkUmVmKCgoe21hdHJpeDplLG9uRHJhZ1N0YXJ0OnQsb25EcmFnOnIsb25EcmFnRW5kOm4sYXV0b1RyYW5zZm9ybTpvPSEwLGFuY2hvcjppLGRpc2FibGVBeGVzOnM9ITEsZGlzYWJsZVNsaWRlcnM6bD0hMSxkaXNhYmxlUm90YXRpb25zOmM9ITEsYWN0aXZlQXhlczp1PVshMCwhMCwhMF0sb2Zmc2V0OmQ9WzAsMCwwXSxyb3RhdGlvbjptPVswLDAsMF0sc2NhbGU6Zj0xLGxpbmVXaWR0aDpwPTQsZml4ZWQ6aD0hMSx0cmFuc2xhdGlvbkxpbWl0czp5LHJvdGF0aW9uTGltaXRzOngsZGVwdGhUZXN0OnY9ITAsYXhpc0NvbG9yczpnPVtcIiNmZjIwNjBcIixcIiMyMGRmODBcIixcIiMyMDgwZmZcIl0saG92ZXJlZENvbG9yOno9XCIjZmZmZjQwXCIsYW5ub3RhdGlvbnM6dz0hMSxhbm5vdGF0aW9uc0NsYXNzOmIsb3BhY2l0eTpFPTEsdmlzaWJsZTpNPSEwLHVzZXJEYXRhOlMsY2hpbGRyZW46QywuLi5QfSxUKT0+e2NvbnN0IEY9YS51c2VUaHJlZSgoZT0+ZS5pbnZhbGlkYXRlKSksTD1rLnVzZVJlZihudWxsKSxBPWsudXNlUmVmKG51bGwpLF89ay51c2VSZWYobnVsbCksTz1rLnVzZVJlZihudWxsKSxOPWsudXNlUmVmKFswLDAsMF0pO2sudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2kmJihPLmN1cnJlbnQudXBkYXRlV29ybGRNYXRyaXgoITAsITApLGlpLmNvcHkoTy5jdXJyZW50Lm1hdHJpeFdvcmxkKS5pbnZlcnQoKSxkaS5tYWtlRW1wdHkoKSxPLmN1cnJlbnQudHJhdmVyc2UoKGU9PntlLmdlb21ldHJ5JiYoZS5nZW9tZXRyeS5ib3VuZGluZ0JveHx8ZS5nZW9tZXRyeS5jb21wdXRlQm91bmRpbmdCb3goKSxsaS5jb3B5KGUubWF0cml4V29ybGQpLnByZW11bHRpcGx5KGlpKSxtaS5jb3B5KGUuZ2VvbWV0cnkuYm91bmRpbmdCb3gpLG1pLmFwcGx5TWF0cml4NChsaSksZGkudW5pb24obWkpKX0pKSxmaS5jb3B5KGRpLm1heCkuYWRkKGRpLm1pbikubXVsdGlwbHlTY2FsYXIoLjUpLHBpLmNvcHkoZGkubWF4KS5zdWIoZGkubWluKS5tdWx0aXBseVNjYWxhciguNSksaGkuY29weShwaSkubXVsdGlwbHkobmV3IEQuVmVjdG9yMyguLi5pKSkuYWRkKGZpKSx5aS5zZXQoLi4uZCkuYWRkKGhpKSxfLmN1cnJlbnQucG9zaXRpb24uY29weSh5aSksRigpKX0pKTtjb25zdCBCPWsudXNlTWVtbygoKCk9Pih7b25EcmFnU3RhcnQ6ZT0+e25pLmNvcHkoQS5jdXJyZW50Lm1hdHJpeCksYWkuY29weShBLmN1cnJlbnQubWF0cml4V29ybGQpLHQmJnQoZSksRigpfSxvbkRyYWc6ZT0+e29pLmNvcHkoTC5jdXJyZW50Lm1hdHJpeFdvcmxkKSxpaS5jb3B5KG9pKS5pbnZlcnQoKSxzaS5jb3B5KGFpKS5wcmVtdWx0aXBseShlKSxsaS5jb3B5KHNpKS5wcmVtdWx0aXBseShpaSksY2kuY29weShuaSkuaW52ZXJ0KCksdWkuY29weShsaSkubXVsdGlwbHkoY2kpLG8mJkEuY3VycmVudC5tYXRyaXguY29weShsaSksciYmcihsaSx1aSxzaSxlKSxGKCl9LG9uRHJhZ0VuZDooKT0+e24mJm4oKSxGKCl9LHRyYW5zbGF0aW9uOk4sdHJhbnNsYXRpb25MaW1pdHM6eSxyb3RhdGlvbkxpbWl0czp4LGF4aXNDb2xvcnM6Zyxob3ZlcmVkQ29sb3I6eixvcGFjaXR5OkUsc2NhbGU6ZixsaW5lV2lkdGg6cCxmaXhlZDpoLGRlcHRoVGVzdDp2LHVzZXJEYXRhOlMsYW5ub3RhdGlvbnM6dyxhbm5vdGF0aW9uc0NsYXNzOmJ9KSksW3QscixuLE4seSx4LHYsZixwLGgsLi4uZyx6LEUsUyxvLHcsYl0pLEk9bmV3IEQuVmVjdG9yMztyZXR1cm4gYS51c2VGcmFtZSgoZT0+e2lmKGgpe2NvbnN0IGE9cmkoXy5jdXJyZW50LmdldFdvcmxkUG9zaXRpb24oSSksZixlLmNhbWVyYSxlLnNpemUpO3ZhciB0LHIsbjtpZihfLmN1cnJlbnQpKG51bGw9PSh0PV8uY3VycmVudCk/dm9pZCAwOnQuc2NhbGUueCk9PT1hJiYobnVsbD09KHI9Xy5jdXJyZW50KT92b2lkIDA6ci5zY2FsZS55KT09PWEmJihudWxsPT0obj1fLmN1cnJlbnQpP3ZvaWQgMDpuLnNjYWxlLnopPT09YXx8KF8uY3VycmVudC5zY2FsZS5zZXRTY2FsYXIoYSksZS5pbnZhbGlkYXRlKCkpfX0pKSxrLnVzZUltcGVyYXRpdmVIYW5kbGUoVCwoKCk9PkEuY3VycmVudCksW10pLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2UmJmUgaW5zdGFuY2VvZiBELk1hdHJpeDQmJihBLmN1cnJlbnQubWF0cml4PWUpfSksW2VdKSxrLmNyZWF0ZUVsZW1lbnQoTG8uUHJvdmlkZXIse3ZhbHVlOkJ9LGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpMfSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLFIuZGVmYXVsdCh7cmVmOkEsbWF0cml4OmUsbWF0cml4QXV0b1VwZGF0ZTohMX0sUCksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIix7dmlzaWJsZTpNLHJlZjpfLHBvc2l0aW9uOmQscm90YXRpb246bX0sIXMmJnVbMF0mJmsuY3JlYXRlRWxlbWVudChCbyx7YXhpczowLGRpcmVjdGlvbjp4aX0pLCFzJiZ1WzFdJiZrLmNyZWF0ZUVsZW1lbnQoQm8se2F4aXM6MSxkaXJlY3Rpb246dml9KSwhcyYmdVsyXSYmay5jcmVhdGVFbGVtZW50KEJvLHtheGlzOjIsZGlyZWN0aW9uOmdpfSksIWwmJnVbMF0mJnVbMV0mJmsuY3JlYXRlRWxlbWVudChqbyx7YXhpczoyLGRpcjE6eGksZGlyMjp2aX0pLCFsJiZ1WzBdJiZ1WzJdJiZrLmNyZWF0ZUVsZW1lbnQoam8se2F4aXM6MSxkaXIxOmdpLGRpcjI6eGl9KSwhbCYmdVsyXSYmdVsxXSYmay5jcmVhdGVFbGVtZW50KGpvLHtheGlzOjAsZGlyMTp2aSxkaXIyOmdpfSksIWMmJnVbMF0mJnVbMV0mJmsuY3JlYXRlRWxlbWVudChRbyx7YXhpczoyLGRpcjE6eGksZGlyMjp2aX0pLCFjJiZ1WzBdJiZ1WzJdJiZrLmNyZWF0ZUVsZW1lbnQoUW8se2F4aXM6MSxkaXIxOmdpLGRpcjI6eGl9KSwhYyYmdVsyXSYmdVsxXSYmay5jcmVhdGVFbGVtZW50KFFvLHtheGlzOjAsZGlyMTp2aSxkaXIyOmdpfSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjpPfSxDKSkpKX0pKTtleHBvcnRzLkFjY3VtdWxhdGl2ZVNoYWRvd3M9SW4sZXhwb3J0cy5BZGFwdGl2ZURwcj1mdW5jdGlvbih7cGl4ZWxhdGVkOmV9KXtjb25zdCB0PWEudXNlVGhyZWUoKGU9PmUuZ2wpKSxyPWEudXNlVGhyZWUoKGU9PmUuaW50ZXJuYWwuYWN0aXZlKSksbj1hLnVzZVRocmVlKChlPT5lLnBlcmZvcm1hbmNlLmN1cnJlbnQpKSxvPWEudXNlVGhyZWUoKGU9PmUudmlld3BvcnQuaW5pdGlhbERwcikpLGk9YS51c2VUaHJlZSgoZT0+ZS5zZXREcHIpKTtyZXR1cm4gay51c2VFZmZlY3QoKCgpPT57Y29uc3Qgbj10LmRvbUVsZW1lbnQ7cmV0dXJuKCk9PntyJiZpKG8pLGUmJm4mJihuLnN0eWxlLmltYWdlUmVuZGVyaW5nPVwiYXV0b1wiKX19KSxbXSksay51c2VFZmZlY3QoKCgpPT57aShuKm8pLGUmJnQuZG9tRWxlbWVudCYmKHQuZG9tRWxlbWVudC5zdHlsZS5pbWFnZVJlbmRlcmluZz0xPT09bj9cImF1dG9cIjpcInBpeGVsYXRlZFwiKX0pLFtuXSksbnVsbH0sZXhwb3J0cy5BZGFwdGl2ZUV2ZW50cz1mdW5jdGlvbigpe2NvbnN0IGU9YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSx0PWEudXNlVGhyZWUoKGU9PmUuc2V0RXZlbnRzKSkscj1hLnVzZVRocmVlKChlPT5lLnBlcmZvcm1hbmNlLmN1cnJlbnQpKTtyZXR1cm4gay51c2VFZmZlY3QoKCgpPT57Y29uc3Qgcj1lKCkuZXZlbnRzLmVuYWJsZWQ7cmV0dXJuKCk9PnQoe2VuYWJsZWQ6cn0pfSksW10pLGsudXNlRWZmZWN0KCgoKT0+dCh7ZW5hYmxlZDoxPT09cn0pKSxbcl0pLG51bGx9LGV4cG9ydHMuQXJjYmFsbENvbnRyb2xzPWN0LGV4cG9ydHMuQXNjaWlSZW5kZXJlcj1mdW5jdGlvbih7cmVuZGVySW5kZXg6ZT0xLGJnQ29sb3I6dD1cImJsYWNrXCIsZmdDb2xvcjpyPVwid2hpdGVcIixjaGFyYWN0ZXJzOm49XCIgLjotKyo9JUAjXCIsaW52ZXJ0Om89ITAsY29sb3I6aT0hMSxyZXNvbHV0aW9uOnM9LjE1fSl7Y29uc3R7c2l6ZTpsLGdsOmMsc2NlbmU6dSxjYW1lcmE6bX09YS51c2VUaHJlZSgpLGY9ay51c2VNZW1vKCgoKT0+e2NvbnN0IGU9bmV3IGQuQXNjaWlFZmZlY3QoYyxuLHtpbnZlcnQ6byxjb2xvcjppLHJlc29sdXRpb246c30pO3JldHVybiBlLmRvbUVsZW1lbnQuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiLGUuZG9tRWxlbWVudC5zdHlsZS50b3A9XCIwcHhcIixlLmRvbUVsZW1lbnQuc3R5bGUubGVmdD1cIjBweFwiLGUuZG9tRWxlbWVudC5zdHlsZS5wb2ludGVyRXZlbnRzPVwibm9uZVwiLGV9KSxbbixvLGksc10pO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PntmLmRvbUVsZW1lbnQuc3R5bGUuY29sb3I9cixmLmRvbUVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZENvbG9yPXR9KSxbcix0XSksay51c2VFZmZlY3QoKCgpPT4oYy5kb21FbGVtZW50LnN0eWxlLm9wYWNpdHk9XCIwXCIsYy5kb21FbGVtZW50LnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoZi5kb21FbGVtZW50KSwoKT0+e2MuZG9tRWxlbWVudC5zdHlsZS5vcGFjaXR5PVwiMVwiLGMuZG9tRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGYuZG9tRWxlbWVudCl9KSksW2ZdKSxrLnVzZUVmZmVjdCgoKCk9PntmLnNldFNpemUobC53aWR0aCxsLmhlaWdodCl9KSxbZixsXSksYS51c2VGcmFtZSgoZT0+e2YucmVuZGVyKHUsbSl9KSxlKSxrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsKX0sZXhwb3J0cy5CQkFuY2hvcj0oe2FuY2hvcjplLC4uLnR9KT0+e2NvbnN0IHI9ay51c2VSZWYobnVsbCksbj1rLnVzZVJlZihudWxsKTtyZXR1cm4gay51c2VFZmZlY3QoKCgpPT57dmFyIGU7bnVsbCE9KGU9ci5jdXJyZW50KSYmbnVsbCE9KGU9ZS5wYXJlbnQpJiZlLnBhcmVudCYmKG4uY3VycmVudD1yLmN1cnJlbnQucGFyZW50LHIuY3VycmVudC5wYXJlbnQucGFyZW50LmFkZChyLmN1cnJlbnQpKX0pLFtdKSxhLnVzZUZyYW1lKCgoKT0+e24uY3VycmVudCYmKEVyLnNldEZyb21PYmplY3Qobi5jdXJyZW50KSxFci5nZXRTaXplKE1yKSxyLmN1cnJlbnQucG9zaXRpb24uc2V0KG4uY3VycmVudC5wb3NpdGlvbi54K01yLngqKEFycmF5LmlzQXJyYXkoZSk/ZVswXTplLngpLzIsbi5jdXJyZW50LnBvc2l0aW9uLnkrTXIueSooQXJyYXkuaXNBcnJheShlKT9lWzFdOmUueSkvMixuLmN1cnJlbnQucG9zaXRpb24ueitNci56KihBcnJheS5pc0FycmF5KGUpP2VbMl06ZS56KS8yKSl9KSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjpyfSx0KSl9LGV4cG9ydHMuQmFja2Ryb3A9ZnVuY3Rpb24oe2NoaWxkcmVuOmUsZmxvb3I6dD0uMjUsc2VnbWVudHM6cj0yMCxyZWNlaXZlU2hhZG93Om4sLi4uYX0pe2NvbnN0IG89ay51c2VSZWYobnVsbCk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2xldCBlPTA7Y29uc3Qgbj1yL3IvMixhPW8uY3VycmVudC5hdHRyaWJ1dGVzLnBvc2l0aW9uO2ZvcihsZXQgbz0wO288cisxO28rKylmb3IobGV0IGk9MDtpPHIrMTtpKyspYS5zZXRYWVooZSsrLG8vci1uKygwPT09bz8tdDowKSxpL3ItbixHbihvL3IpKTthLm5lZWRzVXBkYXRlPSEwLG8uY3VycmVudC5jb21wdXRlVmVydGV4Tm9ybWFscygpfSksW3IsdF0pLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsYSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoXCIse3JlY2VpdmVTaGFkb3c6bixyb3RhdGlvbjpbLU1hdGguUEkvMiwwLE1hdGguUEkvMl19LGsuY3JlYXRlRWxlbWVudChcInBsYW5lR2VvbWV0cnlcIix7cmVmOm8sYXJnczpbMSwxLHIscl19KSxlKSl9LGV4cG9ydHMuQmFrZVNoYWRvd3M9ZnVuY3Rpb24oKXtjb25zdCBlPWEudXNlVGhyZWUoKGU9PmUuZ2wpKTtyZXR1cm4gdC51c2VFZmZlY3QoKCgpPT4oZS5zaGFkb3dNYXAuYXV0b1VwZGF0ZT0hMSxlLnNoYWRvd01hcC5uZWVkc1VwZGF0ZT0hMCwoKT0+e2Uuc2hhZG93TWFwLmF1dG9VcGRhdGU9ZS5zaGFkb3dNYXAubmVlZHNVcGRhdGU9ITB9KSksW2Uuc2hhZG93TWFwXSksbnVsbH0sZXhwb3J0cy5CaWxsYm9hcmQ9Y2UsZXhwb3J0cy5Cb3VuZHM9d24sZXhwb3J0cy5Cb3g9cXIsZXhwb3J0cy5Cdmg9eHIsZXhwb3J0cy5DYW1lcmFDb250cm9scz1mdCxleHBvcnRzLkNhbWVyYVNoYWtlPUVuLGV4cG9ydHMuQ2Fwc3VsZT1kbixleHBvcnRzLkNhdG11bGxSb21MaW5lPWhlLGV4cG9ydHMuQ2F1c3RpY3M9UW4sZXhwb3J0cy5DZW50ZXI9UHIsZXhwb3J0cy5DaXJjbGU9WHIsZXhwb3J0cy5DbG9uZT1WZSxleHBvcnRzLkNsb3VkPWJhLGV4cG9ydHMuQ2xvdWRJbnN0YW5jZT13YSxleHBvcnRzLkNsb3Vkcz16YSxleHBvcnRzLkNvbXB1dGVkQXR0cmlidXRlPSh7Y29tcHV0ZTplLG5hbWU6dCwuLi5yfSk9Pntjb25zdFthXT1rLnVzZVN0YXRlKCgoKT0+bmV3IG4uQnVmZmVyQXR0cmlidXRlKG5ldyBGbG9hdDMyQXJyYXkoMCksMSkpKSxvPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9PntpZihvLmN1cnJlbnQpe3ZhciB0O2NvbnN0IHI9bnVsbCE9PSh0PW8uY3VycmVudC5wYXJlbnQpJiZ2b2lkIDAhPT10P3Q6by5jdXJyZW50Ll9fcjNmLnBhcmVudCxuPWUocik7by5jdXJyZW50LmNvcHkobil9fSksW2VdKSxrLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIixSLmRlZmF1bHQoe3JlZjpvLG9iamVjdDphLGF0dGFjaDpgYXR0cmlidXRlcy0ke3R9YH0scikpfSxleHBvcnRzLkNvbmU9WXIsZXhwb3J0cy5Db250YWN0U2hhZG93cz1PbixleHBvcnRzLkN1YmVDYW1lcmE9ZnVuY3Rpb24oe2NoaWxkcmVuOmUsZnJhbWVzOnQ9MS8wLHJlc29sdXRpb246cixuZWFyOm4sZmFyOm8sZW52TWFwOmksZm9nOnMsLi4ubH0pe2NvbnN0IGM9ay51c2VSZWYobnVsbCkse2Zibzp1LGNhbWVyYTpkLHVwZGF0ZTptfT1udCh7cmVzb2x1dGlvbjpyLG5lYXI6bixmYXI6byxlbnZNYXA6aSxmb2c6c30pO2xldCBmPTA7cmV0dXJuIGEudXNlRnJhbWUoKCgpPT57Yy5jdXJyZW50JiYodD09PTEvMHx8Zjx0KSYmKGMuY3VycmVudC52aXNpYmxlPSExLG0oKSxjLmN1cnJlbnQudmlzaWJsZT0hMCxmKyspfSkpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsbCxrLmNyZWF0ZUVsZW1lbnQoXCJwcmltaXRpdmVcIix7b2JqZWN0OmR9KSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtyZWY6Y30sZSh1LnRleHR1cmUpKSl9LGV4cG9ydHMuQ3ViaWNCZXppZXJMaW5lPXBlLGV4cG9ydHMuQ3VydmVNb2RpZmllcj1ScixleHBvcnRzLkN5Y2xlUmF5Y2FzdD1mdW5jdGlvbih7b25DaGFuZ2VkOmUscG9ydGFsOnQscHJldmVudERlZmF1bHQ6cj0hMCxzY3JvbGw6bj0hMCxrZXlDb2RlOm89OX0pe2NvbnN0IGk9ay51c2VSZWYoMCkscz1hLnVzZVRocmVlKChlPT5lLnNldEV2ZW50cykpLGw9YS51c2VUaHJlZSgoZT0+ZS5nZXQpKSxjPWEudXNlVGhyZWUoKGU9PmUuZ2wpKTtyZXR1cm4gay51c2VFZmZlY3QoKCgpPT57dmFyIGE7bGV0IHUsZD1bXTtjb25zdCBtPWwoKS5ldmVudHMuZmlsdGVyLGY9bnVsbCE9PShhPW51bGw9PXQ/dm9pZCAwOnQuY3VycmVudCkmJnZvaWQgMCE9PWE/YTpjLmRvbUVsZW1lbnQucGFyZW50Tm9kZSxwPSgpPT5mJiZlJiZlKGQsTWF0aC5yb3VuZChpLmN1cnJlbnQpJWQubGVuZ3RoKTtzKHtmaWx0ZXI6KGUsdCk9PntsZXQgcj1bLi4uZV07ci5sZW5ndGg9PT1kLmxlbmd0aCYmZC5ldmVyeSgoZT0+ci5tYXAoKGU9PmUub2JqZWN0LnV1aWQpKS5pbmNsdWRlcyhlLm9iamVjdC51dWlkKSkpfHwoaS5jdXJyZW50PTAsZD1yLHAoKSksbSYmKHI9bShyLHQpKTtmb3IobGV0IGU9MDtlPE1hdGgucm91bmQoaS5jdXJyZW50KSVyLmxlbmd0aDtlKyspe2NvbnN0IGU9ci5zaGlmdCgpO3I9Wy4uLnIsZV19cmV0dXJuIHJ9fSk7Y29uc3QgaD1lPT57dmFyIHQscjtpLmN1cnJlbnQ9ZShpLmN1cnJlbnQpLG51bGw9PSh0PWwoKS5ldmVudHMuaGFuZGxlcnMpfHx0Lm9uUG9pbnRlckNhbmNlbCh2b2lkIDApLG51bGw9PShyPWwoKS5ldmVudHMuaGFuZGxlcnMpfHxyLm9uUG9pbnRlck1vdmUodSkscCgpfSx5PWU9PnsoZS5rZXlDb2RlfHxlLndoaWNoPT09bykmJihyJiZlLnByZXZlbnREZWZhdWx0KCksZC5sZW5ndGg+MSYmaCgoZT0+ZSsxKSkpfSx4PWU9PntyJiZlLnByZXZlbnREZWZhdWx0KCk7bGV0IHQ9MDtlfHwoZT13aW5kb3cuZXZlbnQpLGUud2hlZWxEZWx0YT90PWUud2hlZWxEZWx0YS8xMjA6ZS5kZXRhaWwmJih0PS1lLmRldGFpbC8zKSxkLmxlbmd0aD4xJiZoKChlPT5NYXRoLmFicyhlLXQpKSl9LHY9ZT0+dT1lO3JldHVybiBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcm1vdmVcIix2LHtwYXNzaXZlOiEwfSksbiYmZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIndoZWVsXCIseCksdm9pZCAwIT09byYmZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIix5KSwoKT0+e3Moe2ZpbHRlcjptfSksdm9pZCAwIT09byYmZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIix5KSxuJiZkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwid2hlZWxcIix4KSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcm1vdmVcIix2KX19KSxbYyxsLHMscixuLG9dKSxudWxsfSxleHBvcnRzLkN5bGluZGVyPUtyLGV4cG9ydHMuRGVjYWw9cWUsZXhwb3J0cy5EZXRhaWxlZD14byxleHBvcnRzLkRldmljZU9yaWVudGF0aW9uQ29udHJvbHM9YXQsZXhwb3J0cy5Eb2RlY2FoZWRyb249bG4sZXhwb3J0cy5FZGdlcz1BZSxleHBvcnRzLkVmZmVjdHM9RWUsZXhwb3J0cy5FbnZpcm9ubWVudD1fbixleHBvcnRzLkVudmlyb25tZW50Q3ViZT1EbixleHBvcnRzLkVudmlyb25tZW50TWFwPUZuLGV4cG9ydHMuRW52aXJvbm1lbnRQb3J0YWw9TG4sZXhwb3J0cy5FeGFtcGxlPVRyLGV4cG9ydHMuRXh0cnVkZT1jbixleHBvcnRzLkZhY2VDb250cm9scz1QdCxleHBvcnRzLkZhY2VMYW5kbWFya2VyPWZ1bmN0aW9uKHtiYXNlUGF0aDplPWJ0LmJhc2VQYXRoLG9wdGlvbnM6cj1idC5vcHRpb25zLGNoaWxkcmVuOm59KXtjb25zdCBhPUpTT04uc3RyaW5naWZ5KHIpLG89cC5zdXNwZW5kKChhc3luYygpPT5hd2FpdCBnLkZpbGVzZXRSZXNvbHZlci5mb3JWaXNpb25UYXNrcyhlKS50aGVuKChlPT5nLkZhY2VMYW5kbWFya2VyLmNyZWF0ZUZyb21PcHRpb25zKGUscikpKSksW2UsYV0pO3JldHVybiB0LnVzZUVmZmVjdCgoKCk9PigpPT57bnVsbD09b3x8by5jbG9zZSgpLHAuY2xlYXIoW2UsYV0pfSksW28sZSxhXSksay5jcmVhdGVFbGVtZW50KHd0LlByb3ZpZGVyLHt2YWx1ZTpvfSxuKX0sZXhwb3J0cy5GYWNlTGFuZG1hcmtlckRlZmF1bHRzPWJ0LGV4cG9ydHMuRmFjZW1lc2g9eHQsZXhwb3J0cy5GYWNlbWVzaERhdGFzPXp0LGV4cG9ydHMuRmFjZW1lc2hFeWU9Z3QsZXhwb3J0cy5GYWNlbWVzaEV5ZURlZmF1bHRzPXZ0LGV4cG9ydHMuRmlyc3RQZXJzb25Db250cm9scz1tdCxleHBvcnRzLkZsb2F0PU1uLGV4cG9ydHMuRmx5Q29udHJvbHM9b3QsZXhwb3J0cy5HaXptb0hlbHBlcj0oe2FsaWdubWVudDplPVwiYm90dG9tLXJpZ2h0XCIsbWFyZ2luOnQ9WzgwLDgwXSxyZW5kZXJQcmlvcml0eTpyPTEsb25VcGRhdGU6byxvblRhcmdldDppLGNoaWxkcmVuOnN9KT0+e2NvbnN0IGw9YS51c2VUaHJlZSgoZT0+ZS5zaXplKSksYz1hLnVzZVRocmVlKChlPT5lLmNhbWVyYSkpLHU9YS51c2VUaHJlZSgoZT0+ZS5jb250cm9scykpLGQ9YS51c2VUaHJlZSgoZT0+ZS5pbnZhbGlkYXRlKSksbT1rLnVzZVJlZihudWxsKSxmPWsudXNlUmVmKG51bGwpLHA9ay51c2VSZWYoITEpLGg9ay51c2VSZWYoMCkseT1rLnVzZVJlZihuZXcgbi5WZWN0b3IzKDAsMCwwKSkseD1rLnVzZVJlZihuZXcgbi5WZWN0b3IzKDAsMCwwKSk7ay51c2VFZmZlY3QoKCgpPT57eC5jdXJyZW50LmNvcHkoYy51cCl9KSxbY10pO2NvbnN0IHY9ay51c2VDYWxsYmFjaygoZT0+e3AuY3VycmVudD0hMCwodXx8aSkmJih5LmN1cnJlbnQ9KG51bGw9PXU/dm9pZCAwOnUudGFyZ2V0KXx8KG51bGw9PWk/dm9pZCAwOmkoKSkpLGguY3VycmVudD1jLnBvc2l0aW9uLmRpc3RhbmNlVG8oSHQpLFd0LmNvcHkoYy5xdWF0ZXJuaW9uKSwkdC5jb3B5KGUpLm11bHRpcGx5U2NhbGFyKGguY3VycmVudCkuYWRkKEh0KSxWdC5sb29rQXQoJHQpLFZ0LnVwLmNvcHkoYy51cCksR3QuY29weShWdC5xdWF0ZXJuaW9uKSxkKCl9KSxbdSxjLGksZF0pO2EudXNlRnJhbWUoKChlLHQpPT57aWYoZi5jdXJyZW50JiZtLmN1cnJlbnQpe3ZhciByO2lmKHAuY3VycmVudClpZihXdC5hbmdsZVRvKEd0KTwuMDEpcC5jdXJyZW50PSExLFwibWluUG9sYXJBbmdsZVwiaW4gdSYmYy51cC5jb3B5KHguY3VycmVudCk7ZWxzZXtjb25zdCBlPXQqVXQ7V3Qucm90YXRlVG93YXJkcyhHdCxlKSxjLnBvc2l0aW9uLnNldCgwLDAsMSkuYXBwbHlRdWF0ZXJuaW9uKFd0KS5tdWx0aXBseVNjYWxhcihoLmN1cnJlbnQpLmFkZCh5LmN1cnJlbnQpLGMudXAuc2V0KDAsMSwwKS5hcHBseVF1YXRlcm5pb24oV3QpLm5vcm1hbGl6ZSgpLGMucXVhdGVybmlvbi5jb3B5KFd0KSxvP28oKTp1JiZ1LnVwZGF0ZSgpLGQoKX1qdC5jb3B5KGMubWF0cml4KS5pbnZlcnQoKSxudWxsPT0ocj1tLmN1cnJlbnQpfHxyLnF1YXRlcm5pb24uc2V0RnJvbVJvdGF0aW9uTWF0cml4KGp0KX19KSk7Y29uc3QgZz1rLnVzZU1lbW8oKCgpPT4oe3R3ZWVuQ2FtZXJhOnZ9KSksW3ZdKSxbeix3XT10LGI9ZS5lbmRzV2l0aChcIi1jZW50ZXJcIik/MDplLmVuZHNXaXRoKFwiLWxlZnRcIik/LWwud2lkdGgvMit6Omwud2lkdGgvMi16LEU9ZS5zdGFydHNXaXRoKFwiY2VudGVyLVwiKT8wOmUuc3RhcnRzV2l0aChcInRvcC1cIik/bC5oZWlnaHQvMi13Oi1sLmhlaWdodC8yK3c7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChOdCx7cmVuZGVyUHJpb3JpdHk6cn0say5jcmVhdGVFbGVtZW50KEJ0LlByb3ZpZGVyLHt2YWx1ZTpnfSxrLmNyZWF0ZUVsZW1lbnQodHQse21ha2VEZWZhdWx0OiEwLHJlZjpmLHBvc2l0aW9uOlswLDAsMjAwXX0pLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIse3JlZjptLHBvc2l0aW9uOltiLEUsMF19LHMpKSl9LGV4cG9ydHMuR2l6bW9WaWV3Y3ViZT1lPT5rLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtzY2FsZTpbNjAsNjAsNjBdfSxrLmNyZWF0ZUVsZW1lbnQoYXIsZSksdHIubWFwKCgodCxyKT0+ay5jcmVhdGVFbGVtZW50KG9yLFIuZGVmYXVsdCh7a2V5OnIscG9zaXRpb246dCxkaW1lbnNpb25zOnJyW3JdfSxlKSkpKSxKdC5tYXAoKCh0LHIpPT5rLmNyZWF0ZUVsZW1lbnQob3IsUi5kZWZhdWx0KHtrZXk6cixwb3NpdGlvbjp0LGRpbWVuc2lvbnM6ZXJ9LGUpKSkpKSxleHBvcnRzLkdpem1vVmlld3BvcnQ9KHtoaWRlTmVnYXRpdmVBeGVzOmUsaGlkZUF4aXNIZWFkczp0LGRpc2FibGVkOnIsZm9udDpuPVwiMThweCBJbnRlciB2YXIsIEFyaWFsLCBzYW5zLXNlcmlmXCIsYXhpc0NvbG9yczphPVtcIiNmZjIwNjBcIixcIiMyMGRmODBcIixcIiMyMDgwZmZcIl0sYXhpc0hlYWRTY2FsZTpvPTEsYXhpc1NjYWxlOmksbGFiZWxzOnM9W1wiWFwiLFwiWVwiLFwiWlwiXSxsYWJlbENvbG9yOmw9XCIjMDAwXCIsb25DbGljazpjLC4uLnV9KT0+e2NvbnN0W2QsbSxmXT1hLHt0d2VlbkNhbWVyYTpwfT1JdCgpLGg9e2ZvbnQ6bixkaXNhYmxlZDpyLGxhYmVsQ29sb3I6bCxvbkNsaWNrOmMsYXhpc0hlYWRTY2FsZTpvLG9uUG9pbnRlckRvd246cj92b2lkIDA6ZT0+e3AoZS5vYmplY3QucG9zaXRpb24pLGUuc3RvcFByb3BhZ2F0aW9uKCl9fTtyZXR1cm4gay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3NjYWxlOjQwfSx1KSxrLmNyZWF0ZUVsZW1lbnQoaXIse2NvbG9yOmQscm90YXRpb246WzAsMCwwXSxzY2FsZTppfSksay5jcmVhdGVFbGVtZW50KGlyLHtjb2xvcjptLHJvdGF0aW9uOlswLDAsTWF0aC5QSS8yXSxzY2FsZTppfSksay5jcmVhdGVFbGVtZW50KGlyLHtjb2xvcjpmLHJvdGF0aW9uOlswLC1NYXRoLlBJLzIsMF0sc2NhbGU6aX0pLCF0JiZrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLGsuY3JlYXRlRWxlbWVudChzcixSLmRlZmF1bHQoe2FyY1N0eWxlOmQscG9zaXRpb246WzEsMCwwXSxsYWJlbDpzWzBdfSxoKSksay5jcmVhdGVFbGVtZW50KHNyLFIuZGVmYXVsdCh7YXJjU3R5bGU6bSxwb3NpdGlvbjpbMCwxLDBdLGxhYmVsOnNbMV19LGgpKSxrLmNyZWF0ZUVsZW1lbnQoc3IsUi5kZWZhdWx0KHthcmNTdHlsZTpmLHBvc2l0aW9uOlswLDAsMV0sbGFiZWw6c1syXX0saCkpLCFlJiZrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLGsuY3JlYXRlRWxlbWVudChzcixSLmRlZmF1bHQoe2FyY1N0eWxlOmQscG9zaXRpb246Wy0xLDAsMF19LGgpKSxrLmNyZWF0ZUVsZW1lbnQoc3IsUi5kZWZhdWx0KHthcmNTdHlsZTptLHBvc2l0aW9uOlswLC0xLDBdfSxoKSksay5jcmVhdGVFbGVtZW50KHNyLFIuZGVmYXVsdCh7YXJjU3R5bGU6Zixwb3NpdGlvbjpbMCwwLC0xXX0saCkpKSkpfSxleHBvcnRzLkdsdGY9SmUsZXhwb3J0cy5HcmFkaWVudFRleHR1cmU9ZnVuY3Rpb24oe3N0b3BzOmUsY29sb3JzOnQsc2l6ZTpyPTEwMjQsd2lkdGg6bj0xNix0eXBlOm89TWUuTGluZWFyLGlubmVyQ2lyY2xlUmFkaXVzOmk9MCxvdXRlckNpcmNsZVJhZGl1czpzPVwiYXV0b1wiLC4uLmx9KXtjb25zdCBjPWEudXNlVGhyZWUoKGU9PmUuZ2wpKSx1PWsudXNlTWVtbygoKCk9Pntjb25zdCBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIiksbD1hLmdldENvbnRleHQoXCIyZFwiKTtsZXQgYztpZihhLndpZHRoPW4sYS5oZWlnaHQ9cixvPT09TWUuTGluZWFyKWM9bC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLDAsMCxyKTtlbHNle2NvbnN0IGU9YS53aWR0aC8yLHQ9YS5oZWlnaHQvMixyPVwiYXV0b1wiIT09cz9NYXRoLmFicyhOdW1iZXIocykpOk1hdGguc3FydChlKioyK3QqKjIpO2M9bC5jcmVhdGVSYWRpYWxHcmFkaWVudChlLHQsTWF0aC5hYnMoaSksZSx0LHIpfWxldCB1PWUubGVuZ3RoO2Zvcig7dS0tOyljLmFkZENvbG9yU3RvcChlW3VdLHRbdV0pO3JldHVybiBsLnNhdmUoKSxsLmZpbGxTdHlsZT1jLGwuZmlsbFJlY3QoMCwwLG4sciksbC5yZXN0b3JlKCksYX0pLFtlXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChcImNhbnZhc1RleHR1cmVcIixSLmRlZmF1bHQoe2NvbG9yU3BhY2U6Yy5vdXRwdXRDb2xvclNwYWNlLGFyZ3M6W3VdLGF0dGFjaDpcIm1hcFwifSxsKSl9LGV4cG9ydHMuR3JhZGllbnRUeXBlPU1lLGV4cG9ydHMuR3JpZD1jcixleHBvcnRzLkh0bWw9USxleHBvcnRzLkh1ZD1OdCxleHBvcnRzLkljb3NhaGVkcm9uPW9uLGV4cG9ydHMuSW1hZ2U9TGUsZXhwb3J0cy5JbnN0YW5jZT1sbyxleHBvcnRzLkluc3RhbmNlcz1jbyxleHBvcnRzLklzT2JqZWN0PUNlLGV4cG9ydHMuS2V5Ym9hcmRDb250cm9scz1mdW5jdGlvbih7bWFwOmUsY2hpbGRyZW46dCxvbkNoYW5nZTpyLGRvbUVsZW1lbnQ6bn0pe2NvbnN0IGE9ZS5tYXAoKGU9PmUubmFtZStlLmtleXMpKS5qb2luKFwiLVwiKSxvPWsudXNlTWVtbygoKCk9PkwuZGVmYXVsdCh1LnN1YnNjcmliZVdpdGhTZWxlY3RvcigoKCk9PmUucmVkdWNlKCgoZSx0KT0+KHsuLi5lLFt0Lm5hbWVdOiExfSkpLHt9KSkpKSksW2FdKSxpPWsudXNlTWVtbygoKCk9PltvLnN1YnNjcmliZSxvLmdldFN0YXRlLG9dKSxbYV0pLHM9by5zZXRTdGF0ZTtyZXR1cm4gay51c2VFZmZlY3QoKCgpPT57Y29uc3QgdD1lLm1hcCgoKHtuYW1lOmUsa2V5czp0LHVwOm59KT0+KHtrZXlzOnQsdXA6bixmbjp0PT57cyh7W2VdOnR9KSxyJiZyKGUsdCxpWzFdKCkpfX0pKSkucmVkdWNlKCgoZSx7a2V5czp0LGZuOnIsdXA6bj0hMH0pPT4odC5mb3JFYWNoKCh0PT5lW3RdPXtmbjpyLHByZXNzZWQ6ITEsdXA6bn0pKSxlKSkse30pLGE9KHtrZXk6ZSxjb2RlOnJ9KT0+e2NvbnN0IG49dFtlXXx8dFtyXTtpZighbilyZXR1cm47Y29uc3R7Zm46YSxwcmVzc2VkOm8sdXA6aX09bjtuLnByZXNzZWQ9ITAsIWkmJm98fGEoITApfSxvPSh7a2V5OmUsY29kZTpyfSk9Pntjb25zdCBuPXRbZV18fHRbcl07aWYoIW4pcmV0dXJuO2NvbnN0e2ZuOmEsdXA6b309bjtuLnByZXNzZWQ9ITEsbyYmYSghMSl9LGw9bnx8d2luZG93O3JldHVybiBsLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsYSx7cGFzc2l2ZTohMH0pLGwuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsbyx7cGFzc2l2ZTohMH0pLCgpPT57bC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLGEpLGwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsbyl9fSksW24sYV0pLGsuY3JlYXRlRWxlbWVudChzZS5Qcm92aWRlcix7dmFsdWU6aSxjaGlsZHJlbjp0fSl9LGV4cG9ydHMuTGF0aGU9dW4sZXhwb3J0cy5MaWdodGZvcm1lcj1zYSxleHBvcnRzLkxpbmU9ZGUsZXhwb3J0cy5Mb2FkZXI9ZnVuY3Rpb24oe2NvbnRhaW5lclN0eWxlczplLGlubmVyU3R5bGVzOnQsYmFyU3R5bGVzOnIsZGF0YVN0eWxlczpuLGRhdGFJbnRlcnBvbGF0aW9uOmE9ZWUsaW5pdGlhbFN0YXRlOm89KGU9PmUpfSl7Y29uc3R7YWN0aXZlOmkscHJvZ3Jlc3M6c309SigpLGw9ay51c2VSZWYoMCksYz1rLnVzZVJlZigwKSx1PWsudXNlUmVmKG51bGwpLFtkLG1dPWsudXNlU3RhdGUobyhpKSk7ay51c2VFZmZlY3QoKCgpPT57bGV0IGU7cmV0dXJuIGkhPT1kJiYoZT1zZXRUaW1lb3V0KCgoKT0+bShpKSksMzAwKSksKCk9PmNsZWFyVGltZW91dChlKX0pLFtkLGldKTtjb25zdCBmPWsudXNlQ2FsbGJhY2soKCgpPT57dS5jdXJyZW50JiYobC5jdXJyZW50Kz0ocy1sLmN1cnJlbnQpLzIsKGwuY3VycmVudD4uOTUqc3x8MTAwPT09cykmJihsLmN1cnJlbnQ9cyksdS5jdXJyZW50LmlubmVyVGV4dD1hKGwuY3VycmVudCksbC5jdXJyZW50PHMmJihjLmN1cnJlbnQ9cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGYpKSl9KSxbYSxzXSk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+KGYoKSwoKT0+Y2FuY2VsQW5pbWF0aW9uRnJhbWUoYy5jdXJyZW50KSkpLFtmXSksZD9rLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7c3R5bGU6ey4uLnRlLmNvbnRhaW5lcixvcGFjaXR5Omk/MTowLC4uLmV9fSxrLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIixudWxsLGsuY3JlYXRlRWxlbWVudChcImRpdlwiLHtzdHlsZTp7Li4udGUuaW5uZXIsLi4udH19LGsuY3JlYXRlRWxlbWVudChcImRpdlwiLHtzdHlsZTp7Li4udGUuYmFyLHRyYW5zZm9ybTpgc2NhbGVYKCR7cy8xMDB9KWAsLi4ucn19KSxrLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIse3JlZjp1LHN0eWxlOnsuLi50ZS5kYXRhLC4uLm59fSkpKSk6bnVsbH0sZXhwb3J0cy5NYXBDb250cm9scz1pdCxleHBvcnRzLk1hcmNoaW5nQ3ViZT1HZSxleHBvcnRzLk1hcmNoaW5nQ3ViZXM9V2UsZXhwb3J0cy5NYXJjaGluZ1BsYW5lPUhlLGV4cG9ydHMuTWFzaz1TbyxleHBvcnRzLk1lcmdlZD11byxleHBvcnRzLk1lc2hEaXNjYXJkTWF0ZXJpYWw9VnIsZXhwb3J0cy5NZXNoRGlzdG9ydE1hdGVyaWFsPUZyLGV4cG9ydHMuTWVzaFBvcnRhbE1hdGVyaWFsPVBvLGV4cG9ydHMuTWVzaFJlZmxlY3Rvck1hdGVyaWFsPU9yLGV4cG9ydHMuTWVzaFJlZnJhY3Rpb25NYXRlcmlhbD1mdW5jdGlvbih7YWJlcnJhdGlvblN0cmVuZ3RoOmU9MCxmYXN0Q2hyb21hOnI9ITAsZW52TWFwOm4sLi4ub30pe2EuZXh0ZW5kKHtNZXNoUmVmcmFjdGlvbk1hdGVyaWFsOk5yfSk7Y29uc3QgaT10LnVzZVJlZigpLHtzaXplOnN9PWEudXNlVGhyZWUoKSxsPXQudXNlTWVtbygoKCk9Pnt2YXIgdCxhO2NvbnN0IG89e30saT0ocz1uKSYmcy5pc0N1YmVUZXh0dXJlO3ZhciBzO2NvbnN0IGw9KG51bGwhPT0odD1pP251bGw9PShhPW4uaW1hZ2VbMF0pP3ZvaWQgMDphLndpZHRoOm4uaW1hZ2Uud2lkdGgpJiZ2b2lkIDAhPT10P3Q6MTAyNCkvNCxjPU1hdGguZmxvb3IoTWF0aC5sb2cyKGwpKSx1PU1hdGgucG93KDIsYyksZD0zKk1hdGgubWF4KHUsMTEyKSxtPTQqdTtyZXR1cm4gaSYmKG8uRU5WTUFQX1RZUEVfQ1VCRU09XCJcIiksby5DVUJFVVZfVEVYRUxfV0lEVEg9XCJcIisxL2Qsby5DVUJFVVZfVEVYRUxfSEVJR0hUPVwiXCIrMS9tLG8uQ1VCRVVWX01BWF9NSVA9YCR7Y30uMGAsZT4wJiYoby5DSFJPTUFUSUNfQUJFUlJBVElPTlM9XCJcIiksciYmKG8uRkFTVF9DSFJPTUE9XCJcIiksb30pLFtlLHJdKTtyZXR1cm4gdC51c2VMYXlvdXRFZmZlY3QoKCgpPT57dmFyIGU7Y29uc3QgdD1udWxsPT0oZT1pLmN1cnJlbnQpfHxudWxsPT0oZT1lLl9fcjNmKXx8bnVsbD09KGU9ZS5wYXJlbnQpP3ZvaWQgMDplLmdlb21ldHJ5O3QmJihpLmN1cnJlbnQuYnZoPW5ldyBFLk1lc2hCVkhVbmlmb3JtU3RydWN0LGkuY3VycmVudC5idmgudXBkYXRlRnJvbShuZXcgRS5NZXNoQlZIKHQuY2xvbmUoKS50b05vbkluZGV4ZWQoKSx7bGF6eUdlbmVyYXRpb246ITEsc3RyYXRlZ3k6RS5TQUh9KSkpfSksW10pLGEudXNlRnJhbWUoKCh7Y2FtZXJhOmV9KT0+e2kuY3VycmVudC52aWV3TWF0cml4SW52ZXJzZT1lLm1hdHJpeFdvcmxkLGkuY3VycmVudC5wcm9qZWN0aW9uTWF0cml4SW52ZXJzZT1lLnByb2plY3Rpb25NYXRyaXhJbnZlcnNlfSkpLGsuY3JlYXRlRWxlbWVudChcIm1lc2hSZWZyYWN0aW9uTWF0ZXJpYWxcIixSLmRlZmF1bHQoe2tleTpKU09OLnN0cmluZ2lmeShsKSxkZWZpbmVzOmwscmVmOmkscmVzb2x1dGlvbjpbcy53aWR0aCxzLmhlaWdodF0sYWJlcnJhdGlvblN0cmVuZ3RoOmUsZW52TWFwOm59LG8pKX0sZXhwb3J0cy5NZXNoVHJhbnNtaXNzaW9uTWF0ZXJpYWw9VXIsZXhwb3J0cy5NZXNoV29iYmxlTWF0ZXJpYWw9THIsZXhwb3J0cy5Nb3Rpb25QYXRoQ29udHJvbHM9X3QsZXhwb3J0cy5PY3RhaGVkcm9uPXNuLGV4cG9ydHMuT3JiaXRDb250cm9scz1zdCxleHBvcnRzLk9ydGhvZ3JhcGhpY0NhbWVyYT10dCxleHBvcnRzLk91dGxpbmVzPWZ1bmN0aW9uKHtjb2xvcjplPVwiYmxhY2tcIixvcGFjaXR5OnQ9MSx0cmFuc3BhcmVudDpyPSExLHNjcmVlbnNwYWNlOm49ITEsdG9uZU1hcHBlZDpvPSEwLHBvbHlnb25PZmZzZXQ6aT0hMSxwb2x5Z29uT2Zmc2V0RmFjdG9yOnM9MCxyZW5kZXJPcmRlcjpsPTAsdGhpY2tuZXNzOmM9LjA1LGFuZ2xlOnU9TWF0aC5QSSwuLi5tfSl7dmFyIGY7Y29uc3QgcD1rLnVzZVJlZihudWxsKSxbaF09ay51c2VTdGF0ZSgoKCk9Pm5ldyBfZSh7c2lkZTpELkJhY2tTaWRlfSkpKSx7Z2w6eX09YS51c2VUaHJlZSgpLHg9eS5nZXREcmF3aW5nQnVmZmVyU2l6ZShuZXcgRC5WZWN0b3IyKTtyZXR1cm4gay51c2VNZW1vKCgoKT0+YS5leHRlbmQoe091dGxpbmVzTWF0ZXJpYWw6X2V9KSksW10pLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2NvbnN0IGU9cC5jdXJyZW50LHQ9ZS5wYXJlbnQ7aWYodCYmdC5nZW9tZXRyeSl7bGV0IHI7cmV0dXJuIHQuc2tlbGV0b24/KHI9bmV3IEQuU2tpbm5lZE1lc2gsci5tYXRlcmlhbD1oLHIuYmluZCh0LnNrZWxldG9uLHQuYmluZE1hdHJpeCksZS5hZGQocikpOnQuaXNJbnN0YW5jZWRNZXNoPyhyPW5ldyBELkluc3RhbmNlZE1lc2godC5nZW9tZXRyeSxoLHQuY291bnQpLHIuaW5zdGFuY2VNYXRyaXg9dC5pbnN0YW5jZU1hdHJpeCxlLmFkZChyKSk6KHI9bmV3IEQuTWVzaCxyLm1hdGVyaWFsPWgsZS5hZGQocikpLHIuZ2VvbWV0cnk9dT9kLnRvQ3JlYXNlZE5vcm1hbHModC5nZW9tZXRyeSx1KTp0Lmdlb21ldHJ5LCgpPT57dSYmci5nZW9tZXRyeS5kaXNwb3NlKCksZS5yZW1vdmUocil9fX0pLFt1LG51bGw9PShmPXAuY3VycmVudCl8fG51bGw9PShmPWYucGFyZW50KT92b2lkIDA6Zi5nZW9tZXRyeV0pLGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2NvbnN0IHU9cC5jdXJyZW50LmNoaWxkcmVuWzBdO3UmJih1LnJlbmRlck9yZGVyPWwsYS5hcHBseVByb3BzKHUubWF0ZXJpYWwse3RyYW5zcGFyZW50OnIsdGhpY2tuZXNzOmMsY29sb3I6ZSxvcGFjaXR5OnQsc2l6ZTp4LHNjcmVlbnNwYWNlOm4sdG9uZU1hcHBlZDpvLHBvbHlnb25PZmZzZXQ6aSxwb2x5Z29uT2Zmc2V0RmFjdG9yOnN9KSl9KSxbdSxyLGMsZSx0LG4sbyxpLHMseCxsXSksay5jcmVhdGVFbGVtZW50KFwiZ3JvdXBcIixSLmRlZmF1bHQoe3JlZjpwfSxtKSl9LGV4cG9ydHMuUGVyZm9ybWFuY2VNb25pdG9yPWZ1bmN0aW9uKHtpdGVyYXRpb25zOmU9MTAsbXM6cj0yNTAsdGhyZXNob2xkOm49Ljc1LHN0ZXA6bz0uMSxmYWN0b3I6aT0uNSxmbGlwZmxvcHM6cz0xLzAsYm91bmRzOmw9KGU9PmU+MTAwP1s2MCwxMDBdOls0MCw2MF0pLG9uSW5jbGluZTpjLG9uRGVjbGluZTp1LG9uQ2hhbmdlOmQsb25GYWxsYmFjazptLGNoaWxkcmVuOmZ9KXtjb25zdCBwPU1hdGgucG93KDEwLDApLFtoLHldPXQudXNlU3RhdGUoKCgpPT4oe2ZwczowLGluZGV4OjAsZmFjdG9yOmksZmxpcHBlZDowLHJlZnJlc2hyYXRlOjAsZmFsbGJhY2s6ITEsZnJhbWVzOltdLGF2ZXJhZ2VzOltdLHN1YnNjcmlwdGlvbnM6bmV3IE1hcCxzdWJzY3JpYmU6ZT0+e2NvbnN0IHQ9U3ltYm9sKCk7cmV0dXJuIGguc3Vic2NyaXB0aW9ucy5zZXQodCxlLmN1cnJlbnQpLCgpPT57aC5zdWJzY3JpcHRpb25zLmRlbGV0ZSh0KX19fSkpKTtsZXQgeD0wO3JldHVybiBhLnVzZUZyYW1lKCgoKT0+e2NvbnN0e2ZyYW1lczp0LGF2ZXJhZ2VzOmF9PWg7aWYoIWguZmFsbGJhY2smJmEubGVuZ3RoPGUpe3QucHVzaChwZXJmb3JtYW5jZS5ub3coKSk7Y29uc3QgaT10W3QubGVuZ3RoLTFdLXRbMF07aWYoaT49cil7aWYoaC5mcHM9TWF0aC5yb3VuZCh0Lmxlbmd0aC9pKjFlMypwKS9wLGgucmVmcmVzaHJhdGU9TWF0aC5tYXgoaC5yZWZyZXNocmF0ZSxoLmZwcyksYVtoLmluZGV4KyslZV09aC5mcHMsYS5sZW5ndGg9PT1lKXtjb25zdFt0LHJdPWwoaC5yZWZyZXNocmF0ZSksaT1hLmZpbHRlcigoZT0+ZT49cikpLGY9YS5maWx0ZXIoKGU9PmU8dCkpO2kubGVuZ3RoPmUqbiYmKGguZmFjdG9yPU1hdGgubWluKDEsaC5mYWN0b3IrbyksaC5mbGlwcGVkKyssYyYmYyhoKSxoLnN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoZT0+ZS5vbkluY2xpbmUmJmUub25JbmNsaW5lKGgpKSkpLGYubGVuZ3RoPmUqbiYmKGguZmFjdG9yPU1hdGgubWF4KDAsaC5mYWN0b3ItbyksaC5mbGlwcGVkKyssdSYmdShoKSxoLnN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoZT0+ZS5vbkRlY2xpbmUmJmUub25EZWNsaW5lKGgpKSkpLHghPT1oLmZhY3RvciYmKHg9aC5mYWN0b3IsZCYmZChoKSxoLnN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoZT0+ZS5vbkNoYW5nZSYmZS5vbkNoYW5nZShoKSkpKSxoLmZsaXBwZWQ+cyYmIWguZmFsbGJhY2smJihoLmZhbGxiYWNrPSEwLG0mJm0oaCksaC5zdWJzY3JpcHRpb25zLmZvckVhY2goKGU9PmUub25GYWxsYmFjayYmZS5vbkZhbGxiYWNrKGgpKSkpLGguYXZlcmFnZXM9W119aC5mcmFtZXM9W119fX0pKSxrLmNyZWF0ZUVsZW1lbnQoYm8uUHJvdmlkZXIse3ZhbHVlOmh9LGYpfSxleHBvcnRzLlBlcnNwZWN0aXZlQ2FtZXJhPXJ0LGV4cG9ydHMuUGl2b3RDb250cm9scz16aSxleHBvcnRzLlBsYW5lPVpyLGV4cG9ydHMuUG9pbnQ9cWEsZXhwb3J0cy5Qb2ludE1hdGVyaWFsPUdyLGV4cG9ydHMuUG9pbnRNYXRlcmlhbEltcGw9V3IsZXhwb3J0cy5Qb2ludGVyTG9ja0NvbnRyb2xzPWR0LGV4cG9ydHMuUG9pbnRzPVlhLGV4cG9ydHMuUG9pbnRzQnVmZmVyPVhhLGV4cG9ydHMuUG9seWhlZHJvbj1hbixleHBvcnRzLlBvc2l0aW9uUG9pbnQ9VWEsZXhwb3J0cy5Qb3NpdGlvbmFsQXVkaW89eWUsZXhwb3J0cy5QcmVsb2FkPWZ1bmN0aW9uKHthbGw6ZSxzY2VuZTp0LGNhbWVyYTpyfSl7Y29uc3Qgbz1hLnVzZVRocmVlKCgoe2dsOmV9KT0+ZSkpLGk9YS51c2VUaHJlZSgoKHtjYW1lcmE6ZX0pPT5lKSkscz1hLnVzZVRocmVlKCgoe3NjZW5lOmV9KT0+ZSkpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9Pntjb25zdCBhPVtdO2UmJih0fHxzKS50cmF2ZXJzZSgoZT0+eyExPT09ZS52aXNpYmxlJiYoYS5wdXNoKGUpLGUudmlzaWJsZT0hMCl9KSksby5jb21waWxlKHR8fHMscnx8aSk7Y29uc3QgbD1uZXcgbi5XZWJHTEN1YmVSZW5kZXJUYXJnZXQoMTI4KTtuZXcgbi5DdWJlQ2FtZXJhKC4wMSwxZTUsbCkudXBkYXRlKG8sdHx8cyksbC5kaXNwb3NlKCksYS5mb3JFYWNoKChlPT5lLnZpc2libGU9ITEpKX0pLFtdKSxudWxsfSxleHBvcnRzLlByZXNlbnRhdGlvbkNvbnRyb2xzPWZ1bmN0aW9uKHtlbmFibGVkOmU9ITAsc25hcDp0LGdsb2JhbDpyLGRvbUVsZW1lbnQ6byxjdXJzb3I6aT0hMCxjaGlsZHJlbjpzLHNwZWVkOnU9MSxyb3RhdGlvbjpkPVswLDAsMF0sem9vbTptPTEscG9sYXI6Zj1bMCxNYXRoLlBJLzJdLGF6aW11dGg6cD1bLTEvMCwxLzBdLGNvbmZpZzpoPXttYXNzOjEsdGVuc2lvbjoxNzAsZnJpY3Rpb246MjZ9fSl7Y29uc3QgeT1hLnVzZVRocmVlKChlPT5lLmV2ZW50cykpLHg9YS51c2VUaHJlZSgoZT0+ZS5nbCkpLHY9b3x8eS5jb25uZWN0ZWR8fHguZG9tRWxlbWVudCx7c2l6ZTpnfT1hLnVzZVRocmVlKCksej1rLnVzZU1lbW8oKCgpPT5bZFswXStmWzBdLGRbMF0rZlsxXV0pLFtkWzBdLGZbMF0sZlsxXV0pLHc9ay51c2VNZW1vKCgoKT0+W2RbMV0rcFswXSxkWzFdK3BbMV1dKSxbZFsxXSxwWzBdLHBbMV1dKSxiPWsudXNlTWVtbygoKCk9PltuLk1hdGhVdGlscy5jbGFtcChkWzBdLC4uLnopLG4uTWF0aFV0aWxzLmNsYW1wKGRbMV0sLi4udyksZFsyXV0pLFtkWzBdLGRbMV0sZFsyXSx6LHddKSxbRSxNXT1sLnVzZVNwcmluZygoKCk9Pih7c2NhbGU6MSxyb3RhdGlvbjpiLGNvbmZpZzpofSkpKTtrLnVzZUVmZmVjdCgoKCk9PntNLnN0YXJ0KHtzY2FsZToxLHJvdGF0aW9uOmIsY29uZmlnOmh9KX0pLFtiXSksay51c2VFZmZlY3QoKCgpPT57aWYociYmaSYmZSlyZXR1cm4gdi5zdHlsZS5jdXJzb3I9XCJncmFiXCIseC5kb21FbGVtZW50LnN0eWxlLmN1cnNvcj1cIlwiLCgpPT57di5zdHlsZS5jdXJzb3I9XCJkZWZhdWx0XCIseC5kb21FbGVtZW50LnN0eWxlLmN1cnNvcj1cImRlZmF1bHRcIn19KSxbcixpLHYsZV0pO2NvbnN0IFM9Yy51c2VHZXN0dXJlKHtvbkhvdmVyOih7bGFzdDp0fSk9PntpJiYhciYmZSYmKHYuc3R5bGUuY3Vyc29yPXQ/XCJhdXRvXCI6XCJncmFiXCIpfSxvbkRyYWc6KHtkb3duOnIsZGVsdGE6W2Esb10sbWVtbzpbcyxsXT1FLnJvdGF0aW9uLmFuaW1hdGlvbi50b3x8Yn0pPT57aWYoIWUpcmV0dXJuW28sYV07aSYmKHYuc3R5bGUuY3Vyc29yPXI/XCJncmFiYmluZ1wiOlwiZ3JhYlwiKSxhPW4uTWF0aFV0aWxzLmNsYW1wKGwrYS9nLndpZHRoKk1hdGguUEkqdSwuLi53KSxvPW4uTWF0aFV0aWxzLmNsYW1wKHMrby9nLmhlaWdodCpNYXRoLlBJKnUsLi4ueik7Y29uc3QgYz10JiYhciYmXCJib29sZWFuXCIhPXR5cGVvZiB0P3Q6aDtyZXR1cm4gTS5zdGFydCh7c2NhbGU6ciYmbz56WzFdLzI/bToxLHJvdGF0aW9uOnQmJiFyP2I6W28sYSwwXSxjb25maWc6ZT0+XCJzY2FsZVwiPT09ZT97Li4uYyxmcmljdGlvbjozKmMuZnJpY3Rpb259OmN9KSxbbyxhXX19LHt0YXJnZXQ6cj92OnZvaWQgMH0pO3JldHVybiBrLmNyZWF0ZUVsZW1lbnQobC5hLmdyb3VwLFIuZGVmYXVsdCh7fSxudWxsPT1TP3ZvaWQgMDpTKCksRSkscyl9LGV4cG9ydHMuUXVhZHJhdGljQmV6aWVyTGluZT1mZSxleHBvcnRzLlJhbmRvbWl6ZWRMaWdodD1VbixleHBvcnRzLlJlZmxlY3Rvcj1abixleHBvcnRzLlJlbmRlclRleHR1cmU9RW8sZXhwb3J0cy5SZXNpemU9eG4sZXhwb3J0cy5SaW5nPW5uLGV4cG9ydHMuUm91bmRlZEJveD1wbixleHBvcnRzLlNhbXBsZXI9ZnVuY3Rpb24oe2NoaWxkcmVuOmUsd2VpZ2h0OnQsdHJhbnNmb3JtOnIsaW5zdGFuY2VzOm4sbWVzaDphLGNvdW50Om89MTYsLi4uaX0pe2NvbnN0IHM9ay51c2VSZWYobnVsbCksbD1rLnVzZVJlZihudWxsKSxjPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUxheW91dEVmZmVjdCgoKCk9Pnt2YXIgZSx0O2wuY3VycmVudD1udWxsIT09KGU9bnVsbD09bj92b2lkIDA6bi5jdXJyZW50KSYmdm9pZCAwIT09ZT9lOnMuY3VycmVudC5jaGlsZHJlbi5maW5kKChlPT5lLmhhc093blByb3BlcnR5KFwiaW5zdGFuY2VNYXRyaXhcIikpKSxjLmN1cnJlbnQ9bnVsbCE9PSh0PW51bGw9PWE/dm9pZCAwOmEuY3VycmVudCkmJnZvaWQgMCE9PXQ/dDpzLmN1cnJlbnQuY2hpbGRyZW4uZmluZCgoZT0+XCJNZXNoXCI9PT1lLnR5cGUpKX0pLFtlLG51bGw9PWE/dm9pZCAwOmEuY3VycmVudCxudWxsPT1uP3ZvaWQgMDpuLmN1cnJlbnRdKSxVZShjLG8scix0LGwpLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsUi5kZWZhdWx0KHtyZWY6c30saSksZSl9LGV4cG9ydHMuU2NyZWVuUXVhZD15bixleHBvcnRzLlNjcmVlblNwYWNlPXVlLGV4cG9ydHMuU2Nyb2xsPWllLGV4cG9ydHMuU2Nyb2xsQ29udHJvbHM9ZnVuY3Rpb24oe2VwczplPTFlLTUsZW5hYmxlZDp0PSEwLGluZmluaXRlOnIsaG9yaXpvbnRhbDpuLHBhZ2VzOm89MSxkaXN0YW5jZTppPTEsZGFtcGluZzpsPS4yNSxtYXhTcGVlZDpjPTEvMCxzdHlsZTp1PXt9LGNoaWxkcmVuOmR9KXtjb25zdHtnZXQ6bSxzZXRFdmVudHM6ZixnbDpwLHNpemU6aCxpbnZhbGlkYXRlOnksZXZlbnRzOnh9PWEudXNlVGhyZWUoKSxbdl09ay51c2VTdGF0ZSgoKCk9PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpKSxbZ109ay51c2VTdGF0ZSgoKCk9PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpKSxbel09ay51c2VTdGF0ZSgoKCk9PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikpKSx3PXAuZG9tRWxlbWVudC5wYXJlbnROb2RlLGI9ay51c2VSZWYoMCksRT1rLnVzZU1lbW8oKCgpPT57Y29uc3QgdD17ZWw6dixlcHM6ZSxmaWxsOmcsZml4ZWQ6eixob3Jpem9udGFsOm4sZGFtcGluZzpsLG9mZnNldDowLGRlbHRhOjAsc2Nyb2xsOmIscGFnZXM6byxyYW5nZShlLHQscj0wKXtjb25zdCBuPWUtcixhPW4rdCsyKnI7cmV0dXJuIHRoaXMub2Zmc2V0PG4/MDp0aGlzLm9mZnNldD5hPzE6KHRoaXMub2Zmc2V0LW4pLyhhLW4pfSxjdXJ2ZShlLHQscj0wKXtyZXR1cm4gTWF0aC5zaW4odGhpcy5yYW5nZShlLHQscikqTWF0aC5QSSl9LHZpc2libGUoZSx0LHI9MCl7Y29uc3Qgbj1lLXIsYT1uK3QrMipyO3JldHVybiB0aGlzLm9mZnNldD49biYmdGhpcy5vZmZzZXQ8PWF9fTtyZXR1cm4gdH0pLFtlLGwsbixvXSk7ay51c2VFZmZlY3QoKCgpPT57di5zdHlsZS5wb3NpdGlvbj1cImFic29sdXRlXCIsdi5zdHlsZS53aWR0aD1cIjEwMCVcIix2LnN0eWxlLmhlaWdodD1cIjEwMCVcIix2LnN0eWxlW24/XCJvdmVyZmxvd1hcIjpcIm92ZXJmbG93WVwiXT1cImF1dG9cIix2LnN0eWxlW24/XCJvdmVyZmxvd1lcIjpcIm92ZXJmbG93WFwiXT1cImhpZGRlblwiLHYuc3R5bGUudG9wPVwiMHB4XCIsdi5zdHlsZS5sZWZ0PVwiMHB4XCI7Zm9yKGNvbnN0IGUgaW4gdSl2LnN0eWxlW2VdPXVbZV07ei5zdHlsZS5wb3NpdGlvbj1cInN0aWNreVwiLHouc3R5bGUudG9wPVwiMHB4XCIsei5zdHlsZS5sZWZ0PVwiMHB4XCIsei5zdHlsZS53aWR0aD1cIjEwMCVcIix6LnN0eWxlLmhlaWdodD1cIjEwMCVcIix6LnN0eWxlLm92ZXJmbG93PVwiaGlkZGVuXCIsdi5hcHBlbmRDaGlsZCh6KSxnLnN0eWxlLmhlaWdodD1uP1wiMTAwJVwiOm8qaSoxMDArXCIlXCIsZy5zdHlsZS53aWR0aD1uP28qaSoxMDArXCIlXCI6XCIxMDAlXCIsZy5zdHlsZS5wb2ludGVyRXZlbnRzPVwibm9uZVwiLHYuYXBwZW5kQ2hpbGQoZyksdy5hcHBlbmRDaGlsZCh2KSx2W24/XCJzY3JvbGxMZWZ0XCI6XCJzY3JvbGxUb3BcIl09MTtjb25zdCBlPXguY29ubmVjdGVkfHxwLmRvbUVsZW1lbnQ7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgoKT0+bnVsbD09eC5jb25uZWN0P3ZvaWQgMDp4LmNvbm5lY3QodikpKTtjb25zdCB0PW0oKS5ldmVudHMuY29tcHV0ZTtyZXR1cm4gZih7Y29tcHV0ZShlLHQpe2NvbnN0e2xlZnQ6cix0b3A6bn09dy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxhPWUuY2xpZW50WC1yLG89ZS5jbGllbnRZLW47dC5wb2ludGVyLnNldChhL3Quc2l6ZS53aWR0aCoyLTEsLW8vdC5zaXplLmhlaWdodCoyKzEpLHQucmF5Y2FzdGVyLnNldEZyb21DYW1lcmEodC5wb2ludGVyLHQuY2FtZXJhKX19KSwoKT0+e3cucmVtb3ZlQ2hpbGQodiksZih7Y29tcHV0ZTp0fSksbnVsbD09eC5jb25uZWN0fHx4LmNvbm5lY3QoZSl9fSksW28saSxuLHYsZyx6LHddKSxrLnVzZUVmZmVjdCgoKCk9PntpZih4LmNvbm5lY3RlZD09PXYpe2NvbnN0IGU9aFtuP1wid2lkdGhcIjpcImhlaWdodFwiXSxhPXZbbj9cInNjcm9sbFdpZHRoXCI6XCJzY3JvbGxIZWlnaHRcIl0sbz1hLWU7bGV0IGk9MCxzPSEwLGw9ITA7Y29uc3QgYz0oKT0+e2lmKHQmJiFsJiYoeSgpLGk9dltuP1wic2Nyb2xsTGVmdFwiOlwic2Nyb2xsVG9wXCJdLGIuY3VycmVudD1pL28scikpe2lmKCFzKWlmKGk+PW8pe2NvbnN0IGU9MS1FLm9mZnNldDt2W24/XCJzY3JvbGxMZWZ0XCI6XCJzY3JvbGxUb3BcIl09MSxiLmN1cnJlbnQ9RS5vZmZzZXQ9LWUscz0hMH1lbHNlIGlmKGk8PTApe2NvbnN0IGU9MStFLm9mZnNldDt2W24/XCJzY3JvbGxMZWZ0XCI6XCJzY3JvbGxUb3BcIl09YSxiLmN1cnJlbnQ9RS5vZmZzZXQ9ZSxzPSEwfXMmJnNldFRpbWVvdXQoKCgpPT5zPSExKSw0MCl9fTt2LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixjLHtwYXNzaXZlOiEwfSkscmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgoKT0+bD0hMSkpO2NvbnN0IHU9ZT0+di5zY3JvbGxMZWZ0Kz1lLmRlbHRhWS8yO3JldHVybiBuJiZ2LmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLHUse3Bhc3NpdmU6ITB9KSwoKT0+e3YucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLGMpLG4mJnYucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIndoZWVsXCIsdSl9fX0pLFt2LHgsaCxyLEUseSxuLHRdKTtsZXQgTT0wO3JldHVybiBhLnVzZUZyYW1lKCgodCxyKT0+e009RS5vZmZzZXQscy5lYXNpbmcuZGFtcChFLFwib2Zmc2V0XCIsYi5jdXJyZW50LGwscixjLHZvaWQgMCxlKSxzLmVhc2luZy5kYW1wKEUsXCJkZWx0YVwiLE1hdGguYWJzKE0tRS5vZmZzZXQpLGwscixjLHZvaWQgMCxlKSxFLmRlbHRhPmUmJnkoKX0pKSxrLmNyZWF0ZUVsZW1lbnQocmUuUHJvdmlkZXIse3ZhbHVlOkV9LGQpfSxleHBvcnRzLlNlZ21lbnQ9eW8sZXhwb3J0cy5TZWdtZW50T2JqZWN0PXBvLGV4cG9ydHMuU2VnbWVudHM9Zm8sZXhwb3J0cy5TZWxlY3Q9ZnVuY3Rpb24oe2JveDplLG11bHRpcGxlOnQsY2hpbGRyZW46cixvbkNoYW5nZTpuLG9uQ2hhbmdlUG9pbnRlclVwOm8sYm9yZGVyOmk9XCIxcHggc29saWQgIzU1YWFmZlwiLGJhY2tncm91bmRDb2xvcjpzPVwicmdiYSg3NSwgMTYwLCAyNTUsIDAuMSlcIixmaWx0ZXI6bD0oZT0+ZSksLi4uY30pe2NvbnN0W3UsbV09ay51c2VTdGF0ZSghMSkse3NldEV2ZW50czpmLGNhbWVyYTpwLHJheWNhc3RlcjpoLGdsOnksY29udHJvbHM6eCxzaXplOnYsZ2V0Omd9PWEudXNlVGhyZWUoKSxbeix3XT1rLnVzZVN0YXRlKCExKSxbYixFXT1rLnVzZVJlZHVjZXIoKChlLHtvYmplY3Q6dCxzaGlmdDpyfSk9PnZvaWQgMD09PXQ/W106QXJyYXkuaXNBcnJheSh0KT90OnI/ZS5pbmNsdWRlcyh0KT9lLmZpbHRlcigoZT0+ZSE9PXQpKTpbdCwuLi5lXTplWzBdPT09dD9bXTpbdF0pLFtdKTtrLnVzZUVmZmVjdCgoKCk9Pnt1P251bGw9PW58fG4oYik6bnVsbD09b3x8byhiKX0pLFtiLHVdKTtjb25zdCBNPWsudXNlQ2FsbGJhY2soKGU9PntlLnN0b3BQcm9wYWdhdGlvbigpLEUoe29iamVjdDpsKFtlLm9iamVjdF0pWzBdLHNoaWZ0OnQmJmUuc2hpZnRLZXl9KX0pLFtdKSxTPWsudXNlQ2FsbGJhY2soKGU9PiF6JiZFKHt9KSksW3pdKSxDPWsudXNlUmVmKG51bGwpO3JldHVybiBrLnVzZUVmZmVjdCgoKCk9PntpZighZXx8IXQpcmV0dXJuO2NvbnN0IHI9bmV3IGQuU2VsZWN0aW9uQm94KHAsQy5jdXJyZW50KSxuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bi5zdHlsZS5wb2ludGVyRXZlbnRzPVwibm9uZVwiLG4uc3R5bGUuYm9yZGVyPWksbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I9cyxuLnN0eWxlLnBvc2l0aW9uPVwiZml4ZWRcIjtjb25zdCBhPW5ldyBELlZlY3RvcjIsbz1uZXcgRC5WZWN0b3IyLGM9bmV3IEQuVmVjdG9yMix1PWcoKS5ldmVudHMuZW5hYmxlZCxoPW51bGw9PXg/dm9pZCAwOnguZW5hYmxlZDtsZXQgej0hMTtmdW5jdGlvbiB3KGUsdCl7Y29uc3R7b2Zmc2V0WDpyLG9mZnNldFk6bn09ZSx7d2lkdGg6YSxoZWlnaHQ6b309djt0LnNldChyL2EqMi0xLC1uL28qMisxKX1mdW5jdGlvbiBiKGUpe2Uuc2hpZnRLZXkmJighZnVuY3Rpb24oZSl7dmFyIHQ7eCYmKHguZW5hYmxlZD0hMSksZih7ZW5hYmxlZDohMX0pLG0oej0hMCksbnVsbD09KHQ9eS5kb21FbGVtZW50LnBhcmVudEVsZW1lbnQpfHx0LmFwcGVuZENoaWxkKG4pLG4uc3R5bGUubGVmdD1gJHtlLmNsaWVudFh9cHhgLG4uc3R5bGUudG9wPWAke2UuY2xpZW50WX1weGAsbi5zdHlsZS53aWR0aD1cIjBweFwiLG4uc3R5bGUuaGVpZ2h0PVwiMHB4XCIsYS54PWUuY2xpZW50WCxhLnk9ZS5jbGllbnRZfShlKSx3KGUsci5zdGFydFBvaW50KSl9bGV0IE09W107ZnVuY3Rpb24gUyhlKXtpZih6KXshZnVuY3Rpb24oZSl7Yy54PU1hdGgubWF4KGEueCxlLmNsaWVudFgpLGMueT1NYXRoLm1heChhLnksZS5jbGllbnRZKSxvLng9TWF0aC5taW4oYS54LGUuY2xpZW50WCksby55PU1hdGgubWluKGEueSxlLmNsaWVudFkpLG4uc3R5bGUubGVmdD1gJHtvLnh9cHhgLG4uc3R5bGUudG9wPWAke28ueX1weGAsbi5zdHlsZS53aWR0aD1jLngtby54K1wicHhcIixuLnN0eWxlLmhlaWdodD1jLnktby55K1wicHhcIn0oZSksdyhlLHIuZW5kUG9pbnQpO2NvbnN0IHQ9ci5zZWxlY3QoKS5zb3J0KChlPT5lLnV1aWQpKS5maWx0ZXIoKGU9PmUuaXNNZXNoKSk7Xy5kZWZhdWx0KHQsTSl8fChNPXQsRSh7b2JqZWN0OmwodCl9KSl9fWZ1bmN0aW9uIFAoZSl7dmFyIHQ7eiYmeiYmKHgmJih4LmVuYWJsZWQ9aCksZih7ZW5hYmxlZDp1fSksbSh6PSExKSxudWxsPT0odD1uLnBhcmVudEVsZW1lbnQpfHx0LnJlbW92ZUNoaWxkKG4pKX1yZXR1cm4gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsYix7cGFzc2l2ZTohMH0pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVybW92ZVwiLFMse3Bhc3NpdmU6ITAsY2FwdHVyZTohMH0pLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIixQLHtwYXNzaXZlOiEwfSksKCk9Pntkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIixiKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcm1vdmVcIixTKSxkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsUCl9fSksW3Yud2lkdGgsdi5oZWlnaHQsaCxwLHgseV0pLGsuY3JlYXRlRWxlbWVudChcImdyb3VwXCIsUi5kZWZhdWx0KHtyZWY6QyxvbkNsaWNrOk0sb25Qb2ludGVyT3ZlcjooKT0+dyghMCksb25Qb2ludGVyT3V0OigpPT53KCExKSxvblBvaW50ZXJNaXNzZWQ6U30sYyksay5jcmVhdGVFbGVtZW50KGxlLlByb3ZpZGVyLHt2YWx1ZTpifSxyKSl9LGV4cG9ydHMuU2hhZG93PUhuLGV4cG9ydHMuU2hhcGU9bW4sZXhwb3J0cy5Ta3k9Y2EsZXhwb3J0cy5Tb2Z0U2hhZG93cz1mdW5jdGlvbih7Zm9jdXM6ZT0wLHNhbXBsZXM6dD0xMCxzaXplOnI9MjV9KXtjb25zdCBuPWEudXNlVGhyZWUoKGU9PmUuZ2wpKSxvPWEudXNlVGhyZWUoKGU9PmUuc2NlbmUpKSxpPWEudXNlVGhyZWUoKGU9PmUuY2FtZXJhKSk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+e2NvbnN0IGE9RC5TaGFkZXJDaHVuay5zaGFkb3dtYXBfcGFyc19mcmFnbWVudDtyZXR1cm4gRC5TaGFkZXJDaHVuay5zaGFkb3dtYXBfcGFyc19mcmFnbWVudD1ELlNoYWRlckNodW5rLnNoYWRvd21hcF9wYXJzX2ZyYWdtZW50LnJlcGxhY2UoXCIjaWZkZWYgVVNFX1NIQURPV01BUFwiLFwiI2lmZGVmIFVTRV9TSEFET1dNQVBcXG5cIisoKHtmb2N1czplPTAsc2l6ZTp0PTI1LHNhbXBsZXM6cj0xMH09e30pPT5gXFxuI2RlZmluZSBQRU5VTUJSQV9GSUxURVJfU0laRSBmbG9hdCgke3R9KVxcbiNkZWZpbmUgUkdCX05PSVNFX0ZVTkNUSU9OKHV2KSAocmFuZFJHQih1dikpXFxudmVjMyByYW5kUkdCKHZlYzIgdXYpIHtcXG4gIHJldHVybiB2ZWMzKFxcbiAgICBmcmFjdChzaW4oZG90KHV2LCB2ZWMyKDEyLjc1NjEzLCAzOC4xMjEyMykpKSAqIDEzMjM0Ljc2NTc1KSxcXG4gICAgZnJhY3Qoc2luKGRvdCh1diwgdmVjMigxOS40NTUzMSwgNTguNDY1NDcpKSkgKiA0MzY3OC4yMzQzMSksXFxuICAgIGZyYWN0KHNpbihkb3QodXYsIHZlYzIoMjMuNjc4MTcsIDc4LjIzMTIxKSkpICogOTM1NjcuMjM0MjMpXFxuICApO1xcbn1cXG5cXG52ZWMzIGxvd1Bhc3NSYW5kUkdCKHZlYzIgdXYpIHtcXG4gIC8vIDN4MyBjb252b2x1dGlvbiAoYXZlcmFnZSlcXG4gIC8vIGNhbiBiZSBpbXBsZW1lbnRlZCBhcyBzZXBhcmFibGUgd2l0aCBhbiBleHRyYSBidWZmZXIgZm9yIGEgdG90YWwgb2YgNiBzYW1wbGVzIGluc3RlYWQgb2YgOVxcbiAgdmVjMyByZXN1bHQgPSB2ZWMzKDApO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoLTEuMCwgLTEuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoLTEuMCwgIDAuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoLTEuMCwgKzEuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoIDAuMCwgLTEuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoIDAuMCwgIDAuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoIDAuMCwgKzEuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoKzEuMCwgLTEuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoKzEuMCwgIDAuMCkpO1xcbiAgcmVzdWx0ICs9IFJHQl9OT0lTRV9GVU5DVElPTih1diArIHZlYzIoKzEuMCwgKzEuMCkpO1xcbiAgcmVzdWx0ICo9IDAuMTExMTExMTExOyAvLyAxLjAgLyA5LjBcXG4gIHJldHVybiByZXN1bHQ7XFxufVxcbnZlYzMgaGlnaFBhc3NSYW5kUkdCKHZlYzIgdXYpIHtcXG4gIC8vIGJ5IHN1YnRyYWN0aW5nIHRoZSBsb3ctcGFzcyBzaWduYWwgZnJvbSB0aGUgb3JpZ2luYWwgc2lnbmFsLCB3ZSdyZSBiZWluZyBsZWZ0IHdpdGggdGhlIGhpZ2gtcGFzcyBzaWduYWxcXG4gIC8vIGhwKHgpID0geCAtIGxwKHgpXFxuICByZXR1cm4gUkdCX05PSVNFX0ZVTkNUSU9OKHV2KSAtIGxvd1Bhc3NSYW5kUkdCKHV2KSArIDAuNTtcXG59XFxuXFxuXFxudmVjMiB2b2dlbERpc2tTYW1wbGUoaW50IHNhbXBsZUluZGV4LCBpbnQgc2FtcGxlQ291bnQsIGZsb2F0IGFuZ2xlKSB7XFxuICBjb25zdCBmbG9hdCBnb2xkZW5BbmdsZSA9IDIuMzk5OTYzZjsgLy8gcmFkaWFuc1xcbiAgZmxvYXQgciA9IHNxcnQoZmxvYXQoc2FtcGxlSW5kZXgpICsgMC41ZikgLyBzcXJ0KGZsb2F0KHNhbXBsZUNvdW50KSk7XFxuICBmbG9hdCB0aGV0YSA9IGZsb2F0KHNhbXBsZUluZGV4KSAqIGdvbGRlbkFuZ2xlICsgYW5nbGU7XFxuICBmbG9hdCBzaW5lID0gc2luKHRoZXRhKTtcXG4gIGZsb2F0IGNvc2luZSA9IGNvcyh0aGV0YSk7XFxuICByZXR1cm4gdmVjMihjb3NpbmUsIHNpbmUpICogcjtcXG59XFxuZmxvYXQgcGVudW1icmFTaXplKCBjb25zdCBpbiBmbG9hdCB6UmVjZWl2ZXIsIGNvbnN0IGluIGZsb2F0IHpCbG9ja2VyICkgeyAvLyBQYXJhbGxlbCBwbGFuZSBlc3RpbWF0aW9uXFxuICByZXR1cm4gKHpSZWNlaXZlciAtIHpCbG9ja2VyKSAvIHpCbG9ja2VyO1xcbn1cXG5mbG9hdCBmaW5kQmxvY2tlcihzYW1wbGVyMkQgc2hhZG93TWFwLCB2ZWMyIHV2LCBmbG9hdCBjb21wYXJlLCBmbG9hdCBhbmdsZSkge1xcbiAgZmxvYXQgdGV4ZWxTaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoc2hhZG93TWFwLCAwKS54KTtcXG4gIGZsb2F0IGJsb2NrZXJEZXB0aFN1bSA9IGZsb2F0KCR7ZX0pO1xcbiAgZmxvYXQgYmxvY2tlcnMgPSAwLjA7XFxuXFxuICBpbnQgaiA9IDA7XFxuICB2ZWMyIG9mZnNldCA9IHZlYzIoMC4pO1xcbiAgZmxvYXQgZGVwdGggPSAwLjtcXG5cXG4gICNwcmFnbWEgdW5yb2xsX2xvb3Bfc3RhcnRcXG4gIGZvcihpbnQgaSA9IDA7IGkgPCAke3J9OyBpICsrKSB7XFxuICAgIG9mZnNldCA9ICh2b2dlbERpc2tTYW1wbGUoaiwgJHtyfSwgYW5nbGUpICogdGV4ZWxTaXplKSAqIDIuMCAqIFBFTlVNQlJBX0ZJTFRFUl9TSVpFO1xcbiAgICBkZXB0aCA9IHVucGFja1JHQkFUb0RlcHRoKCB0ZXh0dXJlMkQoIHNoYWRvd01hcCwgdXYgKyBvZmZzZXQpKTtcXG4gICAgaWYgKGRlcHRoIDwgY29tcGFyZSkge1xcbiAgICAgIGJsb2NrZXJEZXB0aFN1bSArPSBkZXB0aDtcXG4gICAgICBibG9ja2VycysrO1xcbiAgICB9XFxuICAgIGorKztcXG4gIH1cXG4gICNwcmFnbWEgdW5yb2xsX2xvb3BfZW5kXFxuXFxuICBpZiAoYmxvY2tlcnMgPiAwLjApIHtcXG4gICAgcmV0dXJuIGJsb2NrZXJEZXB0aFN1bSAvIGJsb2NrZXJzO1xcbiAgfVxcbiAgcmV0dXJuIC0xLjA7XFxufVxcblxcbiAgICAgICAgXFxuZmxvYXQgdm9nZWxGaWx0ZXIoc2FtcGxlcjJEIHNoYWRvd01hcCwgdmVjMiB1diwgZmxvYXQgelJlY2VpdmVyLCBmbG9hdCBmaWx0ZXJSYWRpdXMsIGZsb2F0IGFuZ2xlKSB7XFxuICBmbG9hdCB0ZXhlbFNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShzaGFkb3dNYXAsIDApLngpO1xcbiAgZmxvYXQgc2hhZG93ID0gMC4wZjtcXG4gIGludCBqID0gMDtcXG4gIHZlYzIgdm9nZWxTYW1wbGUgPSB2ZWMyKDAuMCk7XFxuICB2ZWMyIG9mZnNldCA9IHZlYzIoMC4wKTtcXG4gICNwcmFnbWEgdW5yb2xsX2xvb3Bfc3RhcnRcXG4gIGZvciAoaW50IGkgPSAwOyBpIDwgJHtyfTsgaSsrKSB7XFxuICAgIHZvZ2VsU2FtcGxlID0gdm9nZWxEaXNrU2FtcGxlKGosICR7cn0sIGFuZ2xlKSAqIHRleGVsU2l6ZTtcXG4gICAgb2Zmc2V0ID0gdm9nZWxTYW1wbGUgKiAoMS4wICsgZmlsdGVyUmFkaXVzICogZmxvYXQoJHt0fSkpO1xcbiAgICBzaGFkb3cgKz0gc3RlcCggelJlY2VpdmVyLCB1bnBhY2tSR0JBVG9EZXB0aCggdGV4dHVyZTJEKCBzaGFkb3dNYXAsIHV2ICsgb2Zmc2V0ICkgKSApO1xcbiAgICBqKys7XFxuICB9XFxuICAjcHJhZ21hIHVucm9sbF9sb29wX2VuZFxcbiAgcmV0dXJuIHNoYWRvdyAqIDEuMCAvICR7cn0uMDtcXG59XFxuXFxuZmxvYXQgUENTUyAoc2FtcGxlcjJEIHNoYWRvd01hcCwgdmVjNCBjb29yZHMpIHtcXG4gIHZlYzIgdXYgPSBjb29yZHMueHk7XFxuICBmbG9hdCB6UmVjZWl2ZXIgPSBjb29yZHMuejsgLy8gQXNzdW1lZCB0byBiZSBleWUtc3BhY2UgeiBpbiB0aGlzIGNvZGVcXG4gIGZsb2F0IGFuZ2xlID0gaGlnaFBhc3NSYW5kUkdCKGdsX0ZyYWdDb29yZC54eSkuciAqIFBJMjtcXG4gIGZsb2F0IGF2Z0Jsb2NrZXJEZXB0aCA9IGZpbmRCbG9ja2VyKHNoYWRvd01hcCwgdXYsIHpSZWNlaXZlciwgYW5nbGUpO1xcbiAgaWYgKGF2Z0Jsb2NrZXJEZXB0aCA9PSAtMS4wKSB7XFxuICAgIHJldHVybiAxLjA7XFxuICB9XFxuICBmbG9hdCBwZW51bWJyYVJhdGlvID0gcGVudW1icmFTaXplKHpSZWNlaXZlciwgYXZnQmxvY2tlckRlcHRoKTtcXG4gIHJldHVybiB2b2dlbEZpbHRlcihzaGFkb3dNYXAsIHV2LCB6UmVjZWl2ZXIsIDEuMjUgKiBwZW51bWJyYVJhdGlvLCBhbmdsZSk7XFxufWApKHtzaXplOnIsc2FtcGxlczp0LGZvY3VzOmV9KSkucmVwbGFjZShcIiNpZiBkZWZpbmVkKCBTSEFET1dNQVBfVFlQRV9QQ0YgKVwiLFwiXFxucmV0dXJuIFBDU1Moc2hhZG93TWFwLCBzaGFkb3dDb29yZCk7XFxuI2lmIGRlZmluZWQoIFNIQURPV01BUF9UWVBFX1BDRiApXCIpLEhyKG4sbyxpKSwoKT0+e0QuU2hhZGVyQ2h1bmsuc2hhZG93bWFwX3BhcnNfZnJhZ21lbnQ9YSxIcihuLG8saSl9fSksW2Uscix0XSksbnVsbH0sZXhwb3J0cy5TcGFya2xlcz1UYSxleHBvcnRzLlNwaGVyZT1RcixleHBvcnRzLlNwb3RMaWdodD1pYSxleHBvcnRzLlNwb3RMaWdodFNoYWRvdz1mdW5jdGlvbihlKXtyZXR1cm4gZS5zaGFkZXI/ay5jcmVhdGVFbGVtZW50KGFhLGUpOmsuY3JlYXRlRWxlbWVudChvYSxlKX0sZXhwb3J0cy5TcHJpdGVBbmltYXRvcj0oe3N0YXJ0RnJhbWU6ZSxlbmRGcmFtZTp0LGZwczpyLGZyYW1lTmFtZTpuLHRleHR1cmVEYXRhVVJMOm8sdGV4dHVyZUltYWdlVVJMOmksbG9vcDpzLG51bWJlck9mRnJhbWVzOmwsYXV0b1BsYXk6YyxhbmltYXRpb25OYW1lczp1LG9uU3RhcnQ6ZCxvbkVuZDptLG9uTG9vcEVuZDpmLG9uRnJhbWU6cCxwbGF5OmgscGF1c2U6eSxmbGlwWDp4LGFscGhhVGVzdDp2LGNoaWxkcmVuOmcsYXNTcHJpdGU6eiwuLi53fSxiKT0+e2EudXNlVGhyZWUoKGU9PmUudmlld3BvcnQpKTtjb25zdCBFPWsudXNlUmVmKG51bGwpLFtNLFNdPWsudXNlU3RhdGUoITEpLEM9ay51c2VSZWYoITEpLFA9ay51c2VSZWYoKSxUPWsudXNlUmVmKCksUj1rLnVzZVJlZih3aW5kb3cucGVyZm9ybWFuY2Uubm93KCkpLEY9ay51c2VSZWYoKSxMPWsudXNlUmVmKGV8fDApLEE9ay51c2VSZWYobnx8XCJcIiksXz0xZTMvKHJ8fDMwKSxbTyxOXT1rLnVzZVN0YXRlKG5ldyBELlRleHR1cmUpLEI9ay51c2VSZWYoMCksW0ksVV09ay51c2VTdGF0ZShbMSwxLDFdKSxWPXg/LTE6MSxbaixXXT1rLnVzZVN0YXRlKG51bGw9PXp8fHopO2NvbnN0IEc9KGUsdCk9Pntjb25zdCByPXQvZTtyZXR1cm4gVC5jdXJyZW50LnNjYWxlLnNldCgxLHIsMSksWzEsciwxXX07ay51c2VFZmZlY3QoKCgpPT57aWYobyYmaSkhZnVuY3Rpb24oZSx0LHIpe2NvbnN0IG49bmV3IEQuVGV4dHVyZUxvYWRlcixhPWZldGNoKGUpLnRoZW4oKGU9PmUuanNvbigpKSksbz1uZXcgUHJvbWlzZSgoZT0+e24ubG9hZCh0LGUpfSkpO1Byb21pc2UuYWxsKFthLG9dKS50aGVuKChlPT57cihlWzBdLGVbMV0pfSkpfShvLGksSCk7ZWxzZSBpZihpKXtjb25zdCBlPW5ldyBELlRleHR1cmVMb2FkZXI7bmV3IFByb21pc2UoKHQ9PntlLmxvYWQoaSx0KX0pKS50aGVuKChlPT57SChudWxsLGUpfSkpfX0pLFtdKSxrLnVzZUVmZmVjdCgoKCk9PntXKG51bGw9PXp8fHopfSksW3pdKSxrLnVzZUxheW91dEVmZmVjdCgoKCk9PntxKCl9KSxbTyx4XSksay51c2VFZmZlY3QoKCgpPT57fSksW3ldKSxrLnVzZUVmZmVjdCgoKCk9PntBLmN1cnJlbnQhPT1uJiZuJiYoTC5jdXJyZW50PTAsQS5jdXJyZW50PW4sQy5jdXJyZW50PSExKX0pLFtuXSk7Y29uc3QgSD0oZSx0KT0+e2lmKG51bGw9PT1lKXtpZih0JiZsKXtjb25zdCBlPXQuaW1hZ2Uud2lkdGgscj10LmltYWdlLmhlaWdodCxuPWUvbCxhPXI7aWYoRi5jdXJyZW50PXQsQi5jdXJyZW50PWwsRS5jdXJyZW50PXtmcmFtZXM6W10sbWV0YTp7dmVyc2lvbjpcIjEuMFwiLHNpemU6e3c6ZSxoOnJ9LHNjYWxlOlwiMVwifX0scGFyc2VJbnQobi50b1N0cmluZygpLDEwKT09PW4pZm9yKGxldCBlPTA7ZTxsO2UrKylFLmN1cnJlbnQuZnJhbWVzLnB1c2goe2ZyYW1lOnt4OmUqbix5OjAsdzpuLGg6YX0scm90YXRlZDohMSx0cmltbWVkOiExLHNwcml0ZVNvdXJjZVNpemU6e3g6MCx5OjAsdzpuLGg6YX0sc291cmNlU2l6ZTp7dzpuLGg6cn19KX19ZWxzZSBpZih0KXtFLmN1cnJlbnQ9ZSxFLmN1cnJlbnQuZnJhbWVzPUFycmF5LmlzQXJyYXkoZS5mcmFtZXMpP2UuZnJhbWVzOiQoKSxCLmN1cnJlbnQ9QXJyYXkuaXNBcnJheShlLmZyYW1lcyk/ZS5mcmFtZXMubGVuZ3RoOk9iamVjdC5rZXlzKGUuZnJhbWVzKS5sZW5ndGgsRi5jdXJyZW50PXQ7Y29uc3R7dzpyLGg6bn09WChlLmZyYW1lcykuc291cmNlU2l6ZSxhPUcocixuKTtVKGEpLFAuY3VycmVudCYmKFAuY3VycmVudC5tYXA9dCl9dC5wcmVtdWx0aXBseUFscGhhPSExLE4odCl9LCQ9KCk9Pntjb25zdCBlPXt9LHQ9RS5jdXJyZW50LHI9dTtpZihyKWZvcihsZXQgbj0wO248ci5sZW5ndGg7bisrKXtlW3Jbbl1dPVtdO2ZvcihsZXQgYSBpbiB0LmZyYW1lcyl7Y29uc3Qgbz10LmZyYW1lc1thXSxpPW8uZnJhbWUscz1pLngsbD1pLnksYz1pLncsdT1pLmgsZD1vLnNvdXJjZVNpemUudyxtPW8uc291cmNlU2l6ZS5oO1wic3RyaW5nXCI9PXR5cGVvZiBhJiYtMSE9PWEudG9Mb3dlckNhc2UoKS5pbmRleE9mKHJbbl0udG9Mb3dlckNhc2UoKSkmJmVbcltuXV0ucHVzaCh7eDpzLHk6bCx3OmMsaDp1LGZyYW1lOmksc291cmNlU2l6ZTp7dzpkLGg6bX19KX19cmV0dXJuIGV9LHE9KCk9PntpZighRS5jdXJyZW50KXJldHVybjtjb25zdHttZXRhOntzaXplOmV9LGZyYW1lczp0fT1FLmN1cnJlbnQse3c6cixoOmF9PUFycmF5LmlzQXJyYXkodCk/dFswXS5zb3VyY2VTaXplOm4mJnRbbl0/dFtuXVswXS5zb3VyY2VTaXplOnt3OjAsaDowfTtQLmN1cnJlbnQubWFwLndyYXBTPVAuY3VycmVudC5tYXAud3JhcFQ9RC5SZXBlYXRXcmFwcGluZyxQLmN1cnJlbnQubWFwLmNlbnRlci5zZXQoMCwwKSxQLmN1cnJlbnQubWFwLnJlcGVhdC5zZXQoMSpWLyhlLncvciksMS8oZS5oL2EpKTtjb25zdCBvPTEvKChlLmgtMSkvYSk7UC5jdXJyZW50Lm1hcC5vZmZzZXQueD0wLFAuY3VycmVudC5tYXAub2Zmc2V0Lnk9MS1vLFMoITApLGQmJmQoe2N1cnJlbnRGcmFtZU5hbWU6bixjdXJyZW50RnJhbWU6TC5jdXJyZW50fSl9O2EudXNlRnJhbWUoKChyLGEpPT57dmFyIG8saTtudWxsIT0obz1FLmN1cnJlbnQpJiZvLmZyYW1lcyYmbnVsbCE9KGk9UC5jdXJyZW50KSYmaS5tYXAmJih5fHxDLmN1cnJlbnR8fCFjJiYhaHx8KCgoKT0+e2NvbnN0IHI9d2luZG93LnBlcmZvcm1hbmNlLm5vdygpLGE9ci1SLmN1cnJlbnQse21ldGE6e3NpemU6b30sZnJhbWVzOml9PUUuY3VycmVudCx7dzpsLGg6Y309WChpKS5zb3VyY2VTaXplLHU9QXJyYXkuaXNBcnJheShpKT9pOm4/aVtuXTpbXTtsZXQgZD0wLHA9MDtjb25zdCBoPXR8fHUubGVuZ3RoLTE7aWYoTC5jdXJyZW50PmgmJihMLmN1cnJlbnQ9cyYmbnVsbCE9ZT9lOjAscz9udWxsPT1mfHxmKHtjdXJyZW50RnJhbWVOYW1lOm4sY3VycmVudEZyYW1lOkwuY3VycmVudH0pOihudWxsPT1tfHxtKHtjdXJyZW50RnJhbWVOYW1lOm4sY3VycmVudEZyYW1lOkwuY3VycmVudH0pLEMuY3VycmVudD0hMCksIXMpKXJldHVybjtpZihhPD1fKXJldHVybjtSLmN1cnJlbnQ9ci1hJV8sRyhsLGMpO2NvbnN0IHk9KG8udy0xKS9sLHg9KG8uaC0xKS9jLHtmcmFtZTp7eDp2LHk6Z30sc291cmNlU2l6ZTp7dzp6LGg6d319PXVbTC5jdXJyZW50XSxiPTEveSxNPTEveDtkPVY+MD9iKih2L3opOmIqKHYveiktUC5jdXJyZW50Lm1hcC5yZXBlYXQueCxwPU1hdGguYWJzKDEtTSktTSooZy93KSxQLmN1cnJlbnQubWFwLm9mZnNldC54PWQsUC5jdXJyZW50Lm1hcC5vZmZzZXQueT1wLEwuY3VycmVudCs9MX0pKCkscCYmcCh7Y3VycmVudEZyYW1lTmFtZTpBLmN1cnJlbnQsY3VycmVudEZyYW1lOkwuY3VycmVudH0pKSl9KSk7Y29uc3QgWD1lPT57aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZVswXTtpZihcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWUpe3JldHVybiBlW09iamVjdC5rZXlzKGUpWzBdXVswXX1yZXR1cm57dzowLGg6MH19O3JldHVybiBrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHcsay5jcmVhdGVFbGVtZW50KGsuU3VzcGVuc2Use2ZhbGxiYWNrOm51bGx9LGomJmsuY3JlYXRlRWxlbWVudChcInNwcml0ZVwiLHtyZWY6VCxzY2FsZTpJfSxrLmNyZWF0ZUVsZW1lbnQoXCJzcHJpdGVNYXRlcmlhbFwiLHt0b25lTWFwcGVkOiExLHJlZjpQLG1hcDpPLHRyYW5zcGFyZW50OiEwLGFscGhhVGVzdDpudWxsIT12P3Y6MH0pKSwhaiYmay5jcmVhdGVFbGVtZW50KFwibWVzaFwiLHtyZWY6VCxzY2FsZTpJfSxrLmNyZWF0ZUVsZW1lbnQoXCJwbGFuZUdlb21ldHJ5XCIse2FyZ3M6WzEsMV19KSxrLmNyZWF0ZUVsZW1lbnQoXCJtZXNoQmFzaWNNYXRlcmlhbFwiLHt0b25lTWFwcGVkOiExLHNpZGU6RC5Eb3VibGVTaWRlLHJlZjpQLG1hcDpPLHRyYW5zcGFyZW50OiEwLGFscGhhVGVzdDpudWxsIT12P3Y6MH0pKSksZyl9LGV4cG9ydHMuU3RhZ2U9ZnVuY3Rpb24oe2NoaWxkcmVuOmUsY2VudGVyOnQsYWRqdXN0Q2FtZXJhOnI9ITAsaW50ZW5zaXR5Om49LjUsc2hhZG93czphPVwiY29udGFjdFwiLGVudmlyb25tZW50Om89XCJjaXR5XCIscHJlc2V0Omk9XCJyZW1icmFuZHRcIiwuLi5zfSl7dmFyIGwsYyx1LGQsbSxmLHAsaDtjb25zdCB5PVwic3RyaW5nXCI9PXR5cGVvZiBpP2puW2ldOmksW3tyYWRpdXM6eCxoZWlnaHQ6dn0sZ109ay51c2VTdGF0ZSh7cmFkaXVzOjAsd2lkdGg6MCxoZWlnaHQ6MCxkZXB0aDowfSksej1udWxsIT09KGw9bnVsbD09YT92b2lkIDA6YS5iaWFzKSYmdm9pZCAwIT09bD9sOi0xZS00LHc9bnVsbCE9PShjPW51bGw9PWE/dm9pZCAwOmEubm9ybWFsQmlhcykmJnZvaWQgMCE9PWM/YzowLGI9bnVsbCE9PSh1PW51bGw9PWE/dm9pZCAwOmEuc2l6ZSkmJnZvaWQgMCE9PXU/dToxMDI0LEU9bnVsbCE9PShkPW51bGw9PWE/dm9pZCAwOmEub2Zmc2V0KSYmdm9pZCAwIT09ZD9kOjAsTT1cImNvbnRhY3RcIj09PWF8fFwiY29udGFjdFwiPT09KG51bGw9PWE/dm9pZCAwOmEudHlwZSksUz1cImFjY3VtdWxhdGl2ZVwiPT09YXx8XCJhY2N1bXVsYXRpdmVcIj09PShudWxsPT1hP3ZvaWQgMDphLnR5cGUpLEM9ey4uLlwib2JqZWN0XCI9PXR5cGVvZiBhP2E6e319LFA9bz9cInN0cmluZ1wiPT10eXBlb2Ygbz97cHJlc2V0Om99Om86bnVsbCxUPWsudXNlQ2FsbGJhY2soKGU9Pntjb25zdHt3aWR0aDpyLGhlaWdodDpuLGRlcHRoOmEsYm91bmRpbmdTcGhlcmU6b309ZTtnKHtyYWRpdXM6by5yYWRpdXMsd2lkdGg6cixoZWlnaHQ6bixkZXB0aDphfSksbnVsbCE9dCYmdC5vbkNlbnRlcmVkJiZ0Lm9uQ2VudGVyZWQoZSl9KSxbXSk7cmV0dXJuIGsuY3JlYXRlRWxlbWVudChrLkZyYWdtZW50LG51bGwsay5jcmVhdGVFbGVtZW50KFwiYW1iaWVudExpZ2h0XCIse2ludGVuc2l0eTpuLzN9KSxrLmNyZWF0ZUVsZW1lbnQoXCJzcG90TGlnaHRcIix7cGVudW1icmE6MSxwb3NpdGlvbjpbeS5tYWluWzBdKngseS5tYWluWzFdKngseS5tYWluWzJdKnhdLGludGVuc2l0eToyKm4sY2FzdFNoYWRvdzohIWEsXCJzaGFkb3ctYmlhc1wiOnosXCJzaGFkb3ctbm9ybWFsQmlhc1wiOncsXCJzaGFkb3ctbWFwU2l6ZVwiOmJ9KSxrLmNyZWF0ZUVsZW1lbnQoXCJwb2ludExpZ2h0XCIse3Bvc2l0aW9uOlt5LmZpbGxbMF0qeCx5LmZpbGxbMV0qeCx5LmZpbGxbMl0qeF0saW50ZW5zaXR5Om59KSxrLmNyZWF0ZUVsZW1lbnQod24sUi5kZWZhdWx0KHtmaXQ6ISFyLGNsaXA6ISFyLG1hcmdpbjpOdW1iZXIociksb2JzZXJ2ZTohMH0scyksay5jcmVhdGVFbGVtZW50KFduLHtyYWRpdXM6eCxhZGp1c3RDYW1lcmE6cn0pLGsuY3JlYXRlRWxlbWVudChQcixSLmRlZmF1bHQoe30sdCx7cG9zaXRpb246WzAsRS8yLDBdLG9uQ2VudGVyZWQ6VH0pLGUpKSxrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtwb3NpdGlvbjpbMCwtdi8yLUUvMiwwXX0sTSYmay5jcmVhdGVFbGVtZW50KE9uLFIuZGVmYXVsdCh7c2NhbGU6NCp4LGZhcjp4LGJsdXI6Mn0sQykpLFMmJmsuY3JlYXRlRWxlbWVudChJbixSLmRlZmF1bHQoe3RlbXBvcmFsOiEwLGZyYW1lczoxMDAsYWxwaGFUZXN0Oi45LHRvbmVNYXBwZWQ6ITAsc2NhbGU6NCp4fSxDKSxrLmNyZWF0ZUVsZW1lbnQoVW4se2Ftb3VudDpudWxsIT09KG09Qy5hbW91bnQpJiZ2b2lkIDAhPT1tP206OCxyYWRpdXM6bnVsbCE9PShmPUMucmFkaXVzKSYmdm9pZCAwIT09Zj9mOngsYW1iaWVudDpudWxsIT09KHA9Qy5hbWJpZW50KSYmdm9pZCAwIT09cD9wOi41LGludGVuc2l0eTpudWxsIT09KGg9Qy5pbnRlbnNpdHkpJiZ2b2lkIDAhPT1oP2g6MSxwb3NpdGlvbjpbeS5tYWluWzBdKngseS5tYWluWzFdKngseS5tYWluWzJdKnhdLHNpemU6NCp4LGJpYXM6LXosbWFwU2l6ZTpifSkpKSxvJiZrLmNyZWF0ZUVsZW1lbnQoX24sUCkpfSxleHBvcnRzLlN0YXJzPW1hLGV4cG9ydHMuU3RhdHM9ZnVuY3Rpb24oe3Nob3dQYW5lbDplPTAsY2xhc3NOYW1lOnQscGFyZW50OnJ9KXtjb25zdCBuPWZ1bmN0aW9uKGUsdD1bXSxyKXtjb25zdFtuLGFdPWsudXNlU3RhdGUoKTtyZXR1cm4gay51c2VMYXlvdXRFZmZlY3QoKCgpPT57Y29uc3QgdD1lKCk7cmV0dXJuIGEodCkscHIocix0KSwoKT0+cHIocixudWxsKX0pLHQpLG59KCgoKT0+bmV3IEkuZGVmYXVsdCksW10pO3JldHVybiBrLnVzZUVmZmVjdCgoKCk9PntpZihuKXtjb25zdCBvPXImJnIuY3VycmVudHx8ZG9jdW1lbnQuYm9keTtuLnNob3dQYW5lbChlKSxudWxsPT1vfHxvLmFwcGVuZENoaWxkKG4uZG9tKSx0JiZuLmRvbS5jbGFzc0xpc3QuYWRkKC4uLnQuc3BsaXQoXCIgXCIpLmZpbHRlcigoZT0+ZSkpKTtjb25zdCBpPWEuYWRkRWZmZWN0KCgoKT0+bi5iZWdpbigpKSkscz1hLmFkZEFmdGVyRWZmZWN0KCgoKT0+bi5lbmQoKSkpO3JldHVybigpPT57bnVsbD09b3x8by5yZW1vdmVDaGlsZChuLmRvbSksaSgpLHMoKX19fSksW3Isbix0LGVdKSxudWxsfSxleHBvcnRzLlN0YXRzR2w9ZnVuY3Rpb24oe2NsYXNzTmFtZTplLHBhcmVudDp0LC4uLnJ9KXtjb25zdCBuPWEudXNlVGhyZWUoKGU9PmUuZ2wpKSxvPWsudXNlTWVtbygoKCk9Pntjb25zdCBlPW5ldyBVLmRlZmF1bHQoey4uLnJ9KTtyZXR1cm4gZS5pbml0KG4uZG9tRWxlbWVudCksZX0pLFtuXSk7cmV0dXJuIGsudXNlRWZmZWN0KCgoKT0+e2lmKG8pe2NvbnN0IHI9dCYmdC5jdXJyZW50fHxkb2N1bWVudC5ib2R5O251bGw9PXJ8fHIuYXBwZW5kQ2hpbGQoby5jb250YWluZXIpLGUmJm8uY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoLi4uZS5zcGxpdChcIiBcIikuZmlsdGVyKChlPT5lKSkpO2NvbnN0IG49YS5hZGRFZmZlY3QoKCgpPT5vLmJlZ2luKCkpKSxpPWEuYWRkQWZ0ZXJFZmZlY3QoKCgpPT5vLmVuZCgpKSk7cmV0dXJuKCk9PntudWxsPT1yfHxyLnJlbW92ZUNoaWxkKG8uY29udGFpbmVyKSxuKCksaSgpfX19KSxbdCxvLGVdKSxudWxsfSxleHBvcnRzLlN2Zz1YZSxleHBvcnRzLlRldHJhaGVkcm9uPXJuLGV4cG9ydHMuVGV4dD14ZSxleHBvcnRzLlRleHQzRD1iZSxleHBvcnRzLlRvcnVzPWVuLGV4cG9ydHMuVG9ydXNLbm90PXRuLGV4cG9ydHMuVHJhY2tiYWxsQ29udHJvbHM9bHQsZXhwb3J0cy5UcmFpbD1JZSxleHBvcnRzLlRyYW5zZm9ybUNvbnRyb2xzPXV0LGV4cG9ydHMuVHViZT1KcixleHBvcnRzLlZpZXc9KHt0cmFjazplLGluZGV4OnQ9MSxmcmFtZXM6cj0xLzAsY2hpbGRyZW46bn0pPT57dmFyIG8saTtjb25zdCBzPWsudXNlUmVmKG51bGwpLHtzaXplOmwsc2NlbmU6Y309YS51c2VUaHJlZSgpLFt1XT1rLnVzZVN0YXRlKCgoKT0+bmV3IEQuU2NlbmUpKSxkPWsudXNlQ2FsbGJhY2soKCh0LHIpPT57aWYocy5jdXJyZW50JiZlLmN1cnJlbnQmJnQudGFyZ2V0PT09ZS5jdXJyZW50KXtjb25zdHt3aWR0aDplLGhlaWdodDpuLGxlZnQ6YSx0b3A6b309cy5jdXJyZW50LGk9dC5jbGllbnRYLWEsbD10LmNsaWVudFktbztyLnBvaW50ZXIuc2V0KGkvZSoyLTEsLWwvbioyKzEpLHIucmF5Y2FzdGVyLnNldEZyb21DYW1lcmEoci5wb2ludGVyLHIuY2FtZXJhKX19KSxbcyxlXSksW20sZl09ay51c2VSZWR1Y2VyKCgoKT0+ITApLCExKTtyZXR1cm4gay51c2VFZmZlY3QoKCgpPT57dmFyIHQ7cy5jdXJyZW50PW51bGw9PSh0PWUuY3VycmVudCk/dm9pZCAwOnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksZigpfSksW2VdKSxrLmNyZWF0ZUVsZW1lbnQoay5GcmFnbWVudCxudWxsLG0mJmEuY3JlYXRlUG9ydGFsKGsuY3JlYXRlRWxlbWVudChEbyx7Y2FudmFzU2l6ZTpsLGZyYW1lczpyLHNjZW5lOmMsdHJhY2s6ZSxyZWN0OnMsaW5kZXg6dH0sbixrLmNyZWF0ZUVsZW1lbnQoXCJncm91cFwiLHtvblBvaW50ZXJPdmVyOigpPT5udWxsfSkpLHUse2V2ZW50czp7Y29tcHV0ZTpkLHByaW9yaXR5OnR9LHNpemU6e3dpZHRoOm51bGw9PShvPXMuY3VycmVudCk/dm9pZCAwOm8ud2lkdGgsaGVpZ2h0Om51bGw9PShpPXMuY3VycmVudCk/dm9pZCAwOmkuaGVpZ2h0fX0pKX0sZXhwb3J0cy5XaXJlZnJhbWU9ZnVuY3Rpb24oe2dlb21ldHJ5OmUsLi4udH0pe3JldHVybiBlP2suY3JlYXRlRWxlbWVudChBYSxSLmRlZmF1bHQoe2dlb21ldHJ5OmV9LHQpKTprLmNyZWF0ZUVsZW1lbnQoX2EsdCl9LGV4cG9ydHMuYWNjdW11bGF0aXZlQ29udGV4dD1ObixleHBvcnRzLmNhbGNQb3NGcm9tQW5nbGVzPWxhLGV4cG9ydHMuY2FsY3VsYXRlU2NhbGVGYWN0b3I9cmksZXhwb3J0cy5pc1dlYkdMMkF2YWlsYWJsZT0oKT0+e3RyeXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3JldHVybiEoIXdpbmRvdy5XZWJHTDJSZW5kZXJpbmdDb250ZXh0fHwhZS5nZXRDb250ZXh0KFwid2ViZ2wyXCIpKX1jYXRjaChlKXtyZXR1cm4hMX19LGV4cG9ydHMubWVzaEJvdW5kcz1mdW5jdGlvbihlLHQpe2NvbnN0IHI9dGhpcy5nZW9tZXRyeSxuPXRoaXMubWF0ZXJpYWwsYT10aGlzLm1hdHJpeFdvcmxkO3ZvaWQgMCE9PW4mJihudWxsPT09ci5ib3VuZGluZ1NwaGVyZSYmci5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSx6by5jb3B5KHIuYm91bmRpbmdTcGhlcmUpLHpvLmFwcGx5TWF0cml4NChhKSwhMSE9PWUucmF5LmludGVyc2VjdHNTcGhlcmUoem8pJiYodm8uY29weShhKS5pbnZlcnQoKSxnby5jb3B5KGUucmF5KS5hcHBseU1hdHJpeDQodm8pLG51bGwhPT1yLmJvdW5kaW5nQm94JiZudWxsPT09Z28uaW50ZXJzZWN0Qm94KHIuYm91bmRpbmdCb3gsd28pfHx0LnB1c2goe2Rpc3RhbmNlOndvLmRpc3RhbmNlVG8oZS5yYXkub3JpZ2luKSxwb2ludDp3by5jbG9uZSgpLG9iamVjdDp0aGlzfSkpKX0sZXhwb3J0cy5zaGFkZXJNYXRlcmlhbD1TZSxleHBvcnRzLnVzZUFuaW1hdGlvbnM9ZnVuY3Rpb24oZSx0KXtjb25zdCByPWsudXNlUmVmKCksW29dPWsudXNlU3RhdGUoKCgpPT50P3QgaW5zdGFuY2VvZiBuLk9iamVjdDNEP3tjdXJyZW50OnR9OnQ6cikpLFtpXT1rLnVzZVN0YXRlKCgoKT0+bmV3IG4uQW5pbWF0aW9uTWl4ZXIodm9pZCAwKSkpO2sudXNlTGF5b3V0RWZmZWN0KCgoKT0+e3QmJihvLmN1cnJlbnQ9dCBpbnN0YW5jZW9mIG4uT2JqZWN0M0Q/dDp0LmN1cnJlbnQpLGkuX3Jvb3Q9by5jdXJyZW50fSkpO2NvbnN0IHM9ay51c2VSZWYoe30pLGw9ay51c2VNZW1vKCgoKT0+e2NvbnN0IHQ9e307cmV0dXJuIGUuZm9yRWFjaCgoZT0+T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZS5uYW1lLHtlbnVtZXJhYmxlOiEwLGdldCgpe2lmKG8uY3VycmVudClyZXR1cm4gcy5jdXJyZW50W2UubmFtZV18fChzLmN1cnJlbnRbZS5uYW1lXT1pLmNsaXBBY3Rpb24oZSxvLmN1cnJlbnQpKX0sY29uZmlndXJhYmxlOiEwfSkpKSx7cmVmOm8sY2xpcHM6ZSxhY3Rpb25zOnQsbmFtZXM6ZS5tYXAoKGU9PmUubmFtZSkpLG1peGVyOml9fSksW2VdKTtyZXR1cm4gYS51c2VGcmFtZSgoKGUsdCk9PmkudXBkYXRlKHQpKSksay51c2VFZmZlY3QoKCgpPT57Y29uc3QgZT1vLmN1cnJlbnQ7cmV0dXJuKCk9PntzLmN1cnJlbnQ9e30saS5zdG9wQWxsQWN0aW9uKCksT2JqZWN0LnZhbHVlcyhsLmFjdGlvbnMpLmZvckVhY2goKHQ9PntlJiZpLnVuY2FjaGVBY3Rpb24odCxlKX0pKX19KSxbZV0pLGx9LGV4cG9ydHMudXNlQXNwZWN0PWZ1bmN0aW9uKGUsdCxyPTEpe2NvbnN0IG49YS51c2VUaHJlZSgoZT0+ZS52aWV3cG9ydCkpLG89dCoobi5hc3BlY3Q+ZS90P24ud2lkdGgvZTpuLmhlaWdodC90KTtyZXR1cm5bZSoobi5hc3BlY3Q+ZS90P24ud2lkdGgvZTpuLmhlaWdodC90KSpyLG8qciwxXX0sZXhwb3J0cy51c2VCVkg9ZnVuY3Rpb24oZSx0KXt0PXtzdHJhdGVneTpFLlNBSCx2ZXJib3NlOiExLHNldEJvdW5kaW5nQm94OiEwLG1heERlcHRoOjQwLG1heExlYWZUcmlzOjEwLC4uLnR9LGsudXNlRWZmZWN0KCgoKT0+e2lmKGUuY3VycmVudCl7ZS5jdXJyZW50LnJheWNhc3Q9RS5hY2NlbGVyYXRlZFJheWNhc3Q7Y29uc3Qgcj1lLmN1cnJlbnQuZ2VvbWV0cnk7cmV0dXJuIHIuY29tcHV0ZUJvdW5kc1RyZWU9RS5jb21wdXRlQm91bmRzVHJlZSxyLmRpc3Bvc2VCb3VuZHNUcmVlPUUuZGlzcG9zZUJvdW5kc1RyZWUsci5jb21wdXRlQm91bmRzVHJlZSh0KSwoKT0+e3IuYm91bmRzVHJlZSYmci5kaXNwb3NlQm91bmRzVHJlZSgpfX19KSxbZSxKU09OLnN0cmluZ2lmeSh0KV0pfSxleHBvcnRzLnVzZUJvdW5kcz1ibixleHBvcnRzLnVzZUJveFByb2plY3RlZEVudj1mdW5jdGlvbihlPW5ldyBELlZlY3RvcjMsdD1uZXcgRC5WZWN0b3IzKXtjb25zdFtyXT1rLnVzZVN0YXRlKCgoKT0+KHtwb3NpdGlvbjpuZXcgRC5WZWN0b3IzLHNpemU6bmV3IEQuVmVjdG9yM30pKSk7YS5hcHBseVByb3BzKHIse3Bvc2l0aW9uOmUsc2l6ZTp0fSk7Y29uc3Qgbj1rLnVzZVJlZihudWxsKSxvPWsudXNlTWVtbygoKCk9Pih7cmVmOm4sb25CZWZvcmVDb21waWxlOmU9PmZ1bmN0aW9uKGUsdCxyKXtlLmRlZmluZXMuQk9YX1BST0pFQ1RFRF9FTlZfTUFQPSEwLGUudW5pZm9ybXMuZW52TWFwUG9zaXRpb249e3ZhbHVlOnR9LGUudW5pZm9ybXMuZW52TWFwU2l6ZT17dmFsdWU6cn0sZS52ZXJ0ZXhTaGFkZXI9YFxcbiAgdmFyeWluZyB2ZWMzIHZXb3JsZFBvc2l0aW9uO1xcbiAgJHtlLnZlcnRleFNoYWRlci5yZXBsYWNlKFwiI2luY2x1ZGUgPHdvcmxkcG9zX3ZlcnRleD5cIixncil9YCxlLmZyYWdtZW50U2hhZGVyPWBcXG4gICAgJHt6cn1cXG4gICAgJHtlLmZyYWdtZW50U2hhZGVyLnJlcGxhY2UoXCIjaW5jbHVkZSA8ZW52bWFwX3BoeXNpY2FsX3BhcnNfZnJhZ21lbnQ+XCIsRC5TaGFkZXJDaHVuay5lbnZtYXBfcGh5c2ljYWxfcGFyc19mcmFnbWVudCkucmVwbGFjZShcInZlYzMgd29ybGROb3JtYWwgPSBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCBub3JtYWwsIHZpZXdNYXRyaXggKTtcIixgdmVjMyB3b3JsZE5vcm1hbCA9IGludmVyc2VUcmFuc2Zvcm1EaXJlY3Rpb24oIG5vcm1hbCwgdmlld01hdHJpeCApO1xcbiAgICAgICAgICR7d3J9XFxuICAgICAgICAgYCkucmVwbGFjZShcInJlZmxlY3RWZWMgPSBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCByZWZsZWN0VmVjLCB2aWV3TWF0cml4ICk7XCIsYHJlZmxlY3RWZWMgPSBpbnZlcnNlVHJhbnNmb3JtRGlyZWN0aW9uKCByZWZsZWN0VmVjLCB2aWV3TWF0cml4ICk7XFxuICAgICAgICAgJHticn1cXG4gICAgICAgIGApfWB9KGUsci5wb3NpdGlvbixyLnNpemUpLGN1c3RvbVByb2dyYW1DYWNoZUtleTooKT0+SlNPTi5zdHJpbmdpZnkoci5wb3NpdGlvbi50b0FycmF5KCkpK0pTT04uc3RyaW5naWZ5KHIuc2l6ZS50b0FycmF5KCkpfSkpLFsuLi5yLnBvc2l0aW9uLnRvQXJyYXkoKSwuLi5yLnNpemUudG9BcnJheSgpXSk7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e24uY3VycmVudC5uZWVkc1VwZGF0ZT0hMH0pLFtyXSksb30sZXhwb3J0cy51c2VDYW1lcmE9ZnVuY3Rpb24oZSx0KXtjb25zdCByPWEudXNlVGhyZWUoKGU9PmUucG9pbnRlcikpLFtvXT1rLnVzZVN0YXRlKCgoKT0+e2NvbnN0IG89bmV3IG4uUmF5Y2FzdGVyO3JldHVybiB0JiZhLmFwcGx5UHJvcHMobyx0LHt9KSxmdW5jdGlvbih0LGEpe28uc2V0RnJvbUNhbWVyYShyLGUgaW5zdGFuY2VvZiBuLkNhbWVyYT9lOmUuY3VycmVudCk7Y29uc3QgaT10aGlzLmNvbnN0cnVjdG9yLnByb3RvdHlwZS5yYXljYXN0LmJpbmQodGhpcyk7aSYmaShvLGEpfX0pKTtyZXR1cm4gb30sZXhwb3J0cy51c2VDb250ZXh0QnJpZGdlPWZ1bmN0aW9uKC4uLmUpe2NvbnN0IHQ9ay51c2VSZWYoW10pO3JldHVybiB0LmN1cnJlbnQ9ZS5tYXAoKGU9PmsudXNlQ29udGV4dChlKSkpLGsudXNlTWVtbygoKCk9Pih7Y2hpbGRyZW46cn0pPT5lLnJlZHVjZVJpZ2h0KCgoZSxyLG4pPT5rLmNyZWF0ZUVsZW1lbnQoci5Qcm92aWRlcix7dmFsdWU6dC5jdXJyZW50W25dLGNoaWxkcmVuOmV9KSkscikpLFtdKX0sZXhwb3J0cy51c2VDdWJlQ2FtZXJhPW50LGV4cG9ydHMudXNlQ3ViZVRleHR1cmU9dXIsZXhwb3J0cy51c2VDdXJzb3I9ZnVuY3Rpb24oZSx0PVwicG9pbnRlclwiLHI9XCJhdXRvXCIsbj1kb2N1bWVudC5ib2R5KXtrLnVzZUVmZmVjdCgoKCk9PntpZihlKXJldHVybiBuLnN0eWxlLmN1cnNvcj10LCgpPT57bi5zdHlsZS5jdXJzb3I9cn19KSxbZV0pfSxleHBvcnRzLnVzZURlcHRoQnVmZmVyPWZ1bmN0aW9uKHtzaXplOmU9MjU2LGZyYW1lczp0PTEvMH09e30pe2NvbnN0IHI9YS51c2VUaHJlZSgoZT0+ZS52aWV3cG9ydC5kcHIpKSx7d2lkdGg6byxoZWlnaHQ6aX09YS51c2VUaHJlZSgoZT0+ZS5zaXplKSkscz1lfHxvKnIsbD1lfHxpKnIsYz1rLnVzZU1lbW8oKCgpPT57Y29uc3QgZT1uZXcgbi5EZXB0aFRleHR1cmUocyxsKTtyZXR1cm4gZS5mb3JtYXQ9bi5EZXB0aEZvcm1hdCxlLnR5cGU9bi5VbnNpZ25lZFNob3J0VHlwZSx7ZGVwdGhUZXh0dXJlOmV9fSksW3MsbF0pO2xldCB1PTA7Y29uc3QgZD1ldChzLGwsYyk7cmV0dXJuIGEudXNlRnJhbWUoKGU9PnsodD09PTEvMHx8dTx0KSYmKGUuZ2wuc2V0UmVuZGVyVGFyZ2V0KGQpLGUuZ2wucmVuZGVyKGUuc2NlbmUsZS5jYW1lcmEpLGUuZ2wuc2V0UmVuZGVyVGFyZ2V0KG51bGwpLHUrKyl9KSksZC5kZXB0aFRleHR1cmV9LGV4cG9ydHMudXNlRGV0ZWN0R1BVPWU9PnAuc3VzcGVuZCgoKCk9PmIuZ2V0R1BVVGllcihlKSksW1widXNlRGV0ZWN0R1BVXCJdKSxleHBvcnRzLnVzZUVudmlyb25tZW50PVRuLGV4cG9ydHMudXNlRkJPPWV0LGV4cG9ydHMudXNlRkJYPWRyLGV4cG9ydHMudXNlRmFjZUNvbnRyb2xzPVR0LGV4cG9ydHMudXNlRmFjZUxhbmRtYXJrZXI9RXQsZXhwb3J0cy51c2VGb250PXplLGV4cG9ydHMudXNlR0xURj1aZSxleHBvcnRzLnVzZUdpem1vQ29udGV4dD1JdCxleHBvcnRzLnVzZUhlbHBlcj1ocixleHBvcnRzLnVzZUludGVyc2VjdD12cixleHBvcnRzLnVzZUtUWDI9ZnIsZXhwb3J0cy51c2VLZXlib2FyZENvbnRyb2xzPWZ1bmN0aW9uKGUpe2NvbnN0W3QscixuXT1rLnVzZUNvbnRleHQoc2UpO3JldHVybiBlP24oZSk6W3Qscl19LGV4cG9ydHMudXNlTWFzaz1mdW5jdGlvbihlLHQ9ITEpe3JldHVybntzdGVuY2lsV3JpdGU6ITAsc3RlbmNpbFJlZjplLHN0ZW5jaWxGdW5jOnQ/RC5Ob3RFcXVhbFN0ZW5jaWxGdW5jOkQuRXF1YWxTdGVuY2lsRnVuYyxzdGVuY2lsRmFpbDpELktlZXBTdGVuY2lsT3Asc3RlbmNpbFpGYWlsOkQuS2VlcFN0ZW5jaWxPcCxzdGVuY2lsWlBhc3M6RC5LZWVwU3RlbmNpbE9wfX0sZXhwb3J0cy51c2VNYXRjYXBUZXh0dXJlPWZ1bmN0aW9uKGU9MCx0PTEwMjQscil7Y29uc3Qgbj1wLnN1c3BlbmQoKCgpPT5mZXRjaChcImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9wbW5kcnMvZHJlaS1hc3NldHNAbWFzdGVyL21hdGNhcHMuanNvblwiKS50aGVuKChlPT5lLmpzb24oKSkpKSxbXCJtYXRjYXBMaXN0XCJdKSxhPW5bMF0sbz1rLnVzZU1lbW8oKCgpPT5PYmplY3Qua2V5cyhuKS5sZW5ndGgpLFtdKSxpPWAke2sudXNlTWVtbygoKCk9Plwic3RyaW5nXCI9PXR5cGVvZiBlP2U6XCJudW1iZXJcIj09dHlwZW9mIGU/bltlXTpudWxsKSxbZV0pfHxhfSR7ZnVuY3Rpb24oZSl7c3dpdGNoKGUpe2Nhc2UgNjQ6cmV0dXJuXCItNjRweFwiO2Nhc2UgMTI4OnJldHVyblwiLTEyOHB4XCI7Y2FzZSAyNTY6cmV0dXJuXCItMjU2cHhcIjtjYXNlIDUxMjpyZXR1cm5cIi01MTJweFwiO2RlZmF1bHQ6cmV0dXJuXCJcIn19KHQpfS5wbmdgLHM9YGh0dHBzOi8vcmF3Y2RuLmdpdGhhY2suY29tL2VtbWVsbGVwcGkvbWF0Y2Fwcy85YjM2Y2NhYWYwYTI0ODgxYTM5MDYyZDA1NTY2YzllOTJiZTRhYTBkLyR7dH0vJHtpfWA7cmV0dXJuW1BlKHMscikscyxvXX0sZXhwb3J0cy51c2VNb3Rpb249THQsZXhwb3J0cy51c2VOb3JtYWxUZXh0dXJlPWZ1bmN0aW9uKGU9MCx0PXt9LHIpe2NvbnN0e3JlcGVhdDphPVsxLDFdLGFuaXNvdHJvcHk6bz0xLG9mZnNldDppPVswLDBdfT10LHM9cC5zdXNwZW5kKCgoKT0+ZmV0Y2goXCJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvcG1uZHJzL2RyZWktYXNzZXRzQG1hc3Rlci9ub3JtYWxzL25vcm1hbHMuanNvblwiKS50aGVuKChlPT5lLmpzb24oKSkpKSxbXCJub3JtYWxzTGlzdFwiXSksbD1rLnVzZU1lbW8oKCgpPT5PYmplY3Qua2V5cyhzKS5sZW5ndGgpLFtdKSxjPXNbMF0sdT1gaHR0cHM6Ly9yYXdjZG4uZ2l0aGFjay5jb20vcG1uZHJzL2RyZWktYXNzZXRzLzdhMzEwNDk5N2UxNTc2ZjgzNDcyODI5ODE1YjAwODgwZDg4YjMyZmIvbm9ybWFscy8ke3NbZV18fGN9YCxkPVBlKHUscik7cmV0dXJuIGsudXNlTGF5b3V0RWZmZWN0KCgoKT0+e2QmJihkLndyYXBTPWQud3JhcFQ9bi5SZXBlYXRXcmFwcGluZyxkLnJlcGVhdD1uZXcgbi5WZWN0b3IyKGFbMF0sYVsxXSksZC5vZmZzZXQ9bmV3IG4uVmVjdG9yMihpWzBdLGlbMV0pLGQuYW5pc290cm9weT1vKX0pLFtkLG8sYSxpXSksW2QsdSxsXX0sZXhwb3J0cy51c2VQZXJmb3JtYW5jZU1vbml0b3I9ZnVuY3Rpb24oe29uSW5jbGluZTplLG9uRGVjbGluZTpyLG9uQ2hhbmdlOm4sb25GYWxsYmFjazphfSl7Y29uc3Qgbz10LnVzZUNvbnRleHQoYm8pLGk9dC51c2VSZWYoe29uSW5jbGluZTplLG9uRGVjbGluZTpyLG9uQ2hhbmdlOm4sb25GYWxsYmFjazphfSk7dC51c2VMYXlvdXRFZmZlY3QoKCgpPT57aS5jdXJyZW50Lm9uSW5jbGluZT1lLGkuY3VycmVudC5vbkRlY2xpbmU9cixpLmN1cnJlbnQub25DaGFuZ2U9bixpLmN1cnJlbnQub25GYWxsYmFjaz1hfSksW2UscixuLGFdKSx0LnVzZUxheW91dEVmZmVjdCgoKCk9Pm8uc3Vic2NyaWJlKGkpKSxbb10pfSxleHBvcnRzLnVzZVByb2dyZXNzPUosZXhwb3J0cy51c2VTY3JvbGw9bmUsZXhwb3J0cy51c2VTZWxlY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gay51c2VDb250ZXh0KGxlKX0sZXhwb3J0cy51c2VTdXJmYWNlU2FtcGxlcj1VZSxleHBvcnRzLnVzZVRleHR1cmU9UGUsZXhwb3J0cy51c2VUcmFpbD1CZSxleHBvcnRzLnVzZVRyYWlsVGV4dHVyZT1mdW5jdGlvbihlPXt9KXtjb25zdHtzaXplOnIsbWF4QWdlOm4scmFkaXVzOm8saW50ZW5zaXR5OmksaW50ZXJwb2xhdGU6cyxzbW9vdGhpbmc6bCxtaW5Gb3JjZTpjLGJsZW5kOnUsZWFzZTpkfT1lLG09dC51c2VNZW1vKCgoKT0+bmV3IENyKGUpKSxbcixuLG8saSxzLGwsYyx1LGRdKTthLnVzZUZyYW1lKCgoZSx0KT0+e20udXBkYXRlKHQpfSkpO2NvbnN0IGY9dC51c2VDYWxsYmFjaygoZT0+bS5hZGRUb3VjaChlLnV2KSksW21dKTtyZXR1cm5bbS50ZXh0dXJlLGZdfSxleHBvcnRzLnVzZVZpZGVvVGV4dHVyZT1wdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/drei/index.cjs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/dist/index-2f978f7b.cjs.dev.js":
/*!************************************************************************!*\
  !*** ./node_modules/@react-three/fiber/dist/index-2f978f7b.cjs.dev.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar constants = __webpack_require__(/*! react-reconciler/constants */ \"(ssr)/./node_modules/react-reconciler/constants.js\");\nvar create = __webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.js\");\nvar Reconciler = __webpack_require__(/*! react-reconciler */ \"(ssr)/./node_modules/react-reconciler/index.js\");\nvar scheduler = __webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/@react-three/fiber/node_modules/scheduler/index.js\");\nvar suspendReact = __webpack_require__(/*! suspend-react */ \"(ssr)/./node_modules/suspend-react/index.cjs.js\");\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar THREE__namespace = /*#__PURE__*/_interopNamespace(THREE);\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar create__default = /*#__PURE__*/_interopDefault(create);\nvar Reconciler__default = /*#__PURE__*/_interopDefault(Reconciler);\n\nvar threeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\nconst catalogue = {};\nconst extend = objects => void Object.assign(catalogue, objects);\nfunction createRenderer(_roots, _getEventPriority) {\n  function createInstance(type, {\n    args = [],\n    attach,\n    ...props\n  }, root) {\n    let name = `${type[0].toUpperCase()}${type.slice(1)}`;\n    let instance;\n    if (type === 'primitive') {\n      if (props.object === undefined) throw new Error(\"R3F: Primitives without 'object' are invalid!\");\n      const object = props.object;\n      instance = prepare(object, {\n        type,\n        root,\n        attach,\n        primitive: true\n      });\n    } else {\n      const target = catalogue[name];\n      if (!target) {\n        throw new Error(`R3F: ${name} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);\n      }\n\n      // Throw if an object or literal was passed for args\n      if (!Array.isArray(args)) throw new Error('R3F: The args prop must be an array!');\n\n      // Instanciate new object, link it to the root\n      // Append memoized props with args so it's not forgotten\n      instance = prepare(new target(...args), {\n        type,\n        root,\n        attach,\n        // Save args in case we need to reconstruct later for HMR\n        memoizedProps: {\n          args\n        }\n      });\n    }\n\n    // Auto-attach geometries and materials\n    if (instance.__r3f.attach === undefined) {\n      if (instance instanceof THREE__namespace.BufferGeometry) instance.__r3f.attach = 'geometry';else if (instance instanceof THREE__namespace.Material) instance.__r3f.attach = 'material';\n    }\n\n    // It should NOT call onUpdate on object instanciation, because it hasn't been added to the\n    // view yet. If the callback relies on references for instance, they won't be ready yet, this is\n    // why it passes \"true\" here\n    // There is no reason to apply props to injects\n    if (name !== 'inject') applyProps$1(instance, props);\n    return instance;\n  }\n  function appendChild(parentInstance, child) {\n    let added = false;\n    if (child) {\n      var _child$__r3f, _parentInstance$__r3f;\n      // The attach attribute implies that the object attaches itself on the parent\n      if ((_child$__r3f = child.__r3f) != null && _child$__r3f.attach) {\n        attach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        // add in the usual parent-child way\n        parentInstance.add(child);\n        added = true;\n      }\n      // This is for anything that used attach, and for non-Object3Ds that don't get attached to props;\n      // that is, anything that's a child in React but not a child in the scenegraph.\n      if (!added) (_parentInstance$__r3f = parentInstance.__r3f) == null ? void 0 : _parentInstance$__r3f.objects.push(child);\n      if (!child.__r3f) prepare(child, {});\n      child.__r3f.parent = parentInstance;\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n  function insertBefore(parentInstance, child, beforeChild) {\n    let added = false;\n    if (child) {\n      var _child$__r3f2, _parentInstance$__r3f2;\n      if ((_child$__r3f2 = child.__r3f) != null && _child$__r3f2.attach) {\n        attach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        child.parent = parentInstance;\n        child.dispatchEvent({\n          type: 'added'\n        });\n        const restSiblings = parentInstance.children.filter(sibling => sibling !== child);\n        const index = restSiblings.indexOf(beforeChild);\n        parentInstance.children = [...restSiblings.slice(0, index), child, ...restSiblings.slice(index)];\n        added = true;\n      }\n      if (!added) (_parentInstance$__r3f2 = parentInstance.__r3f) == null ? void 0 : _parentInstance$__r3f2.objects.push(child);\n      if (!child.__r3f) prepare(child, {});\n      child.__r3f.parent = parentInstance;\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n  function removeRecursive(array, parent, dispose = false) {\n    if (array) [...array].forEach(child => removeChild(parent, child, dispose));\n  }\n  function removeChild(parentInstance, child, dispose) {\n    if (child) {\n      var _parentInstance$__r3f3, _child$__r3f3, _child$__r3f5;\n      // Clear the parent reference\n      if (child.__r3f) child.__r3f.parent = null;\n      // Remove child from the parents objects\n      if ((_parentInstance$__r3f3 = parentInstance.__r3f) != null && _parentInstance$__r3f3.objects) parentInstance.__r3f.objects = parentInstance.__r3f.objects.filter(x => x !== child);\n      // Remove attachment\n      if ((_child$__r3f3 = child.__r3f) != null && _child$__r3f3.attach) {\n        detach(parentInstance, child, child.__r3f.attach);\n      } else if (child.isObject3D && parentInstance.isObject3D) {\n        var _child$__r3f4;\n        parentInstance.remove(child);\n        // Remove interactivity\n        if ((_child$__r3f4 = child.__r3f) != null && _child$__r3f4.root) {\n          removeInteractivity(child.__r3f.root, child);\n        }\n      }\n\n      // Allow objects to bail out of recursive dispose altogether by passing dispose={null}\n      // Never dispose of primitives because their state may be kept outside of React!\n      // In order for an object to be able to dispose it has to have\n      //   - a dispose method,\n      //   - it cannot be a <primitive object={...} />\n      //   - it cannot be a THREE.Scene, because three has broken it's own api\n      //\n      // Since disposal is recursive, we can check the optional dispose arg, which will be undefined\n      // when the reconciler calls it, but then carry our own check recursively\n      const isPrimitive = (_child$__r3f5 = child.__r3f) == null ? void 0 : _child$__r3f5.primitive;\n      const shouldDispose = dispose === undefined ? child.dispose !== null && !isPrimitive : dispose;\n\n      // Remove nested child objects. Primitives should not have objects and children that are\n      // attached to them declaratively ...\n      if (!isPrimitive) {\n        var _child$__r3f6;\n        removeRecursive((_child$__r3f6 = child.__r3f) == null ? void 0 : _child$__r3f6.objects, child, shouldDispose);\n        removeRecursive(child.children, child, shouldDispose);\n      }\n\n      // Remove references\n      delete child.__r3f;\n\n      // Dispose item whenever the reconciler feels like it\n      if (shouldDispose && child.dispose && child.type !== 'Scene') {\n        scheduler.unstable_scheduleCallback(scheduler.unstable_IdlePriority, () => {\n          try {\n            child.dispose();\n          } catch (e) {\n            /* ... */\n          }\n        });\n      }\n      invalidateInstance(parentInstance);\n    }\n  }\n  function switchInstance(instance, type, newProps, fiber) {\n    var _instance$__r3f;\n    const parent = (_instance$__r3f = instance.__r3f) == null ? void 0 : _instance$__r3f.parent;\n    if (!parent) return;\n    const newInstance = createInstance(type, newProps, instance.__r3f.root);\n\n    // https://github.com/pmndrs/react-three-fiber/issues/1348\n    // When args change the instance has to be re-constructed, which then\n    // forces r3f to re-parent the children and non-scene objects\n    if (instance.children) {\n      for (const child of instance.children) {\n        if (child.__r3f) appendChild(newInstance, child);\n      }\n      instance.children = instance.children.filter(child => !child.__r3f);\n    }\n    instance.__r3f.objects.forEach(child => appendChild(newInstance, child));\n    instance.__r3f.objects = [];\n    if (!instance.__r3f.autoRemovedBeforeAppend) {\n      removeChild(parent, instance);\n    }\n    if (newInstance.parent) {\n      newInstance.__r3f.autoRemovedBeforeAppend = true;\n    }\n    appendChild(parent, newInstance);\n\n    // Re-bind event handlers\n    if (newInstance.raycast && newInstance.__r3f.eventCount) {\n      const rootState = newInstance.__r3f.root.getState();\n      rootState.internal.interaction.push(newInstance);\n    }\n    [fiber, fiber.alternate].forEach(fiber => {\n      if (fiber !== null) {\n        fiber.stateNode = newInstance;\n        if (fiber.ref) {\n          if (typeof fiber.ref === 'function') fiber.ref(newInstance);else fiber.ref.current = newInstance;\n        }\n      }\n    });\n  }\n\n  // Don't handle text instances, warn on undefined behavior\n  const handleTextInstance = () => console.warn('Text is not allowed in the R3F tree! This could be stray whitespace or characters.');\n  const reconciler = Reconciler__default[\"default\"]({\n    createInstance,\n    removeChild,\n    appendChild,\n    appendInitialChild: appendChild,\n    insertBefore,\n    supportsMutation: true,\n    isPrimaryRenderer: false,\n    supportsPersistence: false,\n    supportsHydration: false,\n    noTimeout: -1,\n    appendChildToContainer: (container, child) => {\n      if (!child) return;\n\n      // Don't append to unmounted container\n      const scene = container.getState().scene;\n      if (!scene.__r3f) return;\n\n      // Link current root to the default scene\n      scene.__r3f.root = container;\n      appendChild(scene, child);\n    },\n    removeChildFromContainer: (container, child) => {\n      if (!child) return;\n      removeChild(container.getState().scene, child);\n    },\n    insertInContainerBefore: (container, child, beforeChild) => {\n      if (!child || !beforeChild) return;\n\n      // Don't append to unmounted container\n      const scene = container.getState().scene;\n      if (!scene.__r3f) return;\n      insertBefore(scene, child, beforeChild);\n    },\n    getRootHostContext: () => null,\n    getChildHostContext: parentHostContext => parentHostContext,\n    finalizeInitialChildren(instance) {\n      var _instance$__r3f2;\n      const localState = (_instance$__r3f2 = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f2 : {};\n      // https://github.com/facebook/react/issues/20271\n      // Returning true will trigger commitMount\n      return Boolean(localState.handlers);\n    },\n    prepareUpdate(instance, _type, oldProps, newProps) {\n      var _instance$__r3f3;\n      const localState = (_instance$__r3f3 = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f3 : {};\n\n      // Create diff-sets\n      if (localState.primitive && newProps.object && newProps.object !== instance) {\n        return [true];\n      } else {\n        // This is a data object, let's extract critical information about it\n        const {\n          args: argsNew = [],\n          children: cN,\n          ...restNew\n        } = newProps;\n        const {\n          args: argsOld = [],\n          children: cO,\n          ...restOld\n        } = oldProps;\n\n        // Throw if an object or literal was passed for args\n        if (!Array.isArray(argsNew)) throw new Error('R3F: the args prop must be an array!');\n\n        // If it has new props or arguments, then it needs to be re-instantiated\n        if (argsNew.some((value, index) => value !== argsOld[index])) return [true];\n        // Create a diff-set, flag if there are any changes\n        const diff = diffProps(instance, restNew, restOld, true);\n        if (diff.changes.length) return [false, diff];\n\n        // Otherwise do not touch the instance\n        return null;\n      }\n    },\n    commitUpdate(instance, [reconstruct, diff], type, _oldProps, newProps, fiber) {\n      // Reconstruct when args or <primitive object={...} have changes\n      if (reconstruct) switchInstance(instance, type, newProps, fiber);\n      // Otherwise just overwrite props\n      else applyProps$1(instance, diff);\n    },\n    commitMount(instance, _type, _props, _int) {\n      var _instance$__r3f4;\n      // https://github.com/facebook/react/issues/20271\n      // This will make sure events are only added once to the central container\n      const localState = (_instance$__r3f4 = instance.__r3f) != null ? _instance$__r3f4 : {};\n      if (instance.raycast && localState.handlers && localState.eventCount) {\n        instance.__r3f.root.getState().internal.interaction.push(instance);\n      }\n    },\n    getPublicInstance: instance => instance,\n    prepareForCommit: () => null,\n    preparePortalMount: container => prepare(container.getState().scene),\n    resetAfterCommit: () => {},\n    shouldSetTextContent: () => false,\n    clearContainer: () => false,\n    hideInstance(instance) {\n      var _instance$__r3f5;\n      // Detach while the instance is hidden\n      const {\n        attach: type,\n        parent\n      } = (_instance$__r3f5 = instance.__r3f) != null ? _instance$__r3f5 : {};\n      if (type && parent) detach(parent, instance, type);\n      if (instance.isObject3D) instance.visible = false;\n      invalidateInstance(instance);\n    },\n    unhideInstance(instance, props) {\n      var _instance$__r3f6;\n      // Re-attach when the instance is unhidden\n      const {\n        attach: type,\n        parent\n      } = (_instance$__r3f6 = instance.__r3f) != null ? _instance$__r3f6 : {};\n      if (type && parent) attach(parent, instance, type);\n      if (instance.isObject3D && props.visible == null || props.visible) instance.visible = true;\n      invalidateInstance(instance);\n    },\n    createTextInstance: handleTextInstance,\n    hideTextInstance: handleTextInstance,\n    unhideTextInstance: handleTextInstance,\n    // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r916356874\n    // @ts-ignore\n    getCurrentEventPriority: () => _getEventPriority ? _getEventPriority() : constants.DefaultEventPriority,\n    beforeActiveInstanceBlur: () => {},\n    afterActiveInstanceBlur: () => {},\n    detachDeletedInstance: () => {},\n    now: typeof performance !== 'undefined' && is.fun(performance.now) ? performance.now : is.fun(Date.now) ? Date.now : () => 0,\n    // https://github.com/pmndrs/react-three-fiber/pull/2360#discussion_r920883503\n    scheduleTimeout: is.fun(setTimeout) ? setTimeout : undefined,\n    cancelTimeout: is.fun(clearTimeout) ? clearTimeout : undefined\n  });\n  return {\n    reconciler,\n    applyProps: applyProps$1\n  };\n}\n\nvar _window$document, _window$navigator;\n/**\n * Returns `true` with correct TS type inference if an object has a configurable color space (since r152).\n */\nconst hasColorSpace = object => 'colorSpace' in object || 'outputColorSpace' in object;\n/**\n * The current THREE.ColorManagement instance, if present.\n */\nconst getColorManagement = () => {\n  var _ColorManagement;\n  return (_ColorManagement = catalogue.ColorManagement) != null ? _ColorManagement : null;\n};\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst isRef = obj => obj && obj.hasOwnProperty('current');\n\n/**\n * An SSR-friendly useLayoutEffect.\n *\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect elsewhere.\n *\n * @see https://github.com/facebook/react/issues/14927\n */\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && ((_window$document = window.document) != null && _window$document.createElement || ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.product) === 'ReactNative') ? React__namespace.useLayoutEffect : React__namespace.useEffect;\nfunction useMutableCallback(fn) {\n  const ref = React__namespace.useRef(fn);\n  useIsomorphicLayoutEffect(() => void (ref.current = fn), [fn]);\n  return ref;\n}\nfunction Block({\n  set\n}) {\n  useIsomorphicLayoutEffect(() => {\n    set(new Promise(() => null));\n    return () => set(false);\n  }, [set]);\n  return null;\n}\nclass ErrorBoundary extends React__namespace.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false\n    };\n  }\n  componentDidCatch(err) {\n    this.props.set(err);\n  }\n  render() {\n    return this.state.error ? null : this.props.children;\n  }\n}\nErrorBoundary.getDerivedStateFromError = () => ({\n  error: true\n});\nconst DEFAULT = '__default';\nconst DEFAULTS = new Map();\nconst isDiffSet = def => def && !!def.memoized && !!def.changes;\nfunction calculateDpr(dpr) {\n  var _window$devicePixelRa;\n  // Err on the side of progress by assuming 2x dpr if we can't detect it\n  // This will happen in workers where window is defined but dpr isn't.\n  const target = typeof window !== 'undefined' ? (_window$devicePixelRa = window.devicePixelRatio) != null ? _window$devicePixelRa : 2 : 1;\n  return Array.isArray(dpr) ? Math.min(Math.max(dpr[0], target), dpr[1]) : dpr;\n}\n\n/**\n * Returns instance root state\n */\nconst getRootState = obj => {\n  var _r3f;\n  return (_r3f = obj.__r3f) == null ? void 0 : _r3f.root.getState();\n};\n// A collection of compare functions\nconst is = {\n  obj: a => a === Object(a) && !is.arr(a) && typeof a !== 'function',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  boo: a => typeof a === 'boolean',\n  und: a => a === void 0,\n  arr: a => Array.isArray(a),\n  equ(a, b, {\n    arrays = 'shallow',\n    objects = 'reference',\n    strict = true\n  } = {}) {\n    // Wrong type or one of the two undefined, doesn't match\n    if (typeof a !== typeof b || !!a !== !!b) return false;\n    // Atomic, just compare a against b\n    if (is.str(a) || is.num(a)) return a === b;\n    const isObj = is.obj(a);\n    if (isObj && objects === 'reference') return a === b;\n    const isArr = is.arr(a);\n    if (isArr && arrays === 'reference') return a === b;\n    // Array or Object, shallow compare first to see if it's a match\n    if ((isArr || isObj) && a === b) return true;\n    // Last resort, go through keys\n    let i;\n    // Check if a has all the keys of b\n    for (i in a) if (!(i in b)) return false;\n    // Check if values between keys match\n    if (isObj && arrays === 'shallow' && objects === 'shallow') {\n      for (i in strict ? b : a) if (!is.equ(a[i], b[i], {\n        strict,\n        objects: 'reference'\n      })) return false;\n    } else {\n      for (i in strict ? b : a) if (a[i] !== b[i]) return false;\n    }\n    // If i is undefined\n    if (is.und(i)) {\n      // If both arrays are empty we consider them equal\n      if (isArr && a.length === 0 && b.length === 0) return true;\n      // If both objects are empty we consider them equal\n      if (isObj && Object.keys(a).length === 0 && Object.keys(b).length === 0) return true;\n      // Otherwise match them by value\n      if (a !== b) return false;\n    }\n    return true;\n  }\n};\n\n// Collects nodes and materials from a THREE.Object3D\nfunction buildGraph(object) {\n  const data = {\n    nodes: {},\n    materials: {}\n  };\n  if (object) {\n    object.traverse(obj => {\n      if (obj.name) data.nodes[obj.name] = obj;\n      if (obj.material && !data.materials[obj.material.name]) data.materials[obj.material.name] = obj.material;\n    });\n  }\n  return data;\n}\n\n// Disposes an object and all its properties\nfunction dispose(obj) {\n  if (obj.dispose && obj.type !== 'Scene') obj.dispose();\n  for (const p in obj) {\n    p.dispose == null ? void 0 : p.dispose();\n    delete obj[p];\n  }\n}\n\n// Each object in the scene carries a small LocalState descriptor\nfunction prepare(object, state) {\n  const instance = object;\n  instance.__r3f = {\n    type: '',\n    root: null,\n    previousAttach: null,\n    memoizedProps: {},\n    eventCount: 0,\n    handlers: {},\n    objects: [],\n    parent: null,\n    ...state\n  };\n  return object;\n}\nfunction resolve(instance, key) {\n  let target = instance;\n  if (key.includes('-')) {\n    const entries = key.split('-');\n    const last = entries.pop();\n    target = entries.reduce((acc, key) => acc[key], instance);\n    return {\n      target,\n      key: last\n    };\n  } else return {\n    target,\n    key\n  };\n}\n\n// Checks if a dash-cased string ends with an integer\nconst INDEX_REGEX = /-\\d+$/;\nfunction attach(parent, child, type) {\n  if (is.str(type)) {\n    // If attaching into an array (foo-0), create one\n    if (INDEX_REGEX.test(type)) {\n      const root = type.replace(INDEX_REGEX, '');\n      const {\n        target,\n        key\n      } = resolve(parent, root);\n      if (!Array.isArray(target[key])) target[key] = [];\n    }\n    const {\n      target,\n      key\n    } = resolve(parent, type);\n    child.__r3f.previousAttach = target[key];\n    target[key] = child;\n  } else child.__r3f.previousAttach = type(parent, child);\n}\nfunction detach(parent, child, type) {\n  var _child$__r3f, _child$__r3f2;\n  if (is.str(type)) {\n    const {\n      target,\n      key\n    } = resolve(parent, type);\n    const previous = child.__r3f.previousAttach;\n    // When the previous value was undefined, it means the value was never set to begin with\n    if (previous === undefined) delete target[key];\n    // Otherwise set the previous value\n    else target[key] = previous;\n  } else (_child$__r3f = child.__r3f) == null ? void 0 : _child$__r3f.previousAttach == null ? void 0 : _child$__r3f.previousAttach(parent, child);\n  (_child$__r3f2 = child.__r3f) == null ? true : delete _child$__r3f2.previousAttach;\n}\n\n// This function prepares a set of changes to be applied to the instance\nfunction diffProps(instance, {\n  children: cN,\n  key: kN,\n  ref: rN,\n  ...props\n}, {\n  children: cP,\n  key: kP,\n  ref: rP,\n  ...previous\n} = {}, remove = false) {\n  var _instance$__r3f;\n  const localState = (_instance$__r3f = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f : {};\n  const entries = Object.entries(props);\n  const changes = [];\n\n  // Catch removed props, prepend them so they can be reset or removed\n  if (remove) {\n    const previousKeys = Object.keys(previous);\n    for (let i = 0; i < previousKeys.length; i++) {\n      if (!props.hasOwnProperty(previousKeys[i])) entries.unshift([previousKeys[i], DEFAULT + 'remove']);\n    }\n  }\n  entries.forEach(([key, value]) => {\n    var _instance$__r3f2;\n    // Bail out on primitive object\n    if ((_instance$__r3f2 = instance.__r3f) != null && _instance$__r3f2.primitive && key === 'object') return;\n    // When props match bail out\n    if (is.equ(value, previous[key])) return;\n    // Collect handlers and bail out\n    if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(key)) return changes.push([key, value, true, []]);\n    // Split dashed props\n    let entries = [];\n    if (key.includes('-')) entries = key.split('-');\n    changes.push([key, value, false, entries]);\n\n    // Reset pierced props\n    for (const prop in props) {\n      const value = props[prop];\n      if (prop.startsWith(`${key}-`)) changes.push([prop, value, false, prop.split('-')]);\n    }\n  });\n  const memoized = {\n    ...props\n  };\n  if (localState.memoizedProps && localState.memoizedProps.args) memoized.args = localState.memoizedProps.args;\n  if (localState.memoizedProps && localState.memoizedProps.attach) memoized.attach = localState.memoizedProps.attach;\n  return {\n    memoized,\n    changes\n  };\n}\n\n// This function applies a set of changes to the instance\nfunction applyProps$1(instance, data) {\n  var _instance$__r3f3, _root$getState, _instance$__r3f4;\n  // Filter equals, events and reserved props\n  const localState = (_instance$__r3f3 = instance.__r3f) != null ? _instance$__r3f3 : {};\n  const root = localState.root;\n  const rootState = (_root$getState = root == null ? void 0 : root.getState == null ? void 0 : root.getState()) != null ? _root$getState : {};\n  const {\n    memoized,\n    changes\n  } = isDiffSet(data) ? data : diffProps(instance, data);\n  const prevHandlers = localState.eventCount;\n\n  // Prepare memoized props\n  if (instance.__r3f) instance.__r3f.memoizedProps = memoized;\n  for (let i = 0; i < changes.length; i++) {\n    let [key, value, isEvent, keys] = changes[i];\n\n    // Alias (output)encoding => (output)colorSpace (since r152)\n    // https://github.com/pmndrs/react-three-fiber/pull/2829\n    if (hasColorSpace(instance)) {\n      const sRGBEncoding = 3001;\n      const SRGBColorSpace = 'srgb';\n      const LinearSRGBColorSpace = 'srgb-linear';\n      if (key === 'encoding') {\n        key = 'colorSpace';\n        value = value === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n      } else if (key === 'outputEncoding') {\n        key = 'outputColorSpace';\n        value = value === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n      }\n    }\n    let currentInstance = instance;\n    let targetProp = currentInstance[key];\n\n    // Revolve dashed props\n    if (keys.length) {\n      targetProp = keys.reduce((acc, key) => acc[key], instance);\n      // If the target is atomic, it forces us to switch the root\n      if (!(targetProp && targetProp.set)) {\n        const [name, ...reverseEntries] = keys.reverse();\n        currentInstance = reverseEntries.reverse().reduce((acc, key) => acc[key], instance);\n        key = name;\n      }\n    }\n\n    // https://github.com/mrdoob/three.js/issues/21209\n    // HMR/fast-refresh relies on the ability to cancel out props, but threejs\n    // has no means to do this. Hence we curate a small collection of value-classes\n    // with their respective constructor/set arguments\n    // For removed props, try to set default values, if possible\n    if (value === DEFAULT + 'remove') {\n      if (currentInstance.constructor) {\n        // create a blank slate of the instance and copy the particular parameter.\n        let ctor = DEFAULTS.get(currentInstance.constructor);\n        if (!ctor) {\n          // @ts-ignore\n          ctor = new currentInstance.constructor();\n          DEFAULTS.set(currentInstance.constructor, ctor);\n        }\n        value = ctor[key];\n      } else {\n        // instance does not have constructor, just set it to 0\n        value = 0;\n      }\n    }\n\n    // Deal with pointer events ...\n    if (isEvent) {\n      if (value) localState.handlers[key] = value;else delete localState.handlers[key];\n      localState.eventCount = Object.keys(localState.handlers).length;\n    }\n    // Special treatment for objects with support for set/copy, and layers\n    else if (targetProp && targetProp.set && (targetProp.copy || targetProp instanceof THREE__namespace.Layers)) {\n      // If value is an array\n      if (Array.isArray(value)) {\n        if (targetProp.fromArray) targetProp.fromArray(value);else targetProp.set(...value);\n      }\n      // Test again target.copy(class) next ...\n      else if (targetProp.copy && value && value.constructor && targetProp.constructor === value.constructor) {\n        targetProp.copy(value);\n      }\n      // If nothing else fits, just set the single value, ignore undefined\n      // https://github.com/pmndrs/react-three-fiber/issues/274\n      else if (value !== undefined) {\n        const isColor = targetProp instanceof THREE__namespace.Color;\n        // Allow setting array scalars\n        if (!isColor && targetProp.setScalar) targetProp.setScalar(value);\n        // Layers have no copy function, we must therefore copy the mask property\n        else if (targetProp instanceof THREE__namespace.Layers && value instanceof THREE__namespace.Layers) targetProp.mask = value.mask;\n        // Otherwise just set ...\n        else targetProp.set(value);\n        // For versions of three which don't support THREE.ColorManagement,\n        // Auto-convert sRGB colors\n        // https://github.com/pmndrs/react-three-fiber/issues/344\n        if (!getColorManagement() && !rootState.linear && isColor) targetProp.convertSRGBToLinear();\n      }\n      // Else, just overwrite the value\n    } else {\n      currentInstance[key] = value;\n\n      // Auto-convert sRGB textures, for now ...\n      // https://github.com/pmndrs/react-three-fiber/issues/344\n      if (currentInstance[key] instanceof THREE__namespace.Texture &&\n      // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129\n      currentInstance[key].format === THREE__namespace.RGBAFormat && currentInstance[key].type === THREE__namespace.UnsignedByteType) {\n        const texture = currentInstance[key];\n        if (hasColorSpace(texture) && hasColorSpace(rootState.gl)) texture.colorSpace = rootState.gl.outputColorSpace;else texture.encoding = rootState.gl.outputEncoding;\n      }\n    }\n    invalidateInstance(instance);\n  }\n  if (localState.parent && rootState.internal && instance.raycast && prevHandlers !== localState.eventCount) {\n    // Pre-emptively remove the instance from the interaction manager\n    const index = rootState.internal.interaction.indexOf(instance);\n    if (index > -1) rootState.internal.interaction.splice(index, 1);\n    // Add the instance to the interaction manager only when it has handlers\n    if (localState.eventCount) rootState.internal.interaction.push(instance);\n  }\n\n  // Call the update lifecycle when it is being updated, but only when it is part of the scene.\n  // Skip updates to the `onUpdate` prop itself\n  const isCircular = changes.length === 1 && changes[0][0] === 'onUpdate';\n  if (!isCircular && changes.length && (_instance$__r3f4 = instance.__r3f) != null && _instance$__r3f4.parent) updateInstance(instance);\n  return instance;\n}\nfunction invalidateInstance(instance) {\n  var _instance$__r3f5, _instance$__r3f5$root;\n  const state = (_instance$__r3f5 = instance.__r3f) == null ? void 0 : (_instance$__r3f5$root = _instance$__r3f5.root) == null ? void 0 : _instance$__r3f5$root.getState == null ? void 0 : _instance$__r3f5$root.getState();\n  if (state && state.internal.frames === 0) state.invalidate();\n}\nfunction updateInstance(instance) {\n  instance.onUpdate == null ? void 0 : instance.onUpdate(instance);\n}\nfunction updateCamera(camera, size) {\n  // https://github.com/pmndrs/react-three-fiber/issues/92\n  // Do not mess with the camera if it belongs to the user\n  if (!camera.manual) {\n    if (isOrthographicCamera(camera)) {\n      camera.left = size.width / -2;\n      camera.right = size.width / 2;\n      camera.top = size.height / 2;\n      camera.bottom = size.height / -2;\n    } else {\n      camera.aspect = size.width / size.height;\n    }\n    camera.updateProjectionMatrix();\n    // https://github.com/pmndrs/react-three-fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    camera.updateMatrixWorld();\n  }\n}\n\nfunction makeId(event) {\n  return (event.eventObject || event.object).uuid + '/' + event.index + event.instanceId;\n}\n\n// https://github.com/facebook/react/tree/main/packages/react-reconciler#getcurrenteventpriority\n// Gives React a clue as to how import the current interaction is\nfunction getEventPriority() {\n  var _globalScope$event;\n  // Get a handle to the current global scope in window and worker contexts if able\n  // https://github.com/pmndrs/react-three-fiber/pull/2493\n  const globalScope = typeof self !== 'undefined' && self || typeof window !== 'undefined' && window;\n  if (!globalScope) return constants.DefaultEventPriority;\n  const name = (_globalScope$event = globalScope.event) == null ? void 0 : _globalScope$event.type;\n  switch (name) {\n    case 'click':\n    case 'contextmenu':\n    case 'dblclick':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointerup':\n      return constants.DiscreteEventPriority;\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'pointerenter':\n    case 'pointerleave':\n    case 'wheel':\n      return constants.ContinuousEventPriority;\n    default:\n      return constants.DefaultEventPriority;\n  }\n}\n\n/**\n * Release pointer captures.\n * This is called by releasePointerCapture in the API, and when an object is removed.\n */\nfunction releaseInternalPointerCapture(capturedMap, obj, captures, pointerId) {\n  const captureData = captures.get(obj);\n  if (captureData) {\n    captures.delete(obj);\n    // If this was the last capturing object for this pointer\n    if (captures.size === 0) {\n      capturedMap.delete(pointerId);\n      captureData.target.releasePointerCapture(pointerId);\n    }\n  }\n}\nfunction removeInteractivity(store, object) {\n  const {\n    internal\n  } = store.getState();\n  // Removes every trace of an object from the data store\n  internal.interaction = internal.interaction.filter(o => o !== object);\n  internal.initialHits = internal.initialHits.filter(o => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      // Clear out intersects, they are outdated by now\n      internal.hovered.delete(key);\n    }\n  });\n  internal.capturedMap.forEach((captures, pointerId) => {\n    releaseInternalPointerCapture(internal.capturedMap, object, captures, pointerId);\n  });\n}\nfunction createEvents(store) {\n  /** Calculates delta */\n  function calculateDistance(event) {\n    const {\n      internal\n    } = store.getState();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n  function filterPointerEvents(objects) {\n    return objects.filter(obj => ['Move', 'Over', 'Enter', 'Out', 'Leave'].some(name => {\n      var _r3f;\n      return (_r3f = obj.__r3f) == null ? void 0 : _r3f.handlers['onPointer' + name];\n    }));\n  }\n  function intersect(event, filter) {\n    const state = store.getState();\n    const duplicates = new Set();\n    const intersections = [];\n    // Allow callers to eliminate event objects\n    const eventsObjects = filter ? filter(state.internal.interaction) : state.internal.interaction;\n    // Reset all raycaster cameras to undefined\n    for (let i = 0; i < eventsObjects.length; i++) {\n      const state = getRootState(eventsObjects[i]);\n      if (state) {\n        state.raycaster.camera = undefined;\n      }\n    }\n    if (!state.previousRoot) {\n      // Make sure root-level pointer and ray are set up\n      state.events.compute == null ? void 0 : state.events.compute(event, state);\n    }\n    function handleRaycast(obj) {\n      const state = getRootState(obj);\n      // Skip event handling when noEvents is set, or when the raycasters camera is null\n      if (!state || !state.events.enabled || state.raycaster.camera === null) return [];\n\n      // When the camera is undefined we have to call the event layers update function\n      if (state.raycaster.camera === undefined) {\n        var _state$previousRoot;\n        state.events.compute == null ? void 0 : state.events.compute(event, state, (_state$previousRoot = state.previousRoot) == null ? void 0 : _state$previousRoot.getState());\n        // If the camera is still undefined we have to skip this layer entirely\n        if (state.raycaster.camera === undefined) state.raycaster.camera = null;\n      }\n\n      // Intersect object by object\n      return state.raycaster.camera ? state.raycaster.intersectObject(obj, true) : [];\n    }\n\n    // Collect events\n    let hits = eventsObjects\n    // Intersect objects\n    .flatMap(handleRaycast)\n    // Sort by event priority and distance\n    .sort((a, b) => {\n      const aState = getRootState(a.object);\n      const bState = getRootState(b.object);\n      if (!aState || !bState) return a.distance - b.distance;\n      return bState.events.priority - aState.events.priority || a.distance - b.distance;\n    })\n    // Filter out duplicates\n    .filter(item => {\n      const id = makeId(item);\n      if (duplicates.has(id)) return false;\n      duplicates.add(id);\n      return true;\n    });\n\n    // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order, this likely only makes sense on the root filter\n    if (state.events.filter) hits = state.events.filter(hits, state);\n\n    // Bubble up the events, find the event source (eventObject)\n    for (const hit of hits) {\n      let eventObject = hit.object;\n      // Bubble event up\n      while (eventObject) {\n        var _r3f2;\n        if ((_r3f2 = eventObject.__r3f) != null && _r3f2.eventCount) intersections.push({\n          ...hit,\n          eventObject\n        });\n        eventObject = eventObject.parent;\n      }\n    }\n\n    // If the interaction is captured, make all capturing targets part of the intersect.\n    if ('pointerId' in event && state.internal.capturedMap.has(event.pointerId)) {\n      for (let captureData of state.internal.capturedMap.get(event.pointerId).values()) {\n        if (!duplicates.has(makeId(captureData.intersection))) intersections.push(captureData.intersection);\n      }\n    }\n    return intersections;\n  }\n\n  /**  Handles intersections by forwarding them to handlers */\n  function handleIntersects(intersections, event, delta, callback) {\n    const rootState = store.getState();\n\n    // If anything has been found, forward it to the event listeners\n    if (intersections.length) {\n      const localState = {\n        stopped: false\n      };\n      for (const hit of intersections) {\n        const state = getRootState(hit.object) || rootState;\n        const {\n          raycaster,\n          pointer,\n          camera,\n          internal\n        } = state;\n        const unprojectedPoint = new THREE__namespace.Vector3(pointer.x, pointer.y, 0).unproject(camera);\n        const hasPointerCapture = id => {\n          var _internal$capturedMap, _internal$capturedMap2;\n          return (_internal$capturedMap = (_internal$capturedMap2 = internal.capturedMap.get(id)) == null ? void 0 : _internal$capturedMap2.has(hit.eventObject)) != null ? _internal$capturedMap : false;\n        };\n        const setPointerCapture = id => {\n          const captureData = {\n            intersection: hit,\n            target: event.target\n          };\n          if (internal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            internal.capturedMap.get(id).set(hit.eventObject, captureData);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            internal.capturedMap.set(id, new Map([[hit.eventObject, captureData]]));\n          }\n          event.target.setPointerCapture(id);\n        };\n        const releasePointerCapture = id => {\n          const captures = internal.capturedMap.get(id);\n          if (captures) {\n            releaseInternalPointerCapture(internal.capturedMap, hit.eventObject, captures, id);\n          }\n        };\n\n        // Add native event props\n        let extractEventProps = {};\n        // This iterates over the event's properties including the inherited ones. Native PointerEvents have most of their props as getters which are inherited, but polyfilled PointerEvents have them all as their own properties (i.e. not inherited). We can't use Object.keys() or Object.entries() as they only return \"own\" properties; nor Object.getPrototypeOf(event) as that *doesn't* return \"own\" properties, only inherited ones.\n        for (let prop in event) {\n          let property = event[prop];\n          // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n          if (typeof property !== 'function') extractEventProps[prop] = property;\n        }\n        let raycastEvent = {\n          ...hit,\n          ...extractEventProps,\n          pointer,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster.ray,\n          camera: camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation() {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer = 'pointerId' in event && internal.capturedMap.get(event.pointerId);\n\n            // We only authorize stopPropagation...\n            if (\n            // ...if this pointer hasn't been captured\n            !capturesForPointer ||\n            // ... or if the hit object is capturing the pointer\n            capturesForPointer.has(hit.eventObject)) {\n              raycastEvent.stopped = localState.stopped = true;\n              // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n              if (internal.hovered.size && Array.from(internal.hovered.values()).find(i => i.eventObject === hit.eventObject)) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(0, intersections.indexOf(hit));\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          // there should be a distinction between target and currentTarget\n          target: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          currentTarget: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          nativeEvent: event\n        };\n\n        // Call subscribers\n        callback(raycastEvent);\n        // Event bubbling may be interrupted by stopPropagation\n        if (localState.stopped === true) break;\n      }\n    }\n    return intersections;\n  }\n  function cancelPointer(intersections) {\n    const {\n      internal\n    } = store.getState();\n    for (const hoveredObj of internal.hovered.values()) {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (!intersections.length || !intersections.find(hit => hit.object === hoveredObj.object && hit.index === hoveredObj.index && hit.instanceId === hoveredObj.instanceId)) {\n        const eventObject = hoveredObj.eventObject;\n        const instance = eventObject.__r3f;\n        const handlers = instance == null ? void 0 : instance.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n        if (instance != null && instance.eventCount) {\n          // Clear out intersects, they are outdated by now\n          const data = {\n            ...hoveredObj,\n            intersections\n          };\n          handlers.onPointerOut == null ? void 0 : handlers.onPointerOut(data);\n          handlers.onPointerLeave == null ? void 0 : handlers.onPointerLeave(data);\n        }\n      }\n    }\n  }\n  function pointerMissed(event, objects) {\n    for (let i = 0; i < objects.length; i++) {\n      const instance = objects[i].__r3f;\n      instance == null ? void 0 : instance.handlers.onPointerMissed == null ? void 0 : instance.handlers.onPointerMissed(event);\n    }\n  }\n  function handlePointer(name) {\n    // Deal with cancelation\n    switch (name) {\n      case 'onPointerLeave':\n      case 'onPointerCancel':\n        return () => cancelPointer([]);\n      case 'onLostPointerCapture':\n        return event => {\n          const {\n            internal\n          } = store.getState();\n          if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n            // If the object event interface had onLostPointerCapture, we'd call it here on every\n            // object that's getting removed. We call it on the next frame because onLostPointerCapture\n            // fires before onPointerUp. Otherwise pointerUp would never be called if the event didn't\n            // happen in the object it originated from, leaving components in a in-between state.\n            requestAnimationFrame(() => {\n              // Only release if pointer-up didn't do it already\n              if (internal.capturedMap.has(event.pointerId)) {\n                internal.capturedMap.delete(event.pointerId);\n                cancelPointer([]);\n              }\n            });\n          }\n        };\n    }\n\n    // Any other pointer goes here ...\n    return function handleEvent(event) {\n      const {\n        onPointerMissed,\n        internal\n      } = store.getState();\n\n      // prepareRay(event)\n      internal.lastEvent.current = event;\n\n      // Get fresh intersects\n      const isPointerMove = name === 'onPointerMove';\n      const isClickEvent = name === 'onClick' || name === 'onContextMenu' || name === 'onDoubleClick';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = intersect(event, filter);\n      const delta = isClickEvent ? calculateDistance(event) : 0;\n\n      // Save initial coordinates on pointer-down\n      if (name === 'onPointerDown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map(hit => hit.eventObject);\n      }\n\n      // If a click yields no results, pass it back to the user as a miss\n      // Missed events have to come first in order to establish user-land side-effect clean up\n      if (isClickEvent && !hits.length) {\n        if (delta <= 2) {\n          pointerMissed(event, internal.interaction);\n          if (onPointerMissed) onPointerMissed(event);\n        }\n      }\n      // Take care of unhover\n      if (isPointerMove) cancelPointer(hits);\n      function onIntersect(data) {\n        const eventObject = data.eventObject;\n        const instance = eventObject.__r3f;\n        const handlers = instance == null ? void 0 : instance.handlers;\n\n        // Check presence of handlers\n        if (!(instance != null && instance.eventCount)) return;\n\n        /*\n        MAYBE TODO, DELETE IF NOT: \n          Check if the object is captured, captured events should not have intersects running in parallel\n          But wouldn't it be better to just replace capturedMap with a single entry?\n          Also, are we OK with straight up making picking up multiple objects impossible?\n          \n        const pointerId = (data as ThreeEvent<PointerEvent>).pointerId        \n        if (pointerId !== undefined) {\n          const capturedMeshSet = internal.capturedMap.get(pointerId)\n          if (capturedMeshSet) {\n            const captured = capturedMeshSet.get(eventObject)\n            if (captured && captured.localState.stopped) return\n          }\n        }*/\n\n        if (isPointerMove) {\n          // Move event ...\n          if (handlers.onPointerOver || handlers.onPointerEnter || handlers.onPointerOut || handlers.onPointerLeave) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.onPointerOver == null ? void 0 : handlers.onPointerOver(data);\n              handlers.onPointerEnter == null ? void 0 : handlers.onPointerEnter(data);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          }\n          // Call mouse move\n          handlers.onPointerMove == null ? void 0 : handlers.onPointerMove(data);\n        } else {\n          // All other events ...\n          const handler = handlers[name];\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (!isClickEvent || internal.initialHits.includes(eventObject)) {\n              // Missed events have to come first\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n              // Now call the handler\n              handler(data);\n            }\n          } else {\n            // Trigger onPointerMissed on all elements that have pointer over/out handlers, but not click and weren't hit\n            if (isClickEvent && internal.initialHits.includes(eventObject)) {\n              pointerMissed(event, internal.interaction.filter(object => !internal.initialHits.includes(object)));\n            }\n          }\n        }\n      }\n      handleIntersects(hits, event, delta, onIntersect);\n    };\n  }\n  return {\n    handlePointer\n  };\n}\n\n// Keys that shouldn't be copied between R3F stores\nconst privateKeys = ['set', 'get', 'setSize', 'setFrameloop', 'setDpr', 'events', 'invalidate', 'advance', 'size', 'viewport'];\nconst isRenderer = def => !!(def != null && def.render);\nconst context = /*#__PURE__*/React__namespace.createContext(null);\nconst createStore = (invalidate, advance) => {\n  const rootState = create__default[\"default\"]((set, get) => {\n    const position = new THREE__namespace.Vector3();\n    const defaultTarget = new THREE__namespace.Vector3();\n    const tempTarget = new THREE__namespace.Vector3();\n    function getCurrentViewport(camera = get().camera, target = defaultTarget, size = get().size) {\n      const {\n        width,\n        height,\n        top,\n        left\n      } = size;\n      const aspect = width / height;\n      if (target instanceof THREE__namespace.Vector3) tempTarget.copy(target);else tempTarget.set(...target);\n      const distance = camera.getWorldPosition(position).distanceTo(tempTarget);\n      if (isOrthographicCamera(camera)) {\n        return {\n          width: width / camera.zoom,\n          height: height / camera.zoom,\n          top,\n          left,\n          factor: 1,\n          distance,\n          aspect\n        };\n      } else {\n        const fov = camera.fov * Math.PI / 180; // convert vertical fov to radians\n        const h = 2 * Math.tan(fov / 2) * distance; // visible height\n        const w = h * (width / height);\n        return {\n          width: w,\n          height: h,\n          top,\n          left,\n          factor: width / w,\n          distance,\n          aspect\n        };\n      }\n    }\n    let performanceTimeout = undefined;\n    const setPerformanceCurrent = current => set(state => ({\n      performance: {\n        ...state.performance,\n        current\n      }\n    }));\n    const pointer = new THREE__namespace.Vector2();\n    const rootState = {\n      set,\n      get,\n      // Mock objects that have to be configured\n      gl: null,\n      camera: null,\n      raycaster: null,\n      events: {\n        priority: 1,\n        enabled: true,\n        connected: false\n      },\n      xr: null,\n      scene: null,\n      invalidate: (frames = 1) => invalidate(get(), frames),\n      advance: (timestamp, runGlobalEffects) => advance(timestamp, runGlobalEffects, get()),\n      legacy: false,\n      linear: false,\n      flat: false,\n      controls: null,\n      clock: new THREE__namespace.Clock(),\n      pointer,\n      mouse: pointer,\n      frameloop: 'always',\n      onPointerMissed: undefined,\n      performance: {\n        current: 1,\n        min: 0.5,\n        max: 1,\n        debounce: 200,\n        regress: () => {\n          const state = get();\n          // Clear timeout\n          if (performanceTimeout) clearTimeout(performanceTimeout);\n          // Set lower bound performance\n          if (state.performance.current !== state.performance.min) setPerformanceCurrent(state.performance.min);\n          // Go back to upper bound performance after a while unless something regresses meanwhile\n          performanceTimeout = setTimeout(() => setPerformanceCurrent(get().performance.max), state.performance.debounce);\n        }\n      },\n      size: {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        updateStyle: false\n      },\n      viewport: {\n        initialDpr: 0,\n        dpr: 0,\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        aspect: 0,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport\n      },\n      setEvents: events => set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      })),\n      setSize: (width, height, updateStyle, top, left) => {\n        const camera = get().camera;\n        const size = {\n          width,\n          height,\n          top: top || 0,\n          left: left || 0,\n          updateStyle\n        };\n        set(state => ({\n          size,\n          viewport: {\n            ...state.viewport,\n            ...getCurrentViewport(camera, defaultTarget, size)\n          }\n        }));\n      },\n      setDpr: dpr => set(state => {\n        const resolved = calculateDpr(dpr);\n        return {\n          viewport: {\n            ...state.viewport,\n            dpr: resolved,\n            initialDpr: state.viewport.initialDpr || resolved\n          }\n        };\n      }),\n      setFrameloop: (frameloop = 'always') => {\n        const clock = get().clock;\n\n        // if frameloop === \"never\" clock.elapsedTime is updated using advance(timestamp)\n        clock.stop();\n        clock.elapsedTime = 0;\n        if (frameloop !== 'never') {\n          clock.start();\n          clock.elapsedTime = 0;\n        }\n        set(() => ({\n          frameloop\n        }));\n      },\n      previousRoot: undefined,\n      internal: {\n        active: false,\n        priority: 0,\n        frames: 0,\n        lastEvent: /*#__PURE__*/React__namespace.createRef(),\n        interaction: [],\n        hovered: new Map(),\n        subscribers: [],\n        initialClick: [0, 0],\n        initialHits: [],\n        capturedMap: new Map(),\n        subscribe: (ref, priority, store) => {\n          const internal = get().internal;\n          // If this subscription was given a priority, it takes rendering into its own hands\n          // For that reason we switch off automatic rendering and increase the manual flag\n          // As long as this flag is positive there can be no internal rendering at all\n          // because there could be multiple render subscriptions\n          internal.priority = internal.priority + (priority > 0 ? 1 : 0);\n          internal.subscribers.push({\n            ref,\n            priority,\n            store\n          });\n          // Register subscriber and sort layers from lowest to highest, meaning,\n          // highest priority renders last (on top of the other frames)\n          internal.subscribers = internal.subscribers.sort((a, b) => a.priority - b.priority);\n          return () => {\n            const internal = get().internal;\n            if (internal != null && internal.subscribers) {\n              // Decrease manual flag if this subscription had a priority\n              internal.priority = internal.priority - (priority > 0 ? 1 : 0);\n              // Remove subscriber from list\n              internal.subscribers = internal.subscribers.filter(s => s.ref !== ref);\n            }\n          };\n        }\n      }\n    };\n    return rootState;\n  });\n  const state = rootState.getState();\n  let oldSize = state.size;\n  let oldDpr = state.viewport.dpr;\n  let oldCamera = state.camera;\n  rootState.subscribe(() => {\n    const {\n      camera,\n      size,\n      viewport,\n      gl,\n      set\n    } = rootState.getState();\n\n    // Resize camera and renderer on changes to size and pixelratio\n    if (size !== oldSize || viewport.dpr !== oldDpr) {\n      var _size$updateStyle;\n      oldSize = size;\n      oldDpr = viewport.dpr;\n      // Update camera & renderer\n      updateCamera(camera, size);\n      gl.setPixelRatio(viewport.dpr);\n      const updateStyle = (_size$updateStyle = size.updateStyle) != null ? _size$updateStyle : typeof HTMLCanvasElement !== 'undefined' && gl.domElement instanceof HTMLCanvasElement;\n      gl.setSize(size.width, size.height, updateStyle);\n    }\n\n    // Update viewport once the camera changes\n    if (camera !== oldCamera) {\n      oldCamera = camera;\n      // Update viewport\n      set(state => ({\n        viewport: {\n          ...state.viewport,\n          ...state.viewport.getCurrentViewport(camera)\n        }\n      }));\n    }\n  });\n\n  // Invalidate on any change\n  rootState.subscribe(state => invalidate(state));\n\n  // Return root state\n  return rootState;\n};\n\nfunction createSubs(callback, subs) {\n  const sub = {\n    callback\n  };\n  subs.add(sub);\n  return () => void subs.delete(sub);\n}\nlet i;\nlet globalEffects = new Set();\nlet globalAfterEffects = new Set();\nlet globalTailEffects = new Set();\n\n/**\n * Adds a global render callback which is called each frame.\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addEffect\n */\nconst addEffect = callback => createSubs(callback, globalEffects);\n\n/**\n * Adds a global after-render callback which is called each frame.\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addAfterEffect\n */\nconst addAfterEffect = callback => createSubs(callback, globalAfterEffects);\n\n/**\n * Adds a global callback which is called when rendering stops.\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#addTail\n */\nconst addTail = callback => createSubs(callback, globalTailEffects);\nfunction run(effects, timestamp) {\n  if (!effects.size) return;\n  for (const {\n    callback\n  } of effects.values()) {\n    callback(timestamp);\n  }\n}\nfunction flushGlobalEffects(type, timestamp) {\n  switch (type) {\n    case 'before':\n      return run(globalEffects, timestamp);\n    case 'after':\n      return run(globalAfterEffects, timestamp);\n    case 'tail':\n      return run(globalTailEffects, timestamp);\n  }\n}\nlet subscribers;\nlet subscription;\nfunction render$1(timestamp, state, frame) {\n  // Run local effects\n  let delta = state.clock.getDelta();\n  // In frameloop='never' mode, clock times are updated using the provided timestamp\n  if (state.frameloop === 'never' && typeof timestamp === 'number') {\n    delta = timestamp - state.clock.elapsedTime;\n    state.clock.oldTime = state.clock.elapsedTime;\n    state.clock.elapsedTime = timestamp;\n  }\n  // Call subscribers (useFrame)\n  subscribers = state.internal.subscribers;\n  for (i = 0; i < subscribers.length; i++) {\n    subscription = subscribers[i];\n    subscription.ref.current(subscription.store.getState(), delta, frame);\n  }\n  // Render content\n  if (!state.internal.priority && state.gl.render) state.gl.render(state.scene, state.camera);\n  // Decrease frame count\n  state.internal.frames = Math.max(0, state.internal.frames - 1);\n  return state.frameloop === 'always' ? 1 : state.internal.frames;\n}\nfunction createLoop(roots) {\n  let running = false;\n  let repeat;\n  let frame;\n  let state;\n  function loop(timestamp) {\n    frame = requestAnimationFrame(loop);\n    running = true;\n    repeat = 0;\n\n    // Run effects\n    flushGlobalEffects('before', timestamp);\n\n    // Render all roots\n    for (const root of roots.values()) {\n      var _state$gl$xr;\n      state = root.store.getState();\n      // If the frameloop is invalidated, do not run another frame\n      if (state.internal.active && (state.frameloop === 'always' || state.internal.frames > 0) && !((_state$gl$xr = state.gl.xr) != null && _state$gl$xr.isPresenting)) {\n        repeat += render$1(timestamp, state);\n      }\n    }\n\n    // Run after-effects\n    flushGlobalEffects('after', timestamp);\n\n    // Stop the loop if nothing invalidates it\n    if (repeat === 0) {\n      // Tail call effects, they are called when rendering stops\n      flushGlobalEffects('tail', timestamp);\n\n      // Flag end of operation\n      running = false;\n      return cancelAnimationFrame(frame);\n    }\n  }\n  function invalidate(state, frames = 1) {\n    var _state$gl$xr2;\n    if (!state) return roots.forEach(root => invalidate(root.store.getState()), frames);\n    if ((_state$gl$xr2 = state.gl.xr) != null && _state$gl$xr2.isPresenting || !state.internal.active || state.frameloop === 'never') return;\n    // Increase frames, do not go higher than 60\n    state.internal.frames = Math.min(60, state.internal.frames + frames);\n    // If the render-loop isn't active, start it\n    if (!running) {\n      running = true;\n      requestAnimationFrame(loop);\n    }\n  }\n  function advance(timestamp, runGlobalEffects = true, state, frame) {\n    if (runGlobalEffects) flushGlobalEffects('before', timestamp);\n    if (!state) for (const root of roots.values()) render$1(timestamp, root.store.getState());else render$1(timestamp, state, frame);\n    if (runGlobalEffects) flushGlobalEffects('after', timestamp);\n  }\n  return {\n    loop,\n    /**\n     * Invalidates the view, requesting a frame to be rendered. Will globally invalidate unless passed a root's state.\n     * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#invalidate\n     */\n    invalidate,\n    /**\n     * Advances the frameloop and runs render effects, useful for when manually rendering via `frameloop=\"never\"`.\n     * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#advance\n     */\n    advance\n  };\n}\n\n/**\n * Exposes an object's {@link LocalState}.\n * @see https://docs.pmnd.rs/react-three-fiber/api/additional-exports#useInstanceHandle\n *\n * **Note**: this is an escape hatch to react-internal fields. Expect this to change significantly between versions.\n */\nfunction useInstanceHandle(ref) {\n  const instance = React__namespace.useRef(null);\n  useIsomorphicLayoutEffect(() => void (instance.current = ref.current.__r3f), [ref]);\n  return instance;\n}\nfunction useStore() {\n  const store = React__namespace.useContext(context);\n  if (!store) throw new Error('R3F: Hooks can only be used within the Canvas component!');\n  return store;\n}\n\n/**\n * Accesses R3F's internal state, containing renderer, canvas, scene, etc.\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usethree\n */\nfunction useThree(selector = state => state, equalityFn) {\n  return useStore()(selector, equalityFn);\n}\n\n/**\n * Executes a callback before render in a shared frame loop.\n * Can order effects with render priority or manually render with a positive priority.\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useframe\n */\nfunction useFrame(callback, renderPriority = 0) {\n  const store = useStore();\n  const subscribe = store.getState().internal.subscribe;\n  // Memoize ref\n  const ref = useMutableCallback(callback);\n  // Subscribe on mount, unsubscribe on unmount\n  useIsomorphicLayoutEffect(() => subscribe(ref, renderPriority, store), [renderPriority, subscribe, store]);\n  return null;\n}\n\n/**\n * Returns a node graph of an object with named nodes & materials.\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#usegraph\n */\nfunction useGraph(object) {\n  return React__namespace.useMemo(() => buildGraph(object), [object]);\n}\nconst memoizedLoaders = new WeakMap();\nfunction loadingFn(extensions, onProgress) {\n  return function (Proto, ...input) {\n    // Construct new loader and run extensions\n    let loader = memoizedLoaders.get(Proto);\n    if (!loader) {\n      loader = new Proto();\n      memoizedLoaders.set(Proto, loader);\n    }\n    if (extensions) extensions(loader);\n    // Go through the urls and load them\n    return Promise.all(input.map(input => new Promise((res, reject) => loader.load(input, data => {\n      if (data.scene) Object.assign(data, buildGraph(data.scene));\n      res(data);\n    }, onProgress, error => reject(new Error(`Could not load ${input}: ${error == null ? void 0 : error.message}`)))))).finally(() => loader.dispose == null ? void 0 : loader.dispose());\n  };\n}\n\n/**\n * Synchronously loads and caches assets with a three loader.\n *\n * Note: this hook's caller must be wrapped with `React.Suspense`\n * @see https://docs.pmnd.rs/react-three-fiber/api/hooks#useloader\n */\nfunction useLoader(Proto, input, extensions, onProgress) {\n  // Use suspense to load async assets\n  const keys = Array.isArray(input) ? input : [input];\n  const results = suspendReact.suspend(loadingFn(extensions, onProgress), [Proto, ...keys], {\n    equal: is.equ\n  });\n  // Return the object/s\n  return Array.isArray(input) ? results : results[0];\n}\n\n/**\n * Preloads an asset into cache as a side-effect.\n */\nuseLoader.preload = function (Proto, input, extensions) {\n  const keys = Array.isArray(input) ? input : [input];\n  return suspendReact.preload(loadingFn(extensions), [Proto, ...keys]);\n};\n\n/**\n * Removes a loaded asset from cache.\n */\nuseLoader.clear = function (Proto, input) {\n  const keys = Array.isArray(input) ? input : [input];\n  return suspendReact.clear([Proto, ...keys]);\n};\n\nconst roots = new Map();\nconst {\n  invalidate,\n  advance\n} = createLoop(roots);\nconst {\n  reconciler,\n  applyProps\n} = createRenderer(roots, getEventPriority);\nconst shallowLoose = {\n  objects: 'shallow',\n  strict: false\n};\nconst createRendererInstance = (gl, canvas) => {\n  const customRenderer = typeof gl === 'function' ? gl(canvas) : gl;\n  if (isRenderer(customRenderer)) return customRenderer;else return new THREE__namespace.WebGLRenderer({\n    powerPreference: 'high-performance',\n    canvas: canvas,\n    antialias: true,\n    alpha: true,\n    ...gl\n  });\n};\nfunction computeInitialSize(canvas, defaultSize) {\n  if (defaultSize) return defaultSize;\n  if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement && canvas.parentElement) {\n    const {\n      width,\n      height,\n      top,\n      left\n    } = canvas.parentElement.getBoundingClientRect();\n    return {\n      width,\n      height,\n      top,\n      left\n    };\n  } else if (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return {\n      width: canvas.width,\n      height: canvas.height,\n      top: 0,\n      left: 0\n    };\n  }\n  return {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  };\n}\nfunction createRoot(canvas) {\n  // Check against mistaken use of createRoot\n  const prevRoot = roots.get(canvas);\n  const prevFiber = prevRoot == null ? void 0 : prevRoot.fiber;\n  const prevStore = prevRoot == null ? void 0 : prevRoot.store;\n  if (prevRoot) console.warn('R3F.createRoot should only be called once!');\n\n  // Report when an error was detected in a previous render\n  // https://github.com/pmndrs/react-three-fiber/pull/2261\n  const logRecoverableError = typeof reportError === 'function' ?\n  // In modern browsers, reportError will dispatch an error event,\n  // emulating an uncaught JavaScript error.\n  reportError :\n  // In older browsers and test environments, fallback to console.error.\n  console.error;\n\n  // Create store\n  const store = prevStore || createStore(invalidate, advance);\n  // Create renderer\n  const fiber = prevFiber || reconciler.createContainer(store, constants.ConcurrentRoot, null, false, null, '', logRecoverableError, null);\n  // Map it\n  if (!prevRoot) roots.set(canvas, {\n    fiber,\n    store\n  });\n\n  // Locals\n  let onCreated;\n  let configured = false;\n  let lastCamera;\n  return {\n    configure(props = {}) {\n      let {\n        gl: glConfig,\n        size: propsSize,\n        scene: sceneOptions,\n        events,\n        onCreated: onCreatedCallback,\n        shadows = false,\n        linear = false,\n        flat = false,\n        legacy = false,\n        orthographic = false,\n        frameloop = 'always',\n        dpr = [1, 2],\n        performance,\n        raycaster: raycastOptions,\n        camera: cameraOptions,\n        onPointerMissed\n      } = props;\n      let state = store.getState();\n\n      // Set up renderer (one time only!)\n      let gl = state.gl;\n      if (!state.gl) state.set({\n        gl: gl = createRendererInstance(glConfig, canvas)\n      });\n\n      // Set up raycaster (one time only!)\n      let raycaster = state.raycaster;\n      if (!raycaster) state.set({\n        raycaster: raycaster = new THREE__namespace.Raycaster()\n      });\n\n      // Set raycaster options\n      const {\n        params,\n        ...options\n      } = raycastOptions || {};\n      if (!is.equ(options, raycaster, shallowLoose)) applyProps(raycaster, {\n        ...options\n      });\n      if (!is.equ(params, raycaster.params, shallowLoose)) applyProps(raycaster, {\n        params: {\n          ...raycaster.params,\n          ...params\n        }\n      });\n\n      // Create default camera, don't overwrite any user-set state\n      if (!state.camera || state.camera === lastCamera && !is.equ(lastCamera, cameraOptions, shallowLoose)) {\n        lastCamera = cameraOptions;\n        const isCamera = cameraOptions instanceof THREE__namespace.Camera;\n        const camera = isCamera ? cameraOptions : orthographic ? new THREE__namespace.OrthographicCamera(0, 0, 0, 0, 0.1, 1000) : new THREE__namespace.PerspectiveCamera(75, 0, 0.1, 1000);\n        if (!isCamera) {\n          camera.position.z = 5;\n          if (cameraOptions) applyProps(camera, cameraOptions);\n          // Always look at center by default\n          if (!state.camera && !(cameraOptions != null && cameraOptions.rotation)) camera.lookAt(0, 0, 0);\n        }\n        state.set({\n          camera\n        });\n      }\n\n      // Set up scene (one time only!)\n      if (!state.scene) {\n        let scene;\n        if (sceneOptions instanceof THREE__namespace.Scene) {\n          scene = sceneOptions;\n        } else {\n          scene = new THREE__namespace.Scene();\n          if (sceneOptions) applyProps(scene, sceneOptions);\n        }\n        state.set({\n          scene: prepare(scene)\n        });\n      }\n\n      // Set up XR (one time only!)\n      if (!state.xr) {\n        var _gl$xr;\n        // Handle frame behavior in WebXR\n        const handleXRFrame = (timestamp, frame) => {\n          const state = store.getState();\n          if (state.frameloop === 'never') return;\n          advance(timestamp, true, state, frame);\n        };\n\n        // Toggle render switching on session\n        const handleSessionChange = () => {\n          const state = store.getState();\n          state.gl.xr.enabled = state.gl.xr.isPresenting;\n          state.gl.xr.setAnimationLoop(state.gl.xr.isPresenting ? handleXRFrame : null);\n          if (!state.gl.xr.isPresenting) invalidate(state);\n        };\n\n        // WebXR session manager\n        const xr = {\n          connect() {\n            const gl = store.getState().gl;\n            gl.xr.addEventListener('sessionstart', handleSessionChange);\n            gl.xr.addEventListener('sessionend', handleSessionChange);\n          },\n          disconnect() {\n            const gl = store.getState().gl;\n            gl.xr.removeEventListener('sessionstart', handleSessionChange);\n            gl.xr.removeEventListener('sessionend', handleSessionChange);\n          }\n        };\n\n        // Subscribe to WebXR session events\n        if (typeof ((_gl$xr = gl.xr) == null ? void 0 : _gl$xr.addEventListener) === 'function') xr.connect();\n        state.set({\n          xr\n        });\n      }\n\n      // Set shadowmap\n      if (gl.shadowMap) {\n        const oldEnabled = gl.shadowMap.enabled;\n        const oldType = gl.shadowMap.type;\n        gl.shadowMap.enabled = !!shadows;\n        if (is.boo(shadows)) {\n          gl.shadowMap.type = THREE__namespace.PCFSoftShadowMap;\n        } else if (is.str(shadows)) {\n          var _types$shadows;\n          const types = {\n            basic: THREE__namespace.BasicShadowMap,\n            percentage: THREE__namespace.PCFShadowMap,\n            soft: THREE__namespace.PCFSoftShadowMap,\n            variance: THREE__namespace.VSMShadowMap\n          };\n          gl.shadowMap.type = (_types$shadows = types[shadows]) != null ? _types$shadows : THREE__namespace.PCFSoftShadowMap;\n        } else if (is.obj(shadows)) {\n          Object.assign(gl.shadowMap, shadows);\n        }\n        if (oldEnabled !== gl.shadowMap.enabled || oldType !== gl.shadowMap.type) gl.shadowMap.needsUpdate = true;\n      }\n\n      // Safely set color management if available.\n      // Avoid accessing THREE.ColorManagement to play nice with older versions\n      const ColorManagement = getColorManagement();\n      if (ColorManagement) {\n        if ('enabled' in ColorManagement) ColorManagement.enabled = !legacy;else if ('legacyMode' in ColorManagement) ColorManagement.legacyMode = legacy;\n      }\n\n      // Set color space and tonemapping preferences\n      const LinearEncoding = 3000;\n      const sRGBEncoding = 3001;\n      applyProps(gl, {\n        outputEncoding: linear ? LinearEncoding : sRGBEncoding,\n        toneMapping: flat ? THREE__namespace.NoToneMapping : THREE__namespace.ACESFilmicToneMapping\n      });\n\n      // Update color management state\n      if (state.legacy !== legacy) state.set(() => ({\n        legacy\n      }));\n      if (state.linear !== linear) state.set(() => ({\n        linear\n      }));\n      if (state.flat !== flat) state.set(() => ({\n        flat\n      }));\n\n      // Set gl props\n      if (glConfig && !is.fun(glConfig) && !isRenderer(glConfig) && !is.equ(glConfig, gl, shallowLoose)) applyProps(gl, glConfig);\n      // Store events internally\n      if (events && !state.events.handlers) state.set({\n        events: events(store)\n      });\n      // Check size, allow it to take on container bounds initially\n      const size = computeInitialSize(canvas, propsSize);\n      if (!is.equ(size, state.size, shallowLoose)) {\n        state.setSize(size.width, size.height, size.updateStyle, size.top, size.left);\n      }\n      // Check pixelratio\n      if (dpr && state.viewport.dpr !== calculateDpr(dpr)) state.setDpr(dpr);\n      // Check frameloop\n      if (state.frameloop !== frameloop) state.setFrameloop(frameloop);\n      // Check pointer missed\n      if (!state.onPointerMissed) state.set({\n        onPointerMissed\n      });\n      // Check performance\n      if (performance && !is.equ(performance, state.performance, shallowLoose)) state.set(state => ({\n        performance: {\n          ...state.performance,\n          ...performance\n        }\n      }));\n\n      // Set locals\n      onCreated = onCreatedCallback;\n      configured = true;\n      return this;\n    },\n    render(children) {\n      // The root has to be configured before it can be rendered\n      if (!configured) this.configure();\n      reconciler.updateContainer( /*#__PURE__*/React__namespace.createElement(Provider, {\n        store: store,\n        children: children,\n        onCreated: onCreated,\n        rootElement: canvas\n      }), fiber, null, () => undefined);\n      return store;\n    },\n    unmount() {\n      unmountComponentAtNode(canvas);\n    }\n  };\n}\nfunction render(children, canvas, config) {\n  console.warn('R3F.render is no longer supported in React 18. Use createRoot instead!');\n  const root = createRoot(canvas);\n  root.configure(config);\n  return root.render(children);\n}\nfunction Provider({\n  store,\n  children,\n  onCreated,\n  rootElement\n}) {\n  useIsomorphicLayoutEffect(() => {\n    const state = store.getState();\n    // Flag the canvas active, rendering will now begin\n    state.set(state => ({\n      internal: {\n        ...state.internal,\n        active: true\n      }\n    }));\n    // Notifiy that init is completed, the scene graph exists, but nothing has yet rendered\n    if (onCreated) onCreated(state);\n    // Connect events to the targets parent, this is done to ensure events are registered on\n    // a shared target, and not on the canvas itself\n    if (!store.getState().events.connected) state.events.connect == null ? void 0 : state.events.connect(rootElement);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React__namespace.createElement(context.Provider, {\n    value: store\n  }, children);\n}\nfunction unmountComponentAtNode(canvas, callback) {\n  const root = roots.get(canvas);\n  const fiber = root == null ? void 0 : root.fiber;\n  if (fiber) {\n    const state = root == null ? void 0 : root.store.getState();\n    if (state) state.internal.active = false;\n    reconciler.updateContainer(null, fiber, null, () => {\n      if (state) {\n        setTimeout(() => {\n          try {\n            var _state$gl, _state$gl$renderLists, _state$gl2, _state$gl3;\n            state.events.disconnect == null ? void 0 : state.events.disconnect();\n            (_state$gl = state.gl) == null ? void 0 : (_state$gl$renderLists = _state$gl.renderLists) == null ? void 0 : _state$gl$renderLists.dispose == null ? void 0 : _state$gl$renderLists.dispose();\n            (_state$gl2 = state.gl) == null ? void 0 : _state$gl2.forceContextLoss == null ? void 0 : _state$gl2.forceContextLoss();\n            if ((_state$gl3 = state.gl) != null && _state$gl3.xr) state.xr.disconnect();\n            dispose(state);\n            roots.delete(canvas);\n            if (callback) callback(canvas);\n          } catch (e) {\n            /* ... */\n          }\n        }, 500);\n      }\n    });\n  }\n}\nfunction createPortal(children, container, state) {\n  return /*#__PURE__*/React__namespace.createElement(Portal, {\n    key: container.uuid,\n    children: children,\n    container: container,\n    state: state\n  });\n}\nfunction Portal({\n  state = {},\n  children,\n  container\n}) {\n  /** This has to be a component because it would not be able to call useThree/useStore otherwise since\n   *  if this is our environment, then we are not in r3f's renderer but in react-dom, it would trigger\n   *  the \"R3F hooks can only be used within the Canvas component!\" warning:\n   *  <Canvas>\n   *    {createPortal(...)} */\n  const {\n    events,\n    size,\n    ...rest\n  } = state;\n  const previousRoot = useStore();\n  const [raycaster] = React__namespace.useState(() => new THREE__namespace.Raycaster());\n  const [pointer] = React__namespace.useState(() => new THREE__namespace.Vector2());\n  const inject = React__namespace.useCallback((rootState, injectState) => {\n    const intersect = {\n      ...rootState\n    }; // all prev state props\n\n    // Only the fields of \"rootState\" that do not differ from injectState\n    // Some props should be off-limits\n    // Otherwise filter out the props that are different and let the inject layer take precedence\n    Object.keys(rootState).forEach(key => {\n      if (\n      // Some props should be off-limits\n      privateKeys.includes(key) ||\n      // Otherwise filter out the props that are different and let the inject layer take precedence\n      // Unless the inject layer props is undefined, then we keep the root layer\n      rootState[key] !== injectState[key] && injectState[key]) {\n        delete intersect[key];\n      }\n    });\n    let viewport = undefined;\n    if (injectState && size) {\n      const camera = injectState.camera;\n      // Calculate the override viewport, if present\n      viewport = rootState.viewport.getCurrentViewport(camera, new THREE__namespace.Vector3(), size);\n      // Update the portal camera, if it differs from the previous layer\n      if (camera !== rootState.camera) updateCamera(camera, size);\n    }\n    return {\n      // The intersect consists of the previous root state\n      ...intersect,\n      // Portals have their own scene, which forms the root, a raycaster and a pointer\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      // Their previous root is the layer before it\n      previousRoot,\n      // Events, size and viewport can be overridden by the inject layer\n      events: {\n        ...rootState.events,\n        ...(injectState == null ? void 0 : injectState.events),\n        ...events\n      },\n      size: {\n        ...rootState.size,\n        ...size\n      },\n      viewport: {\n        ...rootState.viewport,\n        ...viewport\n      },\n      ...rest\n    };\n  }, [state]);\n  const [usePortalStore] = React__namespace.useState(() => {\n    // Create a mirrored store, based on the previous root with a few overrides ...\n    const previousState = previousRoot.getState();\n    const store = create__default[\"default\"]((set, get) => ({\n      ...previousState,\n      scene: container,\n      raycaster,\n      pointer,\n      mouse: pointer,\n      previousRoot,\n      events: {\n        ...previousState.events,\n        ...events\n      },\n      size: {\n        ...previousState.size,\n        ...size\n      },\n      ...rest,\n      // Set and get refer to this root-state\n      set,\n      get,\n      // Layers are allowed to override events\n      setEvents: events => set(state => ({\n        ...state,\n        events: {\n          ...state.events,\n          ...events\n        }\n      }))\n    }));\n    return store;\n  });\n  React__namespace.useEffect(() => {\n    // Subscribe to previous root-state and copy changes over to the mirrored portal-state\n    const unsub = previousRoot.subscribe(prev => usePortalStore.setState(state => inject(prev, state)));\n    return () => {\n      unsub();\n      usePortalStore.destroy();\n    };\n  }, []);\n  React__namespace.useEffect(() => {\n    usePortalStore.setState(injectState => inject(previousRoot.getState(), injectState));\n  }, [inject]);\n  return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, reconciler.createPortal( /*#__PURE__*/React__namespace.createElement(context.Provider, {\n    value: usePortalStore\n  }, children), usePortalStore, null));\n}\nreconciler.injectIntoDevTools({\n  bundleType:  false ? 0 : 1,\n  rendererPackageName: '@react-three/fiber',\n  version: React__namespace.version\n});\nconst act = React__namespace.unstable_act;\n\nexports.Block = Block;\nexports.ErrorBoundary = ErrorBoundary;\nexports.act = act;\nexports.addAfterEffect = addAfterEffect;\nexports.addEffect = addEffect;\nexports.addTail = addTail;\nexports.advance = advance;\nexports.applyProps = applyProps;\nexports.context = context;\nexports.createEvents = createEvents;\nexports.createPortal = createPortal;\nexports.createRoot = createRoot;\nexports.dispose = dispose;\nexports.extend = extend;\nexports.flushGlobalEffects = flushGlobalEffects;\nexports.getRootState = getRootState;\nexports.invalidate = invalidate;\nexports.isRef = isRef;\nexports.reconciler = reconciler;\nexports.render = render;\nexports.roots = roots;\nexports.threeTypes = threeTypes;\nexports.unmountComponentAtNode = unmountComponentAtNode;\nexports.useFrame = useFrame;\nexports.useGraph = useGraph;\nexports.useInstanceHandle = useInstanceHandle;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useLoader = useLoader;\nexports.useMutableCallback = useMutableCallback;\nexports.useStore = useStore;\nexports.useThree = useThree;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/dist/index-2f978f7b.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.dev.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.dev.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar index = __webpack_require__(/*! ./index-2f978f7b.cjs.dev.js */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-2f978f7b.cjs.dev.js\");\nvar _extends = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\");\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar THREE = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.cjs\");\nvar useMeasure = __webpack_require__(/*! react-use-measure */ \"(ssr)/./node_modules/react-use-measure/dist/web.cjs.js\");\nvar itsFine = __webpack_require__(/*! its-fine */ \"(ssr)/./node_modules/its-fine/dist/index.cjs\");\n__webpack_require__(/*! react-reconciler/constants */ \"(ssr)/./node_modules/react-reconciler/constants.js\");\n__webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.js\");\n__webpack_require__(/*! react-reconciler */ \"(ssr)/./node_modules/react-reconciler/index.js\");\n__webpack_require__(/*! scheduler */ \"(ssr)/./node_modules/@react-three/fiber/node_modules/scheduler/index.js\");\n__webpack_require__(/*! suspend-react */ \"(ssr)/./node_modules/suspend-react/index.cjs.js\");\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar THREE__namespace = /*#__PURE__*/_interopNamespace(THREE);\nvar useMeasure__default = /*#__PURE__*/_interopDefault(useMeasure);\n\nconst DOM_EVENTS = {\n  onClick: ['click', false],\n  onContextMenu: ['contextmenu', false],\n  onDoubleClick: ['dblclick', false],\n  onWheel: ['wheel', true],\n  onPointerDown: ['pointerdown', true],\n  onPointerUp: ['pointerup', true],\n  onPointerLeave: ['pointerleave', true],\n  onPointerMove: ['pointermove', true],\n  onPointerCancel: ['pointercancel', true],\n  onLostPointerCapture: ['lostpointercapture', true]\n};\n\n/** Default R3F event manager for web */\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = index.createEvents(store);\n  return {\n    priority: 1,\n    enabled: true,\n    compute(event, state, previous) {\n      // https://github.com/pmndrs/react-three-fiber/pull/782\n      // Events trigger outside of canvas when moved, use offsetX/Y by default and allow overrides\n      state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    },\n    connected: undefined,\n    handlers: Object.keys(DOM_EVENTS).reduce((acc, key) => ({\n      ...acc,\n      [key]: handlePointer(key)\n    }), {}),\n    update: () => {\n      var _internal$lastEvent;\n      const {\n        events,\n        internal\n      } = store.getState();\n      if ((_internal$lastEvent = internal.lastEvent) != null && _internal$lastEvent.current && events.handlers) events.handlers.onPointerMove(internal.lastEvent.current);\n    },\n    connect: target => {\n      var _events$handlers;\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: {\n          ...state.events,\n          connected: target\n        }\n      }));\n      Object.entries((_events$handlers = events.handlers) != null ? _events$handlers : []).forEach(([name, event]) => {\n        const [eventName, passive] = DOM_EVENTS[name];\n        target.addEventListener(eventName, event, {\n          passive\n        });\n      });\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n      if (events.connected) {\n        var _events$handlers2;\n        Object.entries((_events$handlers2 = events.handlers) != null ? _events$handlers2 : []).forEach(([name, event]) => {\n          if (events && events.connected instanceof HTMLElement) {\n            const [eventName] = DOM_EVENTS[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        });\n        set(state => ({\n          events: {\n            ...state.events,\n            connected: undefined\n          }\n        }));\n      }\n    }\n  };\n}\n\nconst CanvasImpl = /*#__PURE__*/React__namespace.forwardRef(function Canvas({\n  children,\n  fallback,\n  resize,\n  style,\n  gl,\n  events = createPointerEvents,\n  eventSource,\n  eventPrefix,\n  shadows,\n  linear,\n  flat,\n  legacy,\n  orthographic,\n  frameloop,\n  dpr,\n  performance,\n  raycaster,\n  camera,\n  scene,\n  onPointerMissed,\n  onCreated,\n  ...props\n}, forwardedRef) {\n  // Create a known catalogue of Threejs-native elements\n  // This will include the entire THREE namespace by default, users can extend\n  // their own elements by using the createRoot API instead\n  React__namespace.useMemo(() => index.extend(THREE__namespace), []);\n  const Bridge = itsFine.useContextBridge();\n  const [containerRef, containerRect] = useMeasure__default[\"default\"]({\n    scroll: true,\n    debounce: {\n      scroll: 50,\n      resize: 0\n    },\n    ...resize\n  });\n  const canvasRef = React__namespace.useRef(null);\n  const divRef = React__namespace.useRef(null);\n  React__namespace.useImperativeHandle(forwardedRef, () => canvasRef.current);\n  const handlePointerMissed = index.useMutableCallback(onPointerMissed);\n  const [block, setBlock] = React__namespace.useState(false);\n  const [error, setError] = React__namespace.useState(false);\n\n  // Suspend this component if block is a promise (2nd run)\n  if (block) throw block;\n  // Throw exception outwards if anything within canvas throws\n  if (error) throw error;\n  const root = React__namespace.useRef(null);\n  index.useIsomorphicLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    if (containerRect.width > 0 && containerRect.height > 0 && canvas) {\n      if (!root.current) root.current = index.createRoot(canvas);\n      root.current.configure({\n        gl,\n        events,\n        shadows,\n        linear,\n        flat,\n        legacy,\n        orthographic,\n        frameloop,\n        dpr,\n        performance,\n        raycaster,\n        camera,\n        scene,\n        size: containerRect,\n        // Pass mutable reference to onPointerMissed so it's free to update\n        onPointerMissed: (...args) => handlePointerMissed.current == null ? void 0 : handlePointerMissed.current(...args),\n        onCreated: state => {\n          // Connect to event source\n          state.events.connect == null ? void 0 : state.events.connect(eventSource ? index.isRef(eventSource) ? eventSource.current : eventSource : divRef.current);\n          // Set up compute function\n          if (eventPrefix) {\n            state.setEvents({\n              compute: (event, state) => {\n                const x = event[eventPrefix + 'X'];\n                const y = event[eventPrefix + 'Y'];\n                state.pointer.set(x / state.size.width * 2 - 1, -(y / state.size.height) * 2 + 1);\n                state.raycaster.setFromCamera(state.pointer, state.camera);\n              }\n            });\n          }\n          // Call onCreated callback\n          onCreated == null ? void 0 : onCreated(state);\n        }\n      });\n      root.current.render( /*#__PURE__*/React__namespace.createElement(Bridge, null, /*#__PURE__*/React__namespace.createElement(index.ErrorBoundary, {\n        set: setError\n      }, /*#__PURE__*/React__namespace.createElement(React__namespace.Suspense, {\n        fallback: /*#__PURE__*/React__namespace.createElement(index.Block, {\n          set: setBlock\n        })\n      }, children))));\n    }\n  });\n  React__namespace.useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) return () => index.unmountComponentAtNode(canvas);\n  }, []);\n\n  // When the event source is not this div, we need to set pointer-events to none\n  // Or else the canvas will block events from reaching the event source\n  const pointerEvents = eventSource ? 'none' : 'auto';\n  return /*#__PURE__*/React__namespace.createElement(\"div\", _extends({\n    ref: divRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      pointerEvents,\n      ...style\n    }\n  }, props), /*#__PURE__*/React__namespace.createElement(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, /*#__PURE__*/React__namespace.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block'\n    }\n  }, fallback)));\n});\n\n/**\n * A DOM canvas which accepts threejs elements as children.\n * @see https://docs.pmnd.rs/react-three-fiber/api/canvas\n */\nconst Canvas = /*#__PURE__*/React__namespace.forwardRef(function CanvasWrapper(props, ref) {\n  return /*#__PURE__*/React__namespace.createElement(itsFine.FiberProvider, null, /*#__PURE__*/React__namespace.createElement(CanvasImpl, _extends({}, props, {\n    ref: ref\n  })));\n});\n\nexports.ReactThreeFiber = index.threeTypes;\nexports._roots = index.roots;\nexports.act = index.act;\nexports.addAfterEffect = index.addAfterEffect;\nexports.addEffect = index.addEffect;\nexports.addTail = index.addTail;\nexports.advance = index.advance;\nexports.applyProps = index.applyProps;\nexports.context = index.context;\nexports.createEvents = index.createEvents;\nexports.createPortal = index.createPortal;\nexports.createRoot = index.createRoot;\nexports.dispose = index.dispose;\nexports.extend = index.extend;\nexports.flushGlobalEffects = index.flushGlobalEffects;\nexports.getRootState = index.getRootState;\nexports.invalidate = index.invalidate;\nexports.reconciler = index.reconciler;\nexports.render = index.render;\nexports.unmountComponentAtNode = index.unmountComponentAtNode;\nexports.useFrame = index.useFrame;\nexports.useGraph = index.useGraph;\nexports.useInstanceHandle = index.useInstanceHandle;\nexports.useLoader = index.useLoader;\nexports.useStore = index.useStore;\nexports.useThree = index.useThree;\nexports.Canvas = Canvas;\nexports.events = createPointerEvents;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.dev.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./react-three-fiber.cjs.dev.js */ \"(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.dev.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2ZpYmVyL2Rpc3QvcmVhY3QtdGhyZWUtZmliZXIuY2pzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBMEQ7QUFDNUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZnQtZ2FsbGVyeS8uL25vZGVfbW9kdWxlcy9AcmVhY3QtdGhyZWUvZmliZXIvZGlzdC9yZWFjdC10aHJlZS1maWJlci5janMuanM/ZjI5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9yZWFjdC10aHJlZS1maWJlci5janMucHJvZC5qc1wiKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vcmVhY3QtdGhyZWUtZmliZXIuY2pzLmRldi5qc1wiKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.cjs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/node_modules/scheduler/cjs/scheduler.development.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@react-three/fiber/node_modules/scheduler/cjs/scheduler.development.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var enableSchedulerDebugging = false;\nvar enableProfiling = false;\nvar frameYieldMs = 5;\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  return heap.length === 0 ? null : heap[0];\n}\nfunction pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n\n  var first = heap[0];\n  var last = heap.pop();\n\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (index > 0) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n  var halfLength = length >>> 1;\n\n  while (index < halfLength) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.\n\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;\nvar localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nvar isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar isMessageLoopRunning = false;\nvar scheduledHostCallback = null;\nvar taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\n\nvar frameInterval = frameYieldMs;\nvar startTime = -1;\n\nfunction shouldYieldToHost() {\n  var timeElapsed = exports.unstable_now() - startTime;\n\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  } // The main thread has been blocked for a non-negligible amount of time. We\n\n\n  return true;\n}\n\nfunction requestPaint() {\n\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n    return;\n  }\n\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nvar performWorkUntilDeadline = function () {\n  if (scheduledHostCallback !== null) {\n    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n\n    startTime = currentTime;\n    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n\n    var hasMoreWork = true;\n\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  } // Yielding to the browser will give it a chance to paint, so we can\n};\n\nvar schedulePerformWorkUntilDeadline;\n\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/node_modules/scheduler/cjs/scheduler.development.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@react-three/fiber/node_modules/scheduler/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@react-three/fiber/node_modules/scheduler/index.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ \"(ssr)/./node_modules/@react-three/fiber/node_modules/scheduler/cjs/scheduler.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXRocmVlL2ZpYmVyL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHlLQUEwRDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL25mdC1nYWxsZXJ5Ly4vbm9kZV9tb2R1bGVzL0ByZWFjdC10aHJlZS9maWJlci9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzP2VjOGMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@react-three/fiber/node_modules/scheduler/index.js\n");

/***/ })

};
;